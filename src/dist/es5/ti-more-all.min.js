"use strict";

function _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _createForOfIteratorHelper(o) { if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e67) { throw _e67; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e68) { didErr = true; err = _e68; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

Ti.Preload("ti/com/hmaker/edit-com/form/edit-com-form.html", '<ti-form \n  class="hmaker-edit-com-form"\n  v-bind="FormConf"/>'), function () {
  var t = {
    props: {
      value: {
        type: Object,
        "default": void 0
      },
      keepTabIndexBy: {
        type: String,
        "default": "hMakerEditComForm"
      }
    },
    computed: {
      FormConf: function FormConf() {
        return {
          mode: "tab",
          keepTabIndexBy: this.keepTabIndexBy,
          spacing: "tiny",
          data: this.value,
          fields: [{
            type: "Group",
            title: "i18n:hmk-aspect",
            fields: [{
              name: "title",
              title: "i18n:hmk-title",
              type: "String",
              comType: "ti-input"
            }, {
              name: "icon",
              title: "i18n:hmk-icon",
              type: "String",
              comType: "ti-input-icon"
            }, {
              name: "mode",
              title: "i18n:hmk-mode",
              type: "String",
              defaultAs: "all",
              comType: "ti-switcher",
              comConf: {
                options: [{
                  value: "all",
                  text: "i18n:hmk-mode-all"
                }, {
                  value: "tab",
                  text: "i18n:hmk-mode-tab"
                }]
              }
            }, {
              name: "tabAt",
              title: "i18n:hmk-tabAt",
              type: "String",
              defaultAs: "top-center",
              width: 240,
              hidden: {
                mode: {
                  name: "isEqual",
                  args: "tab",
                  not: !0
                }
              },
              comType: "ti-droplist",
              comConf: {
                placeholder: "i18n:hmk-tabAt-top-center",
                autoI18n: !0,
                options: [{
                  value: "top-left",
                  text: "i18n:hmk-tabAt-top-left"
                }, {
                  value: "top-center",
                  text: "i18n:hmk-tabAt-top-center"
                }, {
                  value: "top-right",
                  text: "i18n:hmk-tabAt-top-right"
                }, {
                  value: "bottom-left",
                  text: "i18n:hmk-tabAt-bottom-left"
                }, {
                  value: "bottom-center",
                  text: "i18n:hmk-tabAt-bottom-center"
                }, {
                  value: "bottom-right",
                  text: "i18n:hmk-tabAt-bottom-right"
                }]
              }
            }, {
              name: "currentTab",
              title: "i18n:hmk-currentTab",
              type: "Integer",
              defaultAs: 0,
              width: 120,
              hidden: {
                mode: {
                  name: "isEqual",
                  args: "tab",
                  not: !0
                }
              },
              comType: "ti-input-num"
            }, {
              name: "spacing",
              title: "i18n:hmk-spacing",
              type: "String",
              defaultAs: "comfy",
              comType: "ti-switcher",
              comConf: {
                options: [{
                  value: "comfy",
                  text: "i18n:hmk-spacing-comfy"
                }, {
                  value: "tiny",
                  text: "i18n:hmk-spacing-tiny"
                }]
              }
            }, {
              name: "adjustDelay",
              title: "i18n:hmk-adjustDelay",
              type: "Integer",
              defaultAs: 0,
              width: 120,
              comType: "ti-input-num"
            }, {
              name: "blankAs",
              title: "i18n:hmk-blankAs",
              type: "Object",
              comType: "ti-input"
            }]
          }, {
            type: "Group",
            title: "i18n:hmk-fields",
            fields: [{
              name: "fields",
              type: "Array",
              height: "100%",
              comType: "hmaker-edit-form-fieldset",
              comConf: {
                className: "ti-fill-parent",
                keepTabIndexBy: this.keepTabIndexBy
              }
            }]
          }, {
            type: "Group",
            title: "i18n:hmk-data",
            fields: [{
              title: "i18n:hmk-form-data",
              name: "data",
              comType: "ti-input"
            }, {
              name: "fieldStatus",
              title: "i18n:hmk-fieldStatus",
              comType: "ti-input"
            }, {
              name: "onlyFields",
              title: "i18n:hmk-form-onlyFields",
              type: "Boolean",
              defaultAs: !0,
              comType: "ti-toggle"
            }]
          }, {
            title: "i18n:hmk-measure",
            fields: [{
              title: "i18n:hmk-form-width",
              name: "width",
              comType: "ti-input"
            }, {
              title: "i18n:hmk-form-height",
              name: "height",
              comType: "ti-input"
            }]
          }]
        };
      }
    },
    methods: {},
    created: function () {
      var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                Wn.Dict.hMakerComponents();

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function created() {
        return _created.apply(this, arguments);
      }

      return created;
    }()
  };
  Ti.Preload("ti/com/hmaker/edit-com/form/edit-com-form.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-com/form/field/edit-form-field.html", '<div class="hmaker-edit-form-field ti-scroll-v">\n  \x3c!--\n    Empty\n  --\x3e\n  <ti-loading \n    v-if="isEmpty"\n      icon="fas-hand-point-left"\n      text="i18n:hmaker-edit-form-field-nil"/>\n  \x3c!--\n    Editing\n  --\x3e\n  <ti-form\n    v-else\n      v-bind="TheForm"\n      :data="value"/>\n</div>'), function () {
  var t = {
    props: {
      value: {
        type: Object,
        "default": void 0
      },
      keepTabIndexBy: {
        type: String,
        "default": void 0
      }
    },
    computed: {
      isEmpty: function isEmpty() {
        return Ti.Util.isNil(this.value);
      },
      TheFormGeneralFields: function TheFormGeneralFields() {
        return [{
          hidden: this.isGroup,
          name: "type",
          title: "hmk-field-type",
          defaultAs: "String",
          comType: "ti-droplist",
          comConf: {
            placeholder: "i18n:hm-type-String",
            options: function (t) {
              return _.map(t, function (t) {
                return {
                  icon: Ti.I18n.get("hm-type-icons")[t],
                  value: t,
                  text: Ti.I18n.get("hm-type-".concat(t))
                };
              });
            }(["Object", "Number", "Integer", "Boolean", "String", "Array"]),
            dropDisplay: ["<icon>", "text", "value"]
          }
        }, {
          name: "title",
          title: "hmk-field-title",
          comType: "ti-input"
        }, {
          name: "icon",
          title: "hmk-field-icon",
          comType: "ti-input-icon"
        }, {
          hidden: this.isGroup,
          name: "name",
          title: "hmk-field-name",
          comType: "ti-input"
        }, {
          hidden: this.isGroup,
          name: "tip",
          title: "hmk-field-tip",
          comType: "ti-input"
        }, {
          hidden: this.isGroup,
          name: "width",
          title: "hmk-field-width",
          width: 120,
          comType: "ti-input"
        }, {
          hidden: this.isGroup,
          name: "height",
          title: "hmk-field-height",
          width: 120,
          comType: "ti-input"
        }, {
          hidden: this.isGroup,
          name: "defaultAs",
          title: "hmk-field-defaultAs",
          comType: "ti-input",
          comConf: {
            autoJsValue: !0
          }
        }, {
          hidden: this.isGroup,
          name: ["comType", "comConf"],
          title: "hmk-field-com",
          type: "Object",
          width: "auto",
          comType: "wn-combo-edit-com"
        }];
      },
      TheFormAdvanceFields: function TheFormAdvanceFields() {
        return [{
          name: "disabled",
          title: "hmk-field-disabled",
          comType: "ti-input",
          comConf: {
            autoJsValue: !0
          }
        }, {
          name: "hidden",
          title: "hmk-field-hidden",
          comType: "ti-input",
          comConf: {
            autoJsValue: !0
          }
        }, {
          name: "checkEquals",
          title: "hmk-field-checkEquals",
          comType: "ti-toggle"
        }, {
          name: "transformer",
          title: "hmk-field-transformer",
          comType: "ti-input-text",
          comConf: {
            autoJsValue: !0
          }
        }, {
          name: "serializer",
          title: "hmk-field-serializer",
          comType: "ti-input-text",
          comConf: {
            autoJsValue: !0
          }
        }];
      },
      TheForm: function TheForm() {
        return {
          spacing: "tiny",
          keepTabIndexBy: this.keepTabIndexBy,
          fields: [{
            type: "Group",
            title: "i18n:hmk-fields-general",
            fields: this.TheFormGeneralFields
          }, {
            type: "Group",
            title: "i18n:hmk-fields-advance",
            hidden: this.isGroup,
            fields: this.TheFormAdvanceFields
          }]
        };
      }
    },
    methods: {
      isGroup: function isGroup(t) {
        return _.isArray(t.fields) || "Group" == t.type;
      }
    }
  };
  Ti.Preload("ti/com/hmaker/edit-com/form/field/edit-form-field.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-com/form/field/_com.json", {
  name: "hmaker-edit-form-field",
  globally: !0,
  template: "./edit-form-field.html",
  mixins: ["./edit-form-field.mjs"]
}), Ti.Preload("ti/com/hmaker/edit-com/form/fieldset/edit-form-fieldset.html", '<ti-gui\n  class="hmaker-edit-form-fieldset"\n  :class="TopClass"\n  :layout="Layout"\n  :schema="Schema"\n  :can-loading="false"\n  @tree::select="OnFieldTreeSelect"\n  @detail::change="OnFieldChange"/>'), function () {
  var t = {
    data: function data() {
      return {
        myCurrentId: null
      };
    },
    props: {
      value: {
        type: Array,
        "default": void 0
      },
      keepTabIndexBy: {
        type: String,
        "default": "hMakerEditComForm"
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TheDetailCom: function TheDetailCom() {
        return {
          comType: "hmaker-edit-form-field",
          comConf: {
            value: this.CurrentField,
            keepTabIndexBy: this.keepTabIndexBy ? "".concat(this.keepTabIndexBy, "-field") : null
          }
        };
      },
      CurrentField: function CurrentField() {
        if (this.myCurrentId) {
          var _t = this.$tree.findTableRow(this.myCurrentId);

          if (_t) return _t.rawData;
        }
      },
      Layout: function Layout() {
        return {
          type: "cols",
          border: !0,
          blocks: [{
            type: "rows",
            size: "37%",
            border: !0,
            blocks: [{
              size: 40,
              body: "actions"
            }, {
              name: "tree",
              body: "tree"
            }]
          }, {
            name: "detail",
            body: "detail"
          }]
        };
      },
      Schema: function Schema() {
        var _this = this;

        return {
          actions: {
            comType: "ti-actionbar",
            comConf: {
              items: [{
                type: "action",
                icon: "im-plus",
                text: "i18n:hmaker-edit-form-new-field",
                action: function action() {
                  return _this.addNewField();
                }
              }, {
                type: "action",
                icon: "im-folder-add",
                text: "i18n:hmaker-edit-form-new-group",
                action: function action() {
                  return _this.addNewGroup();
                }
              }, {
                type: "line"
              }, {
                type: "action",
                icon: "im-trash-can",
                action: function action() {
                  return _this.removeSelectedFieldOrGroup();
                }
              }, {
                type: "line"
              }, {
                type: "action",
                icon: "im-arrow-up",
                action: function action() {
                  return _this.moveSelectedFieldsUp();
                }
              }, {
                type: "action",
                icon: "im-arrow-down",
                action: function action() {
                  return _this.moveSelectedFieldsDown();
                }
              }]
            }
          },
          tree: {
            comType: "ti-tree",
            comConf: {
              data: this.value,
              showRoot: !1,
              puppetMode: !0,
              autoOpen: !0,
              border: "row",
              defaultOpenDepth: 2,
              currentId: this.myCurrentId,
              nameBy: function nameBy(t) {
                return t.name || t.title;
              },
              childrenBy: function childrenBy(t) {
                return t.fields;
              },
              leafBy: function leafBy(t) {
                return "Group" != t.type;
              },
              display: [{
                key: "type",
                transformer: {
                  name: "toStr",
                  args: [{
                    Group: "zmdi-collection-bookmark",
                    Object: "zmdi-toys",
                    Number: "zmdi-input-svideo",
                    Integer: "zmdi-n-6-square",
                    Boolean: "zmdi-toll",
                    String: "zmdi-translate",
                    Array: "zmdi-format-list-bulleted"
                  }]
                },
                defaultAs: "im-question",
                comType: "ti-icon"
              }, {
                key: "name",
                transformer: function transformer(t) {
                  return _.isArray(t) ? t.join("+") : t;
                }
              }, "title"],
              onInit: this.OnTreeInit
            }
          },
          detail: this.TheDetailCom
        };
      }
    },
    methods: {
      OnTreeInit: function OnTreeInit(t) {
        this.$tree = t;
      },
      OnFieldTreeSelect: function OnFieldTreeSelect(_ref) {
        var t = _ref.currentId;
        this.myCurrentId = t;
      },
      OnFieldChange: function OnFieldChange(t) {
        this.updateCurrentField(t);
      },
      getMyCurrent: function getMyCurrent() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.value;
        if (!this.myCurrentId || !_.isArray(t)) return;
        var e = this.myCurrentId.split("/"),
            i = {
          path: e,
          index: [],
          group: null,
          field: null
        };

        if (e.length > 0) {
          var n = e[0];

          for (var _e = 0; _e < t.length; _e++) {
            var a = t[_e];

            if (_.isArray(a.fields) || "Group" == a.type) {
              if (n == a.title) {
                i.group = a, i.index.push(_e);
                break;
              }
            } else if (n == a.name) {
              i.field = a, i.index.push(_e);
              break;
            }
          }
        }

        if (e.length > 1 && i.group && _.isArray(i.group.fields)) {
          var _t2 = e[1];

          for (var _e2 = 0; _e2 < i.group.fields.length; _e2++) {
            var _n = i.group.fields[_e2];
            _t2 == _n.name && (i.field = _n, i.index.push(_e2));
          }
        }

        return i;
      },
      isGroup: function isGroup(t) {
        return "Group" == t.type || _.isArray(t.fields);
      },
      selectNextIdByIndex: function selectNextIdByIndex() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value;
        var i = [];

        var _iterator = _createForOfIteratorHelper(t),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var n = _step.value;
            if (!e || _.isEmpty(e)) break;

            var _t3 = _.nth(e, n);

            _t3 || (_t3 = _.nth(e, n - 1)), _t3 && (i.push(_t3.name || _t3.title), e = _t3.fields);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }

        this.myCurrentId = i.join("/") || null;
      },
      findByName: function findByName(t) {
        if (_.isArray(this.value)) for (var e = 0; e < this.value.length; e++) {
          var i = this.value[e],
              n = i.name || i.title;

          if (_.isEqual(t, n)) {
            var _t4 = {
              index: [e],
              path: [n],
              field: i
            };
            return this.isGroup(i) ? _t4.group = i : _t4.field = i, _t4;
          }

          if (this.isGroup(i)) for (var a = 0; a < i.fields.length; a++) {
            var s = i.fields[a],
                o = s.name || s.title;
            if (_.isEqual(t, o)) return {
              index: [e, a],
              path: [n, o],
              group: i,
              field: s
            };
          }
        }
      },
      existsName: function existsName(t) {
        return !!this.findByName(t);
      },
      updateCurrentField: function updateCurrentField(t) {
        var e = _.cloneDeep(this.value),
            i = this.getMyCurrent(e);

        if (console.log(i), i.group && i.field) {
          var _e3 = _.last(i.index);

          i.group.fields[_e3] = t;
        } else if (i.group) {
          var n = _.first(i.index);

          _.assign(e[n], t);
        } else {
          if (!i.field) return;
          e[_.first(i.index)] = t;
        }

        this.selectNextIdByIndex(i.index, e), this.$notify("change", e);
      },
      addFieldOrGroup: function addFieldOrGroup(t) {
        var e = _.cloneDeep(this.value) || [],
            i = this.getMyCurrent(e),
            n = [];
        i ? i.group ? this.isGroup(t) ? (Ti.Util.insertToArray(e, _.first(i.index), t), n.push(t.title)) : i.field ? (Ti.Util.insertToArray(i.group.fields, _.last(i.index) + 1, t), n.push(i.path[0], t.name)) : _.isArray(i.group.fields) ? (i.group.fields.push(t), n.push(i.path[0], t.name)) : (i.group.fields = [t], n.push(i.path[0], t.name)) : (Ti.Util.insertToArray(e, _.last(i.index) + 1, t), n.push(t.name || t.title)) : e.push(t), this.$notify("change", e), this.myCurrentId = n.join("/");
      },
      addNewField: function addNewField() {
        var _this2 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
          var t, e, _iterator2, _step2, _t5, i;

          return regeneratorRuntime.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  _context2.next = 2;
                  return Ti.Prompt("i18n:hmaker-edit-form-new-field-tip");

                case 2:
                  t = _context2.sent;

                  if (t = _.trim(t)) {
                    _context2.next = 5;
                    break;
                  }

                  return _context2.abrupt("return");

                case 5:
                  e = _.without(t.split(/[\s\W]/), "");
                  _iterator2 = _createForOfIteratorHelper(e);
                  _context2.prev = 7;

                  _iterator2.s();

                case 9:
                  if ((_step2 = _iterator2.n()).done) {
                    _context2.next = 17;
                    break;
                  }

                  _t5 = _step2.value;

                  if (/^[a-z_][\da-z_]+$/.test(_t5)) {
                    _context2.next = 15;
                    break;
                  }

                  _context2.next = 14;
                  return Ti.Toast.Open("i18n:hmaker-edit-form-new-field-e0", "error");

                case 14:
                  return _context2.abrupt("return", _context2.sent);

                case 15:
                  _context2.next = 9;
                  break;

                case 17:
                  _context2.next = 22;
                  break;

                case 19:
                  _context2.prev = 19;
                  _context2.t0 = _context2["catch"](7);

                  _iterator2.e(_context2.t0);

                case 22:
                  _context2.prev = 22;

                  _iterator2.f();

                  return _context2.finish(22);

                case 25:
                  i = 1 == e.length ? t : e;

                  if (!_this2.existsName(i)) {
                    _context2.next = 30;
                    break;
                  }

                  _context2.next = 29;
                  return Ti.Toast.Open({
                    content: "i18n:hmaker-edit-form-new-field-e1",
                    type: "error",
                    vars: {
                      val: t
                    },
                    position: "center",
                    duration: 5e3
                  });

                case 29:
                  return _context2.abrupt("return", _context2.sent);

                case 30:
                  _this2.addFieldOrGroup({
                    name: i,
                    type: _.isArray(i) ? "Object" : "String",
                    comType: "ti-input"
                  });

                case 31:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2, null, [[7, 19, 22, 25]]);
        }))();
      },
      addNewGroup: function addNewGroup() {
        var _this3 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
          var t;
          return regeneratorRuntime.wrap(function _callee3$(_context3) {
            while (1) {
              switch (_context3.prev = _context3.next) {
                case 0:
                  _context3.next = 2;
                  return Ti.Prompt("i18n:hmaker-edit-form-new-group-tip");

                case 2:
                  t = _context3.sent;

                  if (!(t = _.trim(t))) {
                    _context3.next = 12;
                    break;
                  }

                  if (!_this3.existsName(t)) {
                    _context3.next = 10;
                    break;
                  }

                  _context3.next = 7;
                  return Ti.Toast.Open({
                    content: "i18n:hmaker-edit-form-new-field-e1",
                    type: "error",
                    vars: {
                      val: t
                    },
                    position: "center",
                    duration: 5e3
                  });

                case 7:
                  _context3.t0 = _context3.sent;
                  _context3.next = 11;
                  break;

                case 10:
                  _context3.t0 = void _this3.addFieldOrGroup({
                    type: "Group",
                    title: t,
                    fields: []
                  });

                case 11:
                  return _context3.abrupt("return", _context3.t0);

                case 12:
                case "end":
                  return _context3.stop();
              }
            }
          }, _callee3);
        }))();
      },
      removeSelectedFieldOrGroup: function removeSelectedFieldOrGroup() {
        var _this4 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
          var t, e, _Ti$Util, i, n, _i, _n2, a, _i2;

          return regeneratorRuntime.wrap(function _callee4$(_context4) {
            while (1) {
              switch (_context4.prev = _context4.next) {
                case 0:
                  t = _this4.getMyCurrent();

                  if (t) {
                    _context4.next = 3;
                    break;
                  }

                  return _context4.abrupt("return", Ti.Toast.Open("i18n:hmaker-edit-form-nil-field", "warn"));

                case 3:
                  if (!(t.group && !t.field)) {
                    _context4.next = 16;
                    break;
                  }

                  i = !0;
                  _context4.t0 = _.isEmpty(t.group.fields);

                  if (_context4.t0) {
                    _context4.next = 10;
                    break;
                  }

                  _context4.next = 9;
                  return Ti.Confirm("i18n:hmaker-edit-form-del-group-confirm", {
                    closer: !0,
                    textYes: "i18n:hmaker-edit-form-del-group-all",
                    textNo: "i18n:hmaker-edit-form-del-group-only"
                  });

                case 9:
                  i = _context4.sent;

                case 10:
                  if (!_.isUndefined(i)) {
                    _context4.next = 12;
                    break;
                  }

                  return _context4.abrupt("return");

                case 12:
                  n = _.first(t.index);
                  e = _.filter(_this4.value, function (t, e) {
                    return e != n;
                  }), !1 === i && (_.isEmpty(t.group.fields) || (_Ti$Util = Ti.Util).insertToArray.apply(_Ti$Util, [e, n].concat(_toConsumableArray(t.group.fields))));
                  _context4.next = 17;
                  break;

                case 16:
                  if (t.group && t.field) {
                    e = _.cloneDeep(_this4.value);
                    _i = _.cloneDeep(t.group), _n2 = _.first(t.index), a = _.last(t.index);
                    _i.fields = _.filter(_i.fields, function (t, e) {
                      return e != a;
                    }), e[_n2] = _i;
                  } else {
                    _i2 = _.first(t.index);
                    e = _.filter(_this4.value, function (t, e) {
                      return e != _i2;
                    });
                  }

                case 17:
                  _this4.selectNextIdByIndex(t.index, e), _this4.$notify("change", e);

                case 18:
                case "end":
                  return _context4.stop();
              }
            }
          }, _callee4);
        }))();
      },
      moveSelectedFieldsUp: function moveSelectedFieldsUp() {
        var t = _.cloneDeep(this.value),
            e = this.getMyCurrent(t);

        if (!e) return Ti.Toast.Open("i18n:hmaker-edit-form-nil-field", "warn");

        var i = _.first(e.index);

        if (e.group && e.field) {
          var n = _.last(e.index);

          0 == n ? (_.remove(e.group.fields, function (t, e) {
            return e == n;
          }), Ti.Util.insertToArray(t, i, e.field), this.myCurrentId = _.last(e.path)) : (e.group.fields[n] = e.group.fields[n - 1], e.group.fields[n - 1] = e.field);
        } else if (i > 0) {
          var _n3 = t[i - 1];
          this.isGroup(_n3) && e.field && this.$tree.isOpened(_n3.title) ? (_.remove(t, function (t, e) {
            return e == i;
          }), _.isArray(_n3.fields) ? _n3.fields.push(e.field) : _n3.fields = [e.field], this.myCurrentId = [_n3.title, _.last(e.path)].join("/")) : (t[i] = t[i - 1], t[i - 1] = e.field || e.group);
        }

        this.$notify("change", t);
      },
      moveSelectedFieldsDown: function moveSelectedFieldsDown() {
        var t = _.cloneDeep(this.value),
            e = this.getMyCurrent(t);

        if (!e) return Ti.Toast.Open("i18n:hmaker-edit-form-nil-field", "warn");

        var i = _.first(e.index);

        if (e.group && e.field) {
          var n = _.last(e.index);

          n >= e.group.fields.length - 1 ? (_.remove(e.group.fields, function (t, e) {
            return e == n;
          }), Ti.Util.insertToArray(t, i + 1, e.field), this.myCurrentId = _.last(e.path)) : (e.group.fields[n] = e.group.fields[n + 1], e.group.fields[n + 1] = e.field);
        } else if (i < t.length - 1) {
          var _n4 = t[i + 1];
          this.isGroup(_n4) && e.field && this.$tree.isOpened(_n4.title) ? (_.remove(t, function (t, e) {
            return e == i;
          }), _.isArray(_n4.fields) ? Ti.Util.insertToArray(_n4.fields, 0, e.field) : _n4.fields = [e.field], this.myCurrentId = [_n4.title, _.last(e.path)].join("/")) : (t[i] = t[i + 1], t[i + 1] = e.field || e.group);
        }

        this.$notify("change", t);
      }
    },
    mounted: function mounted() {
      var t = Ti.Storage.local.getObject("vue-drop-me", null);

      if (t) {
        var e = Date.now() - t.timeInMs;
        console.log({
          du: e
        }), e < 1e3 && (this.myCurrentId = t.myCurrentId), Ti.Storage.local.remove("vue-drop-me");
      } else this.selectNextIdByIndex([0]);
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Storage.local.setObject("vue-drop-me", {
        myCurrentId: this.myCurrentId,
        timeInMs: Date.now()
      });
    }
  };
  Ti.Preload("ti/com/hmaker/edit-com/form/fieldset/edit-form-fieldset.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-com/form/fieldset/_com.json", {
  name: "hmaker-edit-form-fieldset",
  globally: !0,
  template: "./edit-form-fieldset.html",
  mixins: ["./edit-form-fieldset.mjs"],
  components: ["@com:hmaker/edit-com/form/field", "@com:hmaker/edit-com/form/group"]
}), Ti.Preload("ti/com/hmaker/edit-com/form/group/edit-form-group.html", '<div class="hmaker-edit-form-group">\n  Group: {{value}}\n</div>'), function () {
  var t = {
    props: {
      value: {
        type: Object,
        "default": void 0
      }
    },
    computed: {},
    methods: {}
  };
  Ti.Preload("ti/com/hmaker/edit-com/form/group/edit-form-group.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-com/form/group/_com.json", {
  name: "hmaker-edit-form-group",
  globally: !0,
  template: "./edit-form-group.html",
  mixins: ["./edit-form-group.mjs"]
}), Ti.Preload("ti/com/hmaker/edit-com/form/_com.json", {
  name: "hmaker-edit-com-form",
  globally: !0,
  template: "./edit-com-form.html",
  mixins: ["./edit-com-form.mjs"],
  components: ["@com:hmaker/edit-com/form/fieldset"]
}), Ti.Preload("ti/com/hmaker/edit-com/hmaker-edit-com.html", '<div class="hmaker-edit-com">\n  \x3c!--\n    Select Com Type\n  --\x3e\n  <div class="as-com-type">\n    <ti-combo-input \n      v-bind="ComTypeComboInput"\n      :value="ComType"\n      @change="OnComTypeChange"/>\n  </div>\n  \x3c!--\n    Edit Com Conf\n  --\x3e\n  <div class="as-com-conf"><div class="as-con">\n    \x3c!--\n      Show Com Editor\n    --\x3e\n    <component\n      v-if="hasEditCom"\n        class="ti-fill-parent"\n        :is="EditComType"\n        v-bind="EditComConf"\n        @change="OnComConfChange"/>\n    \x3c!--\n      Show Blank\n    --\x3e\n    <ti-loading \n      v-else\n        icon="fas-hand-pointer"\n        text="i18n:hmaker-com-conf-blank"/>\n  </div></div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myCom: null
      };
    },
    props: {
      value: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      Dict: function Dict() {
        return Wn.Dict.hMakerComponents();
      },
      ComTypeComboInput: function ComTypeComboInput() {
        return {
          options: this.Dict,
          placeholder: "i18n:hmaker-com-type-blank",
          autoI18n: !0,
          mustInList: !0,
          autoCollapse: !0,
          dropDisplay: ["<icon:im-plugin>", "title|name"]
        };
      },
      hasEditCom: function hasEditCom() {
        return !!this.myCom;
      },
      ComType: function ComType() {
        return _.get(this.value, "comType");
      },
      ComConf: function ComConf() {
        return _.get(this.value, "comConf");
      },
      EditComType: function EditComType() {
        return _.get(this.myCom, "editComType");
      },
      EditComConf: function EditComConf() {
        var t = _.get(this.myCom, "editComConf");

        return Ti.Util.explainObj(this.value, t);
      }
    },
    methods: {
      OnComTypeChange: function OnComTypeChange(t) {
        var _this5 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {
          return regeneratorRuntime.wrap(function _callee5$(_context5) {
            while (1) {
              switch (_context5.prev = _context5.next) {
                case 0:
                  _context5.next = 2;
                  return _this5.Dict.getItem(t);

                case 2:
                  _this5.myCom = _context5.sent;

                  _this5.notifyChange({
                    comType: t,
                    comConf: _this5.ComConf
                  });

                case 4:
                case "end":
                  return _context5.stop();
              }
            }
          }, _callee5);
        }))();
      },
      OnComConfChange: function OnComConfChange() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        this.notifyChange({
          comType: this.ComType,
          comConf: t
        });
      },
      notifyChange: function notifyChange() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        this.$notify("change", t);
      },
      reloadMyCom: function reloadMyCom() {
        var _this6 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {
          var _t6;

          return regeneratorRuntime.wrap(function _callee6$(_context6) {
            while (1) {
              switch (_context6.prev = _context6.next) {
                case 0:
                  if (!_.isEmpty(_this6.value)) {
                    _context6.next = 4;
                    break;
                  }

                  _this6.myCom = null;
                  _context6.next = 8;
                  break;

                case 4:
                  _t6 = _this6.value.comType;
                  _context6.next = 7;
                  return _this6.Dict.getItem(_t6);

                case 7:
                  _this6.myCom = _context6.sent;

                case 8:
                case "end":
                  return _context6.stop();
              }
            }
          }, _callee6);
        }))();
      }
    },
    watch: {
      value: {
        handler: "reloadMyCom",
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/hmaker/edit-com/hmaker-edit-com.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-com/_com.json", {
  name: "hmaker-edit-com",
  globally: !0,
  template: "./hmaker-edit-com.html",
  mixins: ["./hmaker-edit-com.mjs"],
  components: ["@com:hmaker/edit-com/form", "@com:wn/combo/edit-com"]
}), Ti.Preload("ti/com/hmaker/edit-site-actions/edit-site-actions.html", '<div class="hmaker-edit-site-actions">\n  Actions\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {};
    },
    props: {
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      theConfig: function theConfig() {}
    },
    methods: {}
  };
  Ti.Preload("ti/com/hmaker/edit-site-actions/edit-site-actions.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-site-actions/_com.json", {
  name: "hmaker-edit-site-actions",
  globally: !0,
  template: "./edit-site-actions.html",
  mixins: ["./edit-site-actions.mjs"]
}), Ti.Preload("ti/com/hmaker/edit-site-apis/edit-site-apis.html", '<div class="hmaker-edit-site-apis">\n  Apis\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {};
    },
    props: {
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      theConfig: function theConfig() {}
    },
    methods: {}
  };
  Ti.Preload("ti/com/hmaker/edit-site-apis/edit-site-apis.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-site-apis/_com.json", {
  name: "hmaker-edit-site-apis",
  globally: !0,
  template: "./edit-site-apis.html",
  mixins: ["./edit-site-apis.mjs"]
}), Ti.Preload("ti/com/hmaker/edit-site-blocks/edit-site-blocks.html", '<div class="hmaker-edit-site-blocks">\n  Blocks\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {};
    },
    props: {
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      theConfig: function theConfig() {}
    },
    methods: {}
  };
  Ti.Preload("ti/com/hmaker/edit-site-blocks/edit-site-blocks.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-site-blocks/_com.json", {
  name: "hmaker-edit-site-blocks",
  globally: !0,
  template: "./edit-site-blocks.html",
  mixins: ["./edit-site-blocks.mjs"]
}), Ti.Preload("ti/com/hmaker/edit-site-general/edit-site-general.html", '<ti-form class="hmaker-edit-site-general"\n  :fields="TheFields"\n  :data="data"/>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {};
    },
    props: {
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      TheFields: function TheFields() {
        return [{
          title: "i18n:hmaker-site-k-domain",
          name: "domain"
        }, {
          title: "i18n:hmaker-site-k-apiBase",
          name: "apiBase"
        }, {
          title: "i18n:hmaker-site-k-captcha",
          name: "captcha"
        }, {
          title: "i18n:hmaker-site-k-base",
          name: "base"
        }, {
          title: "i18n:hmaker-site-k-entry",
          name: "entry"
        }];
      }
    },
    methods: {}
  };
  Ti.Preload("ti/com/hmaker/edit-site-general/edit-site-general.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-site-general/_com.json", {
  name: "hmaker-edit-site-general",
  globally: !0,
  template: "./edit-site-general.html",
  mixins: ["./edit-site-general.mjs"]
}), Ti.Preload("ti/com/hmaker/edit-site-nav/edit-site-nav.html", '<div class="hmaker-edit-site-nav">\n  \x3c!--\n    Nav Table\n  --\x3e\n  <div class="as-table ti-fill-parent">\n    <ti-table class="ti-fill-parent"\n      :data="TableData"\n      :fields="TableFields"\n      :selectable="true"\n      :checkable="true"\n      :multi="true"\n      :current-id="myCurrentId"\n      :checked-ids="myCheckedIds"\n      @select="OnRowSelected"/>\n  </div>\n  \x3c!--\n    Nav Form\n  --\x3e\n  <div class="as-form">\n    <ti-form\n      class="ti-fill-parent"\n      :fields="FormFields"\n      :blank-as="FormBlankAs"\n      :data="FormData"\n      @change="OnFormChanged"/>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myCurrentIndex: -1,
        myCurrentId: null,
        myCheckedIds: {},
        myActionStatus: {
          remove: !1,
          moveUp: !1,
          moveDown: !1
        }
      };
    },
    props: {
      data: {
        type: Array,
        "default": function _default() {
          return [];
        }
      }
    },
    computed: {
      TableData: function TableData() {
        var t = [];
        return _.forEach(this.data, function (e, i) {
          t.push(_.assign({
            id: "N".concat(i)
          }, e));
        }), t;
      },
      TableLastIndex: function TableLastIndex() {
        return this.TableData.length - 1;
      },
      TableFields: function TableFields() {
        return [{
          title: "i18n:hmaker-nav-k-display",
          display: [{
            key: "icon",
            comType: "ti-icon"
          }, "title"],
          width: -150
        }, {
          title: "i18n:hmaker-nav-k-type",
          name: "type",
          width: -100,
          display: [{
            comType: "ti-icon",
            transformer: {
              name: "toStr",
              args: {
                page: "zmdi-file",
                href: "zmdi-link",
                dispatch: "zmdi-flash-auto"
              }
            }
          }, {
            transformer: {
              name: "toStr",
              args: {
                page: "i18n:hmaker-nav-tp-page",
                href: "i18n:hmaker-nav-tp-href",
                dispatch: "i18n:hmaker-nav-tp-dispatch"
              }
            }
          }]
        }, {
          title: "i18n:hmaker-nav-k-value",
          display: "value"
        }];
      },
      FormBlankAs: function FormBlankAs() {
        return {
          icon: "zmdi-long-arrow-return zmdi-hc-rotate-90",
          text: "i18n:hmaker-nav-blank-item"
        };
      },
      FormFields: function FormFields() {
        return [{
          title: "i18n:hmaker-nav-k-title",
          name: "title",
          comType: "ti-input"
        }, {
          title: "i18n:hmaker-nav-k-icon",
          name: "icon",
          comType: "ti-input-icon"
        }, {
          title: "i18n:hmaker-nav-k-type",
          name: "type",
          comType: "ti-switcher",
          comConf: {
            options: [{
              icon: "zmdi-file",
              text: "i18n:hmaker-nav-tp-page",
              value: "page"
            }, {
              icon: "zmdi-link",
              text: "i18n:hmaker-nav-tp-href",
              value: "href"
            }, {
              icon: "zmdi-flash-auto",
              text: "i18n:hmaker-nav-tp-dispatch",
              value: "dispatch"
            }]
          }
        }, {
          title: "i18n:hmaker-nav-k-value",
          name: "value",
          comType: "ti-input"
        }];
      },
      FormData: function FormData() {
        if (this.myCurrentIndex >= 0) return this.TableData[this.myCurrentIndex];
      }
    },
    methods: {
      OnRowSelected: function OnRowSelected(_ref2) {
        var t = _ref2.currentId,
            e = _ref2.checkedIds,
            i = _ref2.currentIndex;
        this.myCurrentIndex = i, this.myCurrentId = t, this.myCheckedIds = e, _.assign(this.myActionStatus, {
          moveUp: i > 0,
          moveDown: i >= 0 && i < this.TableLastIndex,
          remove: i >= 0
        });
      },
      OnFormChanged: function OnFormChanged() {
        var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref3.name,
            e = _ref3.value;

        if (this.myCurrentIndex >= 0) {
          var i = _.cloneDeep(this.data);

          i[this.myCurrentIndex][t] = e, this.notifyChange(i);
        }
      },
      updateParentActionMenu: function updateParentActionMenu() {
        this.$notify("actions:update", {
          data: [{
            key: "create",
            text: "i18n:add-item",
            type: "action",
            icon: "zmdi-plus",
            action: "$parent:callChild(createNewOne)"
          }, {
            type: "line"
          }, {
            key: "remove",
            type: "action",
            icon: "zmdi-delete",
            action: "$parent:callChild(removeChecked)",
            enableBy: "remove"
          }, {
            type: "line"
          }, {
            key: "moveUp",
            type: "action",
            icon: "zmdi-long-arrow-up",
            action: "$parent:callChild(moveUp)",
            enableBy: "moveUp"
          }, {
            key: "moveDown",
            type: "action",
            icon: "zmdi-long-arrow-down",
            action: "$parent:callChild(moveDown)",
            enableBy: "moveDown"
          }],
          status: this.myActionStatus
        });
      },
      notifyChange: function notifyChange() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var e = [];
        _.forEach(t, function (t) {
          e.push(_.pick(t, "icon", "title", "type", "value"));
        }), this.$notify("change", e);
      },
      __recover_selected: function __recover_selected(t, e) {
        var _this7 = this;

        var i = {};

        for (var n = 0; n < e; n++) {
          i["N".concat(t + n)] = !0;
        }

        console.log(i), this.$nextTick(function () {
          _this7.OnRowSelected({
            currentId: "N".concat(t),
            currentIndex: t,
            checkedIds: i
          });
        });
      },
      moveUp: function moveUp() {
        var _this8 = this;

        var t = _.cloneDeep(this.TableData),
            e = _.remove(t, function (_ref4) {
          var t = _ref4.id;
          return _this8.myCheckedIds[t];
        });

        if (!_.isEmpty(e)) {
          var _Ti$Util2;

          var i = 1 * _.first(e).id.substring(1),
              n = Math.max(0, i - 1);

          n >= 0 && ((_Ti$Util2 = Ti.Util).insertToArray.apply(_Ti$Util2, [t, n].concat(_toConsumableArray(e))), this.notifyChange(t), this.__recover_selected(n, e.length));
        }
      },
      moveDown: function moveDown() {
        var _this9 = this;

        var t = _.cloneDeep(this.TableData),
            e = _.remove(t, function (_ref5) {
          var t = _ref5.id;
          return _this9.myCheckedIds[t];
        });

        if (!_.isEmpty(e)) {
          var _Ti$Util3;

          var i = 1 * _.first(e).id.substring(1) + 1;
          i <= this.TableData.length - e.length && ((_Ti$Util3 = Ti.Util).insertToArray.apply(_Ti$Util3, [t, i].concat(_toConsumableArray(e))), this.notifyChange(t), this.__recover_selected(i, e.length));
        }
      },
      removeChecked: function removeChecked() {
        var _this10 = this;

        var t = _.filter(this.TableData, function (_ref6) {
          var t = _ref6.id;
          return !_this10.myCheckedIds[t];
        });

        this.notifyChange(t), this.myCurrentIndex = -1, this.myCurrentId = null, this.myCheckedIds = {};
      },
      createNewOne: function createNewOne() {
        var t = _.cloneDeep(this.TableData);

        Ti.Util.insertToArray(t, this.myCurrentIndex, {
          title: Ti.I18n.get("new-item"),
          type: "page"
        }), console.log(t), this.notifyChange(t);
      }
    },
    mounted: function mounted() {
      this.updateParentActionMenu();
    }
  };
  Ti.Preload("ti/com/hmaker/edit-site-nav/edit-site-nav.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-site-nav/_com.json", {
  name: "hmaker-edit-site-nav",
  globally: !0,
  template: "./edit-site-nav.html",
  mixins: ["./edit-site-nav.mjs"]
}), Ti.Preload("ti/com/hmaker/edit-site-router/edit-site-router.html", '<div class="hmaker-edit-site-router">\n  Routers\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {};
    },
    props: {
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      theConfig: function theConfig() {}
    },
    methods: {}
  };
  Ti.Preload("ti/com/hmaker/edit-site-router/edit-site-router.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-site-router/_com.json", {
  name: "hmaker-edit-site-router",
  globally: !0,
  template: "./edit-site-router.html",
  mixins: ["./edit-site-router.mjs"]
}), Ti.Preload("ti/com/hmaker/edit-site-schema/edit-site-schema.html", '<div class="hmaker-edit-site-schema">\n  SCHEMA\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {};
    },
    props: {
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      theConfig: function theConfig() {}
    },
    methods: {}
  };
  Ti.Preload("ti/com/hmaker/edit-site-schema/edit-site-schema.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-site-schema/_com.json", {
  name: "hmaker-edit-site-schema",
  globally: !0,
  template: "./edit-site-schema.html",
  mixins: ["./edit-site-schema.mjs"]
}), Ti.Preload("ti/com/hmaker/edit-site-utils/edit-site-utils.html", '<div class="hmaker-edit-site-utils">\n  Utils\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {};
    },
    props: {
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      theConfig: function theConfig() {}
    },
    methods: {}
  };
  Ti.Preload("ti/com/hmaker/edit-site-utils/edit-site-utils.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-site-utils/_com.json", {
  name: "hmaker-edit-site-utils",
  globally: !0,
  template: "./edit-site-utils.html",
  mixins: ["./edit-site-utils.mjs"]
}), Ti.Preload("ti/com/hmaker/site-current-view/com/current-view-con/current-view-con.html", '<div class="current-view-con">\n  <component :is="comType"\n    class="ti-cover-parent"\n    v-bind="comConf"/>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      comType: {
        type: String,
        "default": "ti-loading"
      },
      comConf: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    }
  };
  Ti.Preload("ti/com/hmaker/site-current-view/com/current-view-con/current-view-con.mjs", t);
}(), Ti.Preload("ti/com/hmaker/site-current-view/com/current-view-con/_com.json", {
  name: "current-view-con",
  globally: !1,
  template: "./current-view-con.html",
  mixins: ["./current-view-con.mjs"]
}), Ti.Preload("ti/com/hmaker/site-current-view/site-current-view.html", '<div class="site-current-view"\n  :class="topClass">\n  \x3c!--\n    Title\n  --\x3e\n  <div class="current-view-title">\n    \x3c!-- For Site --\x3e\n    <div class="as-name">\n      <ti-icon \n        class="as-icon"\n        :value="theTitleIcon"/>\n      <span\n        class="as-text">{{theTitleText|i18n}}</span>\n    </div>\n    \x3c!-- Crumb --\x3e\n    <div class="as-crumb"></div>\n    \x3c!-- Actions --\x3e\n    <div class="as-actions">\n      <ti-menu\n        v-if="theCurrentAction"\n          :data="theCurrentAction"\n          :status="status"/>\n    </div>\n  </div>\n  \x3c!--\n    Main Area\n  --\x3e\n  <current-view-con\n    class="ti-fill-parent"\n    :com-type="theCurrentView.comType"\n    :com-conf="theCurrentView.comConf"/>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      home: {
        type: Object,
        "default": null
      },
      tree: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      currentMeta: {
        type: Object,
        "default": null
      },
      currentContent: {
        type: String,
        "default": null
      },
      currentData: {
        type: Object,
        "default": null
      },
      mapping: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      views: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return {
          "is-changed": this.status.changed
        };
      },
      theViewsMapping: function theViewsMapping() {
        return new e(this.mapping || {});
      },
      hasCurrent: function hasCurrent() {
        return this.currentMeta;
      },
      theTitleIcon: function theTitleIcon() {
        return Wn.Util.getIconObj(this.currentMeta || this.home);
      },
      theTitleText: function theTitleText() {
        return Wn.Util.getObjDisplayName(this.currentMeta || this.home);
      },
      theCurrentView: function theCurrentView() {
        var t = {
          comType: "ti-loading",
          comConf: {
            icon: "zmdi-alert-circle-o",
            text: "i18n:blank"
          }
        };

        if (this.hasCurrent) {
          var _e4 = this.home.ph,
              i = this.currentMeta.ph;
          t = this.theViewsMapping.getView({
            path: Ti.Util.getRelativePath(_e4, i),
            type: this.currentMeta.tp,
            mime: this.currentMeta.mime,
            race: this.currentMeta.race
          }, t), _.isString(t) && (t = this.views[t]);
        }

        return Ti.Util.explainObj(this, t);
      },
      theCurrentAction: function theCurrentAction() {
        return this.theCurrentView.actions;
      }
    }
  };

  var e = /*#__PURE__*/function () {
    function e(t) {
      _classCallCheck(this, e);

      this.paths = new Ti.Mapping(t.paths), this.types = new Ti.Mapping(t.types), this.mimes = new Ti.Mapping(t.mimes), this.races = new Ti.Mapping(t.races);
    }

    _createClass(e, [{
      key: "getView",
      value: function getView() {
        var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref7.path,
            e = _ref7.type,
            i = _ref7.mime,
            n = _ref7.race;

        var a = arguments.length > 1 ? arguments[1] : undefined;
        return this.paths.get(t) || this.types.get(e) || this.mimes.get(i) || this.races.get(n) || a;
      }
    }]);

    return e;
  }();

  Ti.Preload("ti/com/hmaker/site-current-view/site-current-view.mjs", t);
}(), Ti.Preload("ti/com/hmaker/site-current-view/_com.json", {
  name: "hmaker-site-current-view",
  globally: !0,
  template: "./site-current-view.html",
  mixins: ["./site-current-view.mjs"],
  components: ["./com/current-view-con", "@com:hmaker/site-state", "@com:ti/text/raw", "@com:ti/obj/json", "@com:wn/obj/preview", "@com:wn/adaptlist"]
}), Ti.Preload("ti/com/hmaker/site-manager/hm-site-manager.html", '<ti-gui\n  class="hmaker-site-manager"\n  :class="className"\n  keep-shown-to="hmaker-site-manager"\n  :layout="theLayout"\n  :schema="theSchema"\n  :can-loading="true"\n  :loading-as="status.reloading"\n  @block:event="onBlockEvent"/>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      home: {
        type: Object,
        "default": null
      },
      tree: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      current: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      config: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      theConfig: function theConfig() {
        return this.config[this.viewportMode] || {};
      },
      theLayout: function theLayout() {
        return {
          type: "cols",
          border: !0,
          blocks: [{
            title: "i18n:hmaker-site-tree",
            size: 280,
            name: "site-tree",
            body: "desktop-site-tree"
          }, {
            name: "site-current",
            body: "desktop-site-current"
          }]
        };
      },
      theSchema: function theSchema() {
        return {
          "desktop-site-tree": {
            comType: "ti-tree",
            comConf: {
              data: this.tree.root,
              display: [{
                key: "rawData",
                type: "Object",
                transformer: "getIconObj",
                comType: "ti-icon"
              }, "rawData.title", "name"],
              blankAs: {
                icon: "zmdi-settings zmdi-hc-spin",
                text: "i18n:hmaker-site-tree-loading"
              },
              currentId: this.tree.currentId,
              showRoot: !1,
              defaultOpenDepth: 1,
              extendFunctionSet: Wn.Util,
              openedNodePaths: this.tree.openedNodePaths
            }
          },
          "desktop-site-current": {
            comType: "hmaker-site-current-view",
            comConf: {
              home: this.home,
              tree: this.tree,
              currentMeta: this.current.meta,
              currentContent: this.current.content,
              currentData: this.current.data,
              mapping: this.theConfig.mapping,
              views: this.config.views,
              status: this.status
            }
          }
        };
      }
    },
    methods: {
      onBlockEvent: function onBlockEvent() {
        var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref8.block,
            e = _ref8.name,
            i = _ref8.args;

        var n = _.concat(t || [], e || []).join("."),
            a = _.first(i);

        console.log("hmaker-site-manager:onBlockEvent", n, a), _.isUndefined(a) || ("site-tree.opened" == n && Ti.App(this).dispatch("main/reloadTreeNode", {
          id: a.id
        }), "site-tree.opened-status:change" == n && Ti.App(this).dispatch("main/setTreeOpenedNodePaths", a), "site-tree.select" == n && Ti.App(this).dispatch("main/setTreeSelected", a.currentId), "site-current.open" == n && Ti.App(this).dispatch("main/reloadCurrent", a.rawData), "site-current.change" == n && Ti.App(this).dispatch("main/onCurrentChanged", a));
      },
      editCurrentObjMeta: function editCurrentObjMeta() {
        var t = this.current.meta || this.home;
        if (!t) return Ti.Toast.Open("i18n:nil-obj");
        Wn.EditObjMeta(t);
      }
    },
    mounted: function mounted() {
      var _this11 = this;

      Ti.Fuse.getOrCreate().add({
        key: "hmaker-site-manager",
        everythingOk: function everythingOk() {
          return !_this11.status.changed;
        },
        fail: function fail() {
          Ti.Toast.Open("i18n:wn-obj-nosaved", "warn");
        }
      });
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Fuse.get().remove("hmaker-site-manager");
    }
  };
  Ti.Preload("ti/com/hmaker/site-manager/hm-site-manager.mjs", t);
}(), Ti.Preload("ti/com/hmaker/site-manager/_com.json", {
  name: "hmaker-site-manager",
  globally: !0,
  i18n: "@i18n:hmaker",
  template: "./hm-site-manager.html",
  mixins: ["./hm-site-manager.mjs"],
  components: ["@com:hmaker/site-current-view"]
}), Ti.Preload("ti/com/hmaker/site-state/com/site-node-editing/site-node-editing.html", '<div class="hmaker-site-node-editing">\n  <template v-if="hasNode">\n    \x3c!--\n      Heading\n    --\x3e\n    <div class="as-head">\n      \x3c!--Title Bar--\x3e\n      <div class="at-left">\n        <ti-icon :value="node.icon"/>\n        <span>{{node.title | i18n}}</span>\n      </div>\n      \x3c!--Action Menu--\x3e\n      <div \n        v-if="hasActionMenu"\n          class="at-right">\n          <ti-menu v-bind="myActionMenu"/>\n      </div>\n    </div>\n    \x3c!--\n      Editing\n    --\x3e\n    <div class="as-edit">\n      <component class="ti-fill-parent"\n        :is="Com.comType"\n        v-bind="Com.comConf"\n        :on-init="OnChildInit"\n        @change="OnChange"\n        @actions:update="OnActionsUpdate"/>\n    </div>\n  </template>\n  \x3c!--\n    Blank\n  --\x3e\n  <template v-else>\n    <ti-loading\n      text="i18n:blank-to-edit"\n      icon="zmdi-arrow-left"/>\n  </template>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        myActionMenu: null
      };
    },
    props: {
      path: {
        type: String,
        "default": null
      },
      node: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      hasNode: function hasNode() {
        return this.path && !_.isEmpty(this.node);
      },
      hasActionMenu: function hasActionMenu() {
        return !_.isEmpty(this.myActionMenu);
      },
      Com: function Com() {
        return "general" == this.path ? {
          comType: "hmaker-edit-site-general",
          comConf: {
            data: this.node.data
          }
        } : "nav" == this.path ? {
          comType: "hmaker-edit-site-nav",
          comConf: {
            data: this.node.data
          }
        } : {
          comType: "ti-form",
          comConf: {
            fields: [{
              name: "path"
            }, {
              name: "node",
              comType: "ti-input-text",
              comConf: {
                readonly: !0,
                height: "7rem"
              }
            }],
            data: {
              path: this.path,
              node: JSON.stringify(this.node, null, "  ")
            }
          }
        };
      }
    },
    methods: {
      OnChange: function OnChange(t) {
        this.$notify("change", {
          path: this.path,
          node: this.node,
          payload: t
        });
      },
      OnActionsUpdate: function OnActionsUpdate() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        this.myActionMenu = t;
      },
      OnChildInit: function OnChildInit(t) {
        this.$myChildCom = t;
      },
      callChild: function callChild(t) {
        console.log(t), this.$myChildCom && this.$myChildCom[t]();
      }
    },
    watch: {
      path: function path() {
        this.myActionMenu = null;
      }
    }
  };
  Ti.Preload("ti/com/hmaker/site-state/com/site-node-editing/site-node-editing.mjs", t);
}(), Ti.Preload("ti/com/hmaker/site-state/com/site-node-editing/_com.json", {
  name: "hmaker-site-node-editing",
  globally: !0,
  template: "./site-node-editing.html",
  mixins: ["./site-node-editing.mjs"],
  components: ["@com:hmaker/edit-site-general", "@com:hmaker/edit-site-utils", "@com:hmaker/edit-site-apis", "@com:hmaker/edit-site-schema", "@com:hmaker/edit-site-blocks", "@com:hmaker/edit-site-nav", "@com:hmaker/edit-site-router", "@com:hmaker/edit-site-actions", "@com:ti/form"]
}), Ti.Preload("ti/com/hmaker/site-state/hm-site-state.html", '<ti-gui\n  class="hmaker-site-state ti-fill-parent"\n  keep-shown-to="hmaker-site-state"\n  :layout="theLayout"\n  :schema="theSchema"\n  @block:event="onBlockEvent"/>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        myCurrentPathId: null,
        myTreeOpenedStatus: {}
      };
    },
    props: {
      home: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      content: {
        type: String,
        "default": null
      }
    },
    computed: {
      theData: function theData() {
        var t = _.trim(this.content);

        return t ? JSON.parse(t) : {};
      },
      theTreeDisplay: function theTreeDisplay() {
        return ["<icon>", "title", "tip"];
      },
      theTreeData: function theTreeData() {
        return {
          name: "ROOT",
          children: [this._general, this._nav, this._apis, this._schema, this._blocks, this._router, this._actions, this._utils]
        };
      },
      _general: function _general() {
        return {
          icon: "fas-sliders-h",
          name: "general",
          title: "i18n:hmaker-site-state-general",
          data: _.pick(this.theData, ["domain", "apiBase", "captcha", "base", "entry"])
        };
      },
      _utils: function _utils() {
        return {
          icon: "zmdi-card-sd",
          name: "utils",
          title: "i18n:hmaker-site-state-utils",
          data: _.assign({}, this.theData.utils)
        };
      },
      _apis: function _apis() {
        var t = [];
        return _.forEach(this.theData.apis, function (e, i) {
          t.push({
            icon: "zmdi-input-power",
            name: i,
            title: e.title || i,
            tip: i,
            data: e
          });
        }), {
          icon: "zmdi-input-composite",
          name: "apis",
          title: "i18n:hmaker-site-state-apis",
          children: t
        };
      },
      _schema: function _schema() {
        var t = [];
        return _.forEach(this.theData.schema, function (e, i) {
          t.push({
            icon: "fas-puzzle-piece",
            name: i,
            title: e.title || i,
            data: e
          });
        }), {
          icon: "fas-pencil-ruler",
          name: "schema",
          title: "i18n:hmaker-site-state-schema",
          children: t
        };
      },
      _blocks: function _blocks() {
        var t = function t(e, i) {
          if (_.isString(e)) return {
            icon: "fas-external-link-alt",
            name: i,
            title: e,
            data: e
          };

          if (e.body) {
            var _t7 = _.isString(e.body) ? e.body : e.body.comType || "ti-label";

            return {
              icon: "fas-puzzle-piece",
              name: i,
              title: "".concat(_.isNumber(i) ? "[".concat(i, "]") : "\"".concat(i, "\""), ":<").concat(_t7, ">"),
              data: e
            };
          }

          {
            var n = [];

            _.forEach(e.blocks, function (e, i) {
              n.push(t(e, i));
            });

            return {
              icon: "im-layer",
              name: i,
              title: [_.isNumber(i) ? "[".concat(i, "]") : "\"".concat(i, "\""), Ti.I18n.get("hmaker-layout-".concat(e.type || "cols"))].join(":"),
              data: e,
              children: n
            };
          }
        };

        var e = [];
        return _.forEach(this.theData.blocks, function (i, n) {
          var a = [];
          _.forEach(i, function (e, i) {
            a.push(t(e, i));
          }), e.push({
            icon: {
              desktop: "zmdi-desktop-windows",
              tablet: "zmdi-tablet",
              phone: "zmdi-smartphone-iphone"
            }[n],
            name: n,
            title: "i18n:".concat(n),
            data: i,
            children: a
          });
        }), {
          icon: "far-object-group",
          name: "blocks",
          title: "i18n:hmaker-site-state-blocks",
          children: e
        };
      },
      _nav: function _nav() {
        return {
          icon: "im-sitemap",
          name: "nav",
          title: "i18n:hmaker-site-state-nav",
          data: this.theData.nav || []
        };
      },
      _router: function _router() {
        var t = [];
        return _.forEach(this.theData.router, function (e, i) {
          t.push({
            icon: "im-share",
            name: i,
            title: e.match,
            data: e
          });
        }), {
          icon: "zmdi-router",
          name: "router",
          title: "i18n:hmaker-site-state-router",
          children: t
        };
      },
      _actions: function _actions() {
        var t = [];
        return _.forEach(this.theData.actions, function (e, i) {
          t.push({
            icon: "im-flash",
            name: i,
            title: i,
            data: e
          });
        }), {
          icon: "im-rocket",
          name: "actions",
          title: "i18n:hmaker-site-state-actions",
          children: t
        };
      },
      theLayout: function theLayout() {
        return {
          type: "tabs",
          tabAt: "bottom-left",
          blocks: [{
            title: "i18n:structure",
            type: "cols",
            border: !0,
            blocks: [{
              size: .372,
              name: "tree",
              body: "desktopStructureTree"
            }, {
              name: "edit",
              body: "desktopStructureEdit"
            }]
          }, {
            title: "i18n:source-code",
            name: "source",
            body: "desktopSourceCode"
          }]
        };
      },
      theSchema: function theSchema() {
        return {
          desktopStructureTree: {
            comType: "ti-tree",
            comConf: {
              mainWidth: 300,
              border: "cell",
              multi: !1,
              data: this.theTreeData,
              display: this.theTreeDisplay,
              autoOpen: !1,
              currentId: this.myCurrentPathId,
              defaultOpenDepth: 0,
              keepOpenBy: "hm-site-state-".concat(this.home.id, "-opened"),
              keepCurrentBy: "hm-site-state-".concat(this.home.id, "-current"),
              showRoot: !1
            }
          },
          desktopStructureEdit: {
            comType: "hmaker-site-node-editing",
            comConf: {
              path: this.myCurrentPathId,
              node: this.theCurrentNode
            }
          },
          desktopSourceCode: {
            comType: "ti-text-raw",
            comConf: {
              showTitle: !1,
              content: this.content,
              ignoreKeyUp: !0
            }
          }
        };
      },
      theCurrentNode: function theCurrentNode() {
        return this.myCurrentPathId ? Ti.Trees.getNodeByPath(this.theTreeData, this.myCurrentPathId) : null;
      }
    },
    methods: {
      updateByPath: function updateByPath() {
        var _ref9 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref9.path,
            e = _ref9.payload;

        var i = _.cloneDeep(this.theData);

        _.set(i, t, e), Ti.App(this).dispatch("main/onCurrentChanged", i);
      },
      onBlockEvent: function onBlockEvent() {
        var _ref10 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref10.block,
            e = _ref10.name,
            i = _ref10.args;

        var n = _.concat(t || [], e || []).join("."),
            a = _.first(i);

        console.log("hmaker-site-state:onBlockEvent", n, a), _.isUndefined(a) || ("tree.select" == n ? this.onSelected(a) : "tree.opened-status:change" == n ? this.onOpenedStatusChanged(a) : "edit.change" == n ? this.updateByPath(a) : "source.change" == n && Ti.App(this).dispatch("main/onCurrentChanged", a));
      },
      onSelected: function onSelected() {
        var _arguments = arguments,
            _this12 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {
          var _ref11, t, e;

          return regeneratorRuntime.wrap(function _callee7$(_context7) {
            while (1) {
              switch (_context7.prev = _context7.next) {
                case 0:
                  _ref11 = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : {}, t = _ref11.currentId, e = _ref11.current;
                  _this12.myCurrentPathId = t;

                case 2:
                case "end":
                  return _context7.stop();
              }
            }
          }, _callee7);
        }))();
      },
      onOpenedStatusChanged: function onOpenedStatusChanged(t) {
        this.myTreeOpenedStatus = t;
      }
    }
  };
  Ti.Preload("ti/com/hmaker/site-state/hm-site-state.mjs", t);
}(), Ti.Preload("ti/com/hmaker/site-state/_com.json", {
  name: "hmaker-site-state",
  globally: !0,
  template: "./hm-site-state.html",
  mixins: ["./hm-site-state.mjs"],
  components: ["./com/site-node-editing"]
}), Ti.Preload("ti/com/net/aliyun/vod/manager/vod-manager.html", '<ti-gui\n  class="net-aliyun-vod-manager"\n  :class="TopClass"\n  :layout="GuiLayout"\n  :schema="GuiSchema"\n  :can-loading="true"\n  :loading-as="reloading"\n  @filter::change="OnFilterChange"\n  @sorter::change="OnSorterChange"\n  @list::select="OnListSelect"\n  @video::preview="OnVideoPreview"\n  @pager::change="OnPagerChange"/>'), function () {
  var t = {
    data: function data() {
      return {
        reloading: !1,
        list: [],
        pager: {},
        scrollToken: null,
        myCurrentId: null,
        myCurrentVideo: null,
        myFilter: {
          match: {}
        },
        mySort: {
          CreationTime: -1
        }
      };
    },
    props: {
      meta: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      fields: {
        type: String,
        "default": "Title,CoverURL,Duration,CateName,Size,Description,RegionID"
      },
      filter: {
        type: Object,
        "default": function _default() {
          return {
            comType: "ti-combo-filter",
            comConf: {
              placeholder: "i18n:net-flt-nil",
              form: {
                fields: [{
                  title: "i18n:net-ct",
                  name: "CreationTime",
                  type: "Array",
                  comType: "ti-input-daterange"
                }, {
                  title: "i18n:net-vod-duration",
                  name: "Duration",
                  comType: "ti-switcher",
                  comConf: {
                    autoSplitValue: !1,
                    options: [{
                      value: "[0, 600]",
                      text: "i18n:net-vod-du-short"
                    }, {
                      value: "(600, 4800]",
                      text: "i18n:net-vod-du-tv"
                    }, {
                      value: "(4800, )",
                      text: "i18n:net-vod-du-long"
                    }]
                  }
                }]
              }
            }
          };
        }
      },
      sorter: {
        type: Object,
        "default": function _default() {
          return {
            comType: "ti-combo-sorter",
            comConf: {
              options: [{
                value: "CreationTime",
                text: "i18n:net-ct"
              }]
            }
          };
        }
      },
      pageSize: {
        type: Number,
        "default": 20
      },
      multi: {
        type: Boolean,
        "default": !0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      ConfName: function ConfName() {
        return _.get(this.meta, "vodConfigName");
      },
      CmdPrefix: function CmdPrefix() {
        return this.ConfName ? "aliyunvod ".concat(this.ConfName) : "aliyunvod";
      },
      ThePageNumber: function ThePageNumber() {
        return _.get(this.pager, "pn") || 1;
      },
      ThePageSize: function ThePageSize() {
        return _.get(this.pager, "pgsz") || this.pageSize;
      },
      WallItemDisplay: function WallItemDisplay() {
        return {
          key: "..",
          comType: "ti-obj-thumb",
          comConf: function comConf(t) {
            return {
              id: t.videoId,
              title: t.title,
              preview: {
                type: "image",
                value: t.coverURL
              }
            };
          }
        };
      },
      GuiLayout: function GuiLayout() {
        return {
          type: "cols",
          border: !0,
          blocks: [{
            type: "rows",
            size: "61.8%",
            border: !0,
            blocks: [{
              type: "cols",
              size: ".44rem",
              blocks: [{
                name: "filter",
                flex: "both",
                body: "pcFilter"
              }, {
                name: "sorter",
                flex: "none",
                body: "pcSorter"
              }]
            }, {
              name: "list",
              body: "pcList"
            }, {
              name: "pager",
              size: 40,
              body: "pcPager"
            }]
          }, {
            icon: "zmdi-tv-alt-play",
            title: "i18n:video",
            name: "video",
            body: "pcVideo"
          }]
        };
      },
      GuiSchema: function GuiSchema() {
        return {
          pcFilter: {
            comType: this.filter.comType,
            comConf: _.assign({
              value: this.myFilter
            }, this.filter.comConf)
          },
          pcSorter: {
            comType: this.sorter.comType,
            comConf: _.assign({
              value: this.mySort
            }, this.sorter.comConf)
          },
          pcList: {
            comType: "ti-wall",
            comConf: {
              data: this.list,
              idBy: "videoId",
              multi: this.multi,
              display: this.WallItemDisplay
            }
          },
          pcPager: {
            comType: "ti-paging-jumper",
            comConf: {
              value: this.pager
            }
          },
          pcVideo: {
            comType: "net-aliyun-vod-video-info",
            comConf: {
              value: this.myCurrentVideo
            }
          }
        };
      }
    },
    methods: {
      OnFilterChange: function OnFilterChange(t) {
        var _this13 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {
          return regeneratorRuntime.wrap(function _callee8$(_context8) {
            while (1) {
              switch (_context8.prev = _context8.next) {
                case 0:
                  _this13.myFilter = t;
                  _this13.pager = _.assign({}, _this13.pager, {
                    pn: 1
                  });
                  _context8.next = 4;
                  return _this13.reloadVideos();

                case 4:
                case "end":
                  return _context8.stop();
              }
            }
          }, _callee8);
        }))();
      },
      OnSorterChange: function OnSorterChange(t) {
        var _this14 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {
          return regeneratorRuntime.wrap(function _callee9$(_context9) {
            while (1) {
              switch (_context9.prev = _context9.next) {
                case 0:
                  _this14.mySort = t;
                  _this14.pager = _.assign({}, _this14.pager, {
                    pn: 1
                  });
                  _context9.next = 4;
                  return _this14.reloadVideos();

                case 4:
                case "end":
                  return _context9.stop();
              }
            }
          }, _callee9);
        }))();
      },
      OnPagerChange: function OnPagerChange(t) {
        var _this15 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {
          var e;
          return regeneratorRuntime.wrap(function _callee10$(_context10) {
            while (1) {
              switch (_context10.prev = _context10.next) {
                case 0:
                  if (_this15.pager = _.assign({}, _this15.pager, t), _this15.meta) {
                    e = _.get(t, "pgsz");
                    Ti.Util.isNil(e) || Ti.Storage.session.setObject(_this15.meta.id, {
                      pgsz: e
                    });
                  }

                  _context10.next = 3;
                  return _this15.reloadVideos();

                case 3:
                case "end":
                  return _context10.stop();
              }
            }
          }, _callee10);
        }))();
      },
      OnListSelect: function OnListSelect(_ref12) {
        var _this16 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {
          var t, e, i;
          return regeneratorRuntime.wrap(function _callee11$(_context11) {
            while (1) {
              switch (_context11.prev = _context11.next) {
                case 0:
                  t = _ref12.currentId, e = _ref12.checkedIds, i = _ref12.checked;
                  _this16.myCurrentId = t;

                  if (!t) {
                    _context11.next = 9;
                    break;
                  }

                  _context11.next = 5;
                  return _this16.reloadVideoInfo(t);

                case 5:
                  _this16.myCurrentVideo = _context11.sent;

                  _this16.$notify("change", {
                    currentId: _this16.myCurrentId,
                    current: _this16.myCurrentVideo,
                    checkedIds: e,
                    checked: i
                  });

                  _context11.next = 10;
                  break;

                case 9:
                  _this16.myCurrentVideo = null, _this16.$notify("change", void 0);

                case 10:
                case "end":
                  return _context11.stop();
              }
            }
          }, _callee11);
        }))();
      },
      OnVideoPreview: function OnVideoPreview() {
        var _arguments2 = arguments,
            _this17 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {
          var _ref13, t, e, i, n;

          return regeneratorRuntime.wrap(function _callee12$(_context12) {
            while (1) {
              switch (_context12.prev = _context12.next) {
                case 0:
                  _ref13 = _arguments2.length > 0 && _arguments2[0] !== undefined ? _arguments2[0] : {}, t = _ref13.title, e = _ref13.videoId, i = _ref13.coverURL;
                  _context12.next = 3;
                  return _this17.requestPlayAuth(e);

                case 3:
                  n = _context12.sent;
                  _context12.next = 6;
                  return Ti.App.Open({
                    icon: "zmdi-tv-alt-play",
                    title: "Preview: ".concat(t),
                    textOk: null,
                    textCancel: "i18n:close",
                    position: "top",
                    width: "90%",
                    height: "90%",
                    comType: "NetAliyunVodVideoPlayer",
                    comConf: {
                      videoId: e,
                      playAuth: n,
                      coverUrl: i
                    },
                    components: "@com:net/aliyun/vod/video/player"
                  });

                case 6:
                case "end":
                  return _context12.stop();
              }
            }
          }, _callee12);
        }))();
      },
      requestPlayAuth: function requestPlayAuth(t) {
        var _this18 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {
          var e, i;
          return regeneratorRuntime.wrap(function _callee13$(_context13) {
            while (1) {
              switch (_context13.prev = _context13.next) {
                case 0:
                  _this18.reloading = !0;
                  e = [_this18.CmdPrefix, "playauth", t, "-cqn"];
                  _context13.next = 4;
                  return Wn.Sys.exec2(e.join(" "), {
                    as: "json"
                  });

                case 4:
                  i = _context13.sent;
                  return _context13.abrupt("return", (_this18.reloading = !1, i.playAuth));

                case 6:
                case "end":
                  return _context13.stop();
              }
            }
          }, _callee13);
        }))();
      },
      reloadVideoInfo: function reloadVideoInfo(t) {
        var _this19 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {
          var e, i;
          return regeneratorRuntime.wrap(function _callee14$(_context14) {
            while (1) {
              switch (_context14.prev = _context14.next) {
                case 0:
                  _this19.reloading = !0;
                  e = [_this19.CmdPrefix, "video", t, "-cqn"];
                  _context14.next = 4;
                  return Wn.Sys.exec2(e.join(" "), {
                    as: "json"
                  });

                case 4:
                  i = _context14.sent;
                  return _context14.abrupt("return", (_this19.reloading = !1, i));

                case 6:
                case "end":
                  return _context14.stop();
              }
            }
          }, _callee14);
        }))();
      },
      toAliyunTime: function toAliyunTime(t) {},
      toMatchStr: function toMatchStr(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var i = [];
        return Ti.S.isBlank(t) || (/^[a-z0-9]{32}$/.test(t) ? i.push("VideoId = '".concat(t, "'")) : i.push("Title in ('".concat(t.replace(/'/g, ""), "')"))), _.forEach(e, function (t, e) {
          if (!Ti.Util.isNil(t)) if (_.isString(t) && /^[\[(].+[)\]]$/.test(t)) i.push("".concat(e, "=").concat(t));else if (/time/i.test(e)) {
            var n = "yyyy-MM-dd'T'HH:mm:ss'Z'",
                a = Ti.Types.formatDateTime(t, n);
            1 == (a = _.concat(a)).length && a.push(a[0]);
            var s = Ti.Types.toDate(a[1]).getTime() + 864e5;
            a[1] = Ti.Types.formatDateTime(s, n), i.push("".concat(e, "=['").concat(a[0], "', '").concat(a[1], "')"));
          } else if (_.isArray(t)) {
            var _n5 = _.map(t, function (t) {
              return _.isString(t) ? t.replace(/'/g, "") : t;
            });

            i.push("".concat(e, " in (").concat(_n5.join(","), ")"));
          } else _.isString(t) ? i.push("".concat(e, " in ('").concat(t.replace(/'/g, ""), "')")) : i.push("".concat(e, " = ").concat(t));
        }), i.join(" and ");
      },
      reloadVideos: function reloadVideos() {
        var _this20 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {
          var t, e, i, n, a;
          return regeneratorRuntime.wrap(function _callee15$(_context15) {
            while (1) {
              switch (_context15.prev = _context15.next) {
                case 0:
                  _this20.reloading = !0;
                  t = [_this20.CmdPrefix];
                  t.push("search", "-fields", "'".concat(_this20.fields, "'"));
                  e = _.get(_this20.myFilter, "keyword"), i = _.get(_this20.myFilter, "match");
                  if (!_.isEmpty(i) || !Ti.Util.isNil(e)) try {
                    t.push("-match", "\"".concat(_this20.toMatchStr(e, i), "\""));
                  } catch (t) {
                    console.error(t);
                  }
                  n = [];
                  _.forEach(_this20.mySort, function (t, e) {
                    n.push("".concat(e, ":").concat(t > 0 ? "ASC" : "DESC"));
                  }), _.isEmpty(n) || t.push("-sort ", "".concat(n.join(" "))), t.push("-pn", _this20.ThePageNumber), t.push("-pgsz", _this20.ThePageSize), t.push("-as page -cqn");
                  _context15.next = 9;
                  return Wn.Sys.exec2(t.join(" "), {
                    as: "json"
                  });

                case 9:
                  a = _context15.sent;
                  _this20.list = a.list, _this20.pager = a.pager, _this20.scrollToken = a.scrollToken, _this20.reloading = !1;

                case 11:
                case "end":
                  return _context15.stop();
              }
            }
          }, _callee15);
        }))();
      }
    },
    mounted: function mounted() {
      if (this.meta) {
        var _t8 = Ti.Storage.session.getObject(this.meta.id);

        if (_t8) {
          var e = _.get(_t8, "pgsz");

          this.pager.pgsz = e;
        }
      }

      this.reloadVideos();
    }
  };
  Ti.Preload("ti/com/net/aliyun/vod/manager/vod-manager.mjs", t);
}(), Ti.Preload("ti/com/net/aliyun/vod/manager/_com.json", {
  name: "net-aliyun-vod-manager",
  globally: !0,
  template: "./vod-manager.html",
  mixins: ["./vod-manager.mjs"],
  components: ["@com:ti/wall", "@com:ti/combo/filter", "@com:ti/combo/sorter", "@com:ti/paging/jumper", "@com:net/aliyun/vod/video/info"]
}), Ti.Preload("ti/com/net/aliyun/vod/video/info/vod-video-info.html", '<div class="net-aliyun-vod-video-info"\n  :class="TopClass">\n  \x3c!--\n    Blank\n  --\x3e\n  <ti-loading\n    v-if="!hasVideo"\n      icon="fas-hand-point-left"\n      text="i18n:net-vod-video-nil"/>\n  \x3c!--\n    Show Content\n  --\x3e\n  <template v-else>\n    \x3c!--Preview--\x3e\n    <div class="as-preview">\n      <img \n        class="ti-fill-parent"\n        :src="VideoCoverURL"/>\n      <div class="as-btn" @click.left="OnClickPreview">\n        <i class="fas fa-play-circle"></i>\n      </div>\n    </div>\n    \x3c!--\n      Detail info\n    --\x3e\n    <div class="as-detail">\n      <ti-form\n        class="ti-cover-parent"\n        spacing="tiny"\n        :fields="FormFields"\n        :data="value"/>\n    </div>\n  </template>\n</div>'), function () {
  var t = {
    props: {
      value: {
        type: Object,
        "default": void 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      hasVideo: function hasVideo() {
        return !!this.value;
      },
      VideoCoverURL: function VideoCoverURL() {
        return _.get(this.value, "coverURL");
      },
      FormFields: function FormFields() {
        return [{
          title: "VideoID",
          name: "videoId"
        }, {
          title: "Title",
          name: "title"
        }, {
          title: "CateName",
          name: "cateName"
        }, {
          title: "Description",
          name: "description"
        }, {
          title: "Duration",
          name: "duration"
        }, {
          title: "RegionId",
          name: "regionId"
        }, {
          title: "Size",
          name: "size"
        }, {
          title: "Status",
          name: "status"
        }, {
          title: "Tags",
          name: "tags"
        }, {
          title: "AuditStatus",
          name: "auditStatus"
        }, {
          title: "DownloadSwitch",
          name: "downloadSwitch"
        }, {
          title: "PreprocessStatus",
          name: "preprocessStatus"
        }, {
          title: "CreateTime",
          name: "createTime"
        }, {
          title: "ModifyTime",
          name: "modifyTime"
        }];
      }
    },
    methods: {
      OnClickPreview: function OnClickPreview() {
        this.$notify("preview", this.value);
      }
    }
  };
  Ti.Preload("ti/com/net/aliyun/vod/video/info/vod-video-info.mjs", t);
}(), Ti.Preload("ti/com/net/aliyun/vod/video/info/_com.json", {
  name: "NetAliyunVodVideoInfo",
  globally: !0,
  template: "./vod-video-info.html",
  mixins: ["./vod-video-info.mjs"],
  components: ["@com:ti/form"]
}), Ti.Preload("ti/com/net/aliyun/vod/video/player/vod-video-player.html", '<div class="net-vod-video-player"\n  :class="TopClass">\n  <div :id="PlayerID"></div>\n</div>'), function () {
  var t = {
    props: {
      autoplay: {
        type: Boolean,
        "default": !0
      },
      videoId: {
        type: String,
        "default": void 0
      },
      coverUrl: {
        type: String,
        "default": void 0
      },
      playAuth: {
        type: String,
        "default": void 0
      },
      encryptType: {
        type: Number,
        "default": void 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      PlayerID: function PlayerID() {
        return "ALIPLAYER_".concat(parseInt(1e5 * Math.random()));
      }
    },
    methods: {
      initPlayer: function initPlayer() {
        !this.$player && this.playAuth && this.videoId && this.coverUrl && (this.$player = new Aliplayer({
          id: this.PlayerID,
          width: "100%",
          height: "100%",
          autoplay: this.autoplay,
          vid: this.videoId,
          cover: this.coverUrl,
          encryptType: this.encryptType,
          playauth: this.playAuth
        }));
      }
    },
    watch: {},
    mounted: function mounted() {
      this.initPlayer();
    }
  };
  Ti.Preload("ti/com/net/aliyun/vod/video/player/vod-video-player.mjs", t);
}(), Ti.Preload("ti/com/net/aliyun/vod/video/player/_com.json", {
  name: "NetAliyunVodVideoPlayer",
  globally: !0,
  template: "./vod-video-player.html",
  mixins: ["./vod-video-player.mjs"],
  components: []
}), Ti.Preload("ti/com/ti/actionbar/com/bar-item-action/bar-item-action.html", '<div class="bar-item-action">\n  <bar-item-info\n    v-bind="this"\n    @fire="OnFired"/>\n</div>'), function () {
  var t = {
    inject: ["$bar"],
    props: {
      name: {
        type: String,
        "default": void 0
      },
      icon: {
        type: String,
        "default": void 0
      },
      hideIcon: {
        type: Boolean,
        "default": !1
      },
      text: {
        type: String,
        "default": void 0
      },
      tip: {
        type: String,
        "default": void 0
      },
      altDisplay: {
        type: [Object, Array],
        "default": function _default() {
          return [];
        }
      },
      enabled: {
        type: [String, Array, Object],
        "default": void 0
      },
      disabled: {
        type: [String, Array, Object],
        "default": void 0
      },
      highlight: {
        type: [String, Array, Object],
        "default": void 0
      },
      value: {
        type: [Boolean, String, Number, Array],
        "default": !0
      },
      depth: {
        type: Number,
        "default": 0
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      action: {
        type: [String, Object, Function],
        "default": void 0
      },
      notify: {
        type: [Boolean, String],
        "default": !1
      },
      wait: {
        type: Number,
        "default": 0
      },
      shortcut: {
        type: String,
        "default": void 0
      }
    },
    computed: {
      notifyName: function notifyName() {
        if (this.notify) return _.isString(this.notify) ? this.notify : this.name;
      }
    },
    methods: {
      OnFired: function OnFired(t) {
        if (this.action) {
          var _t9 = Ti.App(this);

          Ti.Shortcut.genActionInvoking(this.action, {
            $com: this.$bar.$parent,
            argContext: _t9.$state(),
            wait: this.wait
          })();
        }

        this.notifyName && this.$bar.notifyChange({
          name: this.notifyName,
          value: t
        });
      }
    },
    mounted: function mounted() {
      var _this21 = this;

      this.shortcut && Ti.App(this).guardShortcut(this, this.shortcut, function () {
        return _this21.isEnabled;
      });
    },
    destroyed: function destroyed() {
      this.shortcut && Ti.App(this).pulloutShortcut(this);
    }
  };
  Ti.Preload("ti/com/ti/actionbar/com/bar-item-action/bar-item-action.mjs", t);
}(), Ti.Preload("ti/com/ti/actionbar/com/bar-item-action/_com.json", {
  name: "bar-item-action",
  template: "./bar-item-action.html",
  mixins: ["./bar-item-action.mjs"]
}), Ti.Preload("ti/com/ti/actionbar/com/bar-item-group/bar-item-group.html", '<div class="bar-item-group"\n  :class="TopClass"\n  @mouseenter.stop="OnMouseEnter"\n  @mouseleave.stop="OnMouseLeave">\n  \x3c!--\n    Info\n  --\x3e\n  <bar-item-info\n    v-if="hasInfo"\n      v-bind="this"\n      :value="collapse"\n      :status="status"\n      @fire="OnFired"/>\n  \x3c!--\n    Group Children\n  --\x3e\n  <template v-if="showChildren">\n    <div v-if="isDepth1"\n      class="as-mask"\n      @click="doCollapse"></div>\n    <div ref="children"\n      v-if="showChildren"\n        class="as-children"\n        :style="ChildrenStyle"\n        @click.left="doCollapse">\n          <component \n            v-for="bi in items"\n              :key="bi.key"\n              :is="bi.comType"\n              v-bind="bi.comConf"\n              :depth="depth+1"\n              :items="bi.items"\n              :hide-icon="isChildrenWithoutIcon"\n              :status="status"/>\n    </div>\n  </template>\n</div>'), function () {
  var t = {
    inject: ["$bar"],
    provide: function provide() {
      return {
        depth: this.depth + 1
      };
    },
    data: function data() {
      return {
        collapse: !0,
        isDocked: !1,
        barItems: []
      };
    },
    props: {
      name: {
        type: String,
        "default": void 0
      },
      icon: {
        type: String,
        "default": void 0
      },
      hideIcon: {
        type: Boolean,
        "default": !1
      },
      text: {
        type: String,
        "default": void 0
      },
      tip: {
        type: String,
        "default": void 0
      },
      altDisplay: {
        type: [Object, Array],
        "default": function _default() {
          return [];
        }
      },
      enabled: {
        type: [String, Array, Object],
        "default": void 0
      },
      disabled: {
        type: [String, Array, Object],
        "default": void 0
      },
      highlight: {
        type: [String, Array, Object],
        "default": void 0
      },
      depth: {
        type: Number,
        "default": 0
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      items: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      autoExtend: {
        type: Boolean,
        "default": !1
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-collapse": this.collapse,
          "is-extended": !this.collapse
        }, "is-depth-".concat(this.depth));
      },
      isDepth0: function isDepth0() {
        return 0 == this.depth;
      },
      isDepth1: function isDepth1() {
        return 1 == this.depth;
      },
      isDepthX: function isDepthX() {
        return this.depth > 1;
      },
      hasInfo: function hasInfo() {
        return this.icon || this.text;
      },
      isChildrenWithoutIcon: function isChildrenWithoutIcon() {
        var _iterator3 = _createForOfIteratorHelper(this.items),
            _step3;

        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
            var _t10 = _step3.value;
            if (_t10.comConf && _t10.comConf.icon) return !1;
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }

        return !0;
      },
      showChildren: function showChildren() {
        return this.isDepth0 || !this.collapse;
      },
      ChildrenStyle: function ChildrenStyle() {
        if (!this.isDepth0 && !this.isDocked) return {
          visibility: "hidden"
        };
      }
    },
    methods: {
      OnMouseEnter: function OnMouseEnter() {
        this.isDepthX && this.doExtend();
      },
      OnMouseLeave: function OnMouseLeave() {
        this.isDepthX && this.doCollapse();
      },
      OnFired: function OnFired(t) {
        t ? this.doExtend() : this.doCollapse();
      },
      doExtend: function doExtend() {
        this.collapse = !1;
      },
      doCollapse: function doCollapse() {
        this.collapse = !0, this.isDocked = !1;
      },
      doDockChildren: function doDockChildren() {
        var _this22 = this;

        this.$nextTick(function () {
          _this22.$refs.children && _this22.depth > 0 && (Ti.Dom.dockTo(_this22.$refs.children, _this22.$el, {
            mode: _this22.isDepthX ? "V" : "H",
            position: "fixed",
            space: _this22.isDepthX ? {
              x: 1
            } : {
              y: 3
            }
          }), _.delay(function () {
            _this22.isDocked = !0;
          }, 5));
        });
      }
    },
    watch: {
      collapse: "doDockChildren"
    },
    mounted: function mounted() {
      this.doDockChildren(), this.$bar.allocGroup(this);
    },
    beforeDestroy: function beforeDestroy() {
      this.$bar.freeGroup(this);
    }
  };
  Ti.Preload("ti/com/ti/actionbar/com/bar-item-group/bar-item-group.mjs", t);
}(), Ti.Preload("ti/com/ti/actionbar/com/bar-item-group/_com.json", {
  name: "bar-item-group",
  template: "./bar-item-group.html",
  mixins: ["./bar-item-group.mjs"]
}), Ti.Preload("ti/com/ti/actionbar/com/bar-item-info/bar-item-info.html", '<div class="bar-item-info"\n  :class="TopClass"\n  @click.left="OnClickTop">\n  \x3c!--\n    Icon\n  --\x3e\n  <span\n    v-if="isShowIcon"\n      class="as-icon">\n      <ti-icon\n        v-if="hasIcon" \n          :value="CurrentDisplay.icon"/>\n  </span>\n  \x3c!--\n    Text\n  --\x3e\n  <span\n    v-if="CurrentDisplay.text"\n      class="as-text"\n        >{{CurrentDisplay.text|i18n}}</span>\n  \x3c!--\n    Shortcut\n  --\x3e\n  <span\n    v-if="isShowShortcut"\n      class="as-shortcut">{{shortcut}}</span>\n</div>'), function () {
  var t = {
    inject: ["$bar"],
    props: {
      name: {
        type: String,
        "default": void 0
      },
      icon: {
        type: String,
        "default": void 0
      },
      hideIcon: {
        type: Boolean,
        "default": !1
      },
      text: {
        type: String,
        "default": void 0
      },
      tip: {
        type: String,
        "default": void 0
      },
      shortcut: {
        type: String,
        "default": void 0
      },
      altDisplay: {
        type: [Object, Array],
        "default": function _default() {
          return [];
        }
      },
      enabled: {
        type: [Boolean, String, Array, Object],
        "default": void 0
      },
      disabled: {
        type: [Boolean, String, Array, Object],
        "default": void 0
      },
      highlight: {
        type: [Boolean, String, Array, Object],
        "default": void 0
      },
      value: {
        type: [Boolean, String, Number, Array],
        "default": void 0
      },
      depth: {
        type: Number,
        "default": 0
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-enabled": this.isEnabled,
          "is-disabled": this.isDisabled,
          "is-highlight": this.isHighlight,
          "is-top": 1 == this.depth,
          "is-sub": this.depth > 1,
          "has-icon": !!this.icon,
          "no-icon": !this.icon,
          "show-icon": this.isShowIcon,
          "hide-icon": !this.isShowIcon
        }, "is-depth-".concat(this.depth));
      },
      AltDisplay: function AltDisplay() {
        return _.isArray(this.altDisplay) ? this.altDisplay : this.altDisplay ? [this.altDisplay] : [];
      },
      isEnabled: function isEnabled() {
        return Ti.Util.isNil(this.enabled) ? !(!Ti.Util.isNil(this.disabled) && this.isMatchStatus(this.disabled)) : this.isMatchStatus(this.enabled);
      },
      isDisabled: function isDisabled() {
        return !this.isEnabled;
      },
      isHighlight: function isHighlight() {
        return !Ti.Util.isNil(this.highlight) && this.isMatchStatus(this.highlight);
      },
      isShowShortcut: function isShowShortcut() {
        return this.shortcut && this.depth > 1;
      },
      isShowIcon: function isShowIcon() {
        return !this.hideIcon || this.hasIcon;
      },
      hasIcon: function hasIcon() {
        return !!this.CurrentDisplay.icon;
      },
      CurrentDisplay: function CurrentDisplay() {
        var t = {
          icon: this.icon,
          text: this.text,
          tip: this.tip,
          value: this.value
        };

        if (!_.isEmpty(this.AltDisplay)) {
          var _iterator4 = _createForOfIteratorHelper(this.AltDisplay),
              _step4;

          try {
            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
              var e = _step4.value;
              var i = e.match || this.name;

              if (this.isMatchStatus(i)) {
                _.assign(t, _.pick(e, ["icon", "text", "tip", "value"]));

                break;
              }
            }
          } catch (err) {
            _iterator4.e(err);
          } finally {
            _iterator4.f();
          }
        }

        return t;
      },
      TheValues: function TheValues() {
        var t = this.CurrentDisplay.value;
        return _.isBoolean(t) ? [t, !t] : _.isArray(t) ? t : [t];
      }
    },
    methods: {
      OnClickTop: function OnClickTop() {
        if (!this.isDisabled) {
          var _t11 = this.isHighlight ? _.last(this.TheValues) : _.first(this.TheValues);

          this.$emit("fire", _t11);
        }
      },
      isMatchStatus: function isMatchStatus(t) {
        if (_.isBoolean(t)) return t;
        if (_.isString(t)) return !!_.get(this.status, t);

        if (_.isArray(t)) {
          var _iterator5 = _createForOfIteratorHelper(t),
              _step5;

          try {
            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
              var e = _step5.value;
              if (!_.get(this.status, e)) return !1;
            }
          } catch (err) {
            _iterator5.e(err);
          } finally {
            _iterator5.f();
          }

          return !0;
        }

        return !!_.isPlainObject(t) && (t.validate ? Ti.Validate.match(this.status, t.validate) : _.isMatch(this.status, t));
      }
    }
  };
  Ti.Preload("ti/com/ti/actionbar/com/bar-item-info/bar-item-info.mjs", t);
}(), Ti.Preload("ti/com/ti/actionbar/com/bar-item-info/_com.json", {
  name: "bar-item-info",
  template: "./bar-item-info.html",
  mixins: ["./bar-item-info.mjs"]
}), Ti.Preload("ti/com/ti/actionbar/com/bar-item-line/bar-item-line.html", '<div class="bar-item-line"\n  :class="TopClass"></div>'), function () {
  var t = {
    inject: ["$bar"],
    props: {
      depth: {
        type: Number,
        "default": 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-top": 1 == this.depth,
          "is-sub": this.depth > 1
        });
      }
    }
  };
  Ti.Preload("ti/com/ti/actionbar/com/bar-item-line/bar-item-line.mjs", t);
}(), Ti.Preload("ti/com/ti/actionbar/com/bar-item-line/_com.json", {
  name: "bar-item-line",
  template: "./bar-item-line.html",
  mixins: ["./bar-item-line.mjs"]
}), Ti.Preload("ti/com/ti/actionbar/ti-actionbar.html", '<div class="ti-actionbar"\n  :class="TopClass"\n  v-ti-activable>\n  <bar-item-group \n    name="Ti_ActionBar_Root_Group"\n    :items="BarItems"\n    :status="status"/>\n</div>'), function () {
  var t = {
    provide: function provide() {
      return {
        $bar: this,
        depth: 0
      };
    },
    data: function data() {
      return {
        mySeq: 0,
        myGroups: {}
      };
    },
    props: {
      items: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      align: {
        type: String,
        "default": "left",
        validator: function validator(t) {
          return /^(left|right|center)$/.test(t);
        }
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass("align-".concat(this.align));
      },
      BarItems: function BarItems() {
        var _this23 = this;

        var t = [];
        return _.forEach(this.items, function (e) {
          var i = _this23.evalBarItem(e);

          i && t.push(i);
        }), t;
      }
    },
    methods: {
      allocGroup: function allocGroup(t) {
        this.myGroups[t.name] = t;
      },
      freeGroup: function freeGroup(t) {
        delete this.myGroups[t.name];
      },
      notifyChange: function notifyChange() {
        var _ref14 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref14.name,
            e = _ref14.value;

        t && this.$notify("change", {
          name: t,
          value: e
        });
      },
      evalBarItem: function evalBarItem(t) {
        var e = this.getItemType(t),
            i = this.getItemKey(e),
            n = {
          type: e,
          key: i,
          comType: "bar-item-".concat(e),
          comConf: _.defaults(_.omit(t, "items"), {
            name: i
          })
        };

        if ("group" == e && _.isArray(t.items)) {
          n.items = [];

          var _iterator6 = _createForOfIteratorHelper(t.items),
              _step6;

          try {
            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
              var _e5 = _step6.value;

              var _t12 = this.evalBarItem(_e5);

              n.items.push(_t12);
            }
          } catch (err) {
            _iterator6.e(err);
          } finally {
            _iterator6.f();
          }
        }

        return n;
      },
      getItemType: function getItemType(t) {
        return t.type ? t.type : _.isEmpty(t) ? "line" : _.isArray(t.items) ? "group" : "action";
      },
      getItemKey: function getItemKey() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "BarItem";
        return "".concat(t, "-").concat(this.mySeq++);
      },
      collapseAllGroup: function collapseAllGroup() {
        _.forEach(this.myGroups, function (t) {
          t.doCollapse();
        });
      },
      __ti_shortcut: function __ti_shortcut(t) {
        var _this24 = this;

        Ti.InvokeBy({
          ESCAPE: function ESCAPE() {
            return _this24.collapseAllGroup();
          }
        }, t);
      }
    },
    mounted: function mounted() {
      var _this25 = this;

      Ti.Viewport.watch(this, {
        resize: function resize() {
          return _this25.collapseAllGroup();
        }
      });
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Viewport.unwatch(this);
    }
  };
  Ti.Preload("ti/com/ti/actionbar/ti-actionbar.mjs", t);
}(), Ti.Preload("ti/com/ti/actionbar/_com.json", {
  name: "ti-actionbar",
  globally: !0,
  template: "./ti-actionbar.html",
  mixins: ["./ti-actionbar.mjs"],
  components: ["./com/bar-item-action", "./com/bar-item-group", "./com/bar-item-line", "./com/bar-item-info"]
}), Ti.Preload("ti/com/ti/button/ti-button.html", '<div class="ti-button"\n  :class="topClass">\n  <ul>\n    <li v-for="it in items"\n      :key="it.name"\n      :class="it.buttonClass"\n      @click="onClickItem(it)">\n      \x3c!--\n        Icon\n      --\x3e\n      <ti-icon v-if="it.icon"\n        :value="it.icon"/>\n      \x3c!--\n        Text\n      --\x3e\n      <span v-if="it.text"\n        class="it-text">{{it.text|i18n}}</span>\n    </li>\n  </ul>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      size: {
        type: String,
        "default": "normal",
        validator: function validator(t) {
          return /^(big|normal|small|tiny)$/.test(t);
        }
      },
      align: {
        type: String,
        "default": "center"
      },
      setup: {
        type: [Array, Object],
        "default": function _default() {
          return [];
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName(["is-".concat(this.size), "at-".concat(this.align)], this.className);
      },
      items: function items() {
        var t = [].concat(this.setup),
            e = [];
        return _.forEach(t, function (t, i) {
          var _n$buttonClass;

          var n = {};
          n.name = t.name || "item-".concat(i), n.eventName = t.eventName || n.name, n.payload = t.payload, n.icon = t.icon, n.text = t.text, n.disabled = t.disabled, n.buttonClass = (_n$buttonClass = {}, _defineProperty(_n$buttonClass, "as-do-".concat(n.name), !0), _defineProperty(_n$buttonClass, "is-enabled", !t.disabled), _defineProperty(_n$buttonClass, "is-disabled", !!t.disabled), _defineProperty(_n$buttonClass, "is-invert-icon", !!t.invertIcon), _n$buttonClass), e.push(n);
        }), e;
      }
    },
    methods: {
      onClickItem: function onClickItem(t) {
        t.disabled || this.$notify(t.eventName, t.payload);
      }
    }
  };
  Ti.Preload("ti/com/ti/button/ti-button.mjs", t);
}(), Ti.Preload("ti/com/ti/button/_com.json", {
  name: "ti-button",
  globally: !0,
  template: "./ti-button.html",
  mixins: ["./ti-button.mjs"],
  components: []
}), Ti.Preload("ti/com/ti/calendar/ti-calendar.html", '<div class="ti-calendar">\n  \x3c!--\n    Heading\n  --\x3e\n  <div class="as-head">\n    \x3c!--\n      Switcher\n    --\x3e\n    <div class="as-switcher" :class="switcherClass">\n      <div class="as-title">\n        <ti-input-month\n          width="100%"\n          height=".36rem"\n          icon="far-calendar-alt"\n          :hide-border="true"\n          :value="theViewDate"\n          :format="theViewRangeText"\n          :editable="monthEditable"\n          :begin-year="beginYear"\n          :end-year="endYear"\n          @change="onMonthChanged"/>\n      </div>\n      <div class="go-btn to-prev-block" @click="gotoMatrix(-1)">\n        <ti-icon value="zmdi-chevron-left"/>\n      </div>\n      <div class="go-btn go-today" @click="gotoToday">\n        <span>{{\'today\'|i18n}}</span>\n      </div>\n      <div class="go-btn to-next-block" @click="gotoMatrix(1)">\n        <ti-icon value="zmdi-chevron-right"/>\n      </div>\n    </div>\n    \x3c!--\n      Change Mode\n      TODO maybe should support mode changing here\n    --\x3e\n    \n  </div>\n  \x3c!--\n    Day cells\n  --\x3e\n  <div class="as-matrix-table">\n    <div v-for="matrix in dateMatrixList"\n      class="as-matrix">\n      <table>\n        <thead>\n          <th v-for="wt in weekTitles">{{wt.title}}</th>\n        </thead>\n        <tbody>\n          <tr v-for="row in matrix">\n            <td v-for="cell in row" :class="cell.type">\n              <slot name="cell">\n                <span class="as-date-item"\n                  @click="onClickCell(cell)">{{cell.text}}</span>\n              </slot>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        view_date: null
      };
    },
    props: {
      value: {
        type: [String, Number, Date, Array],
        "default": null
      },
      range: {
        type: Boolean,
        "default": !1
      },
      firstDayInWeek: {
        type: [Number, String],
        "default": 0
      },
      matrixMode: {
        type: String,
        "default": "monthly"
      },
      matrixCount: {
        type: Number,
        "default": 1
      },
      monthEditable: {
        type: Boolean,
        "default": !0
      },
      monthFormat: {
        type: String,
        "default": "yyyy-MM-dd"
      },
      beginYear: {
        type: [Number, String],
        "default": 1970
      },
      endYear: {
        type: [Number, String],
        "default": new Date().getFullYear() + 1
      }
    },
    watch: {
      value: function value(t) {
        if (t) {
          var _ref15;

          var _concat = [].concat(t),
              _concat2 = _slicedToArray(_concat, 1),
              e = _concat2[0],
              i = Ti.Types.toDate(e).getTime();

          (_ref15 = _).inRange.apply(_ref15, [i].concat(_toConsumableArray(this.theMatrixRangeInMs))) || (this.view_date = null);
        }
      }
    },
    computed: {
      switcherClass: function switcherClass() {
        if (this.isMonthly && this.matrixCount > 1) return "sz-double";
      },
      isMonthly: function isMonthly() {
        return "monthly" == this.matrixMode;
      },
      isWeekly: function isWeekly() {
        return "weekly" == this.matrixMode;
      },
      today: function today() {
        return new Date();
      },
      todayName: function todayName() {
        return Ti.Types.formatDate(this.today, "yyyy-MM-dd");
      },
      theDate: function theDate() {
        return _.isArray(this.value) ? this.value.length > 0 ? Ti.Types.toDate(this.value[0]) : null : Ti.Types.toDate(this.value, null);
      },
      theRangeInMs: function theRangeInMs() {
        var t,
            e = new Date(this.theDate);
        t = _.isArray(this.value) && this.value.length > 1 ? Ti.Types.toDate(this.value[1]) : new Date(e);
        var i = [e.getTime(), t.getTime()].sort();
        return e = Ti.DateTime.setTime(new Date(i[0])), t = Ti.DateTime.setDayLastTime(new Date(i[1])), [e.getTime(), t.getTime()];
      },
      theRangeInText: function theRangeInText() {
        return Ti.Types.formatDate(this.theRangeInMs, "yyyy-MM-dd");
      },
      theRangeBeginDate: function theRangeBeginDate() {
        return new Date(this.theRangeInMs[0]);
      },
      theRangeEndDate: function theRangeEndDate() {
        return new Date(this.theRangeInMs[1]);
      },
      theMatrixRangeInMs: function theMatrixRangeInMs() {
        var t = this.dateMatrixList[0][0][0],
            e = this.dateMatrixList.length - 1,
            i = this.dateMatrixList[e].length - 1,
            n = this.dateMatrixList[e][i].length - 1,
            a = this.dateMatrixList[e][i][n],
            s = new Date(t.raw),
            o = new Date(a.raw);
        return Ti.DateTime.setTime(s), Ti.DateTime.setDayLastTime(o), [s.getTime(), o.getTime()];
      },
      theMatrixRange: function theMatrixRange() {
        return [new Date(this.theMatrixRangeInMs[0]), new Date(this.theMatrixRangeInMs[1])];
      },
      theViewRange: function theViewRange() {
        var t = this.dateMatrixList.length - 1,
            e = this.dateMatrixList[t].length - 1,
            i = this.dateMatrixList[t][e].length - 1,
            n = this.dateMatrixList[t][e][i];

        for (; "in-month" != n.type && i > 0;) {
          n = this.dateMatrixList[t][e][--i];
        }

        var a = new Date(this.theViewDate),
            s = new Date(n.raw);
        return Ti.DateTime.setTime(a), Ti.DateTime.setDayLastTime(s), [a, s];
      },
      theViewRangeText: function theViewRangeText() {
        var t = this.theViewRange[0];

        if (this.isMonthly && this.matrixCount > 1) {
          var e = this.theViewRange[1],
              i = t.getFullYear(),
              n = t.getMonth(),
              a = e.getFullYear(),
              s = e.getMonth(),
              o = Ti.DateTime.getMonthAbbr(n),
              l = Ti.DateTime.getMonthAbbr(s),
              r = {
            yy0: i,
            yy1: a,
            MM0: ++n,
            MM1: ++s,
            MA0: o,
            MA1: l,
            MT0: Ti.I18n.get(o),
            MT1: Ti.I18n.get(l)
          };
          if (i != a) return Ti.I18n.getf("cal.m-range-beyond-years", r);
          if (n != s) return Ti.I18n.getf("cal.m-range-beyond-months", r);
        }

        return Ti.Types.formatDate(t, this.monthFormat);
      },
      theDateName: function theDateName() {
        return Ti.Types.formatDate(this.theDate, "yyyy-MM-dd");
      },
      theViewDate: function theViewDate() {
        return this.view_date || this.theDate || new Date();
      },
      theViewYear: function theViewYear() {
        return this.theViewDate.getFullYear();
      },
      theViewMonth: function theViewMonth() {
        return this.theViewDate.getMonth();
      },
      theViewMonthAbbr: function theViewMonthAbbr() {
        return Ti.DateTime.getMonthAbbr(this.theViewMonth);
      },
      weekTitles: function weekTitles() {
        var t = this.firstDayInWeek;
        if (_.isNumber(t)) t = _.clamp(t, 0, 6);else if (_.isString(t)) {
          var _e6 = _.lowerCase(t);

          t = Ti.DateTime.getWeekDayValue(_e6, 0);
        }
        var e = [];

        for (var i = 0; i < 7; i++) {
          e.push({
            day: t,
            title: Ti.I18n.get(["cal", "week", t])
          }), ++t >= 7 && (t = 0);
        }

        return e;
      },
      weekFirstDayValue: function weekFirstDayValue() {
        return _.isString(this.firstDayInWeek) ? Ti.DateTime.getWeekDayValue(this.firstDayInWeek, 0) : _.clamp(this.firstDayInWeek, 0, 6);
      },
      dateMatrixList: function dateMatrixList() {
        var t = new Date(this.theViewDate),
            e = [],
            i = this.theViewYear,
            n = this.theViewMonth;
        if (this.isMonthly) for (var a = 0; a < this.matrixCount; a++) {
          var _this$createMatrix = this.createMatrix(t, i, n),
              _a = _this$createMatrix.matrix,
              s = _this$createMatrix.lastDate;

          e.push(_a), t = Ti.DateTime.moveDate(new Date(s), 1), ++n >= 12 && (n = 0, i++);
        } else {
          var _this$createMatrix2 = this.createMatrix(t),
              _i3 = _this$createMatrix2.matrix;

          e.push(_i3);
        }
        return e;
      }
    },
    methods: {
      createMatrix: function createMatrix(t, e, i) {
        this.isMonthly && t.setDate(1);
        var n = this.weekFirstDayValue;

        for (; t.getDay() > n;) {
          Ti.DateTime.moveDate(t, -1);
        }

        for (; t.getDay() < n;) {
          Ti.DateTime.moveDate(t, 1);
        }

        var a = 0,
            s = [],
            o = null;

        for (;;) {
          var _n6 = [];

          for (var _e7 = 0; _e7 < 7; _e7++) {
            var _ref16;

            var _s2 = 7 * a + _e7,
                l = (o = Ti.DateTime.createDate(t, _s2)).getMonth(),
                r = o.getDate(),
                c = Ti.Types.formatDate(o, "yyyy-MM-dd"),
                d = !1;

            d = this.range ? (_ref16 = _).inRange.apply(_ref16, [o.getTime()].concat(_toConsumableArray(this.theRangeInMs))) : c == this.theDateName;
            var h = {
              "is-prev": l < i,
              "is-next": l > i,
              "in-month": l == i,
              "is-today": this.todayName == c,
              "is-selected": d
            },
                m = "" + r;

            if (1 == r && (this.isMonthly && this.matrixCount > 1 || this.isWeekly)) {
              var _t13 = Ti.DateTime.getMonthAbbr(l);

              m = Ti.I18n.get("cal.abbr.".concat(_t13));
            }

            _n6.push({
              x: _e7,
              y: a,
              index: _s2,
              type: h,
              name: c,
              text: m,
              year: o.getFullYear(),
              month: l,
              day: o.getDay(),
              date: o.getDate(),
              raw: o
            });
          }

          if (a++, this.isWeekly) {
            if (a > _.clamp(this.matrixCount, 1, 100)) break;
          } else {
            if (!this.isMonthly) break;
            if (_n6[0].year == e && _n6[0].month > i || _n6[0].year > e) break;
          }

          s.push(_n6);
        }

        return {
          matrix: s,
          lastDate: o
        };
      },
      gotoToday: function gotoToday() {
        this.view_date = new Date();
      },
      gotoMatrix: function gotoMatrix() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        var e = this.theViewDate,
            i = new Date(e.getFullYear(), e.getMonth(), e.getDate());
        if (this.isMonthly) Ti.DateTime.moveMonth(i, t);else {
          if (!this.isWeekly) return;
          Ti.DateTime.moveDate(i, 7 * t * this.matrixCount);
        }
        this.view_date = i;
      },
      onMonthChanged: function onMonthChanged(t) {
        var e = Ti.Types.toDate(t);
        this.view_date = e;
      },
      onClickCell: function onClickCell(t) {
        if (this.range) {
          if (_.isArray(this.value)) {
            if (1 == this.value.length) {
              var e = [t.raw.getTime(), this.theDate.getTime()].sort(),
                  i = Ti.Types.toDate(e[0]),
                  n = Ti.Types.toDate(e[1]);
              this.$notify("change", [i, n]);
            } else this.$notify("change", [t.raw]);
          } else this.$notify("change", [t.raw]);
        } else this.$notify("change", t.raw);
      }
    },
    mounted: function mounted() {
      this.view_date = this.theDate || new Date();
    }
  };
  Ti.Preload("ti/com/ti/calendar/ti-calendar.mjs", t);
}(), Ti.Preload("ti/com/ti/calendar/_com.json", {
  name: "ti-calendar",
  globally: !0,
  i18n: "@i18n:ti-datetime",
  template: "./ti-calendar.html",
  mixins: ["./ti-calendar.mjs"],
  components: ["@com:ti/input/month"]
}), Ti.Preload("ti/com/ti/chart/g2/ti-chart-g2.html", '<div class="ti-chart ti-chart-g2">\n  <section ref="chart"\n    class="chart-main ti-fill-parent"></section>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      data: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      padding: {
        type: [Number, Array, String],
        "default": "auto"
      },
      setup: {
        type: Function,
        "default": _.identity
      },
      autoSource: {
        type: Boolean,
        "default": !0
      }
    },
    watch: {
      data: function data() {
        this.debounceRedrawChart();
      }
    },
    computed: {},
    methods: {
      redrawChart: function redrawChart() {
        if (_.isElement(this.$refs.chart)) {
          if (this.__g2_chart) {
            try {
              this.__g2_chart.destroy();
            } catch (t) {}

            $(this.$refs.chart).empty();
          }

          this.__g2_chart = function () {
            var _ref17 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                t = _ref17.$refs,
                e = _ref17.padding,
                i = _ref17.data,
                _ref17$setup = _ref17.setup,
                n = _ref17$setup === void 0 ? _.identity : _ref17$setup,
                a = _ref17.autoSource;

            var s = t.chart,
                o = G2.DomUtil.getWidth(s),
                l = G2.DomUtil.getHeight(s),
                r = new G2.Chart({
              container: s,
              padding: e,
              width: o,
              height: l
            });
            return a && i && !_.isEmpty(i) && r.source(i), n(r, i, {
              width: o,
              height: l
            }), r.render(), r;
          }(this);
        }
      },
      drawAll: function drawAll() {
        var _this26 = this;

        this.$nextTick(function () {
          _this26.redrawChart();
        });
      }
    },
    mounted: function mounted() {
      var _this27 = this;

      this.drawAll(), this.debounceRedrawChart = _.debounce(function () {
        _this27.redrawChart();
      }, 500), this.debounceRedrawAll = _.debounce(function () {
        _this27.drawAll();
      }, 500), Ti.Viewport.watch(this, {
        resize: function resize() {
          var t = this.__g2_chart;

          if (t) {
            this.$notify("before_resize");
            var e = this.$refs.chart,
                i = G2.DomUtil.getWidth(e),
                n = G2.DomUtil.getHeight(e);
            t.changeWidth(i), t.changeHeight(n);
          }
        }
      });
    },
    beforeDestroy: function beforeDestroy() {
      this.__g2_chart && this.__g2_chart.destroy(), Ti.Viewport.unwatch(this);
    }
  };
  Ti.Preload("ti/com/ti/chart/g2/ti-chart-g2.mjs", t);
}(), Ti.Preload("ti/com/ti/chart/g2/_com.json", {
  name: "ti-chart-g2",
  globally: !0,
  template: "./ti-chart-g2.html",
  mixins: ["./ti-chart-g2.mjs"],
  components: [],
  deps: []
}), Ti.Preload("ti/com/ti/chart/simple/ti-chart-simple.html", '<div class="ti-chart ti-chart-simple">\n  <header \n    v-if="title" \n    @click="drawAll">{{title}}</header>\n  <aside v-if="aside"\n    :class="asideClass">\n    <slot name="aside">\n      <span v-if="unit">{{unit}}</span>\n    </slot>\n  </aside>\n  <section class="chart-main" ref="chart"></section>\n  <div v-if="hasSlider"\n    ref="slider"\n    class="chart-slider">\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      title: {
        type: String,
        "default": null
      },
      data: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      type: {
        type: String,
        "default": "interval"
      },
      axisX: {
        type: Object,
        "default": function _default() {
          return {
            name: "name",
            title: "name"
          };
        }
      },
      axisY: {
        type: Object,
        "default": function _default() {
          return {
            name: "value",
            title: "value"
          };
        }
      },
      aside: {
        type: String,
        "default": "left"
      },
      unit: {
        type: String,
        "default": null
      },
      padding: {
        type: Array,
        "default": function _default() {
          return [20, 20, 50, 50];
        }
      },
      minValue: {
        type: Number,
        "default": 0
      },
      maxValue: {
        type: Number,
        "default": void 0
      },
      color: {
        type: String,
        "default": null
      },
      animate: {
        type: Object,
        "default": function _default() {
          return {
            delay: 500,
            duration: 1e3
          };
        }
      },
      valueInterval: {
        type: Number,
        "default": 100
      },
      coord: {
        type: [String, Object],
        "default": null
      }
    },
    watch: {
      data: function data() {
        this.debounceRedrawChart();
      }
    },
    computed: {
      asideClass: function asideClass() {
        return "at-".concat(this.aside || "none");
      },
      hasSlider: function hasSlider() {
        return !1;
      }
    },
    methods: {
      redrawChart: function redrawChart() {
        this.__g2_chart && (this.__g2_chart.destroy(), $(this.$refs.chart).empty()), this.__g2_chart = function () {
          var _ref18 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
              t = _ref18.$refs,
              _ref18$type = _ref18.type,
              e = _ref18$type === void 0 ? "interval" : _ref18$type,
              i = _ref18.unit,
              _ref18$data = _ref18.data,
              n = _ref18$data === void 0 ? [] : _ref18$data,
              a = _ref18.axisX,
              s = _ref18.axisY,
              o = _ref18.color,
              l = _ref18.animate,
              r = _ref18.padding,
              c = _ref18.minValue,
              d = _ref18.maxValue,
              h = _ref18.valueInterval,
              m = _ref18.coord;

          var u = t.chart,
              p = G2.DomUtil.getWidth(u),
              f = G2.DomUtil.getHeight(u);

          if (_.isUndefined(d)) {
            d = 0;
            var _t14 = s.name;

            var _iterator7 = _createForOfIteratorHelper(n),
                _step7;

            try {
              for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
                var _e8 = _step7.value;
                d = Math.max(d, _e8[_t14]);
              }
            } catch (err) {
              _iterator7.e(err);
            } finally {
              _iterator7.f();
            }
          }

          var y = new G2.Chart({
            container: u,
            padding: r,
            width: p,
            height: f
          });
          y.source(n), y.legend(!1);
          var g = {
            label: {
              textStyle: {
                fill: a.color || "#888"
              }
            }
          };
          y.axis(a.name, g);
          var v = {
            label: {
              autoRotate: !1,
              textStyle: {
                fill: s.color || "#888"
              }
            },
            grid: {
              type: "line",
              lineStyle: {
                stroke: "rgba(255,255,255,0.4)",
                lineWidth: .5,
                lineDash: !1
              }
            }
          };
          y.axis(s.name, v), m && "transpose" == m && y.coord().transpose();
          var b = s.title || s.name;
          y.scale(s.name, {
            alias: b,
            type: "linear",
            min: c,
            max: d,
            tickInterval: h
          });
          var T = {
            line: function line() {
              var t = y.line().position(w);
              return y.point().position(w).size(4).shape("circle").style({
                stroke: "#fff",
                lineWidth: 1
              }), t;
            },
            interval: function interval() {
              return y.interval().position(w);
            },
            intervalDodge: function intervalDodge() {
              return y.interval().position(w).adjust([{
                type: "dodge",
                marginRatio: 1 / 32
              }]);
            },
            intervalStack: function intervalStack(t) {
              return y.intervalStack().position(t);
            }
          }[e];

          T = T || function (t) {
            return y.interval().position(t);
          };

          var w = "".concat(a.name, "*").concat(s.name),
              x = T(w);
          return o && x.color(o), l && x.animate(l), y.render(), y;
        }(this);
      },
      drawAll: function drawAll() {
        var _this28 = this;

        this.$nextTick(function () {
          _this28.redrawChart();
        });
      }
    },
    mounted: function mounted() {
      var _this29 = this;

      this.drawAll(), this.debounceRedrawChart = _.debounce(function () {
        _this29.redrawChart();
      }, 500), this.debounceRedrawAll = _.debounce(function () {
        _this29.drawAll();
      }, 500);
    },
    beforeDestroy: function beforeDestroy() {
      this.__g2_chart && this.__g2_chart.destroy();
    }
  };
  Ti.Preload("ti/com/ti/chart/simple/ti-chart-simple.mjs", t);
}(), Ti.Preload("ti/com/ti/chart/simple/_com.json", {
  name: "ti-chart-simple",
  globally: !0,
  template: "./ti-chart-simple.html",
  mixins: ["./ti-chart-simple.mjs"],
  components: [],
  deps: []
}), Ti.Preload("ti/com/ti/color/ti-color.html", '<div class="ti-color" >\n  \x3c!--\n    Color Matrix Table\n  --\x3e\n  <div class="as-table">\n    <table>\n      <thead>\n        <tr>\n          <th v-for="color in colorGrays">\n            <span \n              :style="colorItemStyle(color)" \n              @click="onColorClicked(color)"></span>\n          </th>\n        </tr>\n        <tr>\n            <th v-for="color in colorMajors">\n              <span \n                :style="colorItemStyle(color)" \n                @click="onColorClicked(color)"></span>\n            </th>\n          </tr>\n      </thead>\n      \x3c!--Matrix--\x3e\n      <tbody>\n        <tr v-for="row in colorMatrix"\n          class="as-row">\n          <td v-for="color in row">\n            <span \n              :style="colorItemStyle(color)" \n              @click="onColorClicked(color)"></span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div> \x3c!-- End Matrix--\x3e\n  \x3c!--\n    Color Input\n  --\x3e\n  <div class="as-input">\n    <div class="as-hex">\n        <input class="as-value" \n          spellcheck="false"\n          :value="theHex"\n          @change="onHexChanged"/>\n    </div>\n    <div class="as-alpha">\n      <ti-input-num \n        :value="theAlpha"\n        :max-value="100"\n        :min-value="0"\n        :step="10"\n        @change="onAlphaChanged"/>\n    </div>\n  </div>\n  \x3c!--\n    Color Preview\n  --\x3e\n  <div class="as-preview">\n    <span>{{theColorValue}}</span>\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      value: {
        type: [String, Number],
        "default": null
      },
      majorColors: {
        type: Array,
        "default": function _default() {
          return ["#980000", "#ff0000", "#ff9900", "#ffff00", "#00ff00", "#00ffff", "#4a86e8", "#0000ff", "#9900ff", "#ff00ff"];
        }
      },
      topColors: {
        type: Array,
        "default": function _default() {
          return ["#e6b8af", "#f4cccc", "#fce5cd", "#fff2cc", "#d9ead3", "#d0e0e3", "#c9daf8", "#cfe2f3", "#d9d2e9", "#ead1dc"];
        }
      },
      bottomColors: {
        type: Array,
        "default": function _default() {
          return ["#5b0f00", "#660000", "#783f04", "#7f6000", "#274e13", "#0c343d", "#1c4587", "#073763", "#20124d", "#4c1130"];
        }
      },
      middleDegree: {
        type: Number,
        "default": 5
      }
    },
    computed: {
      theColor: function theColor() {
        return Ti.Types.toColor(this.value, null);
      },
      theHex: function theHex() {
        if (this.theColor) return this.theColor.hex;
      },
      theAlpha: function theAlpha() {
        if (this.theColor) return Math.round(100 * this.theColor.alpha);
      },
      theColorValue: function theColorValue() {
        return this.theColor ? this.theColor.rgba : Ti.I18n.get("empty");
      },
      colCount: function colCount() {
        return this.topColors.length;
      },
      colorGrays: function colorGrays() {
        var t = [],
            e = 255 / this.colCount;

        for (var i = 0; i < this.colCount; i++) {
          var n = Math.round((i + 1) * e);
          t.push(Ti.Types.toColor(n));
        }

        return t;
      },
      colorMajors: function colorMajors() {
        var t = [];

        var _iterator8 = _createForOfIteratorHelper(this.majorColors),
            _step8;

        try {
          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
            var e = _step8.value;
            t.push(Ti.Types.toColor(e));
          }
        } catch (err) {
          _iterator8.e(err);
        } finally {
          _iterator8.f();
        }

        return t;
      },
      colorMatrix: function colorMatrix() {
        var t = [];

        var _iterator9 = _createForOfIteratorHelper(this.topColors),
            _step9;

        try {
          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
            var _e9 = _step9.value;
            t.push(Ti.Types.toColor(_e9));
          }
        } catch (err) {
          _iterator9.e(err);
        } finally {
          _iterator9.f();
        }

        var e = [];

        var _iterator10 = _createForOfIteratorHelper(this.bottomColors),
            _step10;

        try {
          for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
            var _t15 = _step10.value;
            e.push(Ti.Types.toColor(_t15));
          }
        } catch (err) {
          _iterator10.e(err);
        } finally {
          _iterator10.f();
        }

        var i = [t];

        for (var n = 0; n < this.middleDegree - 1; n++) {
          var a = [];

          for (var _i4 = 0; _i4 < this.colCount; _i4++) {
            var s = t[_i4],
                o = e[_i4],
                l = (n + 1) / this.middleDegree,
                r = s.between(o, l);
            r.adjustByHSL({
              s: .5
            }), a.push(r);
          }

          i.push(a);
        }

        return i.push(e), i;
      }
    },
    methods: {
      colorItemStyle: function colorItemStyle(t) {
        return {
          "background-color": t.rgb
        };
      },
      onHexChanged: function onHexChanged(t) {
        var e = _.trim(t.target.value);

        /^[0-9a-f]{3,6}$/i.test(e) && (e = "#" + e);
        var i = Ti.Types.toColor(e);
        this.$notify("change", i);
      },
      onAlphaChanged: function onAlphaChanged(t) {
        var e = this.theColor ? this.theColor.clone() : Ti.Types.toColor("black");
        e.alpha = t / 100, this.$notify("change", e);
      },
      onColorClicked: function onColorClicked(t) {
        var e = t.clone();
        _.isNumber(this.theAlpha) && (e.alpha = this.theAlpha / 100), this.$notify("change", e);
      }
    }
  };
  Ti.Preload("ti/com/ti/color/ti-color.mjs", t);
}(), Ti.Preload("ti/com/ti/color/_com.json", {
  name: "ti-color",
  globally: !0,
  template: "./ti-color.html",
  mixins: ["./ti-color.mjs"]
}), Ti.Preload("ti/com/ti/combo/box/ti-combo-box.html", '<div class="ti-combo-box" \n  :class="topClass"\n  :style="topStyle">\n  \x3c!--\n    Box: Component\n  --\x3e\n  <div class="as-box" ref="box" :style="theBoxStyle">\n    <slot name="box"><div>ComboBox</div></slot>\n  </div>\n  \x3c!--\n    Mask & Drop\n  --\x3e\n  <template v-if="\'extended\'==status">\n    \x3c!--Mask--\x3e\n    <div class="as-mask" @click.left="notifyCollapse()"></div>\n    \x3c!--Drop--\x3e\n    <div class="as-drop" ref="drop" :style="theDropStyle">\n      <slot name="drop"><div>ComboBox Dropdown</div></slot>\n    </div>\n  </template>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        box: {
          position: null,
          width: null,
          height: null,
          top: null,
          left: null
        },
        myDropDockReady: !1
      };
    },
    props: {
      width: {
        type: [Number, String],
        "default": null
      },
      height: {
        type: [Number, String],
        "default": null
      },
      dropFloat: {
        type: Boolean,
        "default": !0
      },
      dropWidth: {
        type: [Number, String],
        "default": "box"
      },
      dropHeight: {
        type: [Number, String],
        "default": null
      },
      dropOverflow: {
        type: [String, Array],
        "default": "auto",
        validator: function validator(t) {
          if (Ti.Util.isNil(t)) return !0;

          if (_.isString(t) && (t = t.split(" ")), _.isArray(t)) {
            if (t.length > 2 || 0 == t.length) return !1;

            var _iterator11 = _createForOfIteratorHelper(t),
                _step11;

            try {
              for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
                var e = _step11.value;
                if (!/^(auto|hidden|visible|scroll)$/.test(e)) return !1;
              }
            } catch (err) {
              _iterator11.e(err);
            } finally {
              _iterator11.f();
            }

            return !0;
          }

          return !1;
        }
      },
      status: {
        type: String,
        "default": "collapse",
        validator: function validator(t) {
          return /^(collapse|extended)$/.test(t);
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return this.getTopClass("is-".concat(this.status));
      },
      topStyle: function topStyle() {
        return Ti.Css.toStyle({
          height: this.box.height
        });
      },
      theBoxStyle: function theBoxStyle() {
        if (this.dropFloat) return Ti.Css.toStyle(this.box);
      },
      theDropStyle: function theDropStyle() {
        return Ti.Css.toStyle({
          overflow: this.dropOverflow,
          visibility: this.myDropDockReady ? "visible" : "hidden"
        });
      }
    },
    methods: {
      notifyCollapse: function notifyCollapse() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
        this.$notify("collapse", {
          escaped: t
        });
      },
      dockDrop: function dockDrop() {
        var _this30 = this;

        var t = this.$refs.drop,
            e = this.$refs.box;

        if (_.isElement(t) && _.isElement(e) && "extended" == this.status) {
          var i = Ti.Rects.createBy(e);

          _.assign(this.box, {
            position: "fixed"
          }, i.raw());

          var n = {};
          "box" == this.dropWidth ? n.width = i.width : Ti.Util.isNil(this.dropWidth) || (this.dropWidth < 0 ? n.width = Math.max(i.width, Math.abs(this.dropWidth)) : n.width = this.dropWidth), Ti.Util.isNil(this.dropHeight) || (n.height = this.dropHeight), Ti.Dom.setStyle(t, Ti.Css.toStyle(n)), this.$nextTick(function () {
            Ti.Dom.dockTo(t, e, {
              space: {
                y: 2
              }
            }), _.delay(function () {
              _this30.myDropDockReady = !0;
            }, 1);
          });
        }
      },
      reDockDrop: function reDockDrop() {
        var _this31 = this;

        this.resetBoxStyle(), this.$nextTick(function () {
          _this31.dockDrop();
        });
      },
      resetBoxStyle: function resetBoxStyle() {
        _.assign(this.box, {
          position: null,
          top: null,
          left: null,
          width: this.width,
          height: this.height
        }), this.myDropDockReady = !1;
      },
      __ti_shortcut: function __ti_shortcut(t) {
        "ESCAPE" == t && this.notifyCollapse(!0);
      }
    },
    watch: {
      status: function status(t) {
        var _this32 = this;

        this.$nextTick(function () {
          "collapse" == t ? _this32.resetBoxStyle() : _this32.dockDrop();
        });
      }
    },
    mounted: function mounted() {
      var _this33 = this;

      this.dropOpened = this.autoOpenDrop, this.box.width = this.width, this.box.height = this.height, this.dockDrop(), Ti.Viewport.watch(this, {
        scroll: function scroll() {
          return _this33.notifyCollapse();
        },
        resize: function resize() {
          return _this33.notifyCollapse();
        }
      });
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Viewport.unwatch(this);
    }
  };
  Ti.Preload("ti/com/ti/combo/box/ti-combo-box.mjs", t);
}(), Ti.Preload("ti/com/ti/combo/box/_com.json", {
  name: "ti-combo-box",
  globally: !0,
  template: "./ti-combo-box.html",
  mixins: ["./ti-combo-box.mjs"]
}), Ti.Preload("ti/com/ti/combo/filter/ti-combo-filter.html", '<div class="ti-combo-filter"\n  :class="TopClass">\n  \x3c!--\n    Marjor type\n  --\x3e\n\n  \x3c!--\n    Filter input box\n  --\x3e\n  <ti-combo-box\n    class="as-filter"\n    :drop-width="dropWidth"\n    :drop-height="dropHeight"\n    :status="myDropStatus"\n    @collapse="OnCollapse"\n    v-ti-activable>\n    \x3c!--\n      Box\n    --\x3e\n    <template v-slot:box>\n      <ti-input \n        v-bind="TheInputProps"\n\n        :value="InputValue"\n        :prefix-icon="ThePrefixIcon"\n        :suffix-icon="TheSuffixIcon"\n\n        @change="OnInputChanged"\n        @input:focus="OnInputFocused"\n        @prefix:icon="$notify(\'prefix:icon\')"\n        @suffix:icon="OnClickStatusIcon"/>\n    </template>\n    \x3c!--\n      Drop\n    --\x3e\n    <template v-slot:drop="slotProps">\n      <ti-form\n        v-bind="form"\n        :data="myFormData"\n        @change="OnFormChange"/>\n    </template>\n  </ti-combo-box>\n  \x3c!--\n    Sorter\n  --\x3e\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myDropStatus: "collapse",
        myFreeValue: null,
        myFormData: {}
      };
    },
    props: {
      form: {
        type: Object,
        "default": null
      },
      autoCollapse: {
        type: Boolean,
        "default": !1
      },
      statusIcons: {
        type: Object,
        "default": function _default() {
          return {
            collapse: "zmdi-chevron-down",
            extended: "zmdi-chevron-up"
          };
        }
      },
      autoFocusExtended: {
        type: Boolean,
        "default": !0
      },
      spacing: {
        type: String,
        "default": "tiny",
        validator: function validator(t) {
          return /^(none|comfy|tiny)$/.test(t);
        }
      },
      dropWidth: {
        type: [Number, String],
        "default": "box"
      },
      dropHeight: {
        type: [Number, String],
        "default": null
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-enabled": this.isFilterEnabled
        }, "as-spacing-".concat(this.spacing));
      },
      isCollapse: function isCollapse() {
        return "collapse" == this.myDropStatus;
      },
      isExtended: function isExtended() {
        return "extended" == this.myDropStatus;
      },
      hasForm: function hasForm() {
        return !_.isEmpty(this.form);
      },
      isFilterEnabled: function isFilterEnabled() {
        return !_.isEmpty(this.myFreeValue) || !_.isEmpty(this.myFormData);
      },
      TheInputProps: function TheInputProps() {
        return _.assign({}, this, {
          autoI18n: this.autoI18n,
          placeholder: this.placeholder
        });
      },
      InputValue: function InputValue() {
        return this.myFreeValue;
      },
      ThePrefixIcon: function ThePrefixIcon() {
        return this.prefixIcon || "im-filter";
      },
      TheSuffixIcon: function TheSuffixIcon() {
        if (this.hasForm) return this.statusIcons[this.myDropStatus];
      }
    },
    methods: {
      OnCollapse: function OnCollapse() {
        this.doCollapse();
      },
      OnInputChanged: function OnInputChanged(t) {
        this.myFreeValue = t, this.myDropStatus = "collapse", Ti.Util.isNil(t) && (this.myFormData = {}), this.tryNotifyChanged();
      },
      OnInputFocused: function OnInputFocused() {
        this.autoFocusExtended && !this.isExtended && this.doExtend();
      },
      OnClickStatusIcon: function OnClickStatusIcon() {
        this.isExtended ? this.doCollapse() : this.doExtend();
      },
      OnFormChange: function OnFormChange(t) {
        this.myFormData = t;
      },
      doExtend: function doExtend() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !0;
        this.hasForm && !this.isExtended && (this.myDropStatus = "extended");
      },
      doCollapse: function doCollapse() {
        var _ref19 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref19$escaped = _ref19.escaped,
            t = _ref19$escaped === void 0 ? !1 : _ref19$escaped;

        this.isCollapse || (t || this.tryNotifyChanged(), this.myDropStatus = "collapse");
      },
      tryNotifyChanged: function tryNotifyChanged() {
        var t = this.genValue();
        _.isEqual(t, this.value) || this.$notify("change", t);
      },
      genValue: function genValue() {
        return {
          keyword: this.myFreeValue,
          match: this.myFormData
        };
      },
      evalMyValue: function evalMyValue() {
        var t = _.assign({}, this.value);

        this.myFreeValue = t.keyword, this.myFormData = t.match;
      },
      __ti_shortcut: function __ti_shortcut(t) {
        if ("ESCAPE" == t) return this.doCollapse({
          escaped: !0
        }), {
          prevent: !0,
          stop: !0,
          quit: !0
        };
        "ARROWDOWN" != t ? "ARROWUP" != t || this.doCollapse() : this.doExtend();
      }
    },
    watch: {
      value: {
        handler: "evalMyValue",
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/ti/combo/filter/ti-combo-filter.mjs", t);
}(), Ti.Preload("ti/com/ti/combo/filter/_com.json", {
  name: "ti-combo-filter",
  globally: !0,
  template: "./ti-combo-filter.html",
  props: "@com:ti/input/ti-input-props.mjs",
  mixins: "./ti-combo-filter.mjs",
  components: ["@com:ti/form", "@com:ti/combo/sorter"]
}), function () {
  var t = {
    options: {
      type: [String, Array, Function, Ti.Dict],
      "default": function _default() {
        return [];
      }
    },
    valueBy: {
      type: [String, Function],
      "default": void 0
    },
    textBy: {
      type: [String, Function],
      "default": void 0
    },
    iconeBy: {
      type: [String, Function],
      "default": void 0
    },
    dropComType: {
      type: String,
      "default": void 0
    },
    dropComConf: {
      type: Object,
      "default": void 0
    },
    mustInList: {
      type: Boolean,
      "default": !1
    },
    autoFocusExtended: {
      type: Boolean,
      "default": !0
    },
    filter: {
      type: Boolean,
      "default": !0
    },
    delay: {
      type: Number,
      "default": 800
    },
    statusIcons: {
      type: Object,
      "default": function _default() {
        return {
          collapse: "zmdi-chevron-down",
          extended: "zmdi-chevron-up"
        };
      }
    },
    dropDisplay: {
      type: [Object, String, Array],
      "default": void 0
    },
    dropItemBorder: {
      type: Boolean,
      "default": !0
    },
    dropWidth: {
      type: [Number, String],
      "default": "box"
    },
    dropHeight: {
      type: [Number, String],
      "default": null
    }
  };
  Ti.Preload("ti/com/ti/combo/input/ti-combo-input-props.mjs", t);
}(), Ti.Preload("ti/com/ti/combo/input/ti-combo-input.html", '<ti-combo-box \n  class="ti-combo-input"\n  :class="TopClass"\n  :drop-width="dropWidth"\n  :drop-height="dropHeight"\n  :status="myDropStatus"\n  @collapse="OnCollapse"\n  v-ti-activable>\n  \x3c!--\n    Box\n  --\x3e\n  <template v-slot:box>\n    <ti-input \n      v-bind="TheInputProps"\n\n      :value="InputValue"\n      :prefix-icon="ThePrefixIcon"\n      :suffix-icon="TheSuffixIcon"\n\n      @change="OnInputChanged"\n      @inputing="OnInputInputing"\n      @input:focus="OnInputFocused"\n      @prefix:icon="$notify(\'prefix:icon\')"\n      @suffix:icon="OnClickStatusIcon"/>\n  </template>\n  \x3c!--\n    Drop\n  --\x3e\n  <template v-slot:drop="slotProps">\n    <component class="ti-fill-parent"\n      :is="DropComType"\n      v-bind="DropComConf"\n\n      :on-init="OnDropListInit"\n      @select="OnDropListSelected"/>\n  </template>\n</ti-combo-box>'), function () {
  var t = {
    data: function data() {
      return {
        myDropStatus: "collapse",
        myItem: null,
        myFreeValue: null,
        myFilterValue: null,
        myOptionsData: [],
        myCurrentId: null,
        myCheckedIds: {},
        myOldValue: void 0,
        loading: !1
      };
    },
    props: {
      canInput: {
        type: Boolean,
        "default": !0
      },
      autoCollapse: {
        type: Boolean,
        "default": !1
      }
    },
    computed: {
      isCollapse: function isCollapse() {
        return "collapse" == this.myDropStatus;
      },
      isExtended: function isExtended() {
        return "extended" == this.myDropStatus;
      },
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TheInputProps: function TheInputProps() {
        return _.assign({}, this, {
          readonly: !this.canInput || this.readonly,
          autoI18n: this.autoI18n,
          placeholder: this.placeholder
        });
      },
      InputValue: function InputValue() {
        return Ti.Util.isNil(this.myFilterValue) ? this.myItem ? this.Dict.getText(this.myItem) || this.Dict.getValue(this.myItem) : this.myFreeValue : this.myFilterValue;
      },
      GetValueBy: function GetValueBy() {
        var _this34 = this;

        return function (t) {
          return _this34.Dict.getValue(t);
        };
      },
      ThePrefixIcon: function ThePrefixIcon() {
        if (this.loading) return "zmdi-settings zmdi-hc-spin";
        var t = this.prefixIcon;
        return this.myItem && (t = this.Dict.getIcon(this.myItem) || t), t || "zmdi-minus";
      },
      TheSuffixIcon: function TheSuffixIcon() {
        return this.statusIcons[this.myDropStatus];
      },
      DropComType: function DropComType() {
        return this.dropComType || "ti-list";
      },
      DropComConf: function DropComConf() {
        return _.assign({
          display: this.dropDisplay || "text",
          border: this.dropItemBorder
        }, this.dropComConf, {
          data: this.myOptionsData,
          currentId: this.myCurrentId,
          checkedIds: this.myCheckedIds,
          idBy: this.GetValueBy,
          multi: !1,
          hoverable: !0,
          checkable: !1,
          autoCheckCurrent: !0
        });
      },
      Dict: function Dict() {
        var _this35 = this;

        if (this.options instanceof Ti.Dict) return this.options;

        if (_.isString(this.options)) {
          var _t16 = Ti.DictFactory.DictReferName(this.options);

          if (_t16) return Ti.DictFactory.CheckDict(_t16, function (_ref20) {
            var t = _ref20.loading;
            _this35.loading = t;
          });
        }

        return Ti.DictFactory.CreateDict({
          data: this.options,
          getValue: Ti.Util.genGetter(this.valueBy || "value"),
          getText: Ti.Util.genGetter(this.textBy || "text|name"),
          getIcon: Ti.Util.genGetter(this.iconBy || "icon")
        });
      }
    },
    methods: {
      OnDropListInit: function OnDropListInit(t) {
        this.$dropList = t;
      },
      OnCollapse: function OnCollapse() {
        this.doCollapse();
      },
      OnInputInputing: function OnInputInputing(t) {
        this.filter && (this.myFilterValue = t, this.autoFocusExtended && (this.isExtended || this.doExtend(!1)), this.isExtended && this.debReload());
      },
      OnInputChanged: function OnInputChanged(t, e) {
        var _this36 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {
          var _e10;

          return regeneratorRuntime.wrap(function _callee16$(_context16) {
            while (1) {
              switch (_context16.prev = _context16.next) {
                case 0:
                  if (!(_this36.myFilterValue = null, t)) {
                    _context16.next = 7;
                    break;
                  }

                  _context16.next = 3;
                  return _this36.Dict.getItem(t);

                case 3:
                  _e10 = _context16.sent;
                  _e10 ? (_this36.myItem = _e10, _this36.myFreeValue = null) : _this36.mustInList || (_this36.myItem = null, _this36.myFreeValue = t);
                  _context16.next = 8;
                  break;

                case 7:
                  _this36.myItem = null, _this36.myFreeValue = null, _this36.myCheckedIds = {}, _this36.myCurrentId = null;

                case 8:
                  e || _this36.tryNotifyChanged();

                case 9:
                case "end":
                  return _context16.stop();
              }
            }
          }, _callee16);
        }))();
      },
      OnInputFocused: function OnInputFocused() {
        var _this37 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {
          return regeneratorRuntime.wrap(function _callee17$(_context17) {
            while (1) {
              switch (_context17.prev = _context17.next) {
                case 0:
                  _context17.t0 = _this37.autoFocusExtended && !_this37.isExtended;

                  if (!_context17.t0) {
                    _context17.next = 4;
                    break;
                  }

                  _context17.next = 4;
                  return _this37.doExtend();

                case 4:
                case "end":
                  return _context17.stop();
              }
            }
          }, _callee17);
        }))();
      },
      OnClickStatusIcon: function OnClickStatusIcon() {
        var _this38 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {
          return regeneratorRuntime.wrap(function _callee18$(_context18) {
            while (1) {
              switch (_context18.prev = _context18.next) {
                case 0:
                  if (!_this38.isExtended) {
                    _context18.next = 5;
                    break;
                  }

                  _context18.next = 3;
                  return _this38.doCollapse();

                case 3:
                  _context18.next = 7;
                  break;

                case 5:
                  _context18.next = 7;
                  return _this38.doExtend();

                case 7:
                case "end":
                  return _context18.stop();
              }
            }
          }, _callee18);
        }))();
      },
      OnDropListSelected: function OnDropListSelected() {
        var _arguments3 = arguments,
            _this39 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {
          var _ref21, t, e;

          return regeneratorRuntime.wrap(function _callee19$(_context19) {
            while (1) {
              switch (_context19.prev = _context19.next) {
                case 0:
                  _ref21 = _arguments3.length > 0 && _arguments3[0] !== undefined ? _arguments3[0] : {}, t = _ref21.currentId, e = _ref21.byKeyboardArrow;
                  _this39.myCurrentId = t;
                  _context19.next = 4;
                  return _this39.OnInputChanged(t, e);

                case 4:
                  _context19.t0 = _this39.autoCollapse && !e;

                  if (!_context19.t0) {
                    _context19.next = 8;
                    break;
                  }

                  _context19.next = 8;
                  return _this39.doCollapse();

                case 8:
                case "end":
                  return _context19.stop();
              }
            }
          }, _callee19);
        }))();
      },
      doExtend: function doExtend() {
        var _arguments4 = arguments,
            _this40 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {
          var t;
          return regeneratorRuntime.wrap(function _callee20$(_context20) {
            while (1) {
              switch (_context20.prev = _context20.next) {
                case 0:
                  t = _arguments4.length > 0 && _arguments4[0] !== undefined ? _arguments4[0] : !0;
                  _this40.myOldValue = _this40.evalMyValue();
                  _context20.t0 = t && _.isEmpty(_this40.myOptionsData);

                  if (!_context20.t0) {
                    _context20.next = 6;
                    break;
                  }

                  _context20.next = 6;
                  return _this40.reloadMyOptionData(!0);

                case 6:
                  _this40.$nextTick(function () {
                    _this40.myDropStatus = "extended";
                  });

                case 7:
                case "end":
                  return _context20.stop();
              }
            }
          }, _callee20);
        }))();
      },
      doCollapse: function doCollapse() {
        var _arguments5 = arguments,
            _this41 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {
          var _ref22, _ref22$escaped, t;

          return regeneratorRuntime.wrap(function _callee21$(_context21) {
            while (1) {
              switch (_context21.prev = _context21.next) {
                case 0:
                  _ref22 = _arguments5.length > 0 && _arguments5[0] !== undefined ? _arguments5[0] : {}, _ref22$escaped = _ref22.escaped, t = _ref22$escaped === void 0 ? !1 : _ref22$escaped;
                  t ? _this41.evalMyItem(_this41.myOldValue) : _this41.tryNotifyChanged(), _this41.myDropStatus = "collapse", _this41.myOldValue = void 0;

                case 2:
                case "end":
                  return _context21.stop();
              }
            }
          }, _callee21);
        }))();
      },
      tryNotifyChanged: function tryNotifyChanged() {
        var t = this.evalMyValue();
        _.isEqual(t, this.value) || this.$notify("change", t);
      },
      evalMyValue: function evalMyValue() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.myItem;
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.myFreeValue;
        return t ? this.Dict.getValue(t) : this.mustInList ? null : e;
      },
      evalMyItem: function evalMyItem() {
        var _arguments6 = arguments,
            _this42 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {
          var t, e, _t17;

          return regeneratorRuntime.wrap(function _callee22$(_context22) {
            while (1) {
              switch (_context22.prev = _context22.next) {
                case 0:
                  t = _arguments6.length > 0 && _arguments6[0] !== undefined ? _arguments6[0] : _this42.value;
                  _context22.next = 3;
                  return _this42.Dict.getItem(t);

                case 3:
                  e = _context22.sent;

                  if (e) {
                    _t17 = _this42.Dict.getValue(e);
                    _this42.myItem = e, _this42.myFreeValue = null, _this42.myCurrentId = _t17, _this42.myCheckedIds = _defineProperty({}, _t17, !0);
                  } else _this42.myItem = null, _this42.myFreeValue = _this42.mustInList ? null : t, _this42.myCurrentId = null, _this42.myCheckedIds = {};

                case 5:
                case "end":
                  return _context22.stop();
              }
            }
          }, _callee22);
        }))();
      },
      reloadMyOptionData: function reloadMyOptionData() {
        var _arguments7 = arguments,
            _this43 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {
          var t;
          return regeneratorRuntime.wrap(function _callee23$(_context23) {
            while (1) {
              switch (_context23.prev = _context23.next) {
                case 0:
                  t = _arguments7.length > 0 && _arguments7[0] !== undefined ? _arguments7[0] : !1;

                  if (!(t || _this43.isExtended)) {
                    _context23.next = 7;
                    break;
                  }

                  _context23.next = 4;
                  return _this43.Dict.queryData(_this43.myFilterValue);

                case 4:
                  _this43.myOptionsData = _context23.sent;
                  _context23.next = 8;
                  break;

                case 7:
                  _this43.myOptionsData = [];

                case 8:
                case "end":
                  return _context23.stop();
              }
            }
          }, _callee23);
        }))();
      },
      __ti_shortcut: function __ti_shortcut(t) {
        return "ESCAPE" == t ? (this.doCollapse({
          escaped: !0
        }), {
          prevent: !0,
          stop: !0,
          quit: !0
        }) : "ENTER" == t && this.$dropList && this.$dropList.isActived ? (this.doCollapse(), {
          stop: !0,
          quit: !0
        }) : "ARROWUP" == t ? (this.$dropList && this.$dropList.selectPrevRow({
          payload: {
            byKeyboardArrow: !0
          }
        }), {
          prevent: !0,
          stop: !0,
          quit: !0
        }) : "ARROWDOWN" == t ? (this.$dropList && this.isExtended ? this.$dropList.selectNextRow({
          payload: {
            byKeyboardArrow: !0
          }
        }) : this.doExtend(), {
          prevent: !0,
          stop: !0,
          quit: !0
        }) : void 0;
      }
    },
    watch: {
      value: {
        handler: "evalMyItem",
        immediate: !0
      }
    },
    created: function created() {
      var _this44 = this;

      this.debReload = _.debounce(function (t) {
        _this44.reloadMyOptionData();
      }, this.delay);
    }
  };
  Ti.Preload("ti/com/ti/combo/input/ti-combo-input.mjs", t);
}(), Ti.Preload("ti/com/ti/combo/input/_com.json", {
  name: "ti-combo-input",
  globally: !0,
  template: "./ti-combo-input.html",
  props: ["@com:ti/input/ti-input-props.mjs", "./ti-combo-input-props.mjs"],
  mixins: "./ti-combo-input.mjs",
  components: ["@com:ti/combo/box"]
}), Ti.Preload("ti/com/ti/combo/multi-input/ti-combo-multi-input.html", '<ti-combo-box \n  class="ti-combo-multi-input"\n  :class="TopClass"\n  :drop-width="dropWidth"\n  :drop-height="dropHeight"\n  :status="myDropStatus"\n  @collapse="OnCollapse"\n  v-ti-activable>\n  \x3c!--\n    Box\n  --\x3e\n  <template v-slot:box>\n    <ti-input-tags\n      :input-value="myFilterValue"\n      :value="InputTagValues"\n      :value-case="valueCase"\n      :trimed="trimed"\n        :max-value-len="maxValueLen"\n        :value-unique="valueUnique"\n        :tag-options="tagOptions"\n        :tag-mapping="tagMapping"\n\n      :readonly="readonly"\n      :focused="focused"\n      :hover="hover"\n      :auto-select="autoSelect"\n        :can-input="canInput"\n        :cancel-tag-bubble="cancelTagBubble"\n\n      :placeholder="placeholder"\n      :hide-border="hideBorder"\n      :prefix-icon="prefixIcon"\n      :prefix-hover-icon="prefixHoverIcon"\n      :prefix-icon-for-clean="prefixIconForClean"\n      :prefix-text="prefixText"\n      :suffix-icon="TheSuffixIcon"\n      :suffix-text="suffixText"\n        :tag-item-icon-by="tagItemIconBy"\n        :tag-item-default-icon="tagItemDefaultIcon"\n        :tag-option-default-icon="tagOptionDefaultIcon"\n      \n      :width="width"\n      :height="height"\n\n      :input-change="OnInputChanged"\n\n      @inputing="OnInputInputing"\n      @input:focus="OnInputFocused"\n      @change="OnTagListChanged"\n      @prefix:icon="$notify(\'prefix:icon\')"\n      @suffix:icon="OnClickStatusIcon"/>\n  </template>\n  \x3c!--\n    Drop\n  --\x3e\n  <template v-slot:drop>\n    <component class="ti-fill-parent"\n      :is="DropComType"\n      v-bind="DropComConf"\n\n      :on-init="OnDropListInit"\n      @select="OnDropListSelected"/>\n  </template>\n</ti-combo-box>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        myDropStatus: "collapse",
        myTags: [],
        myFreeValues: [],
        myFilterValue: null,
        myOptionsData: [],
        myCurrentId: null,
        myCheckedIds: {},
        myOldValue: void 0
      };
    },
    computed: {
      isCollapse: function isCollapse() {
        return "collapse" == this.myDropStatus;
      },
      isExtended: function isExtended() {
        return "extended" == this.myDropStatus;
      },
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      Values: function Values() {
        return Ti.S.toArray(this.value);
      },
      InputTagValues: function InputTagValues() {
        return _.concat(this.myTags, this.myFreeValues);
      },
      GetValueBy: function GetValueBy() {
        var _this45 = this;

        return function (t) {
          return _this45.Dict.getValue(t);
        };
      },
      TheSuffixIcon: function TheSuffixIcon() {
        return this.statusIcons[this.myDropStatus];
      },
      DropComType: function DropComType() {
        return this.dropComType || "ti-list";
      },
      DropComConf: function DropComConf() {
        return _.assign({
          display: this.dropDisplay || "text",
          border: this.dropItemBorder
        }, this.dropComConf, {
          data: this.myOptionsData,
          currentId: this.myCurrentId,
          checkedIds: this.myCheckedIds,
          idBy: this.GetValueBy,
          multi: !0,
          hoverable: !0,
          checkable: !0,
          autoCheckCurrent: !1
        });
      },
      Dict: function Dict() {
        var _this46 = this;

        if (this.options instanceof Ti.Dict) return this.options;

        if (_.isString(this.options)) {
          var _t18 = Ti.DictFactory.DictReferName(this.options);

          if (_t18) return Ti.DictFactory.CheckDict(_t18, function (_ref23) {
            var t = _ref23.loading;
            _this46.loading = t;
          });
        }

        return Ti.DictFactory.CreateDict({
          data: this.options,
          getValue: Ti.Util.genGetter(this.valueBy || "value"),
          getText: Ti.Util.genGetter(this.textBy || "text|name"),
          getIcon: Ti.Util.genGetter(this.iconBy || "icon")
        });
      }
    },
    methods: {
      OnDropListInit: function OnDropListInit(t) {
        this.$dropList = t;
      },
      OnCollapse: function OnCollapse() {
        var _this47 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24() {
          return regeneratorRuntime.wrap(function _callee24$(_context24) {
            while (1) {
              switch (_context24.prev = _context24.next) {
                case 0:
                  _this47.doCollapse();

                case 1:
                case "end":
                  return _context24.stop();
              }
            }
          }, _callee24);
        }))();
      },
      OnInputInputing: function OnInputInputing(t) {
        this.filter && (this.myFilterValue = t, this.debReload());
      },
      OnInputChanged: function OnInputChanged(t) {
        var _this48 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25() {
          var _iterator12, _step12, _e11, e;

          return regeneratorRuntime.wrap(function _callee25$(_context25) {
            while (1) {
              switch (_context25.prev = _context25.next) {
                case 0:
                  if (!(_this48.myFilterValue = null, _this48.valueUnique)) {
                    _context25.next = 20;
                    break;
                  }

                  if (!(_.indexOf(_this48.myFreeValues, t) >= 0)) {
                    _context25.next = 3;
                    break;
                  }

                  return _context25.abrupt("return");

                case 3:
                  _iterator12 = _createForOfIteratorHelper(_this48.myTags);
                  _context25.prev = 4;

                  _iterator12.s();

                case 6:
                  if ((_step12 = _iterator12.n()).done) {
                    _context25.next = 12;
                    break;
                  }

                  _e11 = _step12.value;

                  if (!(_this48.Dict.getValue(_e11) == t)) {
                    _context25.next = 10;
                    break;
                  }

                  return _context25.abrupt("return");

                case 10:
                  _context25.next = 6;
                  break;

                case 12:
                  _context25.next = 17;
                  break;

                case 14:
                  _context25.prev = 14;
                  _context25.t0 = _context25["catch"](4);

                  _iterator12.e(_context25.t0);

                case 17:
                  _context25.prev = 17;

                  _iterator12.f();

                  return _context25.finish(17);

                case 20:
                  _context25.next = 22;
                  return _this48.Dict.getItem(t);

                case 22:
                  e = _context25.sent;
                  e ? _this48.myTags.push(e) : t && !_this48.mustInList && _this48.myFreeValues.push(t), _this48.tryNotifyChanged();

                case 24:
                case "end":
                  return _context25.stop();
              }
            }
          }, _callee25, null, [[4, 14, 17, 20]]);
        }))();
      },
      OnInputFocused: function OnInputFocused() {
        var _this49 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26() {
          return regeneratorRuntime.wrap(function _callee26$(_context26) {
            while (1) {
              switch (_context26.prev = _context26.next) {
                case 0:
                  _context26.t0 = _this49.autoFocusExtended && !_this49.isExtended;

                  if (!_context26.t0) {
                    _context26.next = 4;
                    break;
                  }

                  _context26.next = 4;
                  return _this49.doExtend();

                case 4:
                case "end":
                  return _context26.stop();
              }
            }
          }, _callee26);
        }))();
      },
      OnTagListChanged: function OnTagListChanged() {
        var _arguments8 = arguments,
            _this50 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee27() {
          var t;
          return regeneratorRuntime.wrap(function _callee27$(_context27) {
            while (1) {
              switch (_context27.prev = _context27.next) {
                case 0:
                  t = _arguments8.length > 0 && _arguments8[0] !== undefined ? _arguments8[0] : [];
                  _context27.next = 3;
                  return _this50.evalMyTags(t);

                case 3:
                  _this50.tryNotifyChanged();

                case 4:
                case "end":
                  return _context27.stop();
              }
            }
          }, _callee27);
        }))();
      },
      OnClickStatusIcon: function OnClickStatusIcon() {
        var _this51 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee28() {
          return regeneratorRuntime.wrap(function _callee28$(_context28) {
            while (1) {
              switch (_context28.prev = _context28.next) {
                case 0:
                  if (!_this51.isExtended) {
                    _context28.next = 4;
                    break;
                  }

                  _this51.doCollapse();

                  _context28.next = 6;
                  break;

                case 4:
                  _context28.next = 6;
                  return _this51.doExtend();

                case 6:
                case "end":
                  return _context28.stop();
              }
            }
          }, _callee28);
        }))();
      },
      OnDropListSelected: function OnDropListSelected() {
        var _arguments9 = arguments,
            _this52 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee29() {
          var _ref24, t, e, i;

          return regeneratorRuntime.wrap(function _callee29$(_context29) {
            while (1) {
              switch (_context29.prev = _context29.next) {
                case 0:
                  _ref24 = _arguments9.length > 0 && _arguments9[0] !== undefined ? _arguments9[0] : {}, t = _ref24.currentId, e = _ref24.checkedIds;
                  _this52.myCurrentId = t, _this52.myCheckedIds = e;
                  i = Ti.Util.truthyKeys(e);
                  _context29.next = 5;
                  return _this52.evalMyTags(_.concat(i, _this52.myFreeValues));

                case 5:
                  _this52.tryNotifyChanged();

                case 6:
                case "end":
                  return _context29.stop();
              }
            }
          }, _callee29);
        }))();
      },
      doExtend: function doExtend() {
        var _this53 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee30() {
          return regeneratorRuntime.wrap(function _callee30$(_context30) {
            while (1) {
              switch (_context30.prev = _context30.next) {
                case 0:
                  _this53.myOldValue = _this53.evalMyValues();
                  _context30.t0 = _.isEmpty(_this53.myOptionsData);

                  if (!_context30.t0) {
                    _context30.next = 5;
                    break;
                  }

                  _context30.next = 5;
                  return _this53.reloadMyOptionData(!0);

                case 5:
                  _this53.$nextTick(function () {
                    _this53.myDropStatus = "extended";
                  });

                case 6:
                case "end":
                  return _context30.stop();
              }
            }
          }, _callee30);
        }))();
      },
      doCollapse: function doCollapse() {
        var _ref25 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref25$escaped = _ref25.escaped,
            t = _ref25$escaped === void 0 ? !1 : _ref25$escaped;

        t && this.$notify("change", this.myOldValue), this.myDropStatus = "collapse", this.myOldValue = void 0;
      },
      tryNotifyChanged: function tryNotifyChanged() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
        var e = this.evalMyValues();
        t || _.isEqual(e, this.Values) || this.$notify("change", e);
      },
      evalMyValues: function evalMyValues() {
        var _this54 = this;

        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.myTags;
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.myFreeValues;
        var i = [];
        return _.forEach(t, function (t) {
          var e = _this54.Dict.getValue(t);

          Ti.Util.isNil(e) ? _this54.mustInList || i.push(t) : i.push(e);
        }), this.mustInList || _.isEmpty(e) ? i : _.concat(i, e);
      },
      evalMyTags: function evalMyTags() {
        var _arguments10 = arguments,
            _this55 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee31() {
          var t, e, i, n, _iterator13, _step13, a, _t19;

          return regeneratorRuntime.wrap(function _callee31$(_context31) {
            while (1) {
              switch (_context31.prev = _context31.next) {
                case 0:
                  t = _arguments10.length > 0 && _arguments10[0] !== undefined ? _arguments10[0] : _this55.value;
                  t = Ti.S.toArray(t);
                  e = [], i = {}, n = [];
                  _iterator13 = _createForOfIteratorHelper(t);
                  _context31.prev = 4;

                  _iterator13.s();

                case 6:
                  if ((_step13 = _iterator13.n()).done) {
                    _context31.next = 14;
                    break;
                  }

                  a = _step13.value;
                  _context31.next = 10;
                  return _this55.Dict.getItem(a);

                case 10:
                  _t19 = _context31.sent;
                  _t19 ? (e.push(_t19), i[a] = !0) : n.push(a);

                case 12:
                  _context31.next = 6;
                  break;

                case 14:
                  _context31.next = 19;
                  break;

                case 16:
                  _context31.prev = 16;
                  _context31.t0 = _context31["catch"](4);

                  _iterator13.e(_context31.t0);

                case 19:
                  _context31.prev = 19;

                  _iterator13.f();

                  return _context31.finish(19);

                case 22:
                  _this55.myTags = e, _this55.myFreeValues = n, _this55.myCheckedIds = i;

                case 23:
                case "end":
                  return _context31.stop();
              }
            }
          }, _callee31, null, [[4, 16, 19, 22]]);
        }))();
      },
      reloadMyOptionData: function reloadMyOptionData() {
        var _arguments11 = arguments,
            _this56 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee32() {
          var t;
          return regeneratorRuntime.wrap(function _callee32$(_context32) {
            while (1) {
              switch (_context32.prev = _context32.next) {
                case 0:
                  t = _arguments11.length > 0 && _arguments11[0] !== undefined ? _arguments11[0] : !1;

                  if (!(t || _this56.isExtended)) {
                    _context32.next = 7;
                    break;
                  }

                  _context32.next = 4;
                  return _this56.Dict.queryData(_this56.myFilterValue);

                case 4:
                  _this56.myOptionsData = _context32.sent;
                  _context32.next = 8;
                  break;

                case 7:
                  _this56.myOptionsData = [];

                case 8:
                case "end":
                  return _context32.stop();
              }
            }
          }, _callee32);
        }))();
      },
      __ti_shortcut: function __ti_shortcut(t) {
        return "ESCAPE" == t ? (this.doCollapse({
          escaped: !0
        }), {
          prevent: !0,
          stop: !0,
          quit: !0
        }) : "ENTER" == t && this.$dropList && this.$dropList.isActived ? (this.doCollapse(), {
          stop: !0,
          quit: !0
        }) : "ARROWUP" == t ? (this.$dropList && this.$dropList.selectPrevRow({
          payload: {
            byKeyboardArrow: !0
          }
        }), {
          prevent: !0,
          stop: !0,
          quit: !0
        }) : "ARROWDOWN" == t ? (this.$dropList && this.isExtended ? this.$dropList.selectNextRow({
          payload: {
            byKeyboardArrow: !0
          }
        }) : this.doExtend(), {
          prevent: !0,
          stop: !0,
          quit: !0
        }) : void 0;
      }
    },
    watch: {
      value: {
        handler: "evalMyTags",
        immediate: !0
      }
    },
    created: function created() {
      var _this57 = this;

      this.debReload = _.debounce(function (t) {
        _this57.reloadMyOptionData();
      }, this.delay);
    }
  };
  Ti.Preload("ti/com/ti/combo/multi-input/ti-combo-multi-input.mjs", t);
}(), Ti.Preload("ti/com/ti/combo/multi-input/_com.json", {
  name: "ti-combo-multi-input",
  globally: !0,
  template: "./ti-combo-multi-input.html",
  props: ["@com:ti/input/ti-input-props.mjs", "@com:ti/input/tags/ti-input-tags-props.mjs", "@com:ti/combo/input/ti-combo-input-props.mjs"],
  mixins: ["./ti-combo-multi-input.mjs"],
  components: ["@com:ti/combo/box"]
}), Ti.Preload("ti/com/ti/combo/sorter/ti-combo-sorter.html", '<div class="ti-combo-sorter"\n  :class="TopClass"\n  :style="TopStyle">\n  \x3c!--\n    sorter box\n  --\x3e\n  <ti-combo-box\n    class="as-sorter"\n    :drop-width="dropWidth"\n    :drop-height="dropHeight"\n    :drop-float="false"\n    :status="myDropStatus"\n    @collapse="OnCollapse"\n    v-ti-activable>\n    \x3c!--\n      Box\n    --\x3e\n    <template v-slot:box>\n      \x3c!--\n        Current Sort Box\n      --\x3e\n      <div class="as-sort-box"\n        @click.left="OnClickBox">\n        \x3c!--Sort Icon--\x3e\n        <ti-icon\n          v-if="TheSortIcon"\n          class="as-sort-icon"\n            :value="TheSortIcon"/>\n        \x3c!--Preifx Icon--\x3e\n        <ti-icon \n          v-if="ThePrefixIcon"\n            class="at-prefix"\n            :value="ThePrefixIcon"/>\n        \x3c!--Title--\x3e\n        <div class="as-title">{{SortTitle|i18n}}</div>\n      </div>\n      \x3c!--Status Icon--\x3e\n      <div  \n        v-if="TheSuffixIcon"\n          class="as-sort-btn"\n          @click.left="OnClickSuffixIcon">\n            <ti-icon :value="TheSuffixIcon"/>\n      </div>\n    </template>\n    \x3c!--\n      Drop\n    --\x3e\n    <template v-slot:drop="slotProps">\n      <ti-list\n        id-by="value"\n        :data="myListData"\n        :display="[\'<icon>\', \'text\']"\n        :hoverable="true"\n        :current-id="SortBy"\n        @select="OnDropListSelected"/>\n    </template>\n  </ti-combo-box>\n  \x3c!--\n    Sorter\n  --\x3e\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myDropStatus: "collapse",
        myItem: null,
        isASC: !0,
        myListData: []
      };
    },
    props: {
      placeholder: {
        type: String,
        "default": "i18n:no-title"
      },
      options: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      value: {
        type: Object,
        "default": null
      },
      width: {
        type: [Number, String],
        "default": void 0
      },
      height: {
        type: [Number, String],
        "default": void 0
      },
      dropWidth: {
        type: [Number, String],
        "default": "box"
      },
      dropHeight: {
        type: [Number, String],
        "default": null
      },
      sortIcons: {
        type: Object,
        "default": function _default() {
          return {
            asc: "fas-long-arrow-alt-up",
            desc: "fas-long-arrow-alt-down"
          };
        }
      },
      suffixIcon: {
        type: String,
        "default": "im-menu-list"
      }
    },
    computed: {
      isCollapse: function isCollapse() {
        return "collapse" == this.myDropStatus;
      },
      isExtended: function isExtended() {
        return "extended" == this.myDropStatus;
      },
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TopStyle: function TopStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      SortTitle: function SortTitle() {
        return Ti.Util.getOrPick(this.myItem, "text|value", this.placeholder);
      },
      SortBy: function SortBy() {
        return _.first(_.keys(this.value));
      },
      SortAs: function SortAs() {
        return _.get(this.value, this.SortBy) || 1;
      },
      ThePrefixIcon: function ThePrefixIcon() {
        return _.get(this.myItem, "icon");
      },
      TheSortIcon: function TheSortIcon() {
        return this.isASC ? this.sortIcons.asc : this.sortIcons.desc;
      },
      TheSuffixIcon: function TheSuffixIcon() {
        if (!_.isEmpty(this.myListData) && this.myListData.length > 1) return this.suffixIcon;
      },
      Dict: function Dict() {
        var _this58 = this;

        if (this.options instanceof Ti.Dict) return this.options;

        if (_.isString(this.options)) {
          var _t20 = Ti.DictFactory.DictReferName(this.options);

          if (_t20) return Ti.DictFactory.CheckDict(_t20, function (_ref26) {
            var t = _ref26.loading;
            _this58.loading = t;
          });
        }

        return Ti.DictFactory.CreateDict({
          data: this.options,
          getValue: Ti.Util.genGetter(this.valueBy || "value"),
          getText: Ti.Util.genGetter(this.textBy || "text|name"),
          getIcon: Ti.Util.genGetter(this.iconBy || "icon")
        });
      }
    },
    methods: {
      OnCollapse: function OnCollapse() {
        this.doCollapse();
      },
      OnClickBox: function OnClickBox() {
        this.isASC = !this.isASC, this.tryNotifyChanged();
      },
      OnClickSuffixIcon: function OnClickSuffixIcon() {
        this.isExtended ? this.doCollapse() : this.doExtend();
      },
      OnDropListSelected: function OnDropListSelected() {
        var _ref27 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref27.current;

        this.myItem = t, this.doCollapse();
      },
      doExtend: function doExtend() {
        this.myDropStatus = "extended";
      },
      doCollapse: function doCollapse() {
        var _ref28 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref28$escaped = _ref28.escaped,
            t = _ref28$escaped === void 0 ? !1 : _ref28$escaped;

        this.myDropStatus = "collapse", t || this.tryNotifyChanged();
      },
      tryNotifyChanged: function tryNotifyChanged() {
        var t = this.genValue();
        _.isEqual(t, this.value) || this.$notify("change", t);
      },
      genValue: function genValue() {
        return _defineProperty({}, _.get(this.myItem, "value"), this.isASC ? 1 : -1);
      },
      evalMyValue: function evalMyValue() {
        var _this59 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee33() {
          var t, _e12, e;

          return regeneratorRuntime.wrap(function _callee33$(_context33) {
            while (1) {
              switch (_context33.prev = _context33.next) {
                case 0:
                  t = {
                    by: null,
                    as: 1
                  };

                  if (_.isString(_this59.value)) {
                    _e12 = _this59.value.split(":");
                    t.by = _.nth(_e12, 0), t.as = "1" == _.nth(_e12, 1) ? 1 : -1;
                  } else _.isArray(_this59.value) ? (t.by = _.nth(_this59.value, 0), t.as = _.nth(_this59.value, 1) > 0 ? 1 : -1) : (t.by = _this59.SortBy, t.as = _this59.SortAs);

                  _context33.next = 4;
                  return _this59.Dict.getItem(t.by);

                case 4:
                  e = _context33.sent;
                  _this59.myItem = e || {
                    text: _this59.text || t.by,
                    value: t.by
                  }, _this59.isASC = 1 == t.as;

                case 6:
                case "end":
                  return _context33.stop();
              }
            }
          }, _callee33);
        }))();
      },
      __ti_shortcut: function __ti_shortcut(t) {
        if ("ESCAPE" == t) return this.doCollapse({
          escaped: !0
        }), {
          prevent: !0,
          stop: !0,
          quit: !0
        };
      }
    },
    watch: {
      value: {
        handler: "evalMyValue",
        immediate: !0
      }
    },
    mounted: function () {
      var _mounted = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee34() {
        return regeneratorRuntime.wrap(function _callee34$(_context34) {
          while (1) {
            switch (_context34.prev = _context34.next) {
              case 0:
                _context34.next = 2;
                return this.Dict.getData();

              case 2:
                this.myListData = _context34.sent;

              case 3:
              case "end":
                return _context34.stop();
            }
          }
        }, _callee34, this);
      }));

      function mounted() {
        return _mounted.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/ti/combo/sorter/ti-combo-sorter.mjs", t);
}(), Ti.Preload("ti/com/ti/combo/sorter/_com.json", {
  name: "ti-combo-sorter",
  globally: !0,
  template: "./ti-combo-sorter.html",
  mixins: "./ti-combo-sorter.mjs",
  components: ["@com:ti/combo/box"]
}), Ti.Preload("ti/com/ti/crumb/com/crumb-item/crumb-item.html", '<div class="ti-crumb-item" \n  :class="topClass"\n  @click.left="onClickTop">\n  \x3c!--\n    Icon\n  --\x3e\n  <ti-icon v-if="icon" \n    class="as-icon"\n    :value="icon"/>\n  \x3c!--\n    Text\n  --\x3e\n  <template v-if="text">\n    <a v-if="href"\n      class="as-text"\n      @click.prevent\n      :href="href"\n      :class="textClass">{{text|i18n}}</a>\n    <span v-else\n      class="as-text"\n      :class="textClass">{{text|i18n}}</span>\n  </template>\n  \x3c!--\n    Asterisk\n  --\x3e\n  <span v-if="asterisk"\n    class="as-asterisk"\n    ></span>\n  \x3c!--\n    Path Icon\n  --\x3e\n  <ti-icon v-if="!atLast"\n    class="as-path-icon"\n    :value="pathIcon"/>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      index: {
        type: Number,
        "default": -1
      },
      atLast: {
        type: Boolean,
        "default": !1
      },
      icon: {
        type: [String, Object],
        "default": null
      },
      text: {
        type: String,
        "default": null
      },
      href: {
        type: String,
        "default": null
      },
      value: {
        type: [String, Number, Boolean, Object],
        "default": null
      },
      pathIcon: {
        type: String,
        "default": null
      },
      asterisk: {
        type: Boolean,
        "default": !1
      },
      cancelBubble: {
        type: Boolean,
        "default": !0
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName({
          "at-tail": this.atLast,
          "at-path": !this.atLast,
          "is-asterisk": this.asterisk
        }, this.className);
      },
      textClass: function textClass() {
        return {
          "without-icon": !this.hasIcon && !this.removeIcon
        };
      },
      hasIcon: function hasIcon() {
        return !!this.icon;
      },
      theData: function theData() {
        return {
          index: this.index,
          icon: this.icon,
          text: this.text,
          value: this.value,
          href: this.href,
          atLast: this.atLast,
          asterisk: this.asterisk
        };
      }
    },
    methods: {
      onClickTop: function onClickTop(t) {
        this.hasOptions ? (t.stopPropagation(), this.openDrop()) : this.cancelBubble && t.stopPropagation(), this.href && this.$notify("item:active", this.theData);
      }
    }
  };
  Ti.Preload("ti/com/ti/crumb/com/crumb-item/crumb-item.mjs", t);
}(), Ti.Preload("ti/com/ti/crumb/com/crumb-item/_com.json", {
  name: "crumb-item",
  globally: !1,
  template: "./crumb-item.html",
  mixins: ["./crumb-item.mjs"]
}), Ti.Preload("ti/com/ti/crumb/ti-crumb.html", '<div class="ti-crumb"\n  :class="topClass">\n  \x3c!--\n    Loop items\n  --\x3e\n  <crumb-item v-for="it in theData"\n    :key="it.index"\n    :path-icon="pathIcon"\n    :cancel-bubble="cancelItemBubble"\n    v-bind="it"/>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      data: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      itemIcon: {
        type: String,
        "default": null
      },
      pathIcon: {
        type: String,
        "default": "zmdi-chevron-right"
      },
      cancelItemBubble: {
        type: Boolean,
        "default": !0
      }
    },
    computed: {
      topClass: function topClass() {
        if (this.className) return this.className;
      },
      theData: function theData() {
        var _this60 = this;

        var t = [];
        return _.isArray(this.data) && _.forEach(this.data, function (e, i) {
          t.push(_.assign({
            icon: _this60.itemIcon
          }, e, {
            index: i,
            atLast: i == _this60.data.length - 1
          }));
        }), t;
      },
      theDataValues: function theDataValues() {
        var t = [];

        var _iterator14 = _createForOfIteratorHelper(this.theData),
            _step14;

        try {
          for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {
            var e = _step14.value;
            t.push(Ti.Util.fallback(e.value, null));
          }
        } catch (err) {
          _iterator14.e(err);
        } finally {
          _iterator14.f();
        }

        return t;
      }
    }
  };
  Ti.Preload("ti/com/ti/crumb/ti-crumb.mjs", t);
}(), Ti.Preload("ti/com/ti/crumb/_com.json", {
  name: "ti-crumb",
  globally: !0,
  template: "./ti-crumb.html",
  mixins: ["./ti-crumb.mjs"],
  components: ["./com/crumb-item"]
}), Ti.Preload("ti/com/ti/datetime/ti-datetime.html", '<div class="ti-datetime">\n  \x3c!--Date--\x3e\n  <ti-calendar class="is-date"\n    :value="theDate"\n    :month-format="monthFormat"\n    :begin-year="beginYear"\n    :end-year="endYear"\n    @change="onDateChanged"/>\n  \x3c!--Time--\x3e\n  <div class="is-time">\n    <div class="as-time-text">{{theTimeText}}</div>\n    <div class="as-time-cols">\n      <ti-time\n        :value="theTime"\n        :mode="timeMode"\n        width="100%"\n        height="none"\n        @change="onTimeChanged"/>\n    </div>\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      value: {
        type: [String, Number, Date],
        "default": null
      },
      timeMode: {
        type: String,
        "default": "sec",
        validator: function validator(t) {
          return /^(sec|min|auto)$/.test(t);
        }
      },
      monthFormat: {
        type: String,
        "default": "yyyy-MM"
      },
      beginYear: {
        type: [Number, String],
        "default": 1970
      },
      endYear: {
        type: [Number, String],
        "default": new Date().getFullYear() + 1
      }
    },
    computed: {
      topClass: function topClass() {
        return this.className;
      },
      theDate: function theDate() {
        return Ti.Types.toDate(this.value, null);
      },
      theTime: function theTime() {
        return Ti.Types.toTime(this.theDate);
      },
      theTimeFormat: function theTimeFormat() {
        return {
          sec: "HH:mm:ss",
          min: "HH:mm",
          auto: "auto"
        }[this.timeMode];
      },
      theTimeText: function theTimeText() {
        return this.getTimeText(this.theTime);
      }
    },
    methods: {
      onDateChanged: function onDateChanged(t) {
        this.theDate || new Date();
        var e = Ti.Types.toTime(this.theTime || 0);
        (t = new Date(t)).setHours(e.hours), t.setMinutes(e.minutes), t.setSeconds(e.seconds), t.setMilliseconds(e.milliseconds), this.$notify("change", t);
      },
      onTimeChanged: function onTimeChanged(t) {
        var e = this.theDate || new Date(),
            i = new Date(e);
        i.setHours(t.hours), i.setMinutes(t.minutes), i.setSeconds(t.seconds), i.setMilliseconds(t.milliseconds), this.$notify("change", i);
      },
      getTimeText: function getTimeText(t) {
        if (t instanceof Ti.Types.Time) return t.toString(this.theTimeFormat);
      }
    }
  };
  Ti.Preload("ti/com/ti/datetime/ti-datetime.mjs", t);
}(), Ti.Preload("ti/com/ti/datetime/_com.json", {
  name: "ti-datetime",
  globally: !0,
  template: "./ti-datetime.html",
  mixins: ["./ti-datetime.mjs"],
  components: ["@com:ti/time", "@com:ti/calendar"]
}), Ti.Preload("ti/com/ti/droplist/ti-droplist.html", '<component \n  :is="ComType"\n  v-bind="this"\n  :can-input="false"\n  :must-in-list="true"\n  :auto-collapse="true"\n  @change="$notify(\'change\', $event)"/>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      multi: {
        type: Boolean,
        "default": !1
      }
    },
    computed: {
      ComType: function ComType() {
        return this.multi ? "ti-combo-multi-input" : "ti-combo-input";
      }
    }
  };
  Ti.Preload("ti/com/ti/droplist/ti-droplist.mjs", t);
}(), Ti.Preload("ti/com/ti/droplist/_com.json", {
  name: "ti-droplist",
  globally: !0,
  template: "./ti-droplist.html",
  props: ["@com:ti/input/ti-input-props.mjs", "@com:ti/input/tags/ti-input-tags-props.mjs", "@com:ti/combo/input/ti-combo-input-props.mjs"],
  mixins: ["./ti-droplist.mjs"],
  components: ["@com:ti/combo/input", "@com:ti/combo/multi-input"]
}), function () {
  var t = {
    type: {
      type: String,
      "default": "String"
    },
    disabled: {
      type: Boolean,
      "default": !1
    },
    uniqKey: {
      type: String,
      "default": null
    },
    name: {
      type: [String, Array],
      "default": null
    },
    icon: {
      type: String,
      "default": null
    },
    fieldStatus: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },
    message: {
      type: String,
      "default": null
    },
    title: {
      type: String,
      "default": null
    },
    tip: {
      type: String,
      "default": null
    },
    width: {
      type: [String, Number],
      "default": "stretch"
    },
    height: {
      type: [String, Number],
      "default": void 0
    },
    checkEquals: {
      type: Boolean,
      "default": !0
    },
    undefinedAs: {
      "default": void 0
    },
    nullAs: {
      "default": void 0
    },
    nanAs: {
      type: Number,
      "default": void 0
    },
    emptyAs: {
      type: String,
      "default": void 0
    },
    defaultAs: {
      "default": void 0
    },
    display: {
      type: [String, Object, Boolean],
      "default": !1
    },
    funcSet: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },
    comType: {
      type: String,
      "default": "ti-label"
    },
    comConf: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },
    autoValue: {
      type: String,
      "default": "value"
    },
    serializer: {
      type: Function,
      "default": _.identity
    },
    transformer: {
      type: Function,
      "default": _.identity
    },
    data: {
      type: Object,
      "default": null
    },
    statusIcons: {
      type: Object,
      "default": function _default() {
        return {
          spinning: "fas-spinner fa-spin",
          error: "zmdi-alert-polygon",
          warn: "zmdi-alert-triangle",
          ok: "zmdi-check-circle"
        };
      }
    }
  };
  Ti.Preload("ti/com/ti/form/com/form-field/form-field-props.mjs", t);
}(), Ti.Preload("ti/com/ti/form/com/form-field/form-field.html", '<div class="form-field"\n  :class="TopClass"\n  :style="ConStyle"\n  v-ti-activable>\n  \x3c!--========================================\n    Field Name\n  --\x3e\n  <div \n    v-if="isShowTitle"\n      class="field-name"\n      :title="StatusText">\n        \x3c!--Status Icon--\x3e\n        <span \n          v-if="StatusIcon"\n            class="name-status">\n            <ti-icon :value="StatusIcon"/>\n        </span>\n        \x3c!--Title Text--\x3e\n        <span class="name-title">{{TheTitle|i18n}}</span>\n        \x3c!--Field Icon--\x3e\n        <span \n          v-if="isShowIcon" \n            class="name-icon">\n            <ti-icon :value="icon"/>\n        </span>\n  </div>\n  \x3c!--========================================\n    Field Value\n  --\x3e\n  <div class="field-value"\n    :style="ConStyle">\n    \x3c!--\n      UI Component\n    --\x3e\n    <div v-if="isComReady"\n      class="field-component"\n      :class="ComClass"\n      :style="ComStyle">\n      <component \n        :is="myComType"\n          v-bind="myComConf"\n          @change="OnChange"/>\n    </div>\n    \x3c!--\n      Tips\n    --\x3e\n    <div \n      v-if="isShowTip"\n        class="field-tip">{{tip|i18n}}</div>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        isComReady: !1,
        myComType: null,
        myComConf: null
      };
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "no-status-icons": !this.hasStatusIcons,
          "has-status-icons": this.hasStatusIcons,
          "is-disabled": this.disabled
        }, "as-".concat(this.viewportMode), this.StatusType ? "is-".concat(this.StatusType) : null);
      },
      isShowTitle: function isShowTitle() {
        return !Ti.Util.isNil(this.title);
      },
      isShowIcon: function isShowIcon() {
        return !Ti.Util.isNil(this.icon);
      },
      isShowTip: function isShowTip() {
        return !Ti.Util.isNil(this.tip);
      },
      hasStatusIcons: function hasStatusIcons() {
        return !_.isEmpty(this.statusIcons);
      },
      isNumberType: function isNumberType() {
        return /^(Number|Integer|Float)$/.test(this.type);
      },
      UniqName: function UniqName() {
        return _.isArray(this.name) ? this.name.join("-") : this.name;
      },
      TheTitle: function TheTitle() {
        return this.title || this.UniqName;
      },
      ComClass: function ComClass() {
        var t = "auto" == this.width,
            e = "full" == this.width,
            i = "stretch" == this.width;
        return {
          "is-size-auto": t,
          "is-size-full": e,
          "is-size-stretch": i,
          "is-size-fixed": !(t || e || i || Ti.Util.isNil(this.width))
        };
      },
      ConStyle: function ConStyle() {
        return Ti.Css.toStyle({
          height: this.height
        });
      },
      ComStyle: function ComStyle() {
        var t = {
          height: this.height
        };
        return this.width && !/^(auto|stretch)$/.test(this.width) && (t.width = Ti.Css.toSize(this.width)), Ti.Css.toStyle(t);
      },
      TheDisplay: function TheDisplay() {
        if (this.display) return !_.isBoolean(this.display) && this.display ? this.evalFieldDisplayItem(this.display, {
          funcSet: this.funcSet,
          defaultKey: this.name
        }) : {
          comType: "ti-label",
          comConf: {}
        };
      },
      CurrentDisplayItem: function CurrentDisplayItem() {
        var t = this.TheDisplay || {};
        return !this.isActived && this.display || (t = {
          defaultAs: this.defaultAs,
          comType: this.comType,
          comConf: this.comConf
        }), _.defaults(_.cloneDeep(t), {
          comType: "ti-label",
          key: this.name,
          type: this.type,
          dict: this.dict,
          transformer: this.transformer
        });
      },
      Status: function Status() {
        return _.get(this.fieldStatus, this.uniqKey);
      },
      StatusType: function StatusType() {
        return _.get(this.Status, "type");
      },
      StatusText: function StatusText() {
        return _.get(this.Status, "text");
      },
      StatusIcon: function StatusIcon() {
        if (this.Status && this.hasStatusIcons) return this.statusIcons[this.Status.type];
      }
    },
    methods: {
      __before_bubble: function __before_bubble(_ref30) {
        var t = _ref30.name,
            e = _ref30.args;
        if (this.name) return {
          name: "".concat(this.UniqName, "::").concat(t),
          args: e
        };
      },
      OnChange: function OnChange(t) {
        var e = t;

        try {
          e = this.serializer(t);
        } catch (e) {
          return void this.$notify("invalid", {
            errMessage: "" + e,
            name: this.name,
            value: t
          });
        }

        e = this.evalInputValue(e), this.checkEquals && _.isEqual(e, this.fieldValue) || this.$notify("change", {
          name: this.name,
          value: e
        });
      },
      evalTheCom: function evalTheCom() {
        var _this61 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee35() {
          var t;
          return regeneratorRuntime.wrap(function _callee35$(_context35) {
            while (1) {
              switch (_context35.prev = _context35.next) {
                case 0:
                  _context35.next = 2;
                  return _this61.evalDataForFieldDisplayItem({
                    itemData: _this61.data,
                    displayItem: _this61.CurrentDisplayItem,
                    vars: {
                      isActived: _this61.isActived,
                      disabled: _this61.disabled
                    },
                    autoIgnoreNil: !1,
                    autoValue: _this61.autoValue
                  });

                case 2:
                  t = _context35.sent;
                  _this61.myComType = t.comType, _this61.myComConf = t.comConf, _this61.isComReady = !0;

                case 4:
                case "end":
                  return _context35.stop();
              }
            }
          }, _callee35);
        }))();
      },
      evalInputValue: function evalInputValue(t) {
        return _.isUndefined(t) ? _.cloneDeep(Ti.Util.fallback(this.undefinedAs, this.defaultAs)) : _.isNull(t) ? _.cloneDeep(Ti.Util.fallback(this.nullAs, this.defaultAs, null)) : this.isNumberType && isNaN(t) ? _.cloneDeep(Ti.Util.fallback(this.nanAs, this.defaultAs, NaN)) : _.isEmpty(t) && _.isString(t) ? _.cloneDeep(Ti.Util.fallback(this.emptyAs, this.defaultAs, "")) : t;
      }
    },
    watch: {
      CurrentDisplayItem: "evalTheCom",
      data: {
        handler: "evalTheCom",
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/ti/form/com/form-field/form-field.mjs", t);
}(), Ti.Preload("ti/com/ti/form/com/form-field/_com.json", {
  name: "ti-form-field",
  globally: !0,
  template: "./form-field.html",
  methods: "@com:ti/support/field_display.mjs",
  props: "./form-field-props.mjs",
  mixins: ["./form-field.mjs"]
}), function () {
  var t = {
    type: {
      type: String,
      "default": "Group"
    },
    icon: {
      type: String,
      "default": null
    },
    title: {
      type: String,
      "default": null
    },
    fields: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    data: {
      type: Object,
      "default": null
    },
    fieldStatus: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },
    statusIcons: {
      spinning: "fas-spinner fa-spin",
      error: "zmdi-alert-polygon",
      warn: "zmdi-alert-triangle",
      ok: "zmdi-check-circle"
    }
  };
  Ti.Preload("ti/com/ti/form/com/form-group/form-group-props.mjs", t);
}(), Ti.Preload("ti/com/ti/form/com/form-group/form-group.html", '<div class="form-group"\n  :class="topClass">\n  <div class="group-title">\n    <ti-icon\n      v-if="show.icon" \n      :value="icon"/>\n    <span\n      v-if="show.title"\n      class="name-title">{{title|i18n}}</span>\n  </div>\n  <div class="group-fields">\n      <ti-form-field v-for="fld in fields"\n        :key="fld.key"\n        v-bind="fld"\n        :data="data"\n        :field-status="fieldStatus"\n        :status-icons="statusIcons"/>\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    computed: {
      topClass: function topClass() {
        var t = ["as-".concat(this.viewportMode)];
        return this.className && t.push(this.className), t;
      },
      show: function show() {
        return {
          title: !!this.title,
          icon: !!this.icon
        };
      }
    }
  };
  Ti.Preload("ti/com/ti/form/com/form-group/form-group.mjs", t);
}(), Ti.Preload("ti/com/ti/form/com/form-group/_com.json", {
  name: "form-group",
  globally: !1,
  template: "./form-group.html",
  props: "./form-group-props.mjs",
  mixins: ["./form-group.mjs"]
}), function () {
  var t = {
    data: {
      type: Object,
      "default": void 0
    },
    fields: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    fieldStatus: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },
    onlyFields: {
      type: Boolean,
      "default": !0
    },
    keepTabIndexBy: {
      type: String,
      "default": null
    },
    defaultComType: {
      type: String,
      "default": "ti-label"
    },
    autoShowBlank: {
      type: Boolean,
      "default": void 0
    },
    currentTab: {
      type: Number,
      "default": 0
    },
    adjustDelay: {
      type: Number,
      "default": 0
    },
    mode: {
      type: String,
      "default": "all",
      validator: function validator(t) {
        return /^(all|tab)$/.test(t);
      }
    },
    tabAt: {
      type: String,
      "default": "top-center",
      validator: function validator(t) {
        return /^(top|bottom)-(left|center|right)$/.test(t);
      }
    },
    blankAs: {
      type: Object,
      "default": function _default() {
        return {
          icon: "zmdi-alert-circle-o",
          text: "i18n:empty-data"
        };
      }
    },
    icon: {
      type: String,
      "default": null
    },
    title: {
      type: String,
      "default": null
    },
    statusIcons: {
      type: Object,
      "default": function _default() {
        return {
          spinning: "fas-spinner fa-spin",
          error: "zmdi-alert-polygon",
          warn: "zmdi-alert-triangle",
          ok: "zmdi-check-circle"
        };
      }
    },
    spacing: {
      type: String,
      "default": "comfy",
      validator: function validator(t) {
        return /^(comfy|tiny)$/.test(t);
      }
    },
    width: {
      type: [Number, String],
      "default": null
    },
    height: {
      type: [Number, String],
      "default": null
    }
  };
  Ti.Preload("ti/com/ti/form/ti-form-props.mjs", t);
}(), Ti.Preload("ti/com/ti/form/ti-form.html", '<div class="ti-form"\n  :class="TopClass"\n  :style="TopStyle"\n  v-ti-activable>\n  <template v-if="hasData || !isAutoShowBlank">\n    \x3c!--\n      Form Header\n    --\x3e\n    <header class="form-header" v-if="hasHeader">\n      <span v-if="icon"\n        class="it-icon"><ti-icon :value="icon"/></span>\n      <span v-if="title"\n        class="it-text">{{title}}</span>\n    </header>\n    \x3c!--\n      Tabs for display:"tab"\n    --\x3e\n    <div class="form-tab" v-if="isTabMode">\n      <ul>\n        <li v-for="tab in TabItems" \n          :class="tab.className"\n          @click.left="OnClickTab(tab)">\n          <ti-icon \n            class="tab-icon" v-if="tab.icon" :value="tab.icon"/>\n          <span \n            class="tab-text" v-if="tab.title">{{tab.title|i18n}}</span>\n        </li>\n      </ul>\n    </div>\n    \x3c!--\n      Form Fields\n    --\x3e\n    <div class="form-body">\n      <template v-for="fld in FieldsInCurrentTab">\n        \x3c!--\n          For Group\n        --\x3e\n        <form-group v-if="\'Group\' == fld.type"\n          v-bind="fld"\n          :data="TheData"\n          :field-status="fieldStatus"\n          :status-icons="statusIcons"\n          @change="OnFieldChange"/>\n        \x3c!--\n          For field\n        --\x3e\n        <ti-form-field v-else\n          :key="fld.key"\n          v-bind="fld"\n          :data="TheData"\n          :field-status="fieldStatus"\n          :status-icons="statusIcons"\n          @change="OnFieldChange"/>\n      </template>\n    </div>\n  </template>\n  \x3c!--\n    Show Blank\n  --\x3e\n  <template v-else>\n    <ti-loading v-bind="blankAs"/>\n  </template>\n</div>'), function () {
  var t = {
    model: {
      prop: "data",
      event: "change"
    },
    data: function data() {
      return {
        currentTabIndex: 0
      };
    },
    computed: {
      TopClass: function TopClass() {
        var _this$getTopClass;

        return this.getTopClass((_this$getTopClass = {
          "is-tab-mode": this.isTabMode,
          "is-all-mode": this.isAllMode
        }, _defineProperty(_this$getTopClass, "tab-at-".concat(this.tabAt), this.isTabMode), _defineProperty(_this$getTopClass, "tab-at-".concat(this.TheTabAtX), this.isTabMode), _defineProperty(_this$getTopClass, "tab-at-".concat(this.TheTabAtY), this.isTabMode), _this$getTopClass), "as-".concat(this.viewportMode), "as-spacing-".concat(this.spacing || "comfy"));
      },
      TopStyle: function TopStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      hasHeader: function hasHeader() {
        return !(!this.title && !this.icon);
      },
      hasData: function hasData() {
        return !Ti.Util.isNil(this.data);
      },
      isTabMode: function isTabMode() {
        return "tab" == this.mode;
      },
      isAllMode: function isAllMode() {
        return "all" == (this.mode || "all");
      },
      isAutoShowBlank: function isAutoShowBlank() {
        return Ti.Util.fallback(this.autoShowBlank, !1);
      },
      TheTabAt: function TheTabAt() {
        return this.tabAt.split("-");
      },
      TheTabAtX: function TheTabAtX() {
        return this.TheTabAt[1];
      },
      TheTabAtY: function TheTabAtY() {
        return this.TheTabAt[0];
      },
      TheFields: function TheFields() {
        var _this62 = this;

        var t = [];
        return _.forEach(this.fields, function (e, i) {
          var n = _this62.evalFormField(e, [i]);

          n && t.push(n);
        }), t;
      },
      KeysInFields: function KeysInFields() {
        var t = [];

        var _iterator15 = _createForOfIteratorHelper(this.TheFields),
            _step15;

        try {
          for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {
            var e = _step15.value;
            this.isGroup(e) ? _.forEach(e.fields, function (e) {
              _.isArray(e.name) ? t.push.apply(t, _toConsumableArray(e.name)) : t.push(e.name);
            }) : _.isArray(e.name) ? t.push.apply(t, _toConsumableArray(e.name)) : t.push(e.name);
          }
        } catch (err) {
          _iterator15.e(err);
        } finally {
          _iterator15.f();
        }

        return t;
      },
      TabList: function TabList() {
        var t = [],
            e = [];

        if (this.isTabMode) {
          var _iterator16 = _createForOfIteratorHelper(this.TheFields),
              _step16;

          try {
            for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {
              var i = _step16.value;
              "Group" == i.type ? t.push(i) : e.push(i);
            }
          } catch (err) {
            _iterator16.e(err);
          } finally {
            _iterator16.f();
          }

          _.isEmpty(e) || t.push({
            type: "Group",
            title: "i18n:others",
            fields: e
          });
        }

        return t;
      },
      TabItems: function TabItems() {
        var _this63 = this;

        var t = [];
        return _.forEach(this.TabList, function (e, i) {
          var n = i == _this63.currentTabIndex;
          t.push(_.assign({}, e, {
            index: i,
            isCurrent: n,
            className: {
              "is-current": n
            }
          }));
        }), t;
      },
      CurrentTab: function CurrentTab() {
        var _iterator17 = _createForOfIteratorHelper(this.TabItems),
            _step17;

        try {
          for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {
            var _t21 = _step17.value;
            if (_t21.isCurrent) return _t21;
          }
        } catch (err) {
          _iterator17.e(err);
        } finally {
          _iterator17.f();
        }
      },
      FieldsInCurrentTab: function FieldsInCurrentTab() {
        return this.isTabMode ? this.CurrentTab ? this.CurrentTab.fields || [] : [] : this.TheFields;
      },
      TheData: function TheData() {
        return this.data ? this.onlyFields ? _.pick(this.data, this.KeysInFields) : this.data : {};
      }
    },
    methods: {
      OnClickTab: function OnClickTab(t) {
        this.currentTabIndex = t.index, this.$notify("tab:change", t);
      },
      OnFieldChange: function OnFieldChange() {
        var _ref31 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref31.name,
            e = _ref31.value;

        var i = _.cloneDeep(this.TheData);

        if (_.isString(t)) {
          if (".." == t) _.assign(i, e);else {
            if (/^'[^']+'$/.test(t)) return;

            _.set(i, t, e);
          }
        } else {
          if (!_.isArray(t)) return;
          {
            var n = {};

            var _iterator18 = _createForOfIteratorHelper(t),
                _step18;

            try {
              for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {
                var _i5 = _step18.value;
                n[_i5] = _.get(e, _i5);
              }
            } catch (err) {
              _iterator18.e(err);
            } finally {
              _iterator18.f();
            }

            _.assign(i, n);
          }
        }
        this.$notify("field:change", {
          name: t,
          value: e
        }), this.$notify("change", i);
      },
      isGroup: function isGroup(t) {
        return "Group" == t.type || _.isArray(t.fields);
      },
      evalFormField: function evalFormField() {
        var _this64 = this;

        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        if (t.hidden && Ti.Validate.match(this.data, t.hidden)) return;
        var i = !1;
        t.disabled && (i = Ti.Validate.match(this.data, t.disabled));
        var n = Ti.Util.anyKey(t.name || e, "ti-fld");

        if (this.isGroup(t)) {
          var a = {
            disabled: i,
            type: "Group",
            key: n,
            className: t.className,
            icon: t.icon,
            title: t.title,
            fields: []
          };
          return _.forEach(t.fields, function (t, i) {
            var n = _this64.evalFormField(t, [].concat(_toConsumableArray(e), [i]));

            n && a.fields.push(n);
          }), _.isEmpty(a.fields) ? null : a;
        }

        if (t.name) {
          var _e13 = _.defaults(_.omit(t, "disabled"), {
            type: "String",
            comType: this.defaultComType,
            disabled: i
          });

          if (_e13.uniqKey = _.concat(_e13.name).join("-"), !_e13.serializer) {
            var _t22 = Ti.Types.getFuncByType(_e13.type || "String", "serializer");

            _e13.serializer = "Ti.Types.".concat(_t22);
          }

          if (!_e13.transformer) {
            var _t23 = Ti.Types.getFuncByType(_e13.type || "String", "transformer");

            _e13.transformer = "Ti.Types.".concat(_t23);
          }

          var _n7 = {
            context: this,
            partialRight: !0
          };
          return _e13.serializer = Ti.Util.genInvoking(_e13.serializer, _n7), _e13.transformer = Ti.Util.genInvoking(_e13.transformer, _n7), _e13;
        }
      },
      __adjust_fields_width: function __adjust_fields_width() {
        if (!_.isElement(this.$el)) return;
        var t = Ti.Dom.findAll(".form-field > .field-name", this.$el);

        var _iterator19 = _createForOfIteratorHelper(t),
            _step19;

        try {
          for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {
            var _e14 = _step19.value;
            Ti.Dom.setStyle(_e14, {
              width: ""
            });
          }
        } catch (err) {
          _iterator19.e(err);
        } finally {
          _iterator19.f();
        }

        var e = 0;

        var _iterator20 = _createForOfIteratorHelper(t),
            _step20;

        try {
          for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {
            var i = _step20.value;

            var _t24 = Ti.Rects.createBy(i);

            e = Math.ceil(Math.max(_t24.width, e));
          }
        } catch (err) {
          _iterator20.e(err);
        } finally {
          _iterator20.f();
        }

        var _iterator21 = _createForOfIteratorHelper(t),
            _step21;

        try {
          for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {
            var _i6 = _step21.value;
            Ti.Dom.setStyle(_i6, {
              width: e
            });
          }
        } catch (err) {
          _iterator21.e(err);
        } finally {
          _iterator21.f();
        }
      },
      adjustFieldsWidth: function adjustFieldsWidth() {
        var _this65 = this;

        this.adjustDelay > 0 ? _.delay(function () {
          _this65.__adjust_fields_width();
        }, this.adjustDelay) : this.$nextTick(function () {
          _this65.__adjust_fields_width();
        });
      }
    },
    watch: {
      TheFields: function TheFields() {
        this.adjustFieldsWidth();
      },
      currentTab: function currentTab(t) {
        this.currentTabIndex = t;
      },
      currentTabIndex: function currentTabIndex(t) {
        this.keepTabIndexBy && Ti.Storage.session.set(this.keepTabIndexBy, t), this.adjustFieldsWidth();
      }
    },
    created: function created() {
      var _this66 = this;

      this.__debounce_adjust_fields_width = _.debounce(function () {
        _this66.__adjust_fields_width();
      }, 500);
    },
    mounted: function mounted() {
      var _this67 = this;

      this.currentTabIndex = Ti.Storage.session.getInt(this.keepTabIndexBy, this.currentTab), Ti.Viewport.watch(this, {
        resize: function resize() {
          _this67.__debounce_adjust_fields_width();
        }
      }), this.adjustFieldsWidth();
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Viewport.unwatch(this);
    }
  };
  Ti.Preload("ti/com/ti/form/ti-form.mjs", t);
}(), Ti.Preload("ti/com/ti/form/_com.json", {
  name: "ti-form",
  globally: !0,
  template: "./ti-form.html",
  methods: "@com:ti/support/field_display.mjs",
  props: "./ti-form-props.mjs",
  mixins: ["./ti-form.mjs"],
  components: ["./com/form-group", "./com/form-field", "@com:ti/input", "@com:ti/input/num", "@com:ti/input/tags", "@com:ti/input/color", "@com:ti/input/icon", "@com:ti/input/date", "@com:ti/input/time", "@com:ti/input/timerange", "@com:ti/input/month", "@com:ti/input/datetime", "@com:ti/input/daterange", "@com:ti/input/text", "@com:ti/combo/input", "@com:ti/combo/multi-input", "@com:ti/label", "@com:ti/toggle", "@com:ti/switcher", "@com:ti/droplist"]
}), Ti.Preload("ti/com/ti/form/_hmaker.json", {
  icon: "im-task-o",
  title: "i18n:com-form",
  scenes: ["desktop", "tablet"],
  editComType: "hmaker-edit-com-form",
  editComConf: {
    value: "=comConf"
  }
}), Ti.Preload("ti/com/ti/gui/block/ti-gui-block.html", '<div class="ti-gui-block" \n  :class="TopClass"\n  :style="TopStyle">\n  \x3c!--\n    Header\n  --\x3e\n  <div class="block-head" v-if="isShowHeader">\n    \x3c!--Icon--\x3e\n    <div class="as-icon" v-if="icon">\n      <ti-icon :value="icon"/>\n    </div>\n    \x3c!--Title--\x3e\n    <div class="as-title">\n      <span v-if="title">{{title|i18n}}</span>\n    </div>\n    \x3c!--Actions--\x3e\n    <div class="as-actions" v-if="hasActions">\n      <ti-actionbar \n        :items="actions"\n        :status="actionStatus"/>\n    </div>\n  </div>\n  \x3c!--\n    Content\n  --\x3e\n  <div class="block-main" v-if="TheCom">\n    <div class="block-main-con"\n      :class="MainConClass">\n      <component \n        class="ti-fill-parent"\n        :is="TheCom.comType"\n        v-bind="TheCom.comConf"/>\n    </div>\n  </div>\n  \x3c!--Blank--\x3e\n  </div>'), function () {
  var t = {
    inject: ["$gui"],
    props: {
      type: {
        type: String,
        "default": null,
        validator: function validator(t) {
          return Ti.Util.isNil(t) || /^(cols|rows|tabs)$/.test(t);
        }
      },
      title: {
        type: String,
        "default": null
      },
      icon: {
        type: [String, Object],
        "default": null
      },
      hideTitle: {
        type: Boolean,
        "default": !1
      },
      actions: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      actionStatus: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      name: {
        type: String,
        "default": null
      },
      blocks: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      body: {
        type: [String, Object],
        "default": null
      },
      embedIn: {
        type: String,
        "default": null,
        validator: function validator(t) {
          return /^(panel|rows|cols|tabs)$/.test(t);
        }
      },
      size: {
        type: [String, Number],
        "default": null
      },
      overflow: {
        type: String,
        "default": null
      },
      flex: {
        type: String,
        "default": void 0,
        validator: function validator(t) {
          return _.isUndefined(t) || /^(auto|grow|shrink|both|none)$/.test(t);
        }
      },
      schema: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      shown: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      captureEvents: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      tabAt: void 0,
      adjustable: void 0,
      border: void 0
    },
    computed: {
      TopClass: function TopClass() {
        var _this$getTopClass2;

        return this.getTopClass((_this$getTopClass2 = {}, _defineProperty(_this$getTopClass2, "gui-block-".concat(this.name), !!this.name), _defineProperty(_this$getTopClass2, "is-show-header", this.isShowHeader), _defineProperty(_this$getTopClass2, "is-hide-header", !this.isShowHeader), _defineProperty(_this$getTopClass2, "ti-fill-parent", /^(tabs|panel)$/.test(this.embedIn)), _this$getTopClass2), "is-flex-".concat(this.FlexName));
      },
      TopStyle: function TopStyle() {
        var _this68 = this;

        return Ti.Css.toStyle({
          rows: function rows() {
            return {
              height: _this68.BlockSize
            };
          },
          cols: function cols() {
            return {
              width: _this68.BlockSize
            };
          },
          tabs: function tabs() {
            return {};
          },
          panel: function panel() {
            return {};
          }
        }[this.embedIn]());
      },
      MainConClass: function MainConClass() {
        return {
          "can-flex-none": this.isFlexNone,
          "can-flex-shrink": !this.isFlexNone
        };
      },
      BlockSize: function BlockSize() {
        var t = this.size;
        return /^(auto|stretch)$/.test(t) ? null : t;
      },
      FlexName: function FlexName() {
        var t = this.flex || this.$gui.defaultFlex || "auto";
        return "auto" == t ? "stretch" == this.size || Ti.Util.isNil(this.size) ? "both" : "none" : t || "both";
      },
      isFlexNone: function isFlexNone() {
        return "none" == this.FlexName;
      },
      isShowHeader: function isShowHeader() {
        return !this.hideTitle && "tabs" != this.embedIn && !(!this.title && !this.hasActions);
      },
      hasActions: function hasActions() {
        return !_.isEmpty(this.actions);
      },
      TheCom: function TheCom() {
        if (this.body) {
          var _t25 = _.isString(this.body) ? this.schema[this.body] : this.body;

          if (_t25) {
            var e = this.schema[_t25["extends"]],
                i = _.omit(_t25, "extends");

            return _t25 = _.merge({}, e, i), _.defaults(_t25, {
              comType: "ti-label",
              comConf: {}
            });
          }
        }

        if (!_.isEmpty(this.blocks)) {
          return {
            comType: "ti-gui-".concat(this.type || "cols"),
            comConf: {
              tabAt: this.tabAt,
              border: this.border,
              adjustable: this.adjustable,
              blocks: this.blocks,
              schema: this.schema,
              actionStatus: this.actionStatus,
              shown: this.shown,
              defaultFlex: this.defaultFlex
            }
          };
        }
      }
    },
    methods: {
      __before_bubble: function __before_bubble(_ref32) {
        var t = _ref32.name,
            e = _ref32.args;
        if (this.name) return {
          name: "".concat(this.name, "::").concat(t),
          args: e
        };
      }
    }
  };
  Ti.Preload("ti/com/ti/gui/block/ti-gui-block.mjs", t);
}(), Ti.Preload("ti/com/ti/gui/block/_com.json", {
  name: "ti-gui-block",
  globally: !0,
  template: "./ti-gui-block.html",
  mixins: ["./ti-gui-block.mjs"]
}), Ti.Preload("ti/com/ti/gui/cols/ti-gui-cols.html", '<div class="ti-gui-cols" :class="topClass">\n  <template v-if="hasBlocks">\n    <template v-for="(block, index) in blocks">\n      <ti-gui-block v-if="!block.hide"\n        :key="index"\n        embed-in="cols"\n        v-bind="block"\n        :schema="schema"\n        :action-status="actionStatus"\n        :shown="shown"/>\n      </template>\n  </template>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      blocks: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      adjustable: {
        type: Boolean,
        "default": !0
      },
      border: {
        type: Boolean,
        "default": !1
      },
      schema: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      actionStatus: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      shown: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName({
          "is-adjustable": this.adjustable,
          "show-border": this.border
        }, this.className);
      },
      hasBlocks: function hasBlocks() {
        return !_.isEmpty(this.blocks);
      }
    },
    methods: {}
  };
  Ti.Preload("ti/com/ti/gui/cols/ti-gui-cols.mjs", t);
}(), Ti.Preload("ti/com/ti/gui/cols/_com.json", {
  name: "ti-gui-cols",
  globally: !0,
  template: "./ti-gui-cols.html",
  mixins: ["./ti-gui-cols.mjs"],
  components: ["@com:ti/gui/block"]
}), Ti.Preload("ti/com/ti/gui/panel/ti-gui-panel.html", '<div class="ti-gui-panel"\n  :class="TopClass"\n  @click.left="OnClickMask">\n  <div class="panel-con"\n    :style="ConStyle"\n    @click.left.stop>\n    \x3c!--\n      Block\n    --\x3e\n    <ti-gui-block\n      embed-in="panel"\n      flex="none"\n      :type="type"\n      :title="title"\n      :icon="icon"\n      :hide-title="hideTitle"\n      :actions="actions"\n      :action-status="actionStatus"\n      :name="name"\n      :blocks="blocks"\n      :body="body"\n      :overflow="overflow"\n      :schema="schema"\n      :shown="shown"\n      :capture-events="captureEvents"/>\n    \x3c!--\n      Closer\n    --\x3e\n    <div\n      v-if="hasCloser"\n        class="panel-closer"\n        :class="CloserClass">\n        <ti-icon\n          value="zmdi-close"\n          @click.native="OnClose"/>\n    </div>\n  </div>\n</div>'), function () {
  var t = {
    inject: ["$gui"],
    props: {
      captureEvents: void 0,
      title: {
        type: String,
        "default": null
      },
      icon: {
        type: [String, Object],
        "default": null
      },
      hideTitle: {
        type: Boolean,
        "default": !1
      },
      actions: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      actionStatus: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      name: {
        type: String,
        "default": null
      },
      type: {
        type: String,
        "default": null,
        validator: function validator(t) {
          return Ti.Util.isNil(t) || /^(cols|rows|tabs)$/.test(t);
        }
      },
      blocks: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      body: {
        type: [String, Object],
        "default": null
      },
      adjustable: {
        type: [Boolean, String],
        "default": !0,
        validator: function validator(t) {
          return _.isBoolean(t) || /^(x|y)$/.test(t);
        }
      },
      overflow: {
        type: String,
        "default": null
      },
      width: {
        type: [String, Number],
        "default": -1
      },
      height: {
        type: [String, Number],
        "default": -1
      },
      viewportWidth: {
        type: [String, Number],
        "default": 0
      },
      viewportHeight: {
        type: [String, Number],
        "default": 0
      },
      position: {
        type: String,
        "default": "center",
        validator: function validator(t) {
          return /^(left|right|top|bottom|center)$/.test(t) || /^((left|right)-top|bottom-(left|right))$/.test(t);
        }
      },
      closer: {
        type: String,
        "default": "default",
        validator: function validator(t) {
          return _.isNull(t) || /^(default|bottom|top|left|right)$/.test(t);
        }
      },
      mask: {
        type: Boolean,
        "default": !1
      },
      transparent: {
        type: Boolean,
        "default": !1
      },
      clickMaskToClose: {
        type: Boolean,
        "default": !1
      },
      schema: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      shown: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "show-mask": this.mask,
          "no-mask": !this.mask,
          "is-bg-transparent": this.transparent,
          "is-bg-opaque": !this.transparent,
          "is-closer-default": this.isCloserDefault
        }, "at-".concat(this.position));
      },
      ConStyle: function ConStyle() {
        var t = Ti.Css.toPixel(this.width, this.viewportWidth, this.width),
            e = Ti.Css.toPixel(this.height, this.viewportHeight, this.height);
        return Ti.Css.toStyle({
          width: t,
          height: e
        });
      },
      hasCloser: function hasCloser() {
        return !!this.closer;
      },
      isCloserDefault: function isCloserDefault() {
        return !0 === this.closer || "default" == this.closer;
      },
      CloserClass: function CloserClass() {
        return Ti.Css.mergeClassName(_defineProperty({
          "as-lamp-cord": !this.isCloserDefault,
          "as-default": this.isCloserDefault
        }, "at-".concat(this.closer), !this.isCloserDefault));
      }
    },
    methods: {
      OnClose: function OnClose() {
        this.$gui.onBlockHide(this.name);
      },
      OnClickMask: function OnClickMask() {
        this.clickMaskToClose && this.$gui.onBlockHide(this.name);
      }
    }
  };
  Ti.Preload("ti/com/ti/gui/panel/ti-gui-panel.mjs", t);
}(), Ti.Preload("ti/com/ti/gui/panel/_com.json", {
  name: "ti-gui-panel",
  globally: !0,
  template: "./ti-gui-panel.html",
  mixins: ["./ti-gui-panel.mjs"],
  components: ["@com:ti/gui/block"]
}), Ti.Preload("ti/com/ti/gui/rows/ti-gui-rows.html", '<div class="ti-gui-rows" :class="topClass">\n  <template v-if="hasBlocks">\n    <template v-for="(block, index) in blocks">\n      <ti-gui-block v-if="!block.hide"\n        :key="index"\n        embed-in="rows"\n        v-bind="block"\n        :schema="schema"\n        :action-status="actionStatus"\n        :shown="shown"/>\n    </template>\n  </template>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      blocks: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      adjustable: {
        type: Boolean,
        "default": !0
      },
      border: {
        type: Boolean,
        "default": !1
      },
      schema: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      actionStatus: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      shown: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName({
          "is-adjustable": this.adjustable,
          "show-border": this.border
        }, this.className);
      },
      hasBlocks: function hasBlocks() {
        return !_.isEmpty(this.blocks);
      }
    },
    methods: {}
  };
  Ti.Preload("ti/com/ti/gui/rows/ti-gui-rows.mjs", t);
}(), Ti.Preload("ti/com/ti/gui/rows/_com.json", {
  name: "ti-gui-rows",
  globally: !0,
  template: "./ti-gui-rows.html",
  mixins: ["./ti-gui-rows.mjs"],
  components: ["@com:ti/gui/block"]
}), Ti.Preload("ti/com/ti/gui/tabs/ti-gui-tabs.html", '<div class="ti-gui-tabs" :class="topClass">\n  \x3c!--\n    Tab title bar\n  --\x3e\n  <header :class="tabClass">\n    <ul>\n      <li v-for="it in theTabItems"\n        :key="it.key"\n        :class="it.className"\n        @click="onSetCurrentTabItem(it)">\n        \x3c!--Icon--\x3e\n        <ti-icon\n          v-if="it.icon"\n            class="it-icon"\n            :value="it.icon"/>\n        \x3c!--Text--\x3e\n        <span class="it-text">{{it.title|i18n}}</span>\n      </li>\n    </ul>\n  </header>\n  \x3c!--\n    Current Block\n  --\x3e\n  <section v-if="theCurrentBlock">\n    <ti-gui-block \n      embed-in="tabs"\n      v-bind="theCurrentBlock"\n      :action-status="actionStatus"\n      :schema="schema"\n      :shown="shown"/>\n  </section>\n</div>'), function () {
  var t = {
    inject: ["$gui"],
    data: function data() {
      return {
        myCurrentTab: 0
      };
    },
    props: {
      tabAt: {
        type: String,
        "default": "top-left",
        validator: function validator(t) {
          return /^(top|bottom)-(left|center|right)$/.test(t);
        }
      },
      blocks: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      schema: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      actionStatus: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      shown: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName(["at-".concat(this.theTabAt[0])], this.className);
      },
      theTabAt: function theTabAt() {
        return this.tabAt.split("-");
      },
      tabClass: function tabClass() {
        return "as-".concat(this.theTabAt[1]);
      },
      theSchema: function theSchema() {
        return this.schema;
      },
      theBlockWrapList: function theBlockWrapList() {
        var t = [];

        for (var e = 0; e < this.blocks.length; e++) {
          var i = this.blocks[e],
              n = i.name || "tab-".concat(e);
          t.push({
            index: e,
            key: n,
            block: i
          });
        }

        return t;
      },
      theTabItems: function theTabItems() {
        var t = [];

        var _iterator22 = _createForOfIteratorHelper(this.theBlockWrapList),
            _step22;

        try {
          for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {
            var e = _step22.value;
            var i = this.myCurrentTab == e.key,
                n = {
              current: i,
              key: e.key,
              index: e.index,
              name: e.block.name,
              icon: e.block.icon,
              title: e.block.title,
              className: {
                "is-current": i
              }
            };
            n.icon || n.title || (n.title = Ti.Util.fallback(n.name, n.key)), t.push(n);
          }
        } catch (err) {
          _iterator22.e(err);
        } finally {
          _iterator22.f();
        }

        return t;
      },
      theCurrentTabItem: function theCurrentTabItem() {
        var _iterator23 = _createForOfIteratorHelper(this.theTabItems),
            _step23;

        try {
          for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {
            var _t26 = _step23.value;
            if (_t26.current) return _t26;
          }
        } catch (err) {
          _iterator23.e(err);
        } finally {
          _iterator23.f();
        }
      },
      theCurrentBlock: function theCurrentBlock() {
        var _iterator24 = _createForOfIteratorHelper(this.theBlockWrapList),
            _step24;

        try {
          for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {
            var _t27 = _step24.value;
            if (this.myCurrentTab == _t27.key) return _t27.block;
          }
        } catch (err) {
          _iterator24.e(err);
        } finally {
          _iterator24.f();
        }
      }
    },
    methods: {
      onSetCurrentTabItem: function onSetCurrentTabItem(t) {
        var _this$$gui$onBlockSho;

        this.$gui.onBlockShownUpdate((_this$$gui$onBlockSho = {}, _defineProperty(_this$$gui$onBlockSho, t.key, !0), _defineProperty(_this$$gui$onBlockSho, this.theCurrentTabItem.key, !1), _this$$gui$onBlockSho));
      },
      syncCurrentTabFromShown: function syncCurrentTabFromShown() {
        var _iterator25 = _createForOfIteratorHelper(this.theBlockWrapList),
            _step25;

        try {
          for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {
            var _t28 = _step25.value;
            if (this.shown[_t28.key]) return void (this.myCurrentTab = _t28.key);
          }
        } catch (err) {
          _iterator25.e(err);
        } finally {
          _iterator25.f();
        }

        this.theBlockWrapList.length > 0 && (this.myCurrentTab = this.theBlockWrapList[0].key);
      }
    },
    watch: {
      shown: function shown() {
        this.syncCurrentTabFromShown();
      },
      blocks: function blocks() {
        this.syncCurrentTabFromShown();
      }
    },
    mounted: function mounted() {
      this.syncCurrentTabFromShown();
    }
  };
  Ti.Preload("ti/com/ti/gui/tabs/ti-gui-tabs.mjs", t);
}(), Ti.Preload("ti/com/ti/gui/tabs/_com.json", {
  name: "ti-gui-tabs",
  globally: !0,
  template: "./ti-gui-tabs.html",
  mixins: ["./ti-gui-tabs.mjs"],
  components: ["@com:ti/gui/block"]
}), function () {
  var t = {
    formatGuiBlock: function formatGuiBlock() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
      var n = ["at-".concat(t.position || "center")],
          a = e[t.name];
      _.isUndefined(a) && (a = !i), t.mask ? n.push("show-mask") : n.push("no-mask");
      var s = t.position ? "gui-panel-".concat(t.position) : null,
          o = ["className", "actionDisplayMode", "flex", "icon", "title", "actions", "name", "adjustable", "closer", "position", "overflow", "status"],
          l = {};
      !i || t.mask ? (o.push("width"), o.push("height")) : /^(left|right)$/.test(t.position) ? (o.push("height"), l.width = t.width) : /^(top|bottom)$/.test(t.position) ? (o.push("width"), l.height = t.height) : "center" == t.position ? (o.push("width"), o.push("height")) : (l.width = t.width, l.height = t.height);

      var r = _.pick(t, o);

      t.size && "stretch" != t.size && ("cols" == this.type ? r.width = t.size : "rows" == this.type && (r.height = t.size));
      var c, d;

      if (t.body) {
        var _e15 = t.body || {};

        if (_.isString(_e15)) {
          var _t29 = this.schema[_e15];

          if (_.isPlainObject(_t29)) {
            if ((_e15 = _t29)["extends"]) {
              var _t30 = this.schema[_e15["extends"]],
                  _i7 = _.omit(_e15, ["extends"]);

              _e15 = _.merge({}, _t30, _i7);
            }
          } else _e15 = {
            comType: _e15,
            comConf: {}
          };
        }

        c = _e15.comType || "ti-label", d = _e15.comConf || {
          value: t.name || "GUI"
        };
      } else _.isEmpty(t.blocks) || (c = "ti-gui", d = _.pick(t, ["type", "blocks", "adjustable", "border"]), _.defaults(d, {
        type: "cols",
        schema: this.schema,
        shown: this.shown
      }));

      return {
        className: n.join(" "),
        panelStyle: Ti.Css.toStyle(l),
        name: t.name,
        isShown: a,
        transName: s,
        info: r,
        comType: c,
        comConf: d
      };
    },
    getFormedBlockList: function getFormedBlockList() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
      var n = [];

      if (_.isArray(t)) {
        var _iterator26 = _createForOfIteratorHelper(t),
            _step26;

        try {
          for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {
            var a = _step26.value;

            var _t31 = this.formatGuiBlock(a, e, i);

            n.push(_t31);
          }
        } catch (err) {
          _iterator26.e(err);
        } finally {
          _iterator26.f();
        }
      }

      return n;
    },
    createGuiBlockShown: function createGuiBlockShown() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var e = arguments.length > 1 ? arguments[1] : undefined;
      var i = arguments.length > 2 ? arguments[2] : undefined;

      var n = _objectSpread({}, t);

      if (_.isString(e)) n[e] = i;else if (_.isArray(e)) {
        var _iterator27 = _createForOfIteratorHelper(e),
            _step27;

        try {
          for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {
            var _t32 = _step27.value;
            n[_t32] = i;
          }
        } catch (err) {
          _iterator27.e(err);
        } finally {
          _iterator27.f();
        }
      } else _.isPlainObject(e) && _.assign(n, e);
      return n;
    }
  };
  Ti.Preload("ti/com/ti/gui/ti-gui-methods.mjs", t);
}(), Ti.Preload("ti/com/ti/gui/ti-gui.html", '<div class="ti-gui" :class="TopClass">\n  \x3c!--===========================================\n    All normal layout\n  --\x3e\n  <div class="gui-con">\n    \x3c!--\n      Layout as rows\n    --\x3e\n    <ti-gui-rows v-if="isRowsLayout"\n      class="ti-fill-parent"\n      v-bind="TheLayout"\n      :schema="schema"\n      :shown="TheShown"\n      :default-flex="defaultFlex"\n      :action-status="actionStatus"/>\n    \x3c!--\n      Layout as cols\n    --\x3e\n    <ti-gui-cols v-else-if="isColsLayout"\n      class="ti-fill-parent"\n      v-bind="TheLayout"\n      :schema="schema"\n      :shown="TheShown"\n      :default-flex="defaultFlex"\n      :action-status="actionStatus"/>\n    \x3c!--\n      Layout as tabs\n    --\x3e\n    <ti-gui-tabs v-else-if="isTabsLayout"\n      class="ti-fill-parent"\n      v-bind="TheLayout"\n      :schema="schema"\n      :shown="TheShown"\n      :default-flex="defaultFlex"\n      :action-status="actionStatus"/>\n  </div>\n  \x3c!--===========================================\n    All float panels\n  --\x3e\n  <template v-for="pan in ThePanels">\n    <transition :name="pan.transName">\n      <ti-gui-panel\n        v-if="pan.visible"\n          :key="pan.key"\n          v-bind="pan.panel"\n          :viewport-width="myViewportWidth"\n          :viewport-height="myViewportHeight"\n          :schema="schema"\n          :shown="TheShown"\n          :default-flex="defaultFlex"\n          :action-status="actionStatus"/>\n    </transition>\n  </template>\n  \x3c!--===========================================\n    Loading\n  --\x3e\n  <div v-if="isLoading"\n    class="ti-mask-loading">\n    <ti-loading v-bind="TheLoading"/>\n  </div>\n</div>'), function () {
  var t = {
    provide: function provide() {
      return {
        $gui: this
      };
    },
    data: function data() {
      return {
        myShown: {},
        myViewportWidth: 0,
        myViewportHeight: 0
      };
    },
    props: {
      defaultFlex: {
        type: String,
        "default": void 0,
        validator: function validator(t) {
          return _.isUndefined(t) || /^(auto|grow|shrink|both|none)$/.test(t);
        }
      },
      layout: {
        type: Object,
        "default": function _default() {
          return {
            desktop: {},
            tablet: "desktop",
            phone: "desktop"
          };
        }
      },
      schema: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      keepShownTo: {
        type: String,
        "default": null
      },
      actionStatus: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      shown: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      canLoading: {
        type: Boolean,
        "default": !1
      },
      loadingAs: {
        type: [Boolean, Object],
        "default": null
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-loading": this.isLoading
        });
      },
      TheLayout: function TheLayout() {
        if (_.isEmpty(this.layout)) return {};
        if (/^(rows|cols|tabs)$/.test(this.layout.type)) return this.layout;
        var t = this.layout[this.viewportMode];
        return _.isString(t) && (t = this.layout[t]), _.isString(t) && (t = this.layout[t]), t || {};
      },
      isRowsLayout: function isRowsLayout() {
        return "rows" == this.TheLayout.type;
      },
      isColsLayout: function isColsLayout() {
        return "cols" == this.TheLayout.type;
      },
      isTabsLayout: function isTabsLayout() {
        return "tabs" == this.TheLayout.type;
      },
      ThePanels: function ThePanels() {
        var t = [];
        return this.joinThePanels(t, this.layout.panels, "G"), this.layout != this.TheLayout && this.joinThePanels(t, this.TheLayout.panels, this.viewportMode), t;
      },
      TheShown: function TheShown() {
        return this.keepShownTo ? this.myShown : this.shown;
      },
      isLoading: function isLoading() {
        return !(!this.canLoading || !this.loadingAs);
      },
      TheLoading: function TheLoading() {
        return _.isPlainObject(this.loadingAs) ? this.loadingAs : {};
      }
    },
    methods: {
      isShown: function isShown() {
        for (var _len = arguments.length, t = new Array(_len), _key = 0; _key < _len; _key++) {
          t[_key] = arguments[_key];
        }

        for (var _i8 = 0, _t33 = t; _i8 < _t33.length; _i8++) {
          var e = _t33[_i8];
          if (this.TheShown[e]) return !0;
        }

        return !1;
      },
      joinThePanels: function joinThePanels() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";
        if (_.isArray(e) && e.length > 0) for (var n = 0; n < e.length; n++) {
          var a = e[n],
              s = Ti.Util.fallback(a.position, "center"),
              o = t.length;
          t.push({
            index: o,
            visible: this.isShown(a.name),
            key: a.name || "panel-".concat(i, "-").concat(o),
            transName: "ti-gui-panel-".concat(s),
            panel: a
          });
        }
      },
      updateShown: function updateShown(t) {
        this.syncMyShown(t), this.persistMyStatus();
      },
      onBlockShow: function onBlockShow(t) {
        this.keepShownTo ? this.updateShown(_defineProperty({}, t, !0)) : this.$notify("block:show", t);
      },
      onBlockHide: function onBlockHide(t) {
        this.keepShownTo ? this.updateShown(_defineProperty({}, t, !1)) : this.$notify("block:hide", t);
      },
      onBlockShownUpdate: function onBlockShownUpdate(t) {
        this.keepShownTo ? this.updateShown(t) : this.$notify("block:shown", t);
      },
      syncMyShown: function syncMyShown() {
        var _ref33;

        for (var _len2 = arguments.length, t = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          t[_key2] = arguments[_key2];
        }

        this.keepShownTo && (this.myShown = (_ref33 = _).assign.apply(_ref33, [{}, this.myShown].concat(t)));
      },
      persistMyStatus: function persistMyStatus() {
        if (this.keepShownTo) {
          var _t34 = _.omitBy(this.myShown, function (t) {
            return !t;
          });

          Ti.Storage.session.setObject(this.keepShownTo, _t34);
        }
      },
      loadMyStatus: function loadMyStatus() {
        if (this.keepShownTo) {
          var _t35 = Ti.Storage.session.getObject(this.keepShownTo);

          this.syncMyShown(this.shown, _t35);
        }
      },
      syncViewportMeasure: function syncViewportMeasure() {
        var t = Ti.Rects.createBy(this.$el);
        this.myViewportWidth = t.width, this.myViewportHeight = t.height;
      }
    },
    watch: {
      shown: function shown(t) {
        this.syncMyShown(t);
      }
    },
    mounted: function mounted() {
      var _this69 = this;

      Ti.Viewport.watch(this, {
        resize: _.debounce(function () {
          return _this69.syncViewportMeasure();
        }, 100)
      }), this.syncViewportMeasure(), this.loadMyStatus();
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Viewport.unwatch(this);
    }
  };
  Ti.Preload("ti/com/ti/gui/ti-gui.mjs", t);
}(), Ti.Preload("ti/com/ti/gui/_com.json", {
  name: "ti-gui",
  globally: !0,
  template: "./ti-gui.html",
  methods: "./ti-gui-methods.mjs",
  mixins: ["./ti-gui.mjs"],
  components: ["@com:ti/gui/cols", "@com:ti/gui/rows", "@com:ti/gui/tabs", "@com:ti/gui/panel"]
}), Ti.Preload("ti/com/ti/icon/text/ti-icon-text.html", '<div class="ti-icon-text" \n  :class="className">\n  \x3c!--Icon--\x3e\n  <ti-icon v-if="icon" class="as-icon" :value="icon"/>\n  \x3c!--Text--\x3e\n  <div v-if="text" class="as-text">{{text|i18n}}</div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      icon: {
        type: [String, Object],
        "default": ""
      },
      text: {
        type: String,
        "default": null
      }
    }
  };
  Ti.Preload("ti/com/ti/icon/text/ti-icon-text.mjs", t);
}(), Ti.Preload("ti/com/ti/icon/text/_com.json", {
  name: "ti-icon-text",
  globally: !0,
  template: "./ti-icon-text.html",
  mixins: ["./ti-icon-text.mjs"]
}), Ti.Preload("ti/com/ti/icon/ti-icon.html", '<div \n  class="ti-icon" \n  :class="TopClass">\n  <div class="icon-icon"\n    :style="Icon.outerStyle">\n    \x3c!--Font icon--\x3e\n    <i v-if="\'font\'==Icon.type"\n      :class="Icon.className"\n      :style="Icon.innerStyle">\n      \x3c!--ligature font --\x3e\n      <template v-if="Icon.text">{{Icon.text}}</template>\n    </i>\n    \x3c!--Svg/Image--\x3e\n    <img v-else-if="\'svg\'==Icon.type || \'image\'==Icon.type"\n        :src="Icon.value"\n        :style="Icon.innerStyle"/>\n    \x3c!--\n      Default output the value\n    --\x3e\n    <em v-else>{{value}}</em>\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        myValue: null
      };
    },
    props: {
      base: {
        type: String,
        "default": null
      },
      value: {
        type: [String, Object, Number],
        "default": null
      },
      dict: {
        type: [String, Ti.Dict],
        "default": null
      },
      defaultValue: {
        type: [String, Object],
        "default": null
      },
      fontSize: {
        type: [Number, String],
        "default": null
      },
      width: {
        type: [Number, String],
        "default": null
      },
      height: {
        type: [Number, String],
        "default": null
      },
      color: {
        type: String,
        "default": ""
      },
      opacity: {
        type: Number,
        "default": -1
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass("is-".concat(this.Icon.type));
      },
      Dict: function Dict() {
        if (this.dict) {
          if (this.dict instanceof Ti.Dict) return this.dict;

          var _Ti$DictFactory$expla = Ti.DictFactory.explainDictName(this.dict),
              _t36 = _Ti$DictFactory$expla.name;

          return Ti.DictFactory.CheckDict(_t36);
        }
      },
      Icon: function Icon() {
        var t;

        if (_.isPlainObject(this.myValue) ? t = this.myValue.type && this.myValue.value ? this.myValue : {
          type: "font",
          value: Ti.Icons.get(this.myValue)
        } : (t = {
          type: "font",
          value: this.myValue
        }, _.isString(this.myValue) && (t.type = Ti.Util.getSuffixName(this.myValue) || "font"), /^(jpe?g|gif|png)$/i.test(t.type) && (t.type = "image")), "font" == t.type) {
          var e = Ti.Icons.getByName(t.value, t.value);

          _.assign(t, Ti.Icons.parseFontIcon(e));
        } else "image" == t.type && (Ti.Util.isBlank(this.base) || (t.value = Ti.Util.appendPath(this.base, t.value)));

        return t.outerStyle = Ti.Css.toStyle({
          width: this.width,
          height: this.height,
          color: this.color,
          opacity: this.opacity >= 0 ? this.opacity : void 0
        }), "image" == t.type ? t.innerStyle = {
          width: this.width ? "100%" : void 0,
          height: this.height ? "100%" : void 0
        } : "font" == t.type && (t.innerStyle = {
          "font-size": this.fontSize ? Ti.Css.toSize(this.fontSize) : void 0
        }), t;
      }
    },
    methods: {
      evalMyValue: function evalMyValue() {
        var _this70 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee36() {
          var t;
          return regeneratorRuntime.wrap(function _callee36$(_context36) {
            while (1) {
              switch (_context36.prev = _context36.next) {
                case 0:
                  t = Ti.Util.fallbackNil(_this70.value, _this70.defaultValue);

                  if (!_this70.Dict) {
                    _context36.next = 7;
                    break;
                  }

                  _context36.next = 4;
                  return _this70.Dict.getItemIcon(t);

                case 4:
                  _this70.myValue = _context36.sent;
                  _context36.next = 8;
                  break;

                case 7:
                  _this70.myValue = t;

                case 8:
                case "end":
                  return _context36.stop();
              }
            }
          }, _callee36);
        }))();
      }
    },
    watch: {
      value: {
        handler: "evalMyValue",
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/ti/icon/ti-icon.mjs", t);
}(), Ti.Preload("ti/com/ti/icon/_com.json", {
  name: "ti-icon",
  globally: !0,
  template: "./ti-icon.html",
  mixins: ["./ti-icon.mjs"]
}), Ti.Preload("ti/com/ti/imgfile/ti-imgfile.html", '<div class="ti-imgfile"\n  :class="TopClass">\n  \x3c!--\n    Hidden input file to choose files\n  --\x3e\n  <input \n    type="file" \n    ref="file" \n    class="ti-hide"\n    @change.stop.seft="OnSelectLocalFilesToUpload">\n  \x3c!--\n    Major preview zone\n  --\x3e\n  <div class="thumb-con"\n    :style="ThumbStyle"\n    @click="OnClickToEdit"\n    v-drop-files.mask="OnDropFiles">\n    \x3c!--\n      Preview\n    --\x3e\n    <ti-obj-thumb \n      :preview="PreviewThumb"\n      :progress="progress"\n      :footer="false"/>\n  </div>\n  \x3c!--\n    Remove\n  --\x3e\n  <div v-if="isShowRemoveIcon"\n    class="thumb-actions">\n    \x3c!--remove--\x3e\n    <div class="thumb-opt as-del"\n      @click="OnRemove">\n      <ti-icon value="zmdi-delete"/>\n      <span class="it-text">{{\'clear\'|i18n}}</span>\n    </div>\n    \x3c!--open--\x3e\n    <div class="thumb-opt as-open"\n      @click="OnOpen">\n      <ti-icon value="zmdi-open-in-new"/>\n      <span class="it-text">{{\'open\'|i18n}}</span>\n    </div>\n    \x3c!--//////--\x3e\n  </div>\n</div>'), function () {
  var t = {
    props: {
      src: {
        type: String,
        "default": null
      },
      uploadFile: {
        type: File,
        "default": null
      },
      progress: {
        type: Number,
        "default": -1
      },
      width: {
        type: [String, Number],
        "default": 100
      },
      height: {
        type: [String, Number],
        "default": 100
      },
      removable: {
        type: Boolean,
        "default": !0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      ThumbStyle: function ThumbStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      isShowRemoveIcon: function isShowRemoveIcon() {
        return !(this.uploadFile || !this.src);
      },
      PreviewThumb: function PreviewThumb() {
        return this.uploadFile ? {
          type: "localFile",
          value: this.uploadFile
        } : this.src ? {
          type: "image",
          value: this.src
        } : {
          type: "font",
          value: "zmdi-plus"
        };
      }
    },
    methods: {
      OnClickToEdit: function OnClickToEdit() {
        this.$refs.file.click();
      },
      OnDropFiles: function OnDropFiles(t) {
        var _this71 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee37() {
          var e;
          return regeneratorRuntime.wrap(function _callee37$(_context37) {
            while (1) {
              switch (_context37.prev = _context37.next) {
                case 0:
                  e = _.get(t, 0);
                  e && _this71.$notify("upload", e);

                case 2:
                case "end":
                  return _context37.stop();
              }
            }
          }, _callee37);
        }))();
      },
      OnSelectLocalFilesToUpload: function OnSelectLocalFilesToUpload(t) {
        var _this72 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee38() {
          return regeneratorRuntime.wrap(function _callee38$(_context38) {
            while (1) {
              switch (_context38.prev = _context38.next) {
                case 0:
                  _context38.next = 2;
                  return _this72.OnDropFiles(t.target.files);

                case 2:
                  _this72.$refs.file.value = "";

                case 3:
                case "end":
                  return _context38.stop();
              }
            }
          }, _callee38);
        }))();
      },
      OnRemove: function OnRemove() {
        this.$notify("remove");
      },
      OnOpen: function OnOpen() {
        this.$notify("open");
      }
    }
  };
  Ti.Preload("ti/com/ti/imgfile/ti-imgfile.mjs", t);
}(), Ti.Preload("ti/com/ti/imgfile/_com.json", {
  name: "ti-imgfile",
  globally: !0,
  template: "./ti-imgfile.html",
  mixins: ["./ti-imgfile.mjs"],
  components: ["@com:ti/obj/thumb"]
}), Ti.Preload("ti/com/ti/input/color/ti-input-color.html", '<ti-combo-box class="ti-input-color"\n  :class="topClass"\n  :drop-width="null"\n  :status="status"\n  @collapse="doCollapse">\n  \x3c!--\n    Box\n  --\x3e\n  <template v-slot:box>\n    <span class="as-color"\n      @click.left="onToggleDrop">\n        <u class="as-bg"></u>\n        <u class="as-fr" :style="colorStyle"></u>\n    </span>\n    <span class="as-clear" @click="onClearColor">\n      <ti-icon value="zmdi-close"/>\n    </span>\n  </template>\n  \x3c!--\n    Drop\n  --\x3e\n  <template v-slot:drop>\n    <ti-color \n      :value="value"\n      @change="onColorChanged"/>\n  </template>\n</ti-combo-box>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        hideBorder: !1,
        status: "collapse"
      };
    },
    props: {
      value: {
        type: [String, Number],
        "default": null
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName({
          "is-empty": !this.hasValue,
          "is-valued": this.hasValue,
          "show-border": !this.hideBorder,
          "hide-border": this.hideBorder
        }, this.className);
      },
      colorStyle: function colorStyle() {
        var t = Ti.Types.toColor(this.value, null);
        if (t) return {
          background: t.rgba
        };
      },
      isCollapse: function isCollapse() {
        return "collapse" == this.status;
      },
      isExtended: function isExtended() {
        return "extended" == this.status;
      },
      hasValue: function hasValue() {
        return !Ti.Util.isNil(this.value);
      }
    },
    methods: {
      onToggleDrop: function onToggleDrop() {
        this.status = {
          collapse: "extended",
          extended: "collapse"
        }[this.status];
      },
      onClearColor: function onClearColor() {
        this.$notify("change", null);
      },
      onColorChanged: function onColorChanged(t) {
        var e = Ti.Types.toColor(t);
        this.$notify("change", e ? e.toString() : null);
      },
      doCollapse: function doCollapse() {
        this.status = "collapse";
      }
    }
  };
  Ti.Preload("ti/com/ti/input/color/ti-input-color.mjs", t);
}(), Ti.Preload("ti/com/ti/input/color/_com.json", {
  name: "ti-input-color",
  globally: !0,
  template: "./ti-input-color.html",
  mixins: ["./ti-input-color.mjs"],
  components: ["@com:ti/color"]
}), Ti.Preload("ti/com/ti/input/date/ti-input-date.html", '<ti-combo-box class="as-date"\n  :class="topClass"\n  :width="width"\n  :drop-width="null"\n  :status="status"\n  @collapse="doCollapse">\n  \x3c!--\n    Box\n  --\x3e\n  <template v-slot:box>\n    <ti-input \n      :readonly="!canInput"\n      :hide-border="hideBorder"\n      :placeholder="placeholder|i18n"\n      :prefix-icon="icon"\n      :suffix-icon="theStatusIcon"\n      :value="theInputValue"\n      :height="height"\n      :focus="isExtended"\n      @change="onChanged"\n      @input:focus="onInputFocused"\n      @suffix:icon="onClickStatusIcon"/>\n  </template>\n  \x3c!--\n    Drop\n  --\x3e\n  <template v-slot:drop>\n    <ti-calendar\n      :value="theDropDate"\n      :month-format="monthFormat"\n      :begin-year="beginYear"\n      :end-year="endYear"\n      @change="onDateChanged"/>\n  </template>\n</ti-combo-box>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        runtime: null,
        status: "collapse"
      };
    },
    props: {
      canInput: {
        type: Boolean,
        "default": !0
      },
      value: {
        type: [String, Number, Date],
        "default": null
      },
      icon: {
        type: String,
        "default": "far-calendar-alt"
      },
      format: {
        type: String,
        "default": "yyyy-MM-dd"
      },
      placeholder: {
        type: [String, Number],
        "default": "i18n:blank-date"
      },
      hideBorder: {
        type: Boolean,
        "default": !1
      },
      autoCollapse: {
        type: Boolean,
        "default": !0
      },
      width: {
        type: [Number, String],
        "default": "1.8rem"
      },
      height: {
        type: [Number, String],
        "default": void 0
      },
      monthFormat: {
        type: String,
        "default": "yyyy-MM"
      },
      beginYear: {
        type: [Number, String],
        "default": 1970
      },
      endYear: {
        type: [Number, String],
        "default": new Date().getFullYear() + 1
      },
      statusIcons: {
        type: Object,
        "default": function _default() {
          return {
            collapse: "zmdi-chevron-down",
            extended: "zmdi-chevron-up"
          };
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName(this.className);
      },
      isCollapse: function isCollapse() {
        return "collapse" == this.status;
      },
      isExtended: function isExtended() {
        return "extended" == this.status;
      },
      theDate: function theDate() {
        return Ti.Types.toDate(this.value, null);
      },
      theDropDate: function theDropDate() {
        return this.runtime || this.theDate;
      },
      theInputValue: function theInputValue() {
        return this.isExtended ? this.getDateText(this.theDropDate) : this.getDateText(this.theDropDate, this.format);
      },
      theStatusIcon: function theStatusIcon() {
        return this.statusIcons[this.status];
      }
    },
    methods: {
      applyRuntime: function applyRuntime() {
        if (this.runtime) {
          var _t37 = this.runtime;
          this.runtime = null;
          var e = this.getDateText(_t37);
          this.$notify("change", e);
        }
      },
      doExtend: function doExtend() {
        this.status = "extended";
      },
      doCollapse: function doCollapse() {
        var _ref34 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref34$escaped = _ref34.escaped,
            t = _ref34$escaped === void 0 ? !1 : _ref34$escaped;

        this.status = "collapse", t ? this.runtime = null : this.applyRuntime();
      },
      onInputFocused: function onInputFocused() {
        this.doExtend();
      },
      onChanged: function onChanged(t) {
        if (_.isEmpty(t)) this.$notify("change", null);else {
          var e = Ti.Types.toDate(t),
              i = this.getDateText(e);
          this.$notify("change", i);
        }
      },
      onClickStatusIcon: function onClickStatusIcon() {
        this.isExtended ? this.doCollapse() : this.doExtend();
      },
      onDateChanged: function onDateChanged(t) {
        this.runtime = t, this.autoCollapse && this.doCollapse();
      },
      getDateText: function getDateText(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "yyyy-MM-dd";
        var i = Ti.Types.toDate(t, null);
        return Ti.Types.formatDate(i, e);
      }
    }
  };
  Ti.Preload("ti/com/ti/input/date/ti-input-date.mjs", t);
}(), Ti.Preload("ti/com/ti/input/date/_com.json", {
  name: "ti-input-date",
  globally: !0,
  template: "./ti-input-date.html",
  mixins: ["./ti-input-date.mjs"],
  components: ["@com:ti/combo/input", "@com:ti/calendar"]
}), Ti.Preload("ti/com/ti/input/daterange/ti-input-daterange.html", '<ti-combo-box class="as-daterange"\n  :class="topClass"\n  :drop-width="null"\n  :status="status"\n  @collapse="doCollapse">\n  \x3c!--\n    Box\n  --\x3e\n  <template v-slot:box>\n    <ti-input \n      :readonly="!canInput"\n      :hide-border="hideBorder"\n      :placeholder="placeholder|i18n"\n      :prefix-icon="icon"\n      :suffix-icon="theStatusIcon"\n      :value="theInputValue"\n      :width="width"\n      :height="height"\n      :focus="isExtended"\n      @change="onChanged"\n      @input:focus="onInputFocused"\n      @suffix:icon="onClickStatusIcon"/>\n  </template>\n  \x3c!--\n    Drop\n  --\x3e\n  <template v-slot:drop>\n    <ti-calendar\n      :value="theDropRange"\n      :range="true"\n      :matrix-count="matrixCount"\n      :month-format="monthFormat"\n      :begin-year="beginYear"\n      :end-year="endYear"\n      @change="onDateRangeChanged"/>\n  </template>\n</ti-combo-box>'), function () {
  var t = {
    data: function data() {
      return {
        runtime: null,
        status: "collapse"
      };
    },
    props: {
      canInput: {
        type: Boolean,
        "default": !0
      },
      value: {
        type: [String, Number, Date, Array],
        "default": null
      },
      icon: {
        type: String,
        "default": "fas-calendar-alt"
      },
      format: {
        type: String,
        "default": "yyyy-MM-dd HH:mm:ss"
      },
      valueType: {
        type: String,
        "default": "ms-range",
        validator: function validator(t) {
          return /^(ms-(array|range)|ds-(array|range)|date-array)$/.test(t);
        }
      },
      placeholder: {
        type: String,
        "default": "i18n:blank-date-range"
      },
      hideBorder: {
        type: Boolean,
        "default": !1
      },
      width: {
        type: [Number, String],
        "default": "3rem"
      },
      height: {
        type: [Number, String],
        "default": void 0
      },
      matrixCount: {
        type: Number,
        "default": 2
      },
      monthFormat: {
        type: String,
        "default": "yyyy-MM-dd"
      },
      beginYear: {
        type: [Number, String],
        "default": 1970
      },
      endYear: {
        type: [Number, String],
        "default": new Date().getFullYear() + 1
      },
      statusIcons: {
        type: Object,
        "default": function _default() {
          return {
            collapse: "zmdi-chevron-down",
            extended: "zmdi-chevron-up"
          };
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName(this.className);
      },
      isCollapse: function isCollapse() {
        return "collapse" == this.status;
      },
      isExtended: function isExtended() {
        return "extended" == this.status;
      },
      theValue: function theValue() {
        if (_.isEmpty(this.value)) return null;

        if (_.isString(this.value)) {
          var _t38 = _.trim(this.value),
              e = /^[[(](.+)[\])]$/.exec(_t38);

          e && (_t38 = _.trim(e[1]));
          var i = Ti.S.toArray(_t38, {
            sep: ","
          });
          if (i.length > 0) return Ti.Types.toDate(i);
        }

        return _.isString(this.value) ? Ti.Types.toDate(this.value) : void 0;
      },
      theDate: function theDate() {
        return _.isArray(this.theValue) && !_.isEmpty(this.theValue) ? Ti.Types.toDate(this.theValue[0]) : this.theValue ? Ti.Types.toDate(this.theValue) : void 0;
      },
      theRangeInMs: function theRangeInMs() {
        if (!this.theDate) return [];
        var t,
            e = new Date(this.theDate);
        t = _.isArray(this.theValue) && this.theValue.length > 1 ? Ti.Types.toDate(this.theValue[1]) : new Date(e);
        var i = [e.getTime(), t.getTime()].sort();
        return e = Ti.DateTime.setTime(new Date(i[0])), t = Ti.DateTime.setDayLastTime(new Date(i[1])), [e.getTime(), t.getTime()];
      },
      theRange: function theRange() {
        return _.isEmpty(this.theRangeInMs) ? [] : [new Date(this.theRangeInMs[0]), new Date(this.theRangeInMs[1])];
      },
      theDropRange: function theDropRange() {
        return this.runtime || this.theRange;
      },
      theRangeValue: function theRangeValue() {
        return this.formatRangeValue(this.theRange, {
          valueType: "ds-array",
          format: "yyyy-MM-dd",
          collapse: !0
        }).join(", ");
      },
      theRangeText: function theRangeText() {
        if (!_.isEmpty(this.theRange)) {
          var _t39 = this.theRange[0],
              e = this.theRange[1],
              i = _t39.getFullYear(),
              n = _t39.getMonth(),
              a = _t39.getDate(),
              s = e.getFullYear(),
              o = e.getMonth(),
              l = e.getDate(),
              r = Ti.DateTime.getMonthAbbr(n),
              c = Ti.DateTime.getMonthAbbr(o),
              d = {
            yy0: i,
            yy1: s,
            MM0: ++n,
            MM1: ++o,
            dd0: a,
            dd1: l,
            MA0: r,
            MA1: c,
            MT0: Ti.I18n.get(r),
            MT1: Ti.I18n.get(c)
          };

          return i != s ? Ti.I18n.getf("cal.d-range-beyond-years", d) : n != o ? Ti.I18n.getf("cal.d-range-beyond-months", d) : a != l ? Ti.I18n.getf("cal.d-range-beyond-days", d) : Ti.I18n.getf("cal.d-range-in-same-day", d);
        }
      },
      theInputValue: function theInputValue() {
        return this.isExtended ? this.theRangeValue : this.theRangeText;
      },
      theStatusIcon: function theStatusIcon() {
        return this.statusIcons[this.status];
      }
    },
    methods: {
      applyRuntime: function applyRuntime() {
        if (this.runtime) {
          var _t40 = this.runtime;
          this.runtime = null;
          var e = this.formatRangeValue(_t40);
          this.$notify("change", e);
        }
      },
      doExtend: function doExtend() {
        this.status = "extended";
      },
      doCollapse: function doCollapse() {
        var _ref35 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref35$escaped = _ref35.escaped,
            t = _ref35$escaped === void 0 ? !1 : _ref35$escaped;

        this.status = "collapse", t ? this.runtime = null : this.applyRuntime();
      },
      onInputFocused: function onInputFocused() {
        this.doExtend();
      },
      onChanged: function onChanged(t) {
        var e = this.parseDateRange(t);
        if (_.isEmpty(e)) this.$notify("change", null);else {
          var _t41 = this.formatRangeValue(e);

          this.$notify("change", _t41);
        }
      },
      onClickStatusIcon: function onClickStatusIcon() {
        this.isExtended ? this.doCollapse() : this.doExtend();
      },
      onDateRangeChanged: function onDateRangeChanged(t) {
        this.runtime = t;
      },
      parseDateRange: function parseDateRange(t) {
        if (_.isEmpty(t)) return [];
        var e = t.split(",");
        if (_.isEmpty(e)) return [];

        if (1 == e.length) {
          var _t42 = Ti.Types.toDate(e[0]);

          Ti.DateTime.setTime(_t42);

          var _i9 = new Date(_t42.getTime());

          return Ti.DateTime.setDayLastTime(_i9), [_t42, _i9];
        }

        var i = Ti.Types.toDate(e[0]);
        Ti.DateTime.setTime(i);
        var n = Ti.Types.toDate(e[1]);
        return Ti.DateTime.setDayLastTime(n), [i, n].sort(function (t, e) {
          return t.getTime() - e.getTime();
        });
      },
      formatRangeValue: function formatRangeValue(t) {
        var _ref36 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            e = _ref36.valueType,
            i = _ref36.format,
            _ref36$collapse = _ref36.collapse,
            n = _ref36$collapse === void 0 ? !1 : _ref36$collapse;

        var _ref37 = t || [],
            _ref38 = _slicedToArray(_ref37, 2),
            a = _ref38[0],
            s = _ref38[1];

        if (!a) return [];
        s || (s = new Date(a), Ti.DateTime.setDayLastTime(s)), e = e || this.valueType, i = i || this.format;
        var o = (0, {
          "ms-range": function msRange() {
            return "[".concat(a.getTime(), ",").concat(s.getTime(), "]");
          },
          "ms-array": function msArray() {
            return [a.getTime(), s.getTime()];
          },
          "ds-range": function dsRange() {
            return "[" + [Ti.Types.formatDate(a, i), Ti.Types.formatDate(s, i)].join(",") + "]";
          },
          "ds-array": function dsArray() {
            return [Ti.Types.formatDate(a, i), Ti.Types.formatDate(s, i)];
          },
          "date-array": function dateArray() {
            return [a, s];
          }
        }[e])();
        return n && o[0] == o[1] ? [o[0]] : o;
      }
    }
  };
  Ti.Preload("ti/com/ti/input/daterange/ti-input-daterange.mjs", t);
}(), Ti.Preload("ti/com/ti/input/daterange/_com.json", {
  name: "ti-input-daterange",
  globally: !0,
  template: "./ti-input-daterange.html",
  mixins: ["./ti-input-daterange.mjs"],
  components: ["@com:ti/combo/input", "@com:ti/calendar"]
}), Ti.Preload("ti/com/ti/input/datetime/ti-input-datetime.html", '<ti-combo-box class="as-datetime"\n  :class="topClass"\n  :width="width"\n  :drop-width="\'box\'"\n  :drop-overflow="\'hidden\'"\n  :status="status"\n  @collapse="doCollapse">\n  \x3c!--\n    Box\n  --\x3e\n  <template v-slot:box>\n    <ti-input \n      :readonly="!canInput"\n      :hide-border="hideBorder"\n      :placeholder="placeholder|i18n"\n      :prefix-icon="icon"\n      :suffix-icon="theStatusIcon"\n      :value="theInputValue"\n      :height="height"\n      :focus="isExtended"\n      @change="onChanged"\n      @input:focus="onInputFocused"\n      @suffix:icon="onClickStatusIcon"/>\n  </template>\n  \x3c!--\n    Drop\n  --\x3e\n  <template v-slot:drop>\n    <ti-datetime\n      :value="theDropDate"\n      :month-format="monthFormat"\n      :begin-year="beginYear"\n      :end-year="endYear"\n      @change="onDateChanged"/>\n  </template>\n</ti-combo-box>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        runtime: null,
        status: "collapse"
      };
    },
    props: {
      canInput: {
        type: Boolean,
        "default": !0
      },
      value: {
        type: [String, Number, Date],
        "default": null
      },
      icon: {
        type: String,
        "default": "fas-clock"
      },
      format: {
        type: String,
        "default": "yyyy-MM-dd HH:mm:ss"
      },
      placeholder: {
        type: [String, Number],
        "default": "i18n:blank-datetime"
      },
      hideBorder: {
        type: Boolean,
        "default": !1
      },
      autoCollapse: {
        type: Boolean,
        "default": !1
      },
      width: {
        type: [Number, String],
        "default": "2.4rem"
      },
      height: {
        type: [Number, String],
        "default": void 0
      },
      monthFormat: {
        type: String,
        "default": "yyyy-MM"
      },
      beginYear: {
        type: [Number, String],
        "default": 1970
      },
      endYear: {
        type: [Number, String],
        "default": new Date().getFullYear() + 1
      },
      statusIcons: {
        type: Object,
        "default": function _default() {
          return {
            collapse: "zmdi-chevron-down",
            extended: "zmdi-chevron-up"
          };
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName(this.className);
      },
      isCollapse: function isCollapse() {
        return "collapse" == this.status;
      },
      isExtended: function isExtended() {
        return "extended" == this.status;
      },
      theDate: function theDate() {
        return Ti.Types.toDate(this.value, null);
      },
      theDropDate: function theDropDate() {
        return this.runtime || this.theDate;
      },
      theInputValue: function theInputValue() {
        return this.isExtended ? this.getDateText(this.theDropDate) : this.getDateText(this.theDropDate, this.format);
      },
      theStatusIcon: function theStatusIcon() {
        return this.statusIcons[this.status];
      }
    },
    methods: {
      applyRuntime: function applyRuntime() {
        if (this.runtime) {
          var _t43 = this.runtime;
          this.runtime = null;
          var e = this.getDateText(_t43);
          this.$notify("change", e);
        }
      },
      doExtend: function doExtend() {
        this.status = "extended";
      },
      doCollapse: function doCollapse() {
        var _ref39 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref39$escaped = _ref39.escaped,
            t = _ref39$escaped === void 0 ? !1 : _ref39$escaped;

        this.status = "collapse", t ? this.runtime = null : this.applyRuntime();
      },
      onInputFocused: function onInputFocused() {
        this.doExtend();
      },
      onChanged: function onChanged(t) {
        if (_.isEmpty(t)) this.$notify("change", null);else {
          var e = Ti.Types.toDate(t),
              i = this.getDateText(e);
          this.$notify("change", i);
        }
      },
      onClickStatusIcon: function onClickStatusIcon() {
        this.isExtended ? this.doCollapse() : this.doExtend();
      },
      onDateChanged: function onDateChanged(t) {
        this.runtime = t, this.autoCollapse && this.doCollapse();
      },
      getDateText: function getDateText(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "yyyy-MM-dd HH:mm:ss";
        var i = Ti.Types.toDate(t, null);
        return Ti.Types.formatDate(i, e);
      }
    }
  };
  Ti.Preload("ti/com/ti/input/datetime/ti-input-datetime.mjs", t);
}(), Ti.Preload("ti/com/ti/input/datetime/_com.json", {
  name: "ti-input-datetime",
  globally: !0,
  template: "./ti-input-datetime.html",
  mixins: ["./ti-input-datetime.mjs"],
  components: ["@com:ti/combo/input", "@com:ti/datetime"]
}), function () {
  var t = {
    options: {
      type: Array,
      "default": function _default() {
        return ["im-spotify", "im-newsletter", "im-award", "im-headphones", "im-megaphone", "im-barcode", "im-google-play", "im-facebook-messenger", "im-wechat", "im-line", "im-git", "im-first-aid", "im-ribbon", "im-plane", "im-idea", "im-data", "im-data-delete", "im-data-validate", "im-folder-add", "im-radar", "im-pizza", "im-truck", "im-support", "im-reset", "im-import", "im-export", "im-color-fan", "im-cookie", "im-gift-card", "im-factory", "im-pulse", "im-accessibility", "im-apartment", "im-plugin", "im-layer", "im-direction", "im-dribbble", "im-radio", "im-bank", "im-battery-empty", "im-battery", "im-battery-full", "im-x-mark-circle-o", "im-timer", "im-hashtag", "im-server", "im-flask", "im-anchor", "im-umbrella", "im-cc-amex", "im-cc-visa", "im-cc-mastercard", "im-cc-paypal", "im-cc-amazon", "im-cc-bitcoin", "im-car", "im-paintbrush", "im-cube", "im-cubes", "im-language", "im-calculator", "im-user-settings", "im-trophy", "im-pointer", "im-edit", "im-warning-circle", "im-check-mark-circle-o", "im-date-o", "im-newspaper-o", "im-wrench", "im-binoculars", "im-gamepad", "im-history", "im-bell-active", "im-coffee", "im-leaf", "im-gift", "im-flip-chart-o", "im-clock", "im-line-chart-up", "im-laptop-o", "im-monitor-o", "im-cursor", "im-keyboard", "im-pin", "im-store", "im-graduation-hat", "im-certificate-o", "im-sun", "im-diamond-o", "im-drop", "im-paperplane", "im-fingerprint", "im-lifebuoy", "im-power", "im-target", "im-navigation", "im-bug", "im-network", "im-pie-chart", "im-note-o", "im-id-card", "im-tags", "im-floppy-disk", "im-dashboard", "im-tools", "im-users", "im-trash-can", "im-x-mark-circle", "im-x-mark", "im-shield", "im-mobile", "im-inbox", "im-crown", "im-check-square", "im-check-square-o", "im-check-mark-circle", "im-check-mark", "im-redo", "im-undo", "im-map-o", "im-task-o", "im-menu-dot-v", "im-edit-off", "im-facebook", "im-sitemap", "im-save", "im-volume-off", "im-volume", "im-sign-out", "im-sign-in", "im-shopping-cart", "im-rocket", "im-banknote", "im-fullscreen", "im-minimize", "im-maximize", "im-light-bulb", "im-filter", "im-picture-o", "im-eye-off", "im-eye", "im-external-link", "im-random", "im-loop", "im-next", "im-previous", "im-eject", "im-stop", "im-pause", "im-play", "im-credit-card", "im-bookmark", "im-upload", "im-download", "im-video-camera", "im-photo-camera", "im-care-up", "im-care-down", "im-care-left", "im-arrow-up-circle", "im-arrow-down-circle", "im-arrow-left-circle", "im-arrow-right-circle", "im-arrow-up", "im-arrow-down", "im-arrow-left", "im-arrow-right", "im-angle-up-circle", "im-angle-down-circle", "im-angle-left-circle", "im-angle-right-circle", "im-angle-up", "im-angle-down", "im-angle-left", "im-angle-right", "im-twitch", "im-reddit", "im-edge", "im-whatsapp", "im-amazon", "im-snapchat", "im-instagram", "im-fire", "im-sync", "im-toggle", "im-control-panel", "im-archive", "im-bell", "im-bell-off", "im-youtube", "im-spinner", "im-smiley-o", "im-frown-o", "im-code", "im-android-os", "im-linux-os", "im-apple-os", "im-menu", "im-menu-list", "im-menu-dot-h", "im-windows-os", "im-square-o", "im-check-square-i", "im-radio-button-circle", "im-radio-button-circle-o", "im-flag", "im-opera", "im-thumb-up", "im-thumb-down", "im-safari", "im-paper-clip", "im-firefox", "im-copy", "im-chrome", "im-quote-left", "im-quote-right", "im-ie", "im-briefcase", "im-forbidden", "im-vk", "im-wizard", "im-location", "im-paypal", "im-coin", "im-key", "im-lock", "im-lock-open", "im-share", "im-flash", "im-cloud", "im-database", "im-wifi", "im-book", "im-audio", "im-video", "im-microphone", "im-printer", "im-computer", "im-phone", "im-user-male", "im-user-female", "im-user-circle", "im-clock-o", "im-calendar", "im-pencil", "im-question", "im-bar-chart", "im-info", "im-folder", "im-folder-open", "im-file", "im-file-o", "im-files-o", "im-warning", "im-link", "im-unlink", "im-tag", "im-heart", "im-cloud-upload", "im-cloud-download", "im-speech-bubble", "im-speech-bubble-comment", "im-speech-bubble-comments", "im-mail", "im-globe", "im-home", "im-window-o", "im-table", "im-windows-o", "im-gear", "im-twitter", "im-magnifier", "im-magnifier-plus", "im-magnifier-minus", "im-minus", "im-minus-circle", "im-plus", "im-plus-circle", "im-care-right", "im-star", "im-star-half", "im-star-o", "im-circle-o", "im-xing", "im-vimeo", "im-tumblr", "im-stumbleupon", "im-stackoverflow", "im-soundcloud", "im-skype", "im-pinterest", "im-linkedin", "im-google-plus", "im-github", "im-flickr", "im-facebook-like", "im-blogger", "im-behance"];
      }
    }
  };
  Ti.Preload("ti/com/ti/input/icon/ti-input-icon-props.mjs", t);
}(), Ti.Preload("ti/com/ti/input/icon/ti-input-icon.html", '<ti-combo-box class="ti-input-icon"\n  :class="topClass"\n  :drop-width="dropWidth"\n  :drop-height="dropHeight"\n  :status="status"\n  @collapse="doCollapse">\n  \x3c!--\n    Box\n  --\x3e\n  <template v-slot:box>\n    <span class="as-value"\n      :style="theValueStyle"\n      @click.left="onToggleDrop">\n      \x3c!--Show Icon--\x3e\n      <ti-icon \n        v-if="hasValue"\n          :value="value"/>\n      \x3c!--No Icon--\x3e\n      <span \n        v-else\n          class="no-icon"><i class="zmdi zmdi-cake"></i></span>\n    </span>\n    <span class="as-clear" @click="onClearIcon">\n      <ti-icon value="zmdi-close"/>\n    </span>\n  </template>\n  \x3c!--\n    Drop\n  --\x3e\n  <template v-slot:drop>\n    <div class="icon-input">\n      <input ref="input"\n        :placeholder="\'i18n:icon-code-tip\'|i18n"\n        @change="onChangedIcon">\n    </div>\n    <div class="icon-options">\n      <ul>\n        <li v-for="li of theOptionIcons"\n          @click.left="onSelectIcon(li)"\n          @dblclick.left="onSelectIconAndCollapse(li)"\n          @mouseenter="onHoverIcon(li)"\n          @mouseleave="onLeaveIcon(li)">\n          <ti-icon :value="li.value"/>\n        </li>\n      </ul>\n    </div>\n    <div class="icon-tip">\n      <template v-if="theTipIcon">\n        <ti-icon :value="theTipIcon"/>\n        <span>{{theTipIcon}}</span>\n      </template>\n      <template v-else>\n        <span>...</span>\n      </template>\n    </div>\n  </template>\n</ti-combo-box>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        hideBorder: !1,
        myHoverIcon: null,
        status: "collapse"
      };
    },
    props: {
      value: {
        type: [String, Object],
        "default": null
      },
      iconSize: {
        type: [Number, String],
        "default": null
      },
      dropWidth: {
        type: [Number, String],
        "default": "4rem"
      },
      dropHeight: {
        type: [Number, String],
        "default": "4rem"
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName({
          "show-border": !this.hideBorder,
          "hide-border": this.hideBorder
        }, this.className);
      },
      theValueStyle: function theValueStyle() {
        return {
          "font-size": Ti.Css.toSize(this.iconSize)
        };
      },
      isCollapse: function isCollapse() {
        return "collapse" == this.status;
      },
      isExtended: function isExtended() {
        return "extended" == this.status;
      },
      hasValue: function hasValue() {
        return !Ti.Util.isNil(this.value);
      },
      theTipIcon: function theTipIcon() {
        return this.myHoverIcon || this.value;
      },
      theOptionIcons: function theOptionIcons() {
        var t = [];
        return _.forEach(this.options, function (e, i) {
          var n = /^([a-z]+)-(.+)$/.exec(e);
          t.push({
            value: e,
            index: i,
            type: n[1],
            name: n[2]
          });
        }), t;
      }
    },
    methods: {
      onToggleDrop: function onToggleDrop() {
        this.status = {
          collapse: "extended",
          extended: "collapse"
        }[this.status];
      },
      onSelectIcon: function onSelectIcon() {
        var _ref40 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref40.value;

        this.$notify("change", t);
      },
      onSelectIconAndCollapse: function onSelectIconAndCollapse() {
        var _ref41 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref41.value;

        this.$notify("change", t), this.status = "collapse";
      },
      onChangedIcon: function onChangedIcon() {
        var t = _.trim(this.$refs.input.value);

        console.log("haha", t), this.$notify("change", t);
      },
      onHoverIcon: function onHoverIcon() {
        var _ref42 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref42.value;

        this.myHoverIcon = t;
      },
      onLeaveIcon: function onLeaveIcon() {
        this.myHoverIcon = null;
      },
      onClearIcon: function onClearIcon() {
        this.$notify("change", null);
      },
      doCollapse: function doCollapse() {
        this.status = "collapse";
      }
    }
  };
  Ti.Preload("ti/com/ti/input/icon/ti-input-icon.mjs", t);
}(), Ti.Preload("ti/com/ti/input/icon/_com.json", {
  name: "ti-input-icon",
  globally: !0,
  template: "./ti-input-icon.html",
  props: "./ti-input-icon-props.mjs",
  mixins: ["./ti-input-icon.mjs"]
}), Ti.Preload("ti/com/ti/input/month/ti-input-month.html", '<ti-combo-box class="as-month"\n  :class="topClass"\n  :width="width"\n  :drop-width="dropWidth"\n  :drop-height="dropHeight"\n  :drop-overflow="\'hidden\'"\n  :status="status"\n  @collapse="doCollapse">\n  \x3c!--\n    Box\n  --\x3e\n  <template v-slot:box>\n    <ti-input \n      :readonly="!canInput"\n      :hide-border="hideBorder"\n      :placeholder="placeholder|i18n"\n      :prefix-icon="icon"\n      :suffix-icon="theStatusIcon"\n      :value="theInputValue"\n      :height="height"\n      :focus="isExtended"\n      @change="onChanged"\n      @input:focus="onInputFocused"\n      @suffix:icon="onClickStatusIcon"/>\n  </template>\n  \x3c!--\n    Drop\n  --\x3e\n  <template v-slot:drop>\n    <ti-month\n      :value="theDropDate"\n      :height="dropHeight"\n      :begin-year="beginYear"\n      :end-year="endYear"\n      @change="onMonthChanged"/>\n  </template>\n</ti-combo-box>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        runtime: null,
        status: "collapse"
      };
    },
    props: {
      canInput: {
        type: Boolean,
        "default": !0
      },
      value: {
        type: [String, Number, Date],
        "default": null
      },
      icon: {
        type: String,
        "default": "far-calendar"
      },
      format: {
        type: String,
        "default": "yyyy-MM"
      },
      placeholder: {
        type: [String, Number],
        "default": "i18n:blank-month"
      },
      hideBorder: {
        type: Boolean,
        "default": !1
      },
      width: {
        type: [Number, String],
        "default": "1.4rem"
      },
      height: {
        type: [Number, String],
        "default": void 0
      },
      dropWidth: {
        type: [Number, String],
        "default": "box"
      },
      dropHeight: {
        type: [Number, String],
        "default": 200
      },
      beginYear: {
        type: [Number, String],
        "default": 1970
      },
      endYear: {
        type: [Number, String],
        "default": new Date().getFullYear() + 1
      },
      statusIcons: {
        type: Object,
        "default": function _default() {
          return {
            collapse: "zmdi-chevron-down",
            extended: "zmdi-chevron-up"
          };
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName(this.className);
      },
      isCollapse: function isCollapse() {
        return "collapse" == this.status;
      },
      isExtended: function isExtended() {
        return "extended" == this.status;
      },
      theDate: function theDate() {
        return Ti.Types.toDate(this.value, null);
      },
      theDropDate: function theDropDate() {
        return this.runtime || this.theDate;
      },
      theInputValue: function theInputValue() {
        return this.isExtended ? this.getDateText(this.theDropDate) : this.getDateText(this.theDropDate, this.format);
      },
      theStatusIcon: function theStatusIcon() {
        return this.statusIcons[this.status];
      }
    },
    methods: {
      applyRuntime: function applyRuntime() {
        if (this.runtime) {
          var _t44 = this.runtime;
          this.runtime = null;
          var e = this.getDateText(_t44);
          this.$notify("change", e);
        }
      },
      doExtend: function doExtend() {
        this.status = "extended";
      },
      doCollapse: function doCollapse() {
        var _ref43 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref43$escaped = _ref43.escaped,
            t = _ref43$escaped === void 0 ? !1 : _ref43$escaped;

        this.status = "collapse", t ? this.runtime = null : this.applyRuntime();
      },
      onInputFocused: function onInputFocused() {
        this.doExtend();
      },
      onChanged: function onChanged(t) {
        if (_.isEmpty(t)) this.$notify("change", null);else {
          var e = Ti.Types.toDate(t),
              i = this.getDateText(e);
          this.$notify("change", i);
        }
      },
      onClickStatusIcon: function onClickStatusIcon() {
        this.isExtended ? this.doCollapse() : this.doExtend();
      },
      onMonthChanged: function onMonthChanged(t) {
        this.runtime = t;
      },
      getDateText: function getDateText(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "yyyy-MM";
        var i = Ti.Types.toDate(t, null);
        return Ti.Types.formatDate(i, e);
      }
    }
  };
  Ti.Preload("ti/com/ti/input/month/ti-input-month.mjs", t);
}(), Ti.Preload("ti/com/ti/input/month/_com.json", {
  name: "ti-input-month",
  globally: !0,
  template: "./ti-input-month.html",
  mixins: ["./ti-input-month.mjs"],
  components: ["@com:ti/combo/input", "@com:ti/month"]
}), Ti.Preload("ti/com/ti/input/num/ti-input-num.html", '<div class="ti-input-num ti-fill-parent">\n  \x3c!--\n    Button: -\n  --\x3e\n  <div class="as-btn is-decrease"\n    :class="desreaseClass"\n    @click="changeByStep(-1)">\n    <ti-icon value="zmdi-minus"/>\n  </div>\n  \x3c!--\n    Input\n  --\x3e\n  <div class="as-input">\n    <input \n      spellcheck="false" \n      :value="theValue"\n      @change="onChanged">\n  </div>\n  \x3c!--\n    Button: +\n  --\x3e\n  <div class="as-btn is-increase"\n    :class="increaseClass"\n    @click="changeByStep(1)">\n    <ti-icon value="zmdi-plus"/>\n  </div>\n</div>'), function () {
  var t = {
    props: {
      value: null,
      defaultValue: {
        type: Number,
        "default": 0
      },
      maxValue: {
        type: Number,
        "default": void 0
      },
      minValue: {
        type: Number,
        "default": void 0
      },
      step: {
        type: Number,
        "default": 1
      }
    },
    computed: {
      theValue: function theValue() {
        if (!isNaN(this.value) && _.isNumber(this.value)) return this.getValue(this.value);
      },
      desreaseClass: function desreaseClass() {
        return !_.isUndefined(this.minValue) && this.value <= this.minValue ? "is-disabled" : "is-enabled";
      },
      increaseClass: function increaseClass() {
        return !_.isUndefined(this.maxValue) && this.value >= this.maxValue ? "is-disabled" : "is-enabled";
      }
    },
    methods: {
      getValue: function getValue(t) {
        return isNaN(t) || !_.isNumber(t) ? this.defaultValue : !_.isUndefined(this.minValue) && t < this.minValue ? this.minValue : !_.isUndefined(this.maxValue) && t > this.maxValue ? this.maxValue : t;
      },
      changeByStep: function changeByStep() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        var e = this.theValue;
        _.isUndefined(e) ? e = this.defaultValue : e += t * this.step, (e = this.getValue(e)) != this.value && this.$notify("change", e);
      },
      onChanged: function onChanged(t) {
        var e = t.target;

        if (_.isElement(e)) {
          var _t45 = _.trim(e.value);

          if (_.isEmpty(_t45)) this.$notify("change", null);else {
            var _e16 = _t45 ? 1 * _t45 : this.defaultValue;

            isNaN(_e16) || this.$notify("change", _e16);
          }
        }
      }
    }
  };
  Ti.Preload("ti/com/ti/input/num/ti-input-num.mjs", t);
}(), Ti.Preload("ti/com/ti/input/num/_com.json", {
  name: "ti-input-num",
  globally: !0,
  template: "./ti-input-num.html",
  mixins: ["./ti-input-num.mjs"]
}), function () {
  var t = {
    dict: {
      type: [String, Ti.Dict],
      "default": null
    },
    inputValue: null,
    maxValueLen: {
      type: Number,
      "default": 0
    },
    valueUnique: {
      type: Boolean,
      "default": !0
    },
    tagOptions: {
      type: [Array, Function],
      "default": function _default() {
        return [];
      }
    },
    tagMapping: {
      type: Object,
      "default": void 0
    },
    canInput: {
      type: Boolean,
      "default": !0
    },
    cancelTagBubble: {
      type: Boolean,
      "default": !1
    },
    tagItemIconBy: {
      type: [String, Function],
      "default": void 0
    },
    tagItemDefaultIcon: {
      type: String,
      "default": void 0
    },
    tagOptionDefaultIcon: {
      type: String,
      "default": void 0
    }
  };
  Ti.Preload("ti/com/ti/input/tags/ti-input-tags-props.mjs", t);
}(), Ti.Preload("ti/com/ti/input/tags/ti-input-tags.html", '<ti-input\n  class="ti-input-tags"\n  :class-name="className"\n  :value="inputValue"\n  :value-case="valueCase"\n  :trimed="trimed"\n\n  :readonly="!canInput || readonly"\n  :focused="focused"\n  :hover="hover"\n  :auto-select="autoSelect"\n\n  :placeholder="thePlaceholder"\n  :auto-i18n="autoI18n"\n  :hide-border="hideBorder"\n  :prefix-icon="prefixIcon"\n  :prefix-hover-icon="prefixHoverIcon"\n  :prefix-icon-for-clean="prefixIconForClean"\n  :prefix-text="prefixText"\n  :suffix-icon="suffixIcon"\n  :suffix-text="suffixText"\n  \n  :width="width"\n  :height="height"\n\n  :on-init="onInputInit"\n  \n  @inputing="onInputInputing"\n  @change="onInputChanged"\n  @input:focus="$notify(\'input:focus\')"\n  @prefix:icon="$notify(\'prefix:icon\')"\n  @input:blur="$notify(\'input:blur\')"\n  @suffix:icon="$notify(\'suffix:icon\')">\n  \x3c!--\n    Tag List\n  --\x3e\n  <div v-if="hasTags"\n    class="as-tags">\n    <ti-tags\n      :value="theTags"\n      :dict="dict"\n      :removable="true"\n      :item-options="tagOptions"\n      :item-icon-by="tagItemIconBy"\n      :item-default-icon="tagItemDefaultIcon"\n      :option-default-icon="tagOptionDefaultIcon"\n      :mapping="tagMapping"\n      :cancel-item-bubble="cancelTagBubble"\n      @change="$notify(\'change\', $event)"/>\n  </div>\n</ti-input>'), function () {
  var t = {
    data: function data() {
      return {};
    },
    props: {
      inputChange: {
        type: Function,
        "default": void 0
      }
    },
    computed: {
      theTags: function theTags() {
        return this.evalTagList(this.value);
      },
      hasTags: function hasTags() {
        return !_.isEmpty(this.theTags);
      },
      thePlaceholder: function thePlaceholder() {
        return this.placeholder ? this.placeholder : this.readonly || !this.canInput ? "" : "i18n:input-tags";
      }
    },
    methods: {
      onInputInit: function onInputInit(t) {
        this.$input = t;
      },
      evalTagList: function evalTagList() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var e = arguments.length > 1 ? arguments[1] : undefined;

        var i = _.filter(_.concat(t), function (t) {
          return !Ti.Util.isNil(t);
        });

        if (Ti.Util.isNil(e) || i.push(e), this.valueUnique && (i = _.uniq(i)), this.maxValueLen > 0) i = _.slice(i, 0, this.maxValueLen);else if (this.maxValueLen < 0) {
          var _t46 = Math.max(0, i.length + this.maxValueLen);

          i = _.slice(i, _t46);
        }
        var n = [];

        var _iterator28 = _createForOfIteratorHelper(i),
            _step28;

        try {
          for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {
            var _t47 = _step28.value;
            _.isPlainObject(_t47) ? n.push(_.assign({
              icon: this.tagIcon,
              options: this.tagOptions
            }, _t47)) : n.push(_t47);
          }
        } catch (err) {
          _iterator28.e(err);
        } finally {
          _iterator28.f();
        }

        return n;
      },
      getTagValues: function getTagValues() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var e = [];

        var _iterator29 = _createForOfIteratorHelper(t),
            _step29;

        try {
          for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {
            var i = _step29.value;

            var _t48 = _.isPlainObject(i) ? i.value : i;

            Ti.Util.isNil(_t48) || e.push(_t48);
          }
        } catch (err) {
          _iterator29.e(err);
        } finally {
          _iterator29.f();
        }

        return e;
      },
      onInputInputing: function onInputInputing(t) {
        this.$notify("inputing", t);
      },
      onInputChanged: function onInputChanged(t) {
        if (_.isNull(t)) this.$notify("change", []);else if (_.isFunction(this.inputChange)) this.inputChange(t);else if (t) {
          var e = this.evalTagList(this.value, t),
              i = this.getTagValues(e);
          this.$notify("change", i);
        }
      }
    }
  };
  Ti.Preload("ti/com/ti/input/tags/ti-input-tags.mjs", t);
}(), Ti.Preload("ti/com/ti/input/tags/_com.json", {
  name: "ti-input-tags",
  globally: !0,
  template: "./ti-input-tags.html",
  props: ["@com:ti/input/ti-input-props.mjs", "./ti-input-tags-props.mjs"],
  mixins: ["./ti-input-tags.mjs"],
  components: ["@com:ti/tags"]
}), Ti.Preload("ti/com/ti/input/text/ti-input-text.html", '<div class="ti-input-text" \n  :class="topClass" \n  :style="topStyle"\n  v-ti-activable>\n  \x3c!--\n    Prefix\n  --\x3e\n  <div class="as-bar is-prefix">\n    \x3c!--prefix:icon--\x3e\n    <div v-if="prefixIcon"\n      class="as-icon at-prefix"\n      :class="getHoverClass(\'prefixIcon\')"\n      @click.left.stop="onClickPrefixIcon"\n      @mouseenter="pointerHover=\'prefixIcon\'"\n      @mouseleave="pointerHover=null">\n      <ti-icon :value="thePrefixIcon"/>\n    </div>\n    \x3c!--prefix:text--\x3e\n    <div v-if="prefixText" \n      class="as-text at-prefix"\n      :class="getHoverClass(\'prefixText\')"\n      @click.left.stop="onClickPrefixText"\n      @mouseenter="pointerHover=\'prefixText\'"\n      @mouseleave="pointerHover=null">\n      <span>{{prefixText|i18n}}</span>\n    </div>\n  </div>\n  \x3c!--input--\x3e\n  <textarea ref="input"\n    spellcheck="false" \n    :readonly="readonly"\n    :value="theValue"\n    :placeholder="placeholder"\n    @compositionstart="onInputCompositionStart"\n    @compositionend="onInputCompositionEnd"\n    @input="onInputing"\n    @keydown="onInputKeyDown"\n    @change="onInputChanged"\n    @focus="onInputFocus"\n    @blur="onInputBlur"></textarea>\n  \x3c!--\n    Suffox\n  --\x3e\n  <div class="as-bar is-suffix">\n    \x3c!--suffix:text--\x3e\n    <div v-if="suffixText"\n      class="as-text at-suffix"\n      :class="getHoverClass(\'suffixText\')"\n      @click.left.stop="onClickSuffixIcon"\n      @mouseenter="pointerHover=\'suffixText\'"\n      @mouseleave="pointerHover=null">\n      <span>{{suffixText|i18n}}</span>\n    </div>\n    \x3c!--suffix:icon--\x3e\n    <div v-if="suffixIcon"\n      class="as-icon at-suffix"\n      :class="getHoverClass(\'suffixIcon\')"\n      @click.left.stop="onClickSuffixIcon"\n      @mouseenter="pointerHover=\'suffixIcon\'"\n      @mouseleave="pointerHover=null">\n      <ti-icon :value="suffixIcon"/>\n    </div>\n  </div>\n</div>'), function () {
  var _t49;

  var t = (_t49 = {
    inheritAttrs: !1,
    data: function data() {
      return {
        inputCompositionstart: !1,
        isFocused: !1,
        pointerHover: null
      };
    },
    watch: {
      focus: function focus(t) {
        this.isFocused = t;
      }
    },
    props: {
      value: null,
      format: {
        type: [String, Array, Object],
        "default": void 0
      },
      readonly: {
        type: Boolean,
        "default": !1
      },
      valueCase: {
        type: String,
        "default": null,
        validator: function validator(t) {
          return Ti.Util.isNil(t) || Ti.S.isValidCase(t);
        }
      },
      placeholder: {
        type: [String, Number],
        "default": null
      },
      trimed: {
        type: Boolean,
        "default": !0
      },
      autoJsValue: {
        type: Boolean,
        "default": !1
      },
      hideBorder: {
        type: Boolean,
        "default": !1
      },
      width: {
        type: [Number, String],
        "default": null
      },
      height: {
        type: [Number, String],
        "default": null
      },
      prefixHoverIcon: {
        type: String,
        "default": "zmdi-close-circle"
      },
      prefixIconForClean: {
        type: Boolean,
        "default": !0
      },
      prefixIcon: {
        type: String,
        "default": null
      },
      prefixText: {
        type: String,
        "default": null
      },
      suffixText: {
        type: String,
        "default": null
      },
      suffixIcon: {
        type: String,
        "default": null
      },
      focus: {
        type: Boolean,
        "default": !1
      },
      hover: {
        type: [Array, String],
        "default": function _default() {
          return ["prefixIcon", "suffixIcon"];
        }
      },
      autoSelect: {
        type: Boolean,
        "default": !1
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName(this.className, {
          "is-self-actived": this.isSelfActived,
          "is-actived": this.isActived,
          "is-focused": this.isFocused,
          "is-blurred": !this.isFocused,
          "is-readonly": this.readonly,
          "show-border": !this.hideBorder,
          "hide-border": this.hideBorder,
          "has-prefix-icon": this.thePrefixIcon,
          "has-prefix-text": this.prefixText,
          "has-suffix-icon": this.suffixIcon,
          "has-suffix-text": this.suffixText
        });
      },
      topStyle: function topStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      theValue: function theValue() {
        return Ti.Types.toStr(this.value, this.format);
      },
      thePrefixIcon: function thePrefixIcon() {
        return "prefixIcon" == this.pointerHover && this.isCanHover("prefixIcon") ? this.prefixHoverIcon || this.prefixIcon : this.prefixIcon;
      },
      theHover: function theHover() {
        var t = {},
            e = _.concat(this.hover);

        var _iterator30 = _createForOfIteratorHelper(e),
            _step30;

        try {
          for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {
            var i = _step30.value;
            i && (t[i] = !0);
          }
        } catch (err) {
          _iterator30.e(err);
        } finally {
          _iterator30.f();
        }

        return t;
      }
    },
    methods: {
      isCanHover: function isCanHover(t) {
        return !!this.theHover[t];
      },
      getHoverClass: function getHoverClass(t) {
        var e = this.isCanHover(t);
        return {
          "can-hover": e,
          "for-look": !e
        };
      },
      onInputCompositionStart: function onInputCompositionStart() {
        this.inputCompositionstart = !0;
      },
      onInputCompositionEnd: function onInputCompositionEnd() {
        this.inputCompositionstart = !1, this.doWhenInput();
      },
      onInputing: function onInputing(t) {
        this.inputCompositionstart || this.doWhenInput();
      },
      doWhenInput: function doWhenInput() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "inputing";
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;

        if (_.isElement(this.$refs.input)) {
          var i = this.$refs.input.value;
          e ? i = Ti.S.toJsValue(i, {
            autoNil: !0,
            autoDate: !1,
            trimed: this.trimed
          }) : this.trimed && (i = _.trim(i)), i = Ti.S.toCase(i, this.valueCase), this.$notify(t, i);
        }
      },
      onInputKeyDown: function onInputKeyDown(t) {
        var e = _.pick(t, "code", "key", "keyCode", "altKey", "ctrlKey", "metaKey", "shiftKey");

        e.uniqueKey = Ti.Shortcut.getUniqueKey(e), e.$event = t, this.$notify("keypress", e);
      },
      onInputChanged: function onInputChanged() {
        this.doWhenInput("change", this.autoJsValue);
      },
      onInputFocus: function onInputFocus() {
        this.readonly || (this.autoSelect ? this.$refs.input.select() : this.$refs.input.focus()), this.isFocused = !0, this.$notify("input:focus"), this.isActived || this.setActived();
      },
      onInputBlur: function onInputBlur() {
        this.isFocused = !1, this.$notify("input:blur");
      },
      onClickPrefixIcon: function onClickPrefixIcon() {
        this.prefixIconForClean && this.$notify("change", null), this.$notify("prefix:icon");
      },
      onClickPrefixText: function onClickPrefixText() {
        this.$notify("prefix:text");
      },
      onClickSuffixIcon: function onClickSuffixIcon() {
        this.$notify("suffix:icon");
      },
      onClickSuffixText: function onClickSuffixText() {
        this.$notify("suffix:text");
      },
      doAutoFocus: function doAutoFocus() {
        this.focus && !this.isFocused && this.onInputFocus();
      }
    }
  }, _defineProperty(_t49, "watch", {
    focus: function focus() {
      this.doAutoFocus();
    }
  }), _defineProperty(_t49, "mounted", function mounted() {
    this.doAutoFocus();
  }), _t49);
  Ti.Preload("ti/com/ti/input/text/ti-input-text.mjs", t);
}(), Ti.Preload("ti/com/ti/input/text/_com.json", {
  name: "ti-input-text",
  globally: !0,
  template: "./ti-input-text.html",
  mixins: ["./ti-input-text.mjs"],
  components: []
}), function () {
  var t = {
    value: null,
    format: void 0,
    valueCase: {
      type: String,
      "default": null,
      validator: function validator(t) {
        return Ti.Util.isNil(t) || Ti.S.isValidCase(t);
      }
    },
    trimed: {
      type: Boolean,
      "default": !0
    },
    autoJsValue: {
      type: Boolean,
      "default": !1
    },
    readonly: {
      type: Boolean,
      "default": !1
    },
    focused: {
      type: Boolean,
      "default": !1
    },
    hover: {
      type: [Array, String],
      "default": function _default() {
        return ["prefixIcon", "suffixIcon"];
      }
    },
    autoSelect: {
      type: Boolean,
      "default": !1
    },
    placeholder: {
      type: [String, Number],
      "default": null
    },
    autoI18n: {
      type: Boolean,
      "default": !1
    },
    hideBorder: {
      type: Boolean,
      "default": !1
    },
    prefixIcon: {
      type: [String, Object],
      "default": null
    },
    prefixHoverIcon: {
      type: String,
      "default": "zmdi-close-circle"
    },
    prefixIconForClean: {
      type: Boolean,
      "default": !0
    },
    prefixText: {
      type: String,
      "default": null
    },
    suffixIcon: {
      type: [String, Object],
      "default": null
    },
    suffixText: {
      type: String,
      "default": null
    },
    width: {
      type: [Number, String],
      "default": null
    },
    height: {
      type: [Number, String],
      "default": null
    }
  };
  Ti.Preload("ti/com/ti/input/ti-input-props.mjs", t);
}(), Ti.Preload("ti/com/ti/input/ti-input.html", '<div class="ti-input" \n  :class="TopClass" \n  :style="TopStyle"\n  v-ti-activable>\n  \x3c!--prefix:icon--\x3e\n  <div v-if="prefixIcon"\n    class="as-input-icon at-prefix"\n    :class="getHoverClass(\'prefixIcon\')"\n    @click.left="OnClickPrefixIcon"\n    @mouseenter="pointerHover=\'prefixIcon\'"\n    @mouseleave="pointerHover=null">\n    <ti-icon :value="ThePrefixIcon"/>\n  </div>\n  \x3c!--prefix:text--\x3e\n  <div v-if="prefixText" \n    class="as-input-text at-prefix"\n    :class="getHoverClass(\'prefixText\')"\n    @click.left="OnClickPrefixText"\n    @mouseenter="pointerHover=\'prefixText\'"\n    @mouseleave="pointerHover=null">\n    <span>{{prefixText|i18n}}</span>\n  </div>\n  \x3c!--PreSlot--\x3e\n  <slot></slot>\n  \x3c!--\n    Input Box\n  --\x3e\n  <div class="as-input">\n    <input ref="input"\n      spellcheck="false" \n      :readonly="readonly"\n      :value="TheValue"\n      :placeholder="placeholder|i18n"\n      @compositionstart="OnInputCompositionStart"\n      @compositionend="OnInputCompositionEnd"\n      @input="OnInputing"\n      @change="OnInputChanged"\n      @focus="OnInputFocus"\n      @blur="OnInputBlur">\n    \x3c!--suffix:text--\x3e\n    <div v-if="suffixText"\n      class="as-input-text at-suffix"\n      :class="getHoverClass(\'suffixText\')"\n      @click.left="OnClickSuffixIcon"\n      @mouseenter="pointerHover=\'suffixText\'"\n      @mouseleave="pointerHover=null">\n      <span>{{suffixText|i18n}}</span>\n    </div>\n    \x3c!--suffix:icon--\x3e\n    <div v-if="suffixIcon"\n      class="as-input-icon at-suffix"\n      :class="getHoverClass(\'suffixIcon\')"\n      @click.left="OnClickSuffixIcon"\n      @mouseenter="pointerHover=\'suffixIcon\'"\n      @mouseleave="pointerHover=null">\n      <ti-icon :value="suffixIcon"/>\n    </div>\n  </div>\n</div>'), function () {
  var t = {
    model: {
      prop: "value",
      event: "change"
    },
    data: function data() {
      return {
        inputCompositionstart: !1,
        isFocused: !1,
        pointerHover: null
      };
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-focused": this.isFocused,
          "is-blurred": !this.isFocused,
          "is-readonly": this.readonly,
          "show-border": !this.hideBorder,
          "hide-border": this.hideBorder,
          "has-prefix-icon": this.thePrefixIcon,
          "has-prefix-text": this.prefixText,
          "has-suffix-icon": this.suffixIcon,
          "has-suffix-text": this.suffixText
        });
      },
      TopStyle: function TopStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      TheValue: function TheValue() {
        var t = Ti.Types.toStr(this.value, this.format);
        return this.autoI18n ? Ti.I18n.text(t) : t;
      },
      ThePrefixIcon: function ThePrefixIcon() {
        return "prefixIcon" == this.pointerHover && this.isCanHover("prefixIcon") ? this.prefixHoverIcon || this.prefixIcon : this.prefixIcon;
      },
      TheHover: function TheHover() {
        var t = {},
            e = _.concat(this.hover);

        var _iterator31 = _createForOfIteratorHelper(e),
            _step31;

        try {
          for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {
            var i = _step31.value;
            i && (t[i] = !0);
          }
        } catch (err) {
          _iterator31.e(err);
        } finally {
          _iterator31.f();
        }

        return t;
      }
    },
    methods: {
      isCanHover: function isCanHover(t) {
        return !!this.TheHover[t];
      },
      getHoverClass: function getHoverClass(t) {
        var e = this.isCanHover(t);
        return {
          "can-hover": e,
          "for-look": !e,
          "is-prefix-icon-hover": "prefixIcon" == t
        };
      },
      OnInputCompositionStart: function OnInputCompositionStart() {
        this.inputCompositionstart = !0;
      },
      OnInputCompositionEnd: function OnInputCompositionEnd() {
        this.inputCompositionstart = !1, this.doWhenInput();
      },
      OnInputing: function OnInputing(t) {
        this.inputCompositionstart || this.doWhenInput();
      },
      doWhenInput: function doWhenInput() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "inputing";
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;

        if (_.isElement(this.$refs.input)) {
          var i = this.$refs.input.value;
          e ? i = Ti.S.toJsValue(i, {
            autoNil: !0,
            autoDate: !1,
            trimed: this.trimed
          }) : this.trimed && (i = _.trim(i)), i = Ti.S.toCase(i, this.valueCase), this.$notify(t, i);
        }
      },
      OnInputChanged: function OnInputChanged() {
        this.doWhenInput("change", this.autoJsValue);
      },
      OnInputFocus: function OnInputFocus() {
        this.readonly || (this.autoSelect ? this.$refs.input.select() : this.$refs.input.focus()), this.isFocused = !0, this.$notify("input:focus"), this.isActived || this.setActived();
      },
      OnInputBlur: function OnInputBlur() {
        this.isFocused = !1, this.$notify("input:blur");
      },
      OnClickPrefixIcon: function OnClickPrefixIcon() {
        this.prefixIconForClean && this.$notify("change", null), this.$notify("prefix:icon");
      },
      OnClickPrefixText: function OnClickPrefixText() {
        this.$notify("prefix:text");
      },
      OnClickSuffixIcon: function OnClickSuffixIcon() {
        this.$notify("suffix:icon");
      },
      OnClickSuffixText: function OnClickSuffixText() {
        this.$notify("suffix:text");
      },
      doAutoFocus: function doAutoFocus() {
        this.focused && !this.isFocused && this.OnInputFocus();
      }
    },
    watch: {
      focused: function focused() {
        this.doAutoFocus();
      }
    },
    mounted: function mounted() {
      this.doAutoFocus();
    }
  };
  Ti.Preload("ti/com/ti/input/ti-input.mjs", t);
}(), Ti.Preload("ti/com/ti/input/time/ti-input-time.html", '<ti-combo-box class="as-time"\n  :class="topClass"\n  :width="width"\n  :drop-width="dropWidth"\n  :drop-height="dropHeight"\n  :drop-overflow="\'hidden\'"\n  :status="status"\n  @collapse="doCollapse">\n  \x3c!--\n    Box\n  --\x3e\n  <template v-slot:box>\n    <ti-input \n      :readonly="!canInput"\n      :hide-border="hideBorder"\n      :placeholder="placeholder|i18n"\n      :prefix-icon="icon"\n      :suffix-icon="theStatusIcon"\n      :value="theTimeText"\n      :height="height"\n      :focus="isExtended"\n      @change="onChanged"\n      @input:focus="onInputFocused"\n      @suffix:icon="onClickStatusIcon"/>\n  </template>\n  \x3c!--\n    Drop\n  --\x3e\n  <template v-slot:drop>\n    <ti-time\n      :value="theDropTime"\n      :height="dropHeight"\n      :mode="mode"\n      @change="onTimeChanged"/>\n  </template>\n</ti-combo-box>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        runtime: null,
        status: "collapse"
      };
    },
    props: {
      canInput: {
        type: Boolean,
        "default": !0
      },
      value: {
        type: [String, Number, Ti.Types.Time],
        "default": null
      },
      icon: {
        type: String,
        "default": "far-clock"
      },
      valueUnit: {
        type: String,
        "default": "s",
        validator: function validator(t) {
          return /^(ms|s|min|hr)$/.test(t);
        }
      },
      mode: {
        type: String,
        "default": "auto",
        validator: function validator(t) {
          return /^(sec|min|auto)$/.test(t);
        }
      },
      placeholder: {
        type: [String, Number],
        "default": "i18n:blank-time"
      },
      hideBorder: {
        type: Boolean,
        "default": !1
      },
      width: {
        type: [Number, String],
        "default": "1.4rem"
      },
      height: {
        type: [Number, String],
        "default": void 0
      },
      dropWidth: {
        type: [Number, String],
        "default": "box"
      },
      dropHeight: {
        type: [Number, String],
        "default": 400
      },
      statusIcons: {
        type: Object,
        "default": function _default() {
          return {
            collapse: "zmdi-chevron-down",
            extended: "zmdi-chevron-up"
          };
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName(this.className);
      },
      isCollapse: function isCollapse() {
        return "collapse" == this.status;
      },
      isExtended: function isExtended() {
        return "extended" == this.status;
      },
      theTime: function theTime() {
        return Ti.Types.toTime(this.value, this.valueUnit);
      },
      theDropTime: function theDropTime() {
        return this.runtime || this.theTime;
      },
      theTimeFormat: function theTimeFormat() {
        return {
          sec: "HH:mm:ss",
          min: "HH:mm",
          auto: "auto"
        }[this.mode];
      },
      theTimeText: function theTimeText() {
        return this.getTimeText(this.theDropTime);
      },
      theStatusIcon: function theStatusIcon() {
        return this.statusIcons[this.status];
      }
    },
    methods: {
      applyRuntime: function applyRuntime() {
        if (this.runtime) {
          var _t50 = this.runtime;
          this.runtime = null;
          var e = this.getTimeText(_t50);
          this.$notify("change", e);
        }
      },
      doExtend: function doExtend() {
        this.status = "extended";
      },
      doCollapse: function doCollapse() {
        var _ref44 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref44$escaped = _ref44.escaped,
            t = _ref44$escaped === void 0 ? !1 : _ref44$escaped;

        this.status = "collapse", t ? this.runtime = null : this.applyRuntime();
      },
      onInputFocused: function onInputFocused() {
        this.doExtend();
      },
      onChanged: function onChanged(t) {
        if (_.isEmpty(t)) this.$notify("change", null);else {
          var e = Ti.Types.toTime(t),
              i = this.getTimeText(e);
          this.$notify("change", i);
        }
      },
      onClickStatusIcon: function onClickStatusIcon() {
        this.isExtended ? this.doCollapse() : this.doExtend();
      },
      onTimeChanged: function onTimeChanged(t) {
        this.runtime = t;
      },
      getTimeText: function getTimeText(t) {
        if (t instanceof Ti.Types.Time) return t.toString(this.theTimeFormat);
      }
    }
  };
  Ti.Preload("ti/com/ti/input/time/ti-input-time.mjs", t);
}(), Ti.Preload("ti/com/ti/input/time/_com.json", {
  name: "ti-input-time",
  globally: !0,
  template: "./ti-input-time.html",
  mixins: ["./ti-input-time.mjs"],
  components: ["@com:ti/combo/input", "@com:ti/time"]
}), Ti.Preload("ti/com/ti/input/timerange/ti-input-timerange.html", '<ti-combo-box class="as-timerange"\n  :class="topClass"\n  :width="width"\n  :drop-width="null"\n  :status="status"\n  @collapse="doCollapse">\n  \x3c!--\n    Box\n  --\x3e\n  <template v-slot:box>\n    <ti-input \n      :readonly="!canInput"\n      :hide-border="hideBorder"\n      :placeholder="placeholder|i18n"\n      :prefix-icon="icon"\n      :suffix-icon="theStatusIcon"\n      :value="theRangeText"\n      :height="height"\n      :focus="isExtended"\n      @change="onChanged"\n      @input:focus="onInputFocused"\n      @suffix:icon="onClickStatusIcon"/>\n  </template>\n  \x3c!--\n    Drop\n  --\x3e\n  <template v-slot:drop>\n    <ti-form\n      :data="theDropRange"\n      v-bind="theFormConfig"\n      @change="onFormChanged"/>\n  </template>\n</ti-combo-box>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        runtime: null,
        status: "collapse"
      };
    },
    props: {
      canInput: {
        type: Boolean,
        "default": !0
      },
      value: {
        type: [String, Object, Number, Array],
        "default": null
      },
      rangeKeys: {
        type: Array,
        "default": function _default() {
          return ["beginTime", "endTime"];
        }
      },
      valueMode: {
        type: String,
        "default": "Array"
      },
      dftValue: {
        type: Array,
        "default": function _default() {
          return ["09:00", "17:00"];
        }
      },
      icon: {
        type: String,
        "default": "zmdi-time-interval"
      },
      format: {
        type: String,
        "default": "HH:mm"
      },
      placeholder: {
        type: String,
        "default": "i18n:blank-time-range"
      },
      hideBorder: {
        type: Boolean,
        "default": !1
      },
      width: {
        type: [Number, String],
        "default": "2rem"
      },
      height: {
        type: [Number, String],
        "default": void 0
      },
      statusIcons: {
        type: Object,
        "default": function _default() {
          return {
            collapse: "zmdi-chevron-down",
            extended: "zmdi-chevron-up"
          };
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName(this.className);
      },
      isCollapse: function isCollapse() {
        return "collapse" == this.status;
      },
      isExtended: function isExtended() {
        return "extended" == this.status;
      },
      theFormConfig: function theFormConfig() {
        var _this$rangeKeys = _slicedToArray(this.rangeKeys, 2),
            t = _this$rangeKeys[0],
            e = _this$rangeKeys[1];

        return {
          fields: [{
            name: t,
            type: "Time",
            title: "i18n:time-begin",
            comType: "ti-input-time"
          }, {
            name: e,
            type: "Time",
            title: "i18n:time-end",
            comType: "ti-input-time"
          }],
          spacing: "tiny",
          statusIcons: null
        };
      },
      theRange: function theRange() {
        return this.parseTimeRange(this.value);
      },
      theRangeText: function theRangeText() {
        var _this73 = this;

        var _this$rangeKeys2 = _slicedToArray(this.rangeKeys, 2),
            t = _this$rangeKeys2[0],
            e = _this$rangeKeys2[1],
            i = [];

        return _.forEach(this.theRange, function (t) {
          t ? i.push(t.toString(_this73.format)) : i.push(Ti.Types.formatTime(0, _this73.format));
        }), i.join(" ~ ");
      },
      theRangeValue: function theRangeValue() {
        return this.formatRangeValue(this.theRange);
      },
      theDropRange: function theDropRange() {
        return this.runtime || this.theRangeValue;
      },
      theStatusIcon: function theStatusIcon() {
        return this.statusIcons[this.status];
      }
    },
    methods: {
      applyRuntime: function applyRuntime() {
        if (this.runtime) {
          var _t51 = this.parseTimeRange(this.runtime);

          this.runtime = null;
          var e = this.formatRangeValue(_t51),
              i = this.formatEmitRangeValue(e);
          this.$notify("change", i);
        }
      },
      doExtend: function doExtend() {
        this.status = "extended";
      },
      doCollapse: function doCollapse() {
        var _ref45 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref45$escaped = _ref45.escaped,
            t = _ref45$escaped === void 0 ? !1 : _ref45$escaped;

        this.status = "collapse", t ? this.runtime = null : this.applyRuntime();
      },
      onInputFocused: function onInputFocused() {
        this.doExtend();
      },
      onChanged: function onChanged(t) {
        var e = this.parseTimeRange(t);
        if (_.isEmpty(e)) this.$notify("change", null);else {
          var _t52 = this.formatRangeValue(e),
              i = this.formatEmitRangeValue(_t52);

          this.$notify("change", i);
        }
      },
      onClickStatusIcon: function onClickStatusIcon() {
        this.isExtended ? this.doCollapse() : this.doExtend();
      },
      formatEmitRangeValue: function formatEmitRangeValue(t) {
        var _this$rangeKeys3 = _slicedToArray(this.rangeKeys, 2),
            e = _this$rangeKeys3[0],
            i = _this$rangeKeys3[1];

        if (t && "Array" == this.valueMode) {
          var n = [t[e], t[i]];
          return _.filter(n, function (t) {
            return t && _.isString(t);
          });
        }

        return t;
      },
      onFormChanged: function onFormChanged(t) {
        var e = _.assign({}, this.theRangeValue, this.runtime);

        e[t.name] = t.value, this.runtime = e;
      },
      parseTimeRange: function parseTimeRange(t) {
        var _n10;

        var _this$rangeKeys4 = _slicedToArray(this.rangeKeys, 2),
            e = _this$rangeKeys4[0],
            i = _this$rangeKeys4[1];

        t = Ti.Util.fallback(t, this.dftValue, {});
        var n = {};

        if (_.isNumber(t)) {
          n = _defineProperty({}, e, Ti.Types.toTime(t));
        } else if (_.isString(t)) {
          var _n9;

          var a = _.trim(t),
              s = _.split(a, /[\t ,\/~-]+/);

          n = (_n9 = {}, _defineProperty(_n9, e, Ti.Types.toTime(s[0])), _defineProperty(_n9, i, Ti.Types.toTime(s[1])), _n9);
        } else _.isArray(t) ? n = (_n10 = {}, _defineProperty(_n10, e, Ti.Types.toTime(t[0])), _defineProperty(_n10, i, Ti.Types.toTime(t[1])), _n10) : _.isPlainObject(t) && (n = _.pick(t, this.rangeKeys));

        return this.normalizeRange(n);
      },
      normalizeRange: function normalizeRange(t) {
        var _this$rangeKeys5 = _slicedToArray(this.rangeKeys, 2),
            e = _this$rangeKeys5[0],
            i = _this$rangeKeys5[1];

        if (t && t[e] && t[i]) {
          var n = Ti.Types.toTime(t[e]),
              a = Ti.Types.toTime(t[i]);

          if (n.valueInMilliseconds > a.valueInMilliseconds) {
            t[e];
            t[e] = a, t[i] = n;
          }
        }

        return t;
      },
      formatRangeValue: function formatRangeValue(t) {
        var e = _.assign({}, t);

        return _.forEach(e, function (t, i) {
          e[i] = t ? t.toString() : Ti.Types.formatTime(0);
        }), e;
      }
    }
  };
  Ti.Preload("ti/com/ti/input/timerange/ti-input-timerange.mjs", t);
}(), Ti.Preload("ti/com/ti/input/timerange/_com.json", {
  name: "ti-input-timerange",
  globally: !0,
  template: "./ti-input-timerange.html",
  mixins: ["./ti-input-timerange.mjs"],
  components: ["@com:ti/combo/input"]
}), Ti.Preload("ti/com/ti/input/_com.json", {
  name: "ti-input",
  globally: !0,
  template: "./ti-input.html",
  props: "./ti-input-props.mjs",
  mixins: ["./ti-input.mjs"],
  components: []
}), function () {
  var t = {
    value: null,
    dict: {
      type: [String, Ti.Dict],
      "default": void 0
    },
    trimed: {
      type: Boolean,
      "default": !0
    },
    format: void 0,
    href: {
      type: String,
      "default": void 0
    },
    newTab: {
      type: Boolean,
      "default": !1
    },
    editable: {
      type: Boolean,
      "default": !1
    },
    hover: {
      type: [Array, String],
      "default": function _default() {
        return ["suffixIcon"];
      }
    },
    placeholder: {
      type: String,
      "default": "i18n:nil"
    },
    autoI18n: {
      type: Boolean,
      "default": !0
    },
    prefixIcon: {
      type: String,
      "default": void 0
    },
    prefixText: {
      type: String,
      "default": void 0
    },
    suffixText: {
      type: String,
      "default": void 0
    },
    suffixIcon: {
      type: String,
      "default": void 0
    },
    width: {
      type: [Number, String],
      "default": void 0
    },
    height: {
      type: [Number, String],
      "default": void 0
    },
    valueMaxWidth: {
      type: [Number, String],
      "default": void 0
    }
  };
  Ti.Preload("ti/com/ti/label/ti-label-props.mjs", t);
}(), Ti.Preload("ti/com/ti/label/ti-label.html", '<div class="ti-label"\n  :class="TopClass"\n  :style="TopStyle"\n  @dblclick.left="OnDblClick">\n  \x3c!--prefix:icon--\x3e\n  <div v-if="ThePrefixIcon"\n    class="as-icon at-prefix"\n    :class="getHoverClass(\'prefixIcon\')"\n    @click.left="OnClickPrefixIcon">\n    <ti-icon :value="ThePrefixIcon"/>\n  </div>\n  \x3c!--prefix:text--\x3e\n  <div v-if="prefixText" \n    class="as-text at-prefix"\n    :class="getHoverClass(\'prefixText\')"\n    @click.left="OnClickPrefixText">\n    <span>{{prefixText|i18n}}</span>\n  </div>\n  \x3c!--Text--\x3e\n  <div class="as-value"\n    :style="ValueStyle"\n    @click.left="OnClickValue">\n    \x3c!--Link--\x3e\n    <a v-if="href"\n        :href="href"\n        :taget="newTab ? \'_blank\' : undefined"\n        @click.left.prevent>{{myDisplayText}}</a>\n    \x3c!--Normal Text--\x3e\n    <span v-else>{{myDisplayText}}</span>\n  </div>\n  \x3c!--suffix:text--\x3e\n  <div v-if="suffixText"\n    class="as-text at-suffix"\n    :class="getHoverClass(\'suffixText\')"\n    @click.left="OnClickSuffixIcon">\n    <span>{{suffixText|i18n}}</span>\n  </div>\n  \x3c!--suffix:icon--\x3e\n  <div v-if="suffixIcon"\n    class="as-icon at-suffix"\n    :class="getHoverClass(\'suffixIcon\')"\n    @click.left="OnClickSuffixIcon">\n    <ti-icon :value="suffixIcon"/>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myDisplayIcon: void 0,
        myDisplayText: void 0,
        myDictValKey: void 0
      };
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-blank": !_.isNumber(this.TheValue) && _.isEmpty(this.TheValue)
        });
      },
      TopStyle: function TopStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      ValueStyle: function ValueStyle() {
        return Ti.Css.toStyle({
          maxWidth: this.valueMaxWidth
        });
      },
      ThePrefixIcon: function ThePrefixIcon() {
        return this.myDisplayIcon || this.prefixIcon;
      },
      TheHover: function TheHover() {
        var t = {},
            e = _.concat(this.hover);

        var _iterator32 = _createForOfIteratorHelper(e),
            _step32;

        try {
          for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {
            var i = _step32.value;
            i && (t[i] = !0);
          }
        } catch (err) {
          _iterator32.e(err);
        } finally {
          _iterator32.f();
        }

        return t;
      },
      TheValue: function TheValue() {
        var t = this.value;
        return this.trim && _.isString(t) ? _.trim(t) : t;
      },
      Dict: function Dict() {
        if (this.dict) {
          if (this.dict instanceof Ti.Dict) return this.myDictValKey = ".text", this.dict;

          var _Ti$DictFactory$expla2 = Ti.DictFactory.explainDictName(this.dict),
              _t53 = _Ti$DictFactory$expla2.name,
              e = _Ti$DictFactory$expla2.vKey;

          return this.myDictValKey = e || ".text", Ti.DictFactory.CheckDict(_t53);
        }
      }
    },
    methods: {
      isCanHover: function isCanHover(t) {
        return !!this.TheHover[t];
      },
      getHoverClass: function getHoverClass(t) {
        var e = this.isCanHover(t);
        return {
          "can-hover": e,
          "for-look": !e,
          "is-prefix-icon-hover": "prefixIcon" == t
        };
      },
      OnDblClick: function OnDblClick() {
        var _this74 = this;

        this.editable && Ti.Be.EditIt(this.$el, {
          text: this.TheValue,
          ok: function ok(t) {
            _this74.$notify("change", t);
          }
        });
      },
      OnClickPrefixIcon: function OnClickPrefixIcon() {
        this.$notify("prefix:icon");
      },
      OnClickPrefixText: function OnClickPrefixText() {
        this.$notify("prefix:text");
      },
      OnClickValue: function OnClickValue() {
        this.$notify("click:value");
      },
      OnClickSuffixIcon: function OnClickSuffixIcon() {
        this.$notify("suffix:icon");
      },
      OnClickSuffixText: function OnClickSuffixText() {
        this.$notify("suffix:text");
      },
      evalDisplay: function evalDisplay(t) {
        var _this75 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee39() {
          var e;
          return regeneratorRuntime.wrap(function _callee39$(_context39) {
            while (1) {
              switch (_context39.prev = _context39.next) {
                case 0:
                  if (!_this75.Dict) {
                    _context39.next = 5;
                    break;
                  }

                  _context39.next = 3;
                  return _this75.Dict.getItem(t);

                case 3:
                  e = _context39.sent;
                  e ? (_this75.myDisplayIcon = _this75.Dict.getIcon(e), t = _this75.Dict.getBy(_this75.myDictValKey, e, t)) : _this75.myDisplayIcon = null;

                case 5:
                  return _context39.abrupt("return", _.isNumber(t) ? t : _.isArray(t) || _.isPlainObject(t) ? JSON.stringify(t, null, "  ") : Ti.Util.isNil(t) ? Ti.I18n.text(_this75.placeholder) : _.isDate(t) ? Ti.Types.toStr(t, _this75.format) : (_this75.format && (t = Ti.Types.toStr(t, _this75.format)), _this75.autoI18n ? Ti.I18n.text(t) : t));

                case 6:
                case "end":
                  return _context39.stop();
              }
            }
          }, _callee39);
        }))();
      },
      reloadMyDisplay: function reloadMyDisplay() {
        var _this76 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee40() {
          return regeneratorRuntime.wrap(function _callee40$(_context40) {
            while (1) {
              switch (_context40.prev = _context40.next) {
                case 0:
                  _this76.myDisplayIcon = null;
                  _context40.next = 3;
                  return _this76.evalDisplay(_this76.TheValue);

                case 3:
                  _this76.myDisplayText = _context40.sent;

                case 4:
                case "end":
                  return _context40.stop();
              }
            }
          }, _callee40);
        }))();
      }
    },
    watch: {
      value: {
        handler: "reloadMyDisplay",
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/ti/label/ti-label.mjs", t);
}(), Ti.Preload("ti/com/ti/label/_com.json", {
  name: "ti-label",
  globally: !0,
  template: "./ti-label.html",
  props: "./ti-label-props.mjs",
  mixins: ["./ti-label.mjs"]
}), Ti.Preload("ti/com/ti/label/_hmaker.json", {
  icon: "im-tag",
  title: "i18n:com-label",
  scenes: ["desktop", "tablet", "phone"],
  editComType: "ti-form",
  editComConf: {
    mode: "tab",
    data: "=comConf",
    fields: [{
      title: "i18n:hmk-aspect",
      fields: [{
        title: "i18n:hmk-placeholder",
        name: "placeholder",
        comType: "ti-input"
      }, {
        title: "i18n:hmk-autoI18n",
        name: "autoI18n",
        type: "Boolean",
        defaultAs: !0,
        comType: "ti-toggle"
      }, {
        title: "i18n:hmk-prefixIcon",
        name: "prefixIcon",
        comType: "ti-input-icon"
      }, {
        title: "i18n:hmk-prefixText",
        name: "prefixText",
        comType: "ti-input"
      }, {
        title: "i18n:hmk-suffixIcon",
        name: "suffixIcon",
        comType: "ti-input-icon"
      }, {
        title: "i18n:hmk-suffixText",
        name: "suffixText",
        comType: "ti-input"
      }]
    }, {
      title: "i18n:hmk-behavior",
      fields: [{
        title: "i18n:hmk-href",
        name: "href",
        comType: "ti-input"
      }, {
        title: "i18n:hmk-newTab",
        name: "newTab",
        type: "Boolean",
        hidden: {
          href: "NoEmpty"
        },
        comType: "ti-toggle"
      }, {
        title: "i18n:hmk-breakLine",
        name: "breakLine",
        type: "Boolean",
        defaultAs: !0,
        comType: "ti-toggle"
      }, {
        title: "i18n:hmk-editable",
        name: "editable",
        type: "Boolean",
        comType: "ti-toggle"
      }]
    }, {
      title: "i18n:hmk-data",
      fields: [{
        title: "i18n:hmk-value",
        name: "value",
        comType: "ti-input"
      }, {
        title: "i18n:hmk-dict",
        name: "dict",
        comType: "ti-input"
      }, {
        title: "i18n:hmk-trimed",
        name: "trimed",
        type: "Boolean",
        comType: "ti-toggle"
      }, {
        title: "i18n:hmk-format",
        name: "format",
        comType: "ti-input",
        comConf: {
          autoJsValue: !0
        }
      }]
    }, {
      title: "i18n:hmk-measure",
      fields: [{
        title: "i18n:hmk-width",
        name: "width",
        comType: "ti-input"
      }, {
        title: "i18n:hmk-height",
        name: "height",
        comType: "ti-input"
      }, {
        title: "i18n:hmk-valueMaxWidth",
        name: "valueMaxWidth",
        comType: "ti-input"
      }]
    }]
  }
}), Ti.Preload("ti/com/ti/lbs/map/baidu/ti-lbs-map-baidu.html", '<div class="ti-lbs-map by-baidu ti-fill-parent">\n  <div ref="arena" class="map-arena ti-fill-parent"></div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        valueMarker: null
      };
    },
    props: {
      mapType: {
        type: String,
        "default": "ROADMAP"
      },
      center: {
        type: Object,
        "default": null
      },
      zoom: {
        type: Number,
        "default": 8
      },
      value: {
        type: Object,
        "default": null
      },
      valueOptions: {
        type: Object,
        "default": function _default() {
          return {
            icon: null,
            title: "UserMarker",
            animation: "DOWN"
          };
        }
      }
    },
    computed: {
      mapCenterLatLng: function mapCenterLatLng() {
        return _.isEmpty(this.center) ? _.isEmpty(this.value) ? this.genLatLng({
          lat: 39.9042,
          lng: 116.4074
        }) : this.genLatLng(this.value) : this.genLatLng(this.center);
      },
      mapTypeId: function mapTypeId() {
        return {
          ROADMAP: BMAP_NORMAL_MAP,
          SATELLITE: BMAP_SATELLITE_MAP,
          HYBRID: BMAP_HYBRID_MAP
        }[this.mapType] || BMAP_NORMAL_MAP;
      }
    },
    methods: {
      genLatLng: function genLatLng() {
        var _ref46 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref46.lat,
            e = _ref46.lng;

        return new BMap.Point(e, t);
      },
      drawValue: function drawValue() {
        var t = this.__map;
        this.valueOptions;
        if (!this.value) return;
        var e = this.genLatLng(this.value);
        var i = new BMap.Marker(e);
        t.addOverlay(i), this.valueMarker = i;
      }
    },
    watch: {
      value: function value() {
        this.drawValue();
      }
    },
    mounted: function () {
      var _mounted2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee41() {
        var t;
        return regeneratorRuntime.wrap(function _callee41$(_context41) {
          while (1) {
            switch (_context41.prev = _context41.next) {
              case 0:
                t = new BMap.Map(this.$refs.arena, {
                  mapType: this.mapTypeId
                });
                t.centerAndZoom(this.mapCenterLatLng, this.zoom), t.addControl(new BMap.MapTypeControl({
                  mapTypes: [BMAP_NORMAL_MAP, BMAP_SATELLITE_MAP, BMAP_HYBRID_MAP]
                })), t.enableScrollWheelZoom(!0), this.__map = t, this.drawValue();

              case 2:
              case "end":
                return _context41.stop();
            }
          }
        }, _callee41, this);
      }));

      function mounted() {
        return _mounted2.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/ti/lbs/map/baidu/ti-lbs-map-baidu.mjs", t);
}(), Ti.Preload("ti/com/ti/lbs/map/baidu/_com.json", {
  name: "ti-lbs-map-baidu",
  globally: !0,
  template: "./ti-lbs-map-baidu.html",
  mixins: ["./ti-lbs-map-baidu.mjs"],
  components: []
}), Ti.Preload("ti/com/ti/lbs/map/tencent/ti-lbs-map-tencent.html", '<div class="ti-lbs-map by-tencent ti-fill-parent">\n  <div ref="arena" class="map-arena ti-fill-parent"></div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        valueMarker: null
      };
    },
    props: {
      mapType: {
        type: String,
        "default": "ROADMAP"
      },
      center: {
        type: Object,
        "default": null
      },
      zoom: {
        type: Number,
        "default": 8
      },
      value: {
        type: Object,
        "default": null
      },
      valueOptions: {
        type: Object,
        "default": function _default() {
          return {
            icon: null,
            title: "UserMarker",
            animation: "DOWN"
          };
        }
      }
    },
    computed: {
      mapCenterLatLng: function mapCenterLatLng() {
        return _.isEmpty(this.center) ? _.isEmpty(this.value) ? this.genLatLng({
          lat: 39.9042,
          lng: 116.4074
        }) : this.genLatLng(this.value) : this.genLatLng(this.center);
      },
      mapTypeId: function mapTypeId() {
        return qq.maps.MapTypeId[this.mapType] || qq.maps.MapTypeId.ROADMAP;
      }
    },
    methods: {
      genLatLng: function genLatLng() {
        var _ref47 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref47.lat,
            e = _ref47.lng;

        return new qq.maps.LatLng(t, e);
      },
      drawValue: function drawValue() {
        var t = this.__map,
            e = this.valueOptions;
        if (!this.value) return;
        var i = this.genLatLng(this.value);
        var n = new qq.maps.Marker({
          position: i,
          animation: qq.maps.MarkerAnimation[e.animation],
          map: t,
          draggable: !0,
          title: e.title,
          visible: !0
        });
        this.valueMarker = n;
      }
    },
    watch: {
      value: function value() {
        this.drawValue();
      }
    },
    mounted: function () {
      var _mounted3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee42() {
        var t;
        return regeneratorRuntime.wrap(function _callee42$(_context42) {
          while (1) {
            switch (_context42.prev = _context42.next) {
              case 0:
                t = new qq.maps.Map(this.$refs.arena, {
                  zoom: this.zoom,
                  center: this.mapCenterLatLng,
                  mapTypeId: this.mapTypeId
                });
                this.__map = t, this.drawValue();

              case 2:
              case "end":
                return _context42.stop();
            }
          }
        }, _callee42, this);
      }));

      function mounted() {
        return _mounted3.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/ti/lbs/map/tencent/ti-lbs-map-tencent.mjs", t);
}(), Ti.Preload("ti/com/ti/lbs/map/tencent/_com.json", {
  name: "ti-lbs-map-tencent",
  globally: !0,
  template: "./ti-lbs-map-tencent.html",
  mixins: ["./ti-lbs-map-tencent.mjs"],
  components: []
}), Ti.Preload("ti/com/ti/lbs/map/ti-lbs-map.html", '<div class="ti-lbs-map" \n  :class="topClass"\n  :style="topStyle">\n  <div class="map-con">\n    \x3c!--\n      Map Main\n    --\x3e\n    <div class="as-main">\n      <component \n        :is="mapComType"\n        v-bind="mapComConf"/>\n    </div>\n    \x3c!--\n      Map Info\n    --\x3e\n    <div class="as-info">\n      <div class="as-toggle" @click="fullScreen=!fullScreen">\n        <ti-icon :value="toggleIcon"/>\n      </div>\n      <ul class="as-laln">\n        <li><span>{{\'lat\'|i18n}}:</span><em>{{lalnCenter.lat|float(8)}}</em></li>\n        <li><span>{{\'lng\'|i18n}}:</span><em>{{lalnCenter.lng|float(8)}}</em></li>\n      </ul>\n    </div>\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        fullScreen: !1
      };
    },
    props: {
      by: {
        type: String,
        "default": "tencent"
      },
      mapType: {
        type: String,
        "default": "ROADMAP"
      },
      center: {
        type: Object,
        "default": null
      },
      autoFloat: {
        type: Number,
        "default": 1e7
      },
      width: {
        type: [String, Number],
        "default": 400
      },
      height: {
        type: [String, Number],
        "default": 400
      },
      zoom: {
        type: Number,
        "default": 8
      },
      coordinate: {
        type: String,
        "default": "WGS84"
      },
      value: {
        type: Object,
        "default": null
      },
      layers: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      topClass: function topClass() {
        var t = [];
        return this.fullScreen && t.push("is-fullscreen"), this.className && t.push(this.className), t;
      },
      topStyle: function topStyle() {
        if (!this.fullScreen) return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      toggleIcon: function toggleIcon() {
        return this.fullScreen ? "zmdi-fullscreen-exit" : "zmdi-fullscreen";
      },
      mapComType: function mapComType() {
        return "ti-lbs-map-".concat(this.by);
      },
      mapComConf: function mapComConf() {
        return {
          mapType: this.mapType,
          center: this.lalnCenter,
          zoom: this.zoom,
          value: this.lalnValue,
          valueOptions: this.valueOptions
        };
      },
      targetCoordinate: function targetCoordinate() {
        return {
          tencent: "GCJ02",
          baidu: "BD09",
          ali: "GCJ02"
        }[this.by] || "WGS84";
      },
      arenaStyle: function arenaStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      lalnValue: function lalnValue() {
        return _.isEmpty(this.center) ? _.isEmpty(this.value) ? new qq.maps.LatLng({
          lat: 39.9042,
          lng: 116.4074
        }) : this.genLatLng(this.value) : this.genLatLng(this.center);
      },
      lalnCenter: function lalnCenter() {
        return _.isEmpty(this.center) ? _.isEmpty(this.value) ? new qq.maps.LatLng({
          lat: 39.9042,
          lng: 116.4074
        }) : this.genLatLng(this.value) : this.genLatLng(this.center);
      }
    },
    methods: {
      autoLatLng: function autoLatLng(t) {
        return t > 360 ? t / this.autoFloat : t;
      },
      genLatLng: function genLatLng() {
        var _ref48 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref48.lat,
            e = _ref48.lng;

        t = this.autoLatLng(t), e = this.autoLatLng(e);
        var i = this.coordinate,
            n = this.targetCoordinate;
        if (i == n) return {
          lat: t,
          lng: e
        };
        var a = "".concat(i, "_TO_").concat(n);
        return (0, Ti.GPS[a])(t, e);
      }
    }
  };
  Ti.Preload("ti/com/ti/lbs/map/ti-lbs-map.mjs", t);
}(), Ti.Preload("ti/com/ti/lbs/map/_com.json", {
  name: "ti-lbs-map",
  globally: !0,
  template: "./ti-lbs-map.html",
  mixins: ["./ti-lbs-map.mjs"],
  components: ["./tencent/_com.json", "./baidu/_com.json"]
}), Ti.Preload("ti/com/ti/list/com/list-row/list-row.html", '<div class="list-row"\n  :class="TopClass">\n  \x3c!--current actived row indicator--\x3e\n  <div class="row-actived-indicator"></div>\n  \x3c!-- Indents --\x3e\n  <div v-for="n in indent"\n  class="row-indent"></div>\n  \x3c!--ICON: Handler--\x3e\n  <template v-if="icon">\n    <ti-icon\n      v-if="hasRealIcon"\n        class="row-icon"\n        :value="icon"\n        @click.native.left.stop="OnClickIcon"/>\n    <div v-else\n      class="row-icon"></div>\n  </template>\n  \x3c!--ICON: Checker--\x3e\n  <ti-icon v-if="checkable"\n      class="row-checker"\n      :value="theCheckIcon"\n      @click.native.left.stop="OnClickChecker"/>\n  \x3c!-- Content --\x3e\n  <div\n    class="row-con"\n    @click.left="OnClickRow"\n    @dblclick.left="OnDblClickRow"\n    v-ti-activable>\n    <component \n      v-for="(it, index) in myDisplayItems"\n        :class="\'item-\'+index"\n        :key="it.uniqueKey"\n        :is="it.comType"\n        v-bind="it.comConf"\n        @change="onItemChanged(it, $event)"/>\n  </div>\n\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        myDisplayItems: []
      };
    },
    props: {
      indent: {
        type: Number,
        "default": 0
      },
      icon: {
        type: [Boolean, String],
        "default": null
      },
      display: {
        type: Array,
        "default": function _default() {
          return [];
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getListItemClass("row-indent-".concat(this.indent));
      },
      hasRealIcon: function hasRealIcon() {
        return this.icon && _.isString(this.icon);
      }
    },
    methods: {
      evalMyDisplayItems: function evalMyDisplayItems() {
        var _this77 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee43() {
          var t, _iterator33, _step33, e, i;

          return regeneratorRuntime.wrap(function _callee43$(_context43) {
            while (1) {
              switch (_context43.prev = _context43.next) {
                case 0:
                  t = [];
                  _iterator33 = _createForOfIteratorHelper(_this77.display);
                  _context43.prev = 2;

                  _iterator33.s();

                case 4:
                  if ((_step33 = _iterator33.n()).done) {
                    _context43.next = 12;
                    break;
                  }

                  e = _step33.value;
                  _context43.next = 8;
                  return _this77.evalDataForFieldDisplayItem({
                    itemData: _this77.data,
                    displayItem: e,
                    vars: {
                      isCurrent: _this77.isCurrent,
                      isChecked: _this77.isChecked,
                      isChanged: _this77.isChanged,
                      isActived: _this77.isActived,
                      rowId: _this77.rowId
                    }
                  });

                case 8:
                  i = _context43.sent;
                  i && t.push(i);

                case 10:
                  _context43.next = 4;
                  break;

                case 12:
                  _context43.next = 17;
                  break;

                case 14:
                  _context43.prev = 14;
                  _context43.t0 = _context43["catch"](2);

                  _iterator33.e(_context43.t0);

                case 17:
                  _context43.prev = 17;

                  _iterator33.f();

                  return _context43.finish(17);

                case 20:
                  _this77.myDisplayItems = t;

                case 21:
                case "end":
                  return _context43.stop();
              }
            }
          }, _callee43, null, [[2, 14, 17, 20]]);
        }))();
      },
      onItemChanged: function onItemChanged() {
        var _ref49 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref49.name,
            e = _ref49.value;

        this.$notify("item:changed", {
          name: t,
          value: e,
          rowId: this.rowId,
          data: this.data
        });
      },
      OnClickIcon: function OnClickIcon(t) {
        this.$notify("icon", {
          rowId: this.rowId,
          shift: t.shiftKey,
          toggle: t.ctrlKey || t.metaKey
        });
      },
      __ti_shortcut: function __ti_shortcut(t) {
        if (!_.isEmpty(this.rowToggleKey) && this.isRowToggleKey(t)) return this.onClickChecker({}), {
          prevent: !0,
          stop: !0,
          quit: !0
        };
      }
    },
    watch: {
      display: function () {
        var _display = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee44() {
          return regeneratorRuntime.wrap(function _callee44$(_context44) {
            while (1) {
              switch (_context44.prev = _context44.next) {
                case 0:
                  _context44.next = 2;
                  return this.evalMyDisplayItems();

                case 2:
                case "end":
                  return _context44.stop();
              }
            }
          }, _callee44, this);
        }));

        function display() {
          return _display.apply(this, arguments);
        }

        return display;
      }(),
      data: function () {
        var _data = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee45() {
          return regeneratorRuntime.wrap(function _callee45$(_context45) {
            while (1) {
              switch (_context45.prev = _context45.next) {
                case 0:
                  _context45.next = 2;
                  return this.evalMyDisplayItems();

                case 2:
                case "end":
                  return _context45.stop();
              }
            }
          }, _callee45, this);
        }));

        function data() {
          return _data.apply(this, arguments);
        }

        return data;
      }(),
      isCurrent: function () {
        var _isCurrent = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee46() {
          return regeneratorRuntime.wrap(function _callee46$(_context46) {
            while (1) {
              switch (_context46.prev = _context46.next) {
                case 0:
                  _context46.next = 2;
                  return this.evalMyDisplayItems();

                case 2:
                case "end":
                  return _context46.stop();
              }
            }
          }, _callee46, this);
        }));

        function isCurrent() {
          return _isCurrent.apply(this, arguments);
        }

        return isCurrent;
      }(),
      isChecked: function () {
        var _isChecked = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee47() {
          return regeneratorRuntime.wrap(function _callee47$(_context47) {
            while (1) {
              switch (_context47.prev = _context47.next) {
                case 0:
                  _context47.next = 2;
                  return this.evalMyDisplayItems();

                case 2:
                case "end":
                  return _context47.stop();
              }
            }
          }, _callee47, this);
        }));

        function isChecked() {
          return _isChecked.apply(this, arguments);
        }

        return isChecked;
      }()
    },
    mounted: function () {
      var _mounted4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee48() {
        return regeneratorRuntime.wrap(function _callee48$(_context48) {
          while (1) {
            switch (_context48.prev = _context48.next) {
              case 0:
                _context48.next = 2;
                return this.evalMyDisplayItems();

              case 2:
              case "end":
                return _context48.stop();
            }
          }
        }, _callee48, this);
      }));

      function mounted() {
        return _mounted4.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/ti/list/com/list-row/list-row.mjs", t);
}(), Ti.Preload("ti/com/ti/list/com/list-row/_com.json", {
  name: "list-row",
  globally: !1,
  template: "./list-row.html",
  methods: "@com:ti/support/field_display.mjs",
  mixins: ["@com:ti/support/list_item_mixins.mjs", "./list-row.mjs"]
}), Ti.Preload("ti/com/ti/list/ti-list.html", '<div class="ti-list"\n  :class="TopClass"\n  @click="OnClickTop"\n  v-ti-activable>\n  \x3c!--\n    Blank\n  --\x3e\n  <div\n    v-if="isDataEmpty"\n      class="ti-blank is-big">\n      <ti-loading v-bind="blankAs"/>\n  </div>\n  \x3c!--\n    Show Items\n  --\x3e\n  <template v-else>\n    <list-row\n      v-for="row in TheData"\n        :key="row.id"\n        :row-id="row.id"\n        :index="row.index"\n        :icon="row.icon"\n        :indent="row.indent"\n        :data="row.rawData"\n        :display="DisplayItems"\n        :current-id="theCurrentId"\n        :checked-ids="theCheckedIds"\n        :changed-id="changedId"\n        :checkable="checkable"\n        :selectable="selectable"\n        :openable="openable"\n        :row-toggle-key="TheRowToggleKey"\n        :class-name="itemClassName"\n        @checker="OnRowCheckerClick"\n        @select="OnRowSelect"\n        @open="OnRowOpen"/>\n  </template>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myData: []
      };
    },
    props: {
      iconBy: {
        type: [String, Function],
        "default": null
      },
      indentBy: {
        type: [String, Function],
        "default": null
      },
      itemClassName: void 0,
      display: {
        type: [Object, String, Array],
        "default": function _default() {
          return {
            key: "..",
            comType: "ti-label"
          };
        }
      },
      border: {
        type: Boolean,
        "default": !0
      },
      autoScrollIntoView: {
        type: Boolean,
        "default": !0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-hoverable": this.hoverable,
          "show-border": this.border
        });
      },
      getRowIndent: function getRowIndent() {
        var _this78 = this;

        return _.isFunction(this.indentBy) ? function (t) {
          return _this78.indentBy(t);
        } : _.isString(this.indentBy) ? function (t) {
          return _.get(t, _this78.indentBy);
        } : function (t) {
          return 0;
        };
      },
      getRowIcon: function getRowIcon() {
        var _this79 = this;

        return _.isFunction(this.iconBy) ? function (t) {
          return _this79.iconBy(t);
        } : _.isString(this.iconBy) ? function (t) {
          return _.get(t, _this79.iconBy);
        } : function (t) {
          return null;
        };
      },
      DisplayItems: function DisplayItems() {
        var t = _.concat(this.display),
            e = [];

        var _iterator34 = _createForOfIteratorHelper(t),
            _step34;

        try {
          for (_iterator34.s(); !(_step34 = _iterator34.n()).done;) {
            var i = _step34.value;

            var _t54 = this.evalFieldDisplayItem(i, {
              funcSet: this.fnSet
            });

            _t54 && e.push(_t54);
          }
        } catch (err) {
          _iterator34.e(err);
        } finally {
          _iterator34.f();
        }

        return e;
      },
      TheData: function TheData() {
        return this.myData;
      }
    },
    methods: {
      OnClickTop: function OnClickTop(t) {
        this.cancelable && Ti.Dom.hasOneClass(t.target, "ti-list", "list-item") && this.cancelRow();
      },
      scrollCurrentIntoView: function scrollCurrentIntoView() {
        if (this.autoScrollIntoView && this.myLastIndex >= 0) {
          var _Ti$Dom$findAll = Ti.Dom.findAll(".list-row.is-current", this.$el),
              _Ti$Dom$findAll2 = _slicedToArray(_Ti$Dom$findAll, 1),
              _t55 = _Ti$Dom$findAll2[0];

          if (_t55) {
            var e = Ti.Rects.createBy(_t55),
                i = Ti.Rects.createBy(this.$el);
            i.contains(e) || (this.$el.scrollTop += e.top - i.top);
          }
        }
      },
      __ti_shortcut: function __ti_shortcut(t) {
        return "ARROWUP" == t ? (this.selectPrevRow({
          payload: {
            byKeyboardArrow: !0
          }
        }), this.scrollCurrentIntoView(), {
          prevent: !0,
          stop: !0,
          quit: !0
        }) : "ARROWDOWN" == t ? (this.selectNextRow({
          payload: {
            byKeyboardArrow: !0
          }
        }), this.scrollCurrentIntoView(), {
          prevent: !0,
          stop: !0,
          quit: !0
        }) : void 0;
      }
    },
    watch: {
      data: {
        handler: function () {
          var _handler = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee49(t, e) {
            var _this80 = this;

            return regeneratorRuntime.wrap(function _callee49$(_context49) {
              while (1) {
                switch (_context49.prev = _context49.next) {
                  case 0:
                    _context49.t0 = _.isEqual(t, e);

                    if (_context49.t0) {
                      _context49.next = 5;
                      break;
                    }

                    _context49.next = 4;
                    return this.evalData(function (t) {
                      t.icon = _this80.getRowIcon(t.item), t.indent = _this80.getRowIndent(t.item);
                    });

                  case 4:
                    this.myData = _context49.sent;

                  case 5:
                  case "end":
                    return _context49.stop();
                }
              }
            }, _callee49, this);
          }));

          function handler(_x, _x2) {
            return _handler.apply(this, arguments);
          }

          return handler;
        }(),
        immediate: !0
      }
    },
    mounted: function mounted() {
      var _this81 = this;

      this.autoScrollIntoView && this.$nextTick(function () {
        _this81.scrollCurrentIntoView();
      });
    }
  };
  Ti.Preload("ti/com/ti/list/ti-list.mjs", t);
}(), Ti.Preload("ti/com/ti/list/_com.json", {
  name: "ti-list",
  globally: !0,
  template: "./ti-list.html",
  props: "@com:ti/support/list_props.mjs",
  methods: "@com:ti/support/field_display.mjs",
  mixins: ["@com:ti/support/list_mixins.mjs", "./ti-list.mjs"],
  components: ["./com/list-row", "@com:ti/label"]
}), Ti.Preload("ti/com/ti/list/_hmaker.json", {
  icon: "im-data",
  title: "i18n:com-list",
  screen: ["desktop", "tablet"],
  manual: !0,
  tutorial: !0,
  video: !0,
  editComType: "ti-form",
  editComConf: {
    fields: []
  }
}), Ti.Preload("ti/com/ti/loading/ti-loading.html", '<div class="ti-loading">\n    <div class="tl-con">\n        <ti-icon :value="icon"/>\n        <span>{{text|i18n}}</span>\n    </div>\n</div>'), function () {
  var t = {
    props: {
      icon: {
        type: String,
        "default": "fas-spinner fa-spin"
      },
      text: {
        type: String,
        "default": "i18n:loading"
      }
    }
  };
  Ti.Preload("ti/com/ti/loading/ti-loading.mjs", t);
}(), Ti.Preload("ti/com/ti/loading/_com.json", {
  name: "ti-loading",
  globally: !0,
  template: "./ti-loading.html",
  mixins: ["./ti-loading.mjs"]
}), Ti.Preload("ti/com/ti/logging/ti-logging.html", '<div class="ti-logging"\n  :class="TopClass"\n  :style="TopStyle">\n  <pre ref="pre"><div \n    v-for="(line, index) in lines"\n      :data-index="index"\n      >{{line || \'&nbsp;\'}}</div></pre>    \n</div>'), function () {
  var t = {
    props: {
      lines: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      width: {
        type: [Number, String],
        "default": null
      },
      height: {
        type: [Number, String],
        "default": null
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TopStyle: function TopStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      }
    },
    methods: {
      scrollToBottom: function scrollToBottom() {
        var t = this.$refs.pre;
        t.scrollTop = t.scrollHeight;
      }
    },
    watch: {
      lines: function lines() {
        var _this82 = this;

        this.$nextTick(function () {
          _this82.scrollToBottom();
        });
      }
    }
  };
  Ti.Preload("ti/com/ti/logging/ti-logging.mjs", t);
}(), Ti.Preload("ti/com/ti/logging/_com.json", {
  name: "ti-logging",
  globally: !0,
  template: "./ti-logging.html",
  mixins: ["./ti-logging.mjs"]
}), Ti.Preload("ti/com/ti/media/binary/ti-media-binary.html", '<div class="ti-media-binary">\n  <div class="tob-icon">\n    <ti-icon v-if="icon" :value="icon" size="1.28rem"/>\n  </div>\n  <div class="tob-title">\n    {{title}}\n  </div>\n  <div class="tob-actions">\n    <a :href="src">\n      <ti-icon value="download"/>\n      <span>{{\'download\'|i18n}}</span>\n    </a>\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      icon: {
        type: [String, Object],
        "default": null
      },
      title: {
        type: String,
        "default": null
      },
      src: {
        type: String,
        "default": null
      },
      width: {
        type: [String, Number],
        "default": ""
      },
      height: {
        type: [String, Number],
        "default": ""
      }
    },
    computed: {},
    methods: {}
  };
  Ti.Preload("ti/com/ti/media/binary/ti-media-binary.mjs", t);
}(), Ti.Preload("ti/com/ti/media/binary/_com.json", {
  name: "ti-media-binary",
  globally: !0,
  template: "./ti-media-binary.html",
  mixins: ["./ti-media-binary.mjs"]
}), Ti.Preload("ti/com/ti/media/image/ti-media-image.html", '<div class="ti-media-image" \n     :class="topClass"\n     :style="topStyle"\n     :fit-mode="fitMode"\n     v-drag-off>\n  <div class="as-con" ref="con">\n    <img ref="the_image"\n      :src="src"\n      :style="theImageStyle"\n      @load="onImageLoaded"\n      @dblclick.stop="onToggleImageFitMode">\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        naturalWidth: -1,
        naturalHeight: -1,
        viewportWidth: -1,
        viewportHeight: -1,
        fitMode: "contain",
        imgLoading: !0,
        inViewport: !1
      };
    },
    props: {
      src: {
        type: String,
        "default": null
      },
      width: {
        type: [String, Number],
        "default": ""
      },
      height: {
        type: [String, Number],
        "default": ""
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName({
          "as-fitmode-cover": "cover" == this.fitMode,
          "as-fitmode-contain": "contain" == this.fitMode,
          "is-img-loading": this.imgLoading,
          "is-in-viewport": this.inViewport
        }, this.className);
      },
      topStyle: function topStyle() {
        return {
          width: this.width,
          height: this.height
        };
      },
      theImageStyle: function theImageStyle() {
        var t = {
          visibility: "hidden",
          position: "relative"
        };

        if (this.naturalWidth > 0 && this.naturalHeight > 0) {
          var e = Ti.Rects.create({
            top: 0,
            left: 0,
            width: this.viewportWidth,
            height: this.viewportHeight
          }),
              i = Ti.Rects.create({
            top: 2,
            left: 2,
            width: this.naturalWidth,
            height: this.naturalHeight
          }).zoomTo({
            width: e.width,
            height: e.height,
            mode: this.fitMode
          });
          this.inViewport = e.contains(i, 2), t.width = i.width, t.height = i.height, t.left = (e.width - i.width) / 2, t.top = (e.height - i.height) / 2, t.visibility = "visible";
        }

        return Ti.Css.toStyle(t);
      }
    },
    methods: {
      onImageLoaded: function onImageLoaded() {
        var t = this.$refs.the_image;
        t && (this.naturalWidth = t.naturalWidth, this.naturalHeight = t.naturalHeight, this.imgLoading = !1);
      },
      onResizeViewport: function onResizeViewport() {
        var t = Ti.Rects.createBy(this.$refs.con);
        this.viewportWidth = t.width, this.viewportHeight = t.height;
      },
      onToggleImageFitMode: function onToggleImageFitMode() {
        this.fitMode = {
          contain: "cover",
          cover: "contain"
        }[this.fitMode];
      }
    },
    mounted: function mounted() {
      var _this83 = this;

      Ti.Viewport.watch(this, {
        resize: function resize() {
          _this83.onResizeViewport();
        }
      }), this.onResizeViewport();
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Viewport.unwatch(this);
    }
  };
  Ti.Preload("ti/com/ti/media/image/ti-media-image.mjs", t);
}(), Ti.Preload("ti/com/ti/media/image/_com.json", {
  name: "ti-media-image",
  globally: !0,
  template: "./ti-media-image.html",
  mixins: ["./ti-media-image.mjs"]
}), Ti.Preload("ti/com/ti/media/video/ti-media-video.html", '<div class="ti-media-video"\n    :class="topClass"\n    :style="topStyle"\n    v-drag-off>\n    <video ref="the_video"\n      :src="src"\n      controls\n      @loadeddata="onVideoLoaded"/>\n    <div class="tov-loading" v-if="loading">\n      <ti-loading/>\n    </div>\n</div>'), function () {
  var t = function t(_t56) {
    this.doResizeVideo();
  },
      e = {
    inheritAttrs: !1,
    data: function data() {
      return {
        naturalWidth: -1,
        naturalHeight: -1,
        fitMode: "none",
        loading: !0
      };
    },
    props: {
      src: {
        type: String,
        "default": null
      },
      width: {
        type: [String, Number],
        "default": ""
      },
      height: {
        type: [String, Number],
        "default": ""
      }
    },
    computed: {
      topClass: function topClass() {
        return {
          "as-none": "none" == this.fitMode,
          "as-contain": "contain" == this.fitMode,
          "as-loading": this.loading
        };
      },
      topStyle: function topStyle() {
        return {
          width: this.width,
          height: this.height
        };
      }
    },
    methods: {
      onVideoLoaded: function onVideoLoaded() {
        var t = this.$refs.the_video;
        this.naturalWidth = t.videoWidth, this.naturalHeight = t.videoHeight, this.loading = !1, this.doResizeVideo();
      },
      isContainsByViewport: function isContainsByViewport() {
        var t = Ti.Rects.createBy(this.$el),
            e = Ti.Rects.create(_objectSpread({}, t.raw("tl"), {
          width: this.naturalWidth,
          height: this.naturalHeight
        }));
        return t.contains(e);
      },
      doResizeVideo: function doResizeVideo() {
        this.isContainsByViewport() ? this.fitMode = "none" : this.fitMode = "contain";
      }
    },
    mounted: function mounted() {
      Ti.Viewport.watch(this, {
        resize: t
      });
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Viewport.unwatch(this);
    }
  };

  Ti.Preload("ti/com/ti/media/video/ti-media-video.mjs", e);
}(), Ti.Preload("ti/com/ti/media/video/_com.json", {
  name: "ti-media-video",
  globally: !0,
  template: "./ti-media-video.html",
  mixins: ["./ti-media-video.mjs"]
}), Ti.Preload("ti/com/ti/month/ti-month.html", '<div class="ti-col-data as-month" \n  :class="topClass" \n  :style="topStyle">\n  <ti-list v-for="list in theListGroup"\n    :key="list.key"\n    :data="list.data"\n    :display="\'text\'"\n    :current-id="list.currentId"\n    :cancelable="false"\n    @select="onListSelected(list.key, $event)"/>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      value: {
        type: [String, Number, Date],
        "default": null
      },
      height: {
        type: [Number, String],
        "default": 200
      },
      beginYear: {
        type: [Number, String],
        "default": 1970
      },
      endYear: {
        type: [Number, String],
        "default": new Date().getFullYear() + 1
      }
    },
    computed: {
      topClass: function topClass() {
        return this.getTopClass();
      },
      topStyle: function topStyle() {
        return {
          height: Ti.Css.toSize(this.height)
        };
      },
      theDate: function theDate() {
        return Ti.Types.toDate(this.value, null);
      },
      theListGroup: function theListGroup() {
        return [this.createList("year", 1 * this.beginYear, 1 * this.endYear, this.theDate ? this.theDate.getFullYear() : null, {
          reverse: !0
        }), this.createList("month", 0, 12, this.theDate ? this.theDate.getMonth() : null, {
          getText: function getText(t) {
            var e = Ti.DateTime.getMonthAbbr(t);
            return Ti.I18n.get(e);
          }
        })];
      }
    },
    methods: {
      createList: function createList(t, e, i, n) {
        var _ref50 = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {},
            _ref50$reverse = _ref50.reverse,
            a = _ref50$reverse === void 0 ? !1 : _ref50$reverse,
            _ref50$getText = _ref50.getText,
            s = _ref50$getText === void 0 ? function (t) {
          return t;
        } : _ref50$getText;

        var o = {
          key: t,
          currentId: "R-".concat(n),
          data: []
        };

        for (var _t57 = e; _t57 < i; _t57++) {
          o.data.push({
            id: "R-".concat(_t57),
            value: _t57,
            text: s(_t57)
          });
        }

        return a && o.data.reverse(), o;
      },
      onListSelected: function onListSelected(t) {
        var _ref51 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            e = _ref51.current;

        var i = _.get(e, "value") || 0,
            n = this.theDate || new Date(),
            a = {
          month: function month(t) {
            return new Date(n.getFullYear(), t);
          },
          year: function year(t) {
            return new Date(t, n.getMonth());
          }
        }[t](i);
        this.$notify("change", a);
      }
    }
  };
  Ti.Preload("ti/com/ti/month/ti-month.mjs", t);
}(), Ti.Preload("ti/com/ti/month/_com.json", {
  name: "ti-month",
  globally: !0,
  template: "./ti-month.html",
  mixins: ["./ti-month.mjs"],
  components: ["@com:ti/list"]
}), Ti.Preload("ti/com/ti/obj/creation/ti-obj-creation.html", '<div class="ti-obj-creation">\n  <div class="toc-types"\n    v-if="hasTypes">\n    <ul>\n      <li v-if="freeCreate"\n        @click="setCurrentType(null)">\n        <span class="ti-icon"></span>\n        <span class="ti-text">{{\'toc-auto-type\'|i18n}}</span>\n      </li>\n      <li v-for="tp of types"\n        :class="getTypeItemClassName(tp)"\n        @click="setCurrentType(tp)">\n        <ti-icon :value="tp.icon"/>\n        <span class="ti-text">{{tp.text}}</span>\n        <em v-if="\'DIR\' != tp.race">(*.{{tp.name}})</em>\n      </li>\n    </ul>\n  </div>\n  <div class="toc-main">\n    <div v-if="hasCurrentType"\n      class="toc-info">\n      <div class="toc-thumb">\n        <ti-icon :value="currentType.thumb"/>\n      </div>\n      <div class="toc-text">{{currentType.text}}</div>\n      <div v-if="!currentIsDir"\n        class="toc-name">*.{{currentType.name}}</div>\n      <div class="toc-brief"\n        v-if="currentType.brief">{{currentType.brief}}</div>\n    </div>\n    <div v-else\n      class="toc-free">\n      <span>{{\'toc-free\'|i18n}}</span>\n    </div>\n    <div class="toc-input">\n      <input\n        ref="input" \n        :value="value.name"\n        :placeholder="\'toc-tip\'|i18n" \n        @change="onChange" \n        spellcheck="false">\n    </div>\n  </div>\n</div>'), function () {
  var t = {
    props: {
      types: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      value: {
        type: Object,
        "default": function _default() {
          return {
            name: "",
            type: "",
            race: ""
          };
        }
      },
      trimed: {
        type: Boolean,
        "default": !0
      },
      freeCreate: {
        type: Boolean,
        "default": !1
      }
    },
    computed: {
      hasTypes: function hasTypes() {
        return !_.isEmpty(this.types);
      },
      currentIsDir: function currentIsDir() {
        return "DIR" == this.value.race;
      },
      hasCurrentType: function hasCurrentType() {
        return this.value.type && this.value.race;
      },
      currentType: function currentType() {
        var _iterator35 = _createForOfIteratorHelper(this.types),
            _step35;

        try {
          for (_iterator35.s(); !(_step35 = _iterator35.n()).done;) {
            var _t58 = _step35.value;
            if (_t58.name == this.value.type) return _t58;
          }
        } catch (err) {
          _iterator35.e(err);
        } finally {
          _iterator35.f();
        }
      }
    },
    methods: {
      isCurrent: function isCurrent(t) {
        return this.value.type == t.name;
      },
      getTypeItemClassName: function getTypeItemClassName(t) {
        return this.isCurrent(t) ? "as-current" : "";
      },
      setCurrentType: function setCurrentType(t) {
        t ? (this.value.type = t.name, this.value.race = t.race) : (this.value.type = "", this.value.race = ""), this.onChange(), this.$notify("input", this.value);
      },
      onChange: function onChange() {
        var t = this.$refs.input.value;

        if (this.trimed && (t = _.trim(t)), this.value.name = t, "DIR" != this.value.race && this.value.type && this.value.name) {
          var _t59 = ".".concat(this.value.type);

          if (!this.value.name.endsWith(_t59)) {
            var e = Ti.Util.getMajorName(this.value.name);
            this.value.name = e + _t59;
          }
        }

        this.$notify("input", this.value);
      }
    },
    mounted: function mounted() {
      this.hasTypes && this.setCurrentType(this.types[0]), this.$refs.input.focus();
    }
  };
  Ti.Preload("ti/com/ti/obj/creation/ti-obj-creation.mjs", t);
}(), Ti.Preload("ti/com/ti/obj/creation/_com.json", {
  name: "ti-obj-creation",
  globally: !0,
  i18n: "@i18n:ti-obj-creation",
  template: "./ti-obj-creation.html",
  mixins: ["./ti-obj-creation.mjs"]
}), Ti.Preload("ti/com/ti/obj/thumb/ti-obj-thumb.html", '<div class="ti-obj-thumb" \n    :class="TopClass">\n  \x3c!--\n    Preview && Process Bar\n  --\x3e\n  <header>\n    \x3c!--Preview Part--\x3e\n    <div class="as-preview">\n      \x3c!-- Local Image --\x3e\n      <template v-if="isLocalImage">\n        <img ref="localImage" is-local-file>\n      </template>\n      \x3c!-- Local File --\x3e\n      <template v-else-if="isLocalFile">\n        <ti-icon :value="LocalFileIcon"/>\n      </template>\n      \x3c!-- Remote Image --\x3e\n      <template v-else-if="\'image\'==preview.type">\n        <img :src="preview.value">\n      </template>\n      \x3c!-- Icon --\x3e\n      <template v-else>\n        <ti-icon :value="preview"/>\n      </template>\n      \x3c!--Badge--\x3e\n      <template v-if="badges">\n        <div v-if="badges.NW" class="as-badge at-nw"><ti-icon :value="badges.NW"/></div>\n        <div v-if="badges.NE" class="as-badge at-ne"><ti-icon :value="badges.NE"/></div>\n        <div v-if="badges.SW" class="as-badge at-sw"><ti-icon :value="badges.SW"/></div>\n        <div v-if="badges.SE" class="as-badge at-se"><ti-icon :value="badges.SE"/></div>\n      </template>\n    </div>\n    \x3c!--Process bar--\x3e\n    <div v-if="isShowProgress"\n      class="as-progress ti-progress-bar">\n      <span class="bar-tip">{{ProgressTip}}</span>\n      <b class="bar-outer">\n        <em class="bar-inner" \n            :style="ProgressStyle"></em>\n      </b>\n    </div>\n  </header>\n  \x3c!--\n    Status Mask\n  --\x3e\n  <section class="as-status" v-if="status">\n    <ti-icon \n      :value="status"\n      font-size="2em"\n      width="3em"\n      height="3em"/>\n  </section>\n  \x3c!--\n    Footer for item title text\n  --\x3e\n  <footer v-if="showFooter">\n    <div class="as-title">\n      <a v-if="hasHref"\n        :href="TheHref"\n        @click.prevent>{{title}}</a>\n      <span v-else>{{title}}</span>\n    </div>\n  </footer>\n</div>'), function () {
  var t = {
    props: {
      index: {
        type: Number,
        "default": -1
      },
      id: {
        type: String,
        "default": null
      },
      title: {
        type: String,
        "default": null
      },
      preview: {
        type: [String, Object],
        "default": "broken_image"
      },
      href: {
        type: String,
        "default": null
      },
      status: {
        type: [String, Object],
        "default": null
      },
      progress: {
        type: Number,
        "default": -1
      },
      visibility: {
        type: String,
        "default": "show"
      },
      showFooter: {
        type: Boolean,
        "default": !0
      },
      badges: {
        type: Object,
        "default": function _default() {
          return {
            NW: null,
            NE: null,
            SW: null,
            SE: null
          };
        }
      }
    },
    watch: {
      preview: function preview() {
        this.renderLocalFile();
      }
    },
    computed: {
      TopClass: function TopClass() {
        var _this84 = this;

        return this.getTopClass({
          "is-hide": "hide" == this.visibility,
          "is-weak": "weak" == this.visibility
        }, function () {
          return _this84.status ? "is-status-".concat(_this84.status) : null;
        });
      },
      PreviewType: function PreviewType() {
        return _.get(this.preview, "type") || "auto";
      },
      isLocalFile: function isLocalFile() {
        return "localFile" == this.PreviewType;
      },
      isLocalImage: function isLocalImage() {
        return this.isLocalFile && /^image\//.test(this.LocalFile.type);
      },
      LocalFile: function LocalFile() {
        if (this.isLocalFile) return this.preview.value;
      },
      LocalFileIcon: function LocalFileIcon() {
        if (this.isLocalFile) {
          var _t60 = this.LocalFile,
              e = {
            type: Ti.Util.getSuffixName(_t60.name),
            mime: _t60.type,
            race: Ti.Util.isNil(_t60.type) ? "DIR" : "FILE"
          };
          return Ti.Icons.get(e);
        }
      },
      isShowProgress: function isShowProgress() {
        return this.progress >= 0;
      },
      ProgressTip: function ProgressTip() {
        return Ti.S.toPercent(this.progress, {
          fixed: 1,
          auto: !1
        });
      },
      ProgressStyle: function ProgressStyle() {
        return {
          width: this.ProgressTip
        };
      },
      hasHref: function hasHref() {
        return !!this.href;
      },
      TheHref: function TheHref() {
        return encodeURI(this.href);
      }
    },
    methods: {
      renderLocalFile: function renderLocalFile() {
        var _this85 = this;

        if (this.isLocalImage) {
          var _t61 = new FileReader();

          _t61.onload = function (t) {
            _this85.$refs.localImage && (_this85.$refs.localImage.src = t.target.result);
          }, _t61.readAsDataURL(this.preview.value);
        }
      }
    },
    mounted: function mounted() {
      this.renderLocalFile();
    }
  };
  Ti.Preload("ti/com/ti/obj/thumb/ti-obj-thumb.mjs", t);
}(), Ti.Preload("ti/com/ti/obj/thumb/_com.json", {
  name: "ti-obj-thumb",
  globally: !0,
  template: "./ti-obj-thumb.html",
  mixins: ["./ti-obj-thumb.mjs"]
}), Ti.Preload("ti/com/ti/obj/tile/ti-obj-tile.html", '<div class="ti-obj-tile" \n    :class="topClass">\n  \x3c!--\n    Preview Image\n  --\x3e\n  <div class="as-preview">\n    <a v-if="hasHref"\n      :href="href"\n      @click="onClick"\n      ><ti-icon \n        :value="preview"\n        :height="previewHeight"/></a>\n    <ti-icon v-else\n      :value="preview"\n      :height="previewHeight"/>\n  </div>\n  \x3c!--\n    Title\n  --\x3e\n  <div class="as-title">\n    <a v-if="hasHref"\n      :href="href"\n      @click="onClick"\n    >{{title}}</a>\n    \x3c!--\n      Without Href\n    --\x3e\n    <span v-else>{{title}}</span>\n  </div>\n  \x3c!--\n    Footer\n  --\x3e\n  <div v-if="hasBrief"\n    class="as-brief">\n    <span>{{brief}}</span>\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      index: {
        type: Number,
        "default": -1
      },
      id: {
        type: String,
        "default": null
      },
      preview: {
        type: [Object, String],
        "default": function _default() {
          return {
            type: "font",
            value: "broken_image"
          };
        }
      },
      previewHeight: {
        type: [String, Number],
        "default": null
      },
      hover: {
        type: String,
        "default": null,
        validator: function validator(t) {
          return !t || /^(up|down|left|right|zoom)$/.test(t);
        }
      },
      title: {
        type: String,
        "default": null
      },
      href: {
        type: String,
        "default": null
      },
      brief: {
        type: String,
        "default": null
      },
      emitBy: {
        type: Object,
        "default": function _default() {
          return {
            evantName: null,
            payload: {}
          };
        }
      }
    },
    computed: {
      topClass: function topClass() {
        var t = [this.className];
        return this.hover && (t.push("on-hover"), t.push("on-hover-".concat(this.hover))), t;
      },
      hasHref: function hasHref() {
        return !!this.href;
      },
      hasBrief: function hasBrief() {
        return !!this.brief;
      }
    },
    methods: {
      onClick: function onClick(t) {
        if (this.emitBy.eventName) {
          t.preventDefault();
          var e = this.emitBy.eventName,
              i = this.emitBy.payload || {};
          console.log("onClick", e, i), this.$notify(e, i);
        }
      }
    }
  };
  Ti.Preload("ti/com/ti/obj/tile/ti-obj-tile.mjs", t);
}(), Ti.Preload("ti/com/ti/obj/tile/_com.json", {
  name: "ti-obj-tile",
  globally: !0,
  template: "./ti-obj-tile.html",
  mixins: ["./ti-obj-tile.mjs"]
}), Ti.Preload("ti/com/ti/paging/jumper/ti-paging-jumper.html", '<div class="ti-paging-jumper">\n  <div \n    class="pj-btn"\n    :class="getBtnClass(1)"\n    @click="OnJumpTo(1)">\n      <ti-icon value="zmdi-skip-previous"/>\n      <span class="it-text">{{\'paging-first\'|i18n}}</span></div>\n  <div \n    class="pj-btn"\n    :class="getBtnClass(value.pn-1)"\n    @click="OnJumpTo(value.pn-1)">\n      <ti-icon value="zmdi-chevron-left"/>\n      <span class="it-text">{{\'paging-prev\'|i18n}}</span></div>\n  <div \n    class="pj-current"\n    :class="PageNumberClass"\n    @click="OnClickCurrent">\n    <b>{{value.pn}}</b>\n  </div>\n  <div \n    class="pj-btn"\n    :class="getBtnClass(value.pn+1)"\n    @click="OnJumpTo(value.pn+1)">\n      <span class="it-text">{{\'paging-next\'|i18n}}</span>\n      <ti-icon value="zmdi-chevron-right"/></div>\n  <div \n    class="pj-btn"\n    :class="getBtnClass(value.pgc)"\n    @click="OnJumpTo(value.pgc)">\n      <span class="it-text">{{\'paging-last\'|i18n}}</span>\n      <ti-icon value="zmdi-skip-next"/></div>\n  <div\n    class="pj-sum"\n    :class="SumClass"\n    @click="OnClickSum">{{\'paging-sum\'|i18n(value)}}</div>\n</div>'), function () {
  var t = {
    props: {
      value: {
        type: Object,
        "default": function _default() {
          return {
            pn: 0,
            pgsz: 0,
            pgc: 0,
            sum: 0,
            count: 0
          };
        }
      }
    },
    computed: {
      PageNumberClass: function PageNumberClass() {
        return this.value.pgc > 1 ? "is-enabled" : "is-disabled";
      },
      SumClass: function SumClass() {
        return this.value.pgsz > 0 ? "is-enabled" : "is-disabled";
      }
    },
    methods: {
      isInvalidPageNumber: function isInvalidPageNumber(t) {
        return t <= 0 || t > this.value.pgc || t == this.value.pn;
      },
      getBtnClass: function getBtnClass(t) {
        return this.isInvalidPageNumber(t) ? "is-disabled" : "is-enabled";
      },
      OnJumpTo: function OnJumpTo(t) {
        this.isInvalidPageNumber(t) || this.$notify("change", {
          pn: t,
          pgsz: this.value.pgsz
        });
      },
      OnClickCurrent: function OnClickCurrent() {
        var _this86 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee50() {
          var t, e, i;
          return regeneratorRuntime.wrap(function _callee50$(_context50) {
            while (1) {
              switch (_context50.prev = _context50.next) {
                case 0:
                  if (!(_this86.value.pgc <= 1)) {
                    _context50.next = 2;
                    break;
                  }

                  return _context50.abrupt("return");

                case 2:
                  t = Ti.I18n.getf("paging-change-pn", _this86.value);
                  _context50.next = 5;
                  return Ti.Prompt(t, {
                    value: _this86.value.pn
                  });

                case 5:
                  e = _context50.sent;

                  if (!(!e || e == _this86.value.pn)) {
                    _context50.next = 8;
                    break;
                  }

                  return _context50.abrupt("return");

                case 8:
                  i = parseInt(e);

                  if (!(isNaN(i) || i <= 0 || i > _this86.value.pgc)) {
                    _context50.next = 14;
                    break;
                  }

                  t = Ti.I18n.getf("paging-change-pn-invalid", _this86.value);
                  _context50.next = 13;
                  return Ti.Alert(t, {
                    title: "i18n:warn",
                    type: "warn",
                    icon: "im-warning",
                    width: 420
                  });

                case 13:
                  return _context50.abrupt("return", void _context50.sent);

                case 14:
                  _this86.$notify("change", {
                    pn: i,
                    pgsz: _this86.value.pgsz
                  });

                case 15:
                case "end":
                  return _context50.stop();
              }
            }
          }, _callee50);
        }))();
      },
      OnClickSum: function OnClickSum() {
        var _this87 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee51() {
          var t, e, i;
          return regeneratorRuntime.wrap(function _callee51$(_context51) {
            while (1) {
              switch (_context51.prev = _context51.next) {
                case 0:
                  t = Ti.I18n.getf("paging-change-pgsz", _this87.value);
                  _context51.next = 3;
                  return Ti.Prompt(t, {
                    value: _this87.value.pgsz
                  });

                case 3:
                  e = _context51.sent;

                  if (!(!e || e == _this87.value.pgsz)) {
                    _context51.next = 6;
                    break;
                  }

                  return _context51.abrupt("return");

                case 6:
                  i = parseInt(e);

                  if (!(isNaN(i) || i <= 0)) {
                    _context51.next = 12;
                    break;
                  }

                  _context51.next = 10;
                  return Ti.Alert("i18n:paging-change-pgsz-invalid", {
                    title: "i18n:warn",
                    type: "warn",
                    icon: "im-warning",
                    width: 420
                  });

                case 10:
                  _context51.next = 13;
                  break;

                case 12:
                  _this87.$notify("change:pgsz", i), _this87.$notify("change", {
                    pn: 1,
                    pgsz: i
                  });

                case 13:
                case "end":
                  return _context51.stop();
              }
            }
          }, _callee51);
        }))();
      }
    }
  };
  Ti.Preload("ti/com/ti/paging/jumper/ti-paging-jumper.mjs", t);
}(), Ti.Preload("ti/com/ti/paging/jumper/_com.json", {
  name: "ti-paging-jumper",
  globally: !0,
  template: "./ti-paging-jumper.html",
  mixins: ["./ti-paging-jumper.mjs"]
}), Ti.Preload("ti/com/ti/roadblock/ti-roadblock.html", '<div class="ti-web-roadblock">\n  <div class="as-main">\n    <div v-if="icon" class="as-icon">\n      <ti-icon :value="icon"/>\n    </div>\n    <div v-if="text" class="as-text">\n      <span>{{text | i18n}}</span>\n    </div>\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      icon: {
        type: String,
        "default": "fas-exclamation-triangle"
      },
      text: {
        type: String,
        "default": null
      }
    },
    computed: {}
  };
  Ti.Preload("ti/com/ti/roadblock/ti-roadblock.mjs", t);
}(), Ti.Preload("ti/com/ti/roadblock/_com.json", {
  name: "ti-roadblock",
  globally: !0,
  template: "./ti-roadblock.html",
  mixins: ["./ti-roadblock.mjs"],
  components: []
}), Ti.Preload("ti/com/ti/session/badge/ti-session-badge.html", '<div class="ti-session-badge"\n  :class="TopClass">\n  \x3c!--\n    Has Session, show account info\n  --\x3e\n  <template v-if="hasSession">\n    \x3c!--Avatar--\x3e\n    <div v-if="hasAvatar"\n      class="as-avatar">\n      <img :src="myAvatar"/>\n    </div>\n    \x3c!--User Icon--\x3e\n    <div v-else\n      class="as-icon">\n      <ti-icon :value="myIcon"/>\n    </div>\n    \x3c!--User Name--\x3e\n    <div class="as-name">{{myName}}</div>\n    \x3c!--Links--\x3e\n    <div v-for="li in theLinks"\n      class="as-link">\n      \x3c!--Icon--\x3e\n      <ti-icon\n        v-if="li.icon"\n          class="it-icon"\n          :value="li.icon"/>\n      \x3c!--Text--\x3e\n      <a\n        @click.left="OnClickLink(li, $event)"\n        :href="li.href"\n        :target="li.newtab?\'_blank\':null">{{li.text|i18n}}</a>\n    </div>\n  </template>\n  \x3c!--\n    Without session, show login link\n  --\x3e\n  <template v-else>\n    <div v-if="loginIcon"\n      class="as-icon">\n      <ti-icon :value="loginIcon"/>\n    </div>\n    <div class="as-link">\n      <a @click="$notify(loginEvent)">{{\'login\'|i18n}}</a>\n    </div>\n  </template>\n</div>'), function () {
  var t = {
    props: {
      me: {
        type: Object,
        "default": null
      },
      avatarKey: {
        type: String,
        "default": null
      },
      avatarSrc: {
        type: String,
        "default": null
      },
      loginIcon: {
        type: String,
        "default": "zmdi-account-circle"
      },
      nameKeys: {
        type: [String, Array],
        "default": "name"
      },
      loginEvent: {
        type: String,
        "default": "do:login"
      },
      logoutEvent: {
        type: String,
        "default": "do:logout"
      },
      links: {
        type: Array,
        "default": function _default() {
          return [];
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      theLinks: function theLinks() {
        var t = [];

        var _iterator36 = _createForOfIteratorHelper(this.links),
            _step36;

        try {
          for (_iterator36.s(); !(_step36 = _iterator36.n()).done;) {
            var e = _step36.value;
            e.inSession && !this.hasSession || t.push(e);
          }
        } catch (err) {
          _iterator36.e(err);
        } finally {
          _iterator36.f();
        }

        return this.hasSession ? t.push({
          text: "i18n:logout",
          emit: this.logoutEvent
        }) : t.push({
          text: "i18n:login",
          emit: this.loginEvent
        }), t;
      },
      myName: function myName() {
        if (this.me) return Ti.Util.getOrPick(this.me, this.nameKeys) || Ti.I18n.get("mine");
      },
      myIcon: function myIcon() {
        return this.me ? 2 == this.me.sex ? "im-user-female" : "im-user-male" : "far-user";
      },
      myAvatar: function myAvatar() {
        if (this.avatarSrc) return Ti.S.renderBy(this.avatarSrc, this.me);
      },
      hasAvatar: function hasAvatar() {
        return this.avatarSrc && this.avatarKey && this.me && this.me[this.avatarKey];
      },
      hasSession: function hasSession() {
        return !!this.me;
      }
    },
    methods: {
      OnClickLink: function OnClickLink(t, e) {
        t.emit && (e.preventDefault(), this.$notify(t.emit));
      }
    }
  };
  Ti.Preload("ti/com/ti/session/badge/ti-session-badge.mjs", t);
}(), Ti.Preload("ti/com/ti/session/badge/_com.json", {
  name: "ti-session-badge",
  globally: !0,
  template: "./ti-session-badge.html",
  mixins: ["./ti-session-badge.mjs"]
}), function () {
  function t() {
    var _ref52 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        t = _ref52.varName,
        e = _ref52.vars,
        i = _ref52.matched;

    if (i.startsWith("$$")) return i.substring(1);

    var n = /^(=)?([^?]+)(\?(.*))?$/.exec(t),
        a = "=" == n[1] ? e.vars : e.itemData,
        s = _.trim(n[2]),
        o = Ti.Util.fallbackNil(_.trim(n[4]), i),
        l = Ti.Util.getOrPick(a, s);

    return Ti.Util.fallback(l, o);
  }

  function e(i) {
    var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    if (_.isString(i)) {
      var a = /^\(\)=>([^(]+)\(([^)]*)\)$/.exec(i);

      if (a) {
        var _t62 = _.trim(a[1]),
            _i10 = _.trim(a[2]),
            s = Ti.S.joinArgs(_i10, [], function (t) {
          return e(t, n);
        });

        return _.get(n.$FuncSet, _t62).apply(n, s);
      }

      if (a = /^\$\{=([^${}=]+)\}$/.exec(i)) {
        var _t63 = _.trim(a[1]);

        return ".." == _t63 ? n.itemData : "value" == _t63 ? n.value : Ti.Util.fallback(_.get(n.vars, _t63), i);
      }

      if (a = /^(\((.+)\)\?)?(.+)$/.exec(i)) {
        var _e17 = _.trim(a[2]),
            _i11 = _.trim(a[3]);

        return _e17 ? _.get(n.itemData, _e17) ? Ti.S.renderBy(_i11, n, {
          iteratee: t
        }) : null : Ti.S.renderBy(_i11, n, {
          iteratee: t
        });
      }

      return i;
    }

    if (_.isPlainObject(i)) {
      var _t64 = {};
      return _.forEach(i, function (i, a) {
        var s = e(i, n);
        "..." == a ? _.assign(_t64, s) : _t64[a] = s;
      }), _t64;
    }

    if (_.isArray(i)) {
      var _t65 = [];

      var _iterator37 = _createForOfIteratorHelper(i),
          _step37;

      try {
        for (_iterator37.s(); !(_step37 = _iterator37.n()).done;) {
          var _a2 = _step37.value;

          var _i12 = e(_a2, n);

          _t65.push(_i12);
        }
      } catch (err) {
        _iterator37.e(err);
      } finally {
        _iterator37.f();
      }

      return _t65;
    }

    return i;
  }

  var i = {
    evalFieldDisplayItem: function evalFieldDisplayItem() {
      var _this88 = this;

      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      var _ref53 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          e = _ref53.funcSet,
          i = _ref53.defaultKey;

      var n = function () {
        if (Ti.Util.isNil(t)) return i ? {
          key: i,
          comType: "ti-label"
        } : null;

        if (_.isPlainObject(t)) {
          var _e18 = _.assign({
            key: i,
            comType: "ti-label"
          }, t);

          if (_e18.transformer) {
            var _t66 = {
              context: _this88,
              partialRight: !0
            };
            _e18.transformer = Ti.Util.genInvoking(_e18.transformer, _t66);
          }

          return _e18;
        }

        if (_.isArray(t)) return {
          key: t,
          comType: "ti-label"
        };
        if (!0 === t) return {
          key: i,
          comType: "ti-label"
        };

        if (_.isString(t)) {
          var _e19 = /^<([^:>=]*)(:([^>]+))?>$/.exec(t);

          if (_e19) return {
            key: _e19[1] || i || ":ti-icon",
            defaultAs: _e19[3] || void 0,
            comType: "ti-icon"
          };
          if (_e19 = /^[@#]([^\(]+)\(([^)]+)\)$/.exec(t)) return {
            key: _e19[2] || i,
            comType: "ti-label",
            comConf: {
              dict: _e19[1],
              className: "is-nowrap"
            }
          };
          if (_e19 = /^<=([^:]+)(:(.+))?>$/.exec(t)) return {
            key: _e19[3] || i || Symbol(t),
            comType: _e19[1]
          };
          if (_e19 = /^([^+-]+)(([+-])>(.+))?$/.exec(t)) return {
            key: _.trim(_e19[1] || _e19[0]),
            comType: "ti-label",
            comConf: {
              newTab: "+" == _e19[3],
              href: _.trim(_e19[4])
            }
          };
        }

        return t;
      }();

      if (n.dict) {
        var _Ti$DictFactory$expla3 = Ti.DictFactory.explainDictName(n.dict),
            _t67 = _Ti$DictFactory$expla3.name,
            _e20 = _Ti$DictFactory$expla3.vKey;

        n.$dict = Ti.DictFactory.CheckDict(_t67), n.$dictValueKey = _e20 || ".text";
      }

      return n.$FuncSet = e, n;
    },
    evalDataForFieldDisplayItem: function evalDataForFieldDisplayItem() {
      var _arguments12 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee52() {
        var _ref54, _ref54$itemData, t, _ref54$displayItem, i, _ref54$vars, n, _ref54$autoIgnoreNil, a, _ref54$autoValue, s, o, l, r, c;

        return regeneratorRuntime.wrap(function _callee52$(_context52) {
          while (1) {
            switch (_context52.prev = _context52.next) {
              case 0:
                _ref54 = _arguments12.length > 0 && _arguments12[0] !== undefined ? _arguments12[0] : {}, _ref54$itemData = _ref54.itemData, t = _ref54$itemData === void 0 ? {} : _ref54$itemData, _ref54$displayItem = _ref54.displayItem, i = _ref54$displayItem === void 0 ? {} : _ref54$displayItem, _ref54$vars = _ref54.vars, n = _ref54$vars === void 0 ? {} : _ref54$vars, _ref54$autoIgnoreNil = _ref54.autoIgnoreNil, a = _ref54$autoIgnoreNil === void 0 ? !0 : _ref54$autoIgnoreNil, _ref54$autoValue = _ref54.autoValue, s = _ref54$autoValue === void 0 ? "value" : _ref54$autoValue;
                o = i, l = o.defaultAs;

                if (!(_.isArray(o.key) ? l = _.pick(t, o.key) : _.isString(o.key) && (l = ".." == o.key ? t : /^'[^']+'$/.test(o.key) ? o.key.substring(1, o.key.length - 1) : Ti.Util.fallback(Ti.Util.getOrPick(t, o.key), l)), _.isFunction(o.transformer) && (Ti.Util.isNil(l) && !o.transNil || (l = o.transformer(l))), a && Ti.Util.isNil(l) && Ti.Util.fallback(o.ignoreNil, !0))) {
                  _context52.next = 4;
                  break;
                }

                return _context52.abrupt("return");

              case 4:
                _context52.t0 = o.$dict;

                if (!_context52.t0) {
                  _context52.next = 9;
                  break;
                }

                _context52.next = 8;
                return o.$dict.getItemAs(o.$dictValueKey, l);

              case 8:
                l = _context52.sent;

              case 9:
                r = _.cloneDeep(o), c = {};
                return _context52.abrupt("return", (_.isFunction(o.comConf) ? c = _.assign({}, o.comConf(t)) : o.comConf && (c = e(o.comConf, {
                  vars: n,
                  itemData: t,
                  value: l,
                  $FuncSet: o.$FuncSet
                })), s && _.isUndefined(c[s]) && (c[s] = l), r.comConf = c, r.uniqueKey = _.concat(r.key, r.comType).join("-"), r));

              case 11:
              case "end":
                return _context52.stop();
            }
          }
        }, _callee52);
      }))();
    }
  };
  Ti.Preload("ti/com/ti/support/field_display.mjs", i);
}(), function () {
  var t = {
    isSelectedItem: function isSelectedItem() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      var _ref55 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref55$value = _ref55.value,
          e = _ref55$value === void 0 ? null : _ref55$value,
          _ref55$multi = _ref55.multi,
          i = _ref55$multi === void 0 ? !1 : _ref55$multi;

      return i ? _.isArray(e) && _.indexOf(e, t.value) >= 0 : _.isEqual(e, t.value);
    },
    normalizeData: function normalizeData() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

      var _ref56 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref56$emptyItem = _ref56.emptyItem,
          e = _ref56$emptyItem === void 0 ? null : _ref56$emptyItem,
          _ref56$multi = _ref56.multi,
          i = _ref56$multi === void 0 ? !1 : _ref56$multi,
          _ref56$value = _ref56.value,
          n = _ref56$value === void 0 ? null : _ref56$value,
          _ref56$focusIndex = _ref56.focusIndex,
          a = _ref56$focusIndex === void 0 ? -1 : _ref56$focusIndex,
          _ref56$mapping = _ref56.mapping,
          s = _ref56$mapping === void 0 ? null : _ref56$mapping,
          _ref56$defaultIcon = _ref56.defaultIcon,
          o = _ref56$defaultIcon === void 0 ? null : _ref56$defaultIcon,
          _ref56$iteratee = _ref56.iteratee,
          l = _ref56$iteratee === void 0 ? null : _ref56$iteratee,
          _ref56$defaultTipKey = _ref56.defaultTipKey,
          r = _ref56$defaultTipKey === void 0 ? null : _ref56$defaultTipKey;

      var c = 0,
          d = [];

      if (!i && e) {
        var _t68 = _.cloneDeep(e);

        _t68.selected = _.isUndefined(_t68.value) || _.isNull(_t68.value) ? _.isNull(n) : this.isSelectedItem(_t68, {
          value: n,
          multi: i
        }), _.isFunction(l) && (_t68 = l(_t68, c) || _t68), d.push(_t68), c++;
      }

      var h = [];

      if (_.isArray(t)) {
        var _e21 = s ? _.defaults(_objectSpread({}, s), {
          icon: "icon",
          text: "text",
          value: "value",
          tip: "tip"
        }) : null;

        var _iterator38 = _createForOfIteratorHelper(t),
            _step38;

        try {
          for (_iterator38.s(); !(_step38 = _iterator38.n()).done;) {
            var _i13 = _step38.value;

            if (_.isPlainObject(_i13)) {
              var _t69 = void 0;

              !(_t69 = _e21 ? Ti.Util.translate(_i13, _e21) : _.cloneDeep(_i13)).tip && r && (_t69.tip = _i13[r]), h.push(_t69);
            } else h.push({
              icon: o,
              text: Ti.Types.toStr(_i13),
              value: _i13
            });
          }
        } catch (err) {
          _iterator38.e(err);
        } finally {
          _iterator38.f();
        }
      }

      for (var _t70 = 0; _t70 < h.length; _t70++) {
        var _e22 = h[_t70];
        _e22.index = _t70, _e22.focused = _t70 == a, _e22.icon = _e22.icon || o, _e22.selected = this.isSelectedItem(_e22, {
          value: n,
          multi: i
        }), _.isFunction(l) && (h[_t70] = l(_e22, _t70) || _e22);
      }

      return h;
    },
    matchItemByKey: function matchItemByKey() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "value";
      var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "equal";
      var n = arguments.length > 3 ? arguments[3] : undefined;
      var a = t[e],
          s = {
        equal: function equal() {
          return _.isEqual(a, n);
        },
        starts: function starts() {
          return _.startsWith(a, n);
        },
        contains: function contains() {
          if (_.isString(a)) return a.indexOf(n + "") >= 0;

          _.indexOf(a, n);
        }
      }[i];
      return !!_.isFunction(s) && s();
    },
    findItemInList: function findItemInList(t) {
      var _ref57 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref57$list = _ref57.list,
          e = _ref57$list === void 0 ? [] : _ref57$list,
          _ref57$matchValue = _ref57.matchValue,
          i = _ref57$matchValue === void 0 ? "equal" : _ref57$matchValue,
          _ref57$matchText = _ref57.matchText,
          n = _ref57$matchText === void 0 ? "off" : _ref57$matchText;

      if (_.isArray(e) && !_.isEmpty(e)) {
        var _iterator39 = _createForOfIteratorHelper(e),
            _step39;

        try {
          for (_iterator39.s(); !(_step39 = _iterator39.n()).done;) {
            var a = _step39.value;
            if (this.matchItemByKey(a, "value", i, t)) return a;
            if (this.matchItemByKey(a, "text", n, t)) return a;
          }
        } catch (err) {
          _iterator39.e(err);
        } finally {
          _iterator39.f();
        }
      }

      return null;
    },
    getSelectedItemIndex: function getSelectedItemIndex(t) {
      var _ref58 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref58$value = _ref58.value,
          e = _ref58$value === void 0 ? null : _ref58$value,
          _ref58$multi = _ref58.multi,
          i = _ref58$multi === void 0 ? !1 : _ref58$multi;

      var n = [],
          a = {
        value: e,
        multi: i
      };

      for (var _e23 = 0; _e23 < t.length; _e23++) {
        var _i14 = t[_e23];

        if (this.isSelectedItem(_i14, a)) {
          if (!this.multi) return _e23;
          n.push(_e23);
        }
      }

      return _.isEmpty(n) && !i ? -1 : n;
    }
  };
  Ti.Preload("ti/com/ti/support/formed_list_methods.mjs", t);
}(), function () {
  var t = {
    inject: ["$vars"],
    props: {
      index: {
        type: Number,
        "default": -1
      },
      rowId: {
        type: String,
        "default": null
      },
      data: null,
      changedId: {
        type: String,
        "default": null
      },
      currentId: {
        type: String,
        "default": null
      },
      checkedIds: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      checkable: {
        type: Boolean,
        "default": !1
      },
      selectable: {
        type: Boolean,
        "default": !0
      },
      openable: {
        type: Boolean,
        "default": !0
      },
      rowToggleKey: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      checkIcons: {
        type: Object,
        "default": function _default() {
          return {
            on: "fas-check-square",
            off: "far-square"
          };
        }
      }
    },
    computed: {
      getListItemClass: function getListItemClass() {
        var _this89 = this;

        return function () {
          for (var _len3 = arguments.length, t = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            t[_key3] = arguments[_key3];
          }

          return _this89.getTopClass({
            "is-current": _this89.isCurrent,
            "is-checked": _this89.isChecked,
            "is-changed": _this89.isChanged
          }, t);
        };
      },
      isCurrent: function isCurrent() {
        return this.rowId == this.currentId;
      },
      isChanged: function isChanged() {
        return this.rowId == this.changedId;
      },
      isChecked: function isChecked() {
        return !!this.checkedIds[this.rowId];
      },
      theCheckIcon: function theCheckIcon() {
        return this.checkedIds[this.rowId] ? this.checkIcons.on : this.checkIcons.off;
      }
    },
    methods: {
      isRowToggleKey: function isRowToggleKey(t) {
        return _.indexOf(this.rowToggleKey, t) >= 0;
      },
      OnClickChecker: function OnClickChecker() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        this.checkable && this.$notify("checker", {
          rowId: this.rowId,
          shift: t.shiftKey,
          toggle: t.ctrlKey || t.metaKey
        });
      },
      OnClickRow: function OnClickRow() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var e = t.ctrlKey || t.metaKey;
        !this.selectable || this.isCurrent && this.isChecked && !e || this.$notify("select", {
          rowId: this.rowId,
          shift: t.shiftKey,
          toggle: e
        });
      },
      OnDblClickRow: function OnDblClickRow() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        this.openable && (t.stopPropagation(), this.$notify("open", {
          rowId: this.rowId
        }));
      },
      doAutoActived: function doAutoActived() {
        !this.isActived && this.isCurrent && this.setActived();
      }
    },
    watch: {
      isCurrent: function isCurrent() {
        this.doAutoActived();
      }
    },
    mounted: function mounted() {
      this.doAutoActived();
    }
  };
  Ti.Preload("ti/com/ti/support/list_item_mixins.mjs", t);
}(), function () {
  var t = {
    provide: function provide() {
      return {
        $vars: this.vars || {}
      };
    },
    data: function data() {
      return {
        myLastIndex: -1,
        myCurrentId: null,
        myCheckedIds: {}
      };
    },
    computed: {
      TopStyle: function TopStyle() {
        var t = this.width,
            e = this.height;
        return Ti.Css.toStyle({
          width: t,
          height: e
        });
      },
      hasRowToggleKey: function hasRowToggleKey() {
        return !_.isEmpty(this.rowToggleKey);
      },
      TheRowToggleKey: function TheRowToggleKey() {
        return _.without(_.concat(this.rowToggleKey), void 0);
      },
      getRowId: function getRowId() {
        return Ti.Util.genRowIdGetter(this.idBy);
      },
      getRowData: function getRowData() {
        return Ti.Util.genRowDataGetter(this.rawDataBy);
      },
      isDataEmpty: function isDataEmpty() {
        return !_.isArray(this.data) || _.isEmpty(this.data);
      },
      isAllChecked: function isAllChecked() {
        if (this.isDataEmpty) return !1;

        var _iterator40 = _createForOfIteratorHelper(this.TheData),
            _step40;

        try {
          for (_iterator40.s(); !(_step40 = _iterator40.n()).done;) {
            var _t71 = _step40.value;
            if (!this.theCheckedIds[_t71.id]) return !1;
          }
        } catch (err) {
          _iterator40.e(err);
        } finally {
          _iterator40.f();
        }

        return !0;
      },
      hasChecked: function hasChecked() {
        var _iterator41 = _createForOfIteratorHelper(this.data),
            _step41;

        try {
          for (_iterator41.s(); !(_step41 = _iterator41.n()).done;) {
            var _t72 = _step41.value;
            var e = this.getRowId(_t72);
            if (this.theCheckedIds[e]) return !0;
          }
        } catch (err) {
          _iterator41.e(err);
        } finally {
          _iterator41.f();
        }

        return !1;
      },
      theCurrentRowId: function theCurrentRowId() {
        return this.wrapRowId(this.currentId);
      },
      theCurrentId: function theCurrentId() {
        return this.puppetMode ? this.theCurrentRowId : this.myCurrentId;
      },
      theCheckedIds: function theCheckedIds() {
        return this.puppetMode ? this.getCheckedIdsMap(this.checkedIds) : this.myCheckedIds;
      },
      Dict: function Dict() {
        if (this.dict) {
          if (this.dict instanceof Ti.Dict) return this.dict;

          var _Ti$DictFactory$expla4 = Ti.DictFactory.explainDictName(this.dict),
              _t73 = _Ti$DictFactory$expla4.name;

          return Ti.DictFactory.CheckDict(_t73);
        }
      }
    },
    methods: {
      wrapRowId: function wrapRowId(t) {
        return _.isNumber(t) ? "" + t : t;
      },
      evalData: function evalData() {
        var _arguments13 = arguments,
            _this90 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee53() {
          var t, e, _t74, _i15, n, _e24, i;

          return regeneratorRuntime.wrap(function _callee53$(_context53) {
            while (1) {
              switch (_context53.prev = _context53.next) {
                case 0:
                  t = _arguments13.length > 0 && _arguments13[0] !== undefined ? _arguments13[0] : _.identity;
                  e = _this90.data;

                  if (!_this90.Dict) {
                    _context53.next = 31;
                    break;
                  }

                  if (!_.isString(e)) {
                    _context53.next = 9;
                    break;
                  }

                  _context53.next = 6;
                  return _this90.Dict.queryData(e);

                case 6:
                  e = _context53.sent;
                  _context53.next = 31;
                  break;

                case 9:
                  if (!_.isArray(e)) {
                    _context53.next = 28;
                    break;
                  }

                  _t74 = [];
                  _i15 = 0;

                case 12:
                  if (!(_i15 < e.length)) {
                    _context53.next = 25;
                    break;
                  }

                  n = e[_i15];

                  if (!_.isString(n)) {
                    _context53.next = 21;
                    break;
                  }

                  _context53.next = 17;
                  return _this90.Dict.getItem(n);

                case 17:
                  _e24 = _context53.sent;
                  _e24 && _t74.push(_e24);
                  _context53.next = 22;
                  break;

                case 21:
                  _t74.push(n);

                case 22:
                  _i15++;
                  _context53.next = 12;
                  break;

                case 25:
                  e = _t74;
                  _context53.next = 31;
                  break;

                case 28:
                  _context53.next = 30;
                  return _this90.Dict.getData();

                case 30:
                  e = _context53.sent;

                case 31:
                  i = [];
                  return _context53.abrupt("return", (_.forEach(e, function (e, n) {
                    var a = {
                      index: n,
                      id: _this90.getRowId(e, n),
                      rawData: _this90.getRowData(e),
                      item: e
                    };
                    a = t(a) || a, i.push(a);
                  }), i));

                case 33:
                case "end":
                  return _context53.stop();
              }
            }
          }, _callee53);
        }))();
      },
      findRowIndexById: function findRowIndexById(t) {
        var _iterator42 = _createForOfIteratorHelper(this.TheData),
            _step42;

        try {
          for (_iterator42.s(); !(_step42 = _iterator42.n()).done;) {
            var e = _step42.value;
            if (e.id == t) return e.index;
          }
        } catch (err) {
          _iterator42.e(err);
        } finally {
          _iterator42.f();
        }

        return -1;
      },
      findRowById: function findRowById(t) {
        var _iterator43 = _createForOfIteratorHelper(this.TheData),
            _step43;

        try {
          for (_iterator43.s(); !(_step43 = _iterator43.n()).done;) {
            var e = _step43.value;
            if (e.id == t) return e;
          }
        } catch (err) {
          _iterator43.e(err);
        } finally {
          _iterator43.f();
        }
      },
      getCurrentRow: function getCurrentRow() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.theCurrentId;
        return this.findRowById(t);
      },
      getCurrent: function getCurrent() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.theCurrentId;
        var e = this.getCurrentRow(t);
        return e ? e.rawData : null;
      },
      getCheckedRow: function getCheckedRow() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.theCheckedIds;
        var e = [];

        var _iterator44 = _createForOfIteratorHelper(this.TheData),
            _step44;

        try {
          for (_iterator44.s(); !(_step44 = _iterator44.n()).done;) {
            var i = _step44.value;
            t[i.id] && e.push(i);
          }
        } catch (err) {
          _iterator44.e(err);
        } finally {
          _iterator44.f();
        }

        return e;
      },
      getChecked: function getChecked() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.theCheckedIds;
        var e = this.getCheckedRow(t);
        return _.map(e, function (t) {
          return t.rawData;
        });
      },
      getEmitContext: function getEmitContext(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var i = [],
            n = null,
            a = -1;

        var _iterator45 = _createForOfIteratorHelper(this.TheData),
            _step45;

        try {
          for (_iterator45.s(); !(_step45 = _iterator45.n()).done;) {
            var s = _step45.value;
            s.id == t && (n = s.rawData, a = s.index), e[s.id] && i.push(s.rawData);
          }
        } catch (err) {
          _iterator45.e(err);
        } finally {
          _iterator45.f();
        }

        return {
          current: n,
          currentId: t,
          currentIndex: a,
          checked: i,
          checkedIds: e
        };
      },
      selectRow: function selectRow(t) {
        var _ref59 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            _ref59$quiet = _ref59.quiet,
            e = _ref59$quiet === void 0 ? !1 : _ref59$quiet,
            i = _ref59.payload;

        var n = {},
            a = null;
        this.autoCheckCurrent ? (n = t ? _defineProperty({}, t, !0) : {}, a = t || null) : (n = _.cloneDeep(this.myCheckedIds), a = t);
        var s = this.getEmitContext(a, n);
        this.puppetMode || (this.myCheckedIds = n, this.myCurrentId = a, this.myLastIndex = this.findRowIndexById(t)), e || (_.defaults(s, i), this.$notify("select", s));
      },
      selectRowByIndex: function selectRowByIndex(t, e) {
        var i = t;

        if (this.scrollIndex && (i = Ti.Num.scrollIndex(t, this.TheData.length)), _.inRange(i, 0, this.TheData.length)) {
          var _t75 = this.TheData[i];
          this.selectRow(_t75.id, e);
        }
      },
      selectPrevRow: function selectPrevRow(t) {
        this.selectRowByIndex(Math.max(-1, this.myLastIndex - 1), t);
      },
      selectNextRow: function selectNextRow(t) {
        this.selectRowByIndex(this.myLastIndex + 1, t);
      },
      selectRowsToCurrent: function selectRowsToCurrent(t) {
        var e = _.cloneDeep(this.theCheckedIds),
            i = this.theCurrentId,
            n = this.findRowIndexById(t);

        if (n >= 0) {
          var _t76 = Math.min(n, this.myLastIndex),
              a = Math.max(n, this.myLastIndex);

          _t76 < 0 && (_t76 = 0);

          for (var _i16 = _t76; _i16 <= a; _i16++) {
            e[this.TheData[_i16].id] = !0;
          }

          var s = this.getEmitContext(i, e);
          this.puppetMode || (this.myCheckedIds = e, this.myCurrentId = i, this.myLastIndex = n), this.$notify("select", s);
        }
      },
      checkRow: function checkRow(t) {
        var e = _.cloneDeep(this.theCheckedIds),
            i = this.theCurrentId,
            n = this.myLastIndex;

        if (_.isUndefined(t)) e = {}, _.forEach(this.TheData, function (t) {
          e[t.id] = !0;
        });else if (_.isArray(t)) {
          var _i17 = _.last(t);

          _.forEach(t, function (t) {
            e[t] = !0;
          }), this.autoCheckCurrent && (n = this.findRowIndexById(_i17));
        } else e[t] = !0, this.autoCheckCurrent && (n = this.findRowIndexById(t));
        var a = this.getEmitContext(i, e);
        this.puppetMode || (this.myCheckedIds = e, this.myCurrentId = i, this.myLastIndex = n), this.$notify("select", a);
      },
      cancelRow: function cancelRow(t) {
        var e = _.cloneDeep(this.theCheckedIds),
            i = this.theCurrentId,
            n = -1;

        _.isUndefined(t) ? (e = {}, i = null) : (n = this.findRowIndexById(t), e[t] = !1, this.autoCheckCurrent && i == t && (i = null));
        var a = this.getEmitContext(i, e);
        this.puppetMode || (this.myCheckedIds = e, this.myCurrentId = i, this.myLastIndex = n), this.$notify("select", a);
      },
      toggleRow: function toggleRow(t) {
        this.theCheckedIds[t] ? this.cancelRow(t) : this.checkRow(t);
      },
      OnRowCheckerClick: function OnRowCheckerClick() {
        var _ref61 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref61.rowId,
            e = _ref61.shift;

        this.multi ? e ? this.selectRowsToCurrent(t) : this.toggleRow(t) : this.selectRow(t);
      },
      OnRowSelect: function OnRowSelect() {
        var _ref62 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref62.rowId,
            e = _ref62.shift,
            i = _ref62.toggle;

        e && this.multi ? this.selectRowsToCurrent(t) : i && this.multi ? this.toggleRow(t) : Ti.Util.isNil(t) || this.autoCheckCurrent ? this.selectRow(t) : this.toggleRow(t);
      },
      OnRowOpen: function OnRowOpen() {
        var _ref63 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref63.rowId;

        var e = this.findRowById(t);
        e && this.$notify("open", e);
      },
      getCheckedIdsMap: function getCheckedIdsMap() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var e = {};
        return _.isArray(t) ? _.forEach(t, function (t) {
          e[t] = !0;
        }) : _.forEach(t, function (t, i) {
          t && (e[i] = !0);
        }), this.autoCheckCurrent && !Ti.Util.isNil(this.theCurrentId) && (e[this.theCurrentId] = !0), e;
      },
      syncCurrentId: function syncCurrentId() {
        this.puppetMode || this.theCurrentId == this.theCurrentRowId ? this.myLastIndex = this.findRowIndexById(this.theCurrentRowId) : this.selectRow(this.theCurrentRowId, {
          quiet: !0
        });
      },
      syncCheckedIds: function syncCheckedIds() {
        this.puppetMode || (this.myCheckedIds = this.getCheckedIdsMap(this.checkedIds));
      }
    },
    watch: {
      currentId: function currentId() {
        this.syncCurrentId();
      },
      checkedIds: function checkedIds() {
        this.syncCheckedIds();
      },
      data: function data() {
        this.theCurrentId && (this.myLastIndex = this.findRowIndexById(this.theCurrentId));
      }
    },
    mounted: function () {
      var _mounted5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee54() {
        return regeneratorRuntime.wrap(function _callee54$(_context54) {
          while (1) {
            switch (_context54.prev = _context54.next) {
              case 0:
                this.syncCheckedIds(), this.syncCurrentId();

              case 1:
              case "end":
                return _context54.stop();
            }
          }
        }, _callee54, this);
      }));

      function mounted() {
        return _mounted5.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/ti/support/list_mixins.mjs", t);
}(), function () {
  var t = {
    data: {
      type: [Array, String],
      "default": function _default() {
        return [];
      }
    },
    dict: {
      type: [String, Ti.Dict],
      "default": null
    },
    idBy: {
      type: [String, Function],
      "default": "id"
    },
    rawDataBy: {
      type: [Object, String, Function],
      "default": _.identity
    },
    currentId: {
      type: [String, Number],
      "default": null
    },
    checkedIds: {
      type: [Array, Object],
      "default": function _default() {
        return [];
      }
    },
    changedId: {
      type: String,
      "default": null
    },
    vars: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },
    multi: {
      type: Boolean,
      "default": !1
    },
    autoCheckCurrent: {
      type: Boolean,
      "default": !0
    },
    rowToggleKey: {
      type: [String, Array],
      "default": function _default() {
        return ["SPACE"];
      }
    },
    checkable: {
      type: Boolean,
      "default": !1
    },
    selectable: {
      type: Boolean,
      "default": !0
    },
    openable: {
      type: Boolean,
      "default": !0
    },
    cancelable: {
      type: Boolean,
      "default": !0
    },
    hoverable: {
      type: Boolean,
      "default": !1
    },
    puppetMode: {
      type: Boolean,
      "default": !1
    },
    scrollIndex: {
      type: Boolean,
      "default": !1
    },
    blankAs: {
      type: Object,
      "default": function _default() {
        return {
          icon: "zmdi-alert-circle-o",
          text: "empty-data"
        };
      }
    },
    width: {
      type: [Number, String],
      "default": null
    },
    height: {
      type: [Number, String],
      "default": null
    }
  };
  Ti.Preload("ti/com/ti/support/list_props.mjs", t);
}(), function () {
  var t = {
    value: null,
    options: {
      type: [Array, Function, String, Ti.Dict],
      "default": function _default() {
        return [];
      }
    },
    valueBy: {
      type: [String, Function],
      "default": void 0
    },
    textBy: {
      type: [String, Function],
      "default": void 0
    },
    iconeBy: {
      type: [String, Function],
      "default": void 0
    },
    multi: !1,
    allowEmpty: {
      type: Boolean,
      "default": !0
    },
    autoSplitValue: {
      type: [Boolean, String],
      "default": !0
    },
    defaultIcon: {
      type: String,
      "default": null
    },
    emptylAs: {
      "default": null
    },
    width: {
      type: [Number, String],
      "default": null
    },
    height: {
      type: [Number, String],
      "default": null
    }
  };
  Ti.Preload("ti/com/ti/switcher/ti-switcher-props.mjs", t);
}(), Ti.Preload("ti/com/ti/switcher/ti-switcher.html", '<div class="ti-switcher"\n  :class="TopClass">\n  \x3c!--\n    Show Loading\n  --\x3e\n  <ti-icon\n    v-if="loading"\n    value="zmdi-settings zmdi-hc-spin"/>\n  \x3c!--\n    Options\n  --\x3e\n  <div v-else\n    class="switcher-con">\n    <ul>\n      <li v-for="it in TheItems" \n        :key="it.value"\n        :class="it.className"\n        @click="OnClickItem(it, $event)"\n        @mousedown="myFocusIndex=it.index;">\n        <ti-icon class="it-icon"\n          size=".8em"\n          v-if="it.icon" \n          :value="it.icon"/>\n        <span\n          class="it-text">{{it.text|i18n}}</span>\n      </li>\n    </ul>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        loading: !1,
        myOptionsData: [],
        myValueMap: {},
        myLastIndex: 0,
        myFocusIndex: -1
      };
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      Dict: function Dict() {
        var _this91 = this;

        if (this.options instanceof Ti.Dict) return this.options;

        if (_.isString(this.options)) {
          var _t77 = Ti.DictFactory.DictReferName(this.options);

          if (_t77) return Ti.DictFactory.CheckDict(_t77, function (_ref64) {
            var t = _ref64.loading;
            _this91.loading = t;
          });
        }

        return Ti.DictFactory.GetOrCreate({
          data: this.options,
          getValue: Ti.Util.genGetter(this.valueBy || "value"),
          getText: Ti.Util.genGetter(this.textBy || "text|name"),
          getIcon: Ti.Util.genGetter(this.iconBy || "icon")
        }, {
          hooks: function hooks(_ref65) {
            var t = _ref65.loading;
            return _this91.loading = t;
          }
        });
      },
      TheItems: function TheItems() {
        var _this92 = this;

        return _.map(this.myOptionsData, function (t, e) {
          var i = _this92.Dict.getValue(t);

          return {
            index: e,
            className: {
              "is-selected": _this92.myValueMap[i],
              "is-focused": e == _this92.myFocusIndex
            },
            text: _this92.Dict.getText(t),
            value: i,
            icon: _this92.Dict.getIcon(t) || _this92.defaultIcon
          };
        });
      }
    },
    methods: {
      OnClickItem: function OnClickItem(_ref66, i) {
        var t = _ref66.value,
            e = _ref66.index;
        var n = i.ctrlKey || i.metaKey;
        i.shiftKey && this.multi ? this.selectItemsToCurrent(t, e) : n && this.multi ? this.toggleItem(t) : this.allowEmpty ? this.toggleItem(t) : this.myValueMap = _defineProperty({}, t, !0), this.myLastIndex = e, this.tryNotifyChanged();
      },
      findItemIndexByValue: function findItemIndexByValue(t) {
        var _iterator46 = _createForOfIteratorHelper(this.TheItems),
            _step46;

        try {
          for (_iterator46.s(); !(_step46 = _iterator46.n()).done;) {
            var e = _step46.value;
            if (e.value == t) return e.index;
          }
        } catch (err) {
          _iterator46.e(err);
        } finally {
          _iterator46.f();
        }

        return -1;
      },
      selectItemsToCurrent: function selectItemsToCurrent(t) {
        var e = _.cloneDeep(this.myValueMap),
            i = this.findItemIndexByValue(t);

        if (i >= 0) {
          var _t78 = Math.min(i, this.myLastIndex),
              n = Math.max(i, this.myLastIndex);

          _t78 < 0 && (_t78 = 0);

          for (var _i18 = _t78; _i18 <= n; _i18++) {
            e[this.TheItems[_i18].value] = !0;
          }
        }

        this.myValueMap = e;
      },
      toggleItem: function toggleItem(t) {
        var e = this.myValueMap[t];
        this.multi ? this.myValueMap = _.assign({}, this.myValueMap, _defineProperty({}, t, !e)) : this.myValueMap = _defineProperty({}, t, !e);
      },
      tryNotifyChanged: function tryNotifyChanged() {
        var t = Ti.Util.truthyKeys(this.myValueMap);

        if (!_.isEqual(t, this.Values)) {
          var e = this.multi ? t : t.join(",");
          this.$notify("change", e);
        }
      },
      reloadMyOptionsData: function reloadMyOptionsData() {
        var _this93 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee55() {
          return regeneratorRuntime.wrap(function _callee55$(_context55) {
            while (1) {
              switch (_context55.prev = _context55.next) {
                case 0:
                  _context55.next = 2;
                  return _this93.Dict.getData();

                case 2:
                  _this93.myOptionsData = _context55.sent;

                case 3:
                case "end":
                  return _context55.stop();
              }
            }
          }, _callee55);
        }))();
      },
      reloadMyValueMap: function reloadMyValueMap() {
        var t = null;
        this.autoSplitValue && (t = _.isBoolean(this.autoSplitValue) ? /[:,;\t\n\/]+/g : this.autoSplitValue);
        var e = Ti.S.toArray(this.value, {
          sep: t
        }),
            i = {};
        _.forEach(e, function (t) {
          return i[t] = !0;
        }), this.myValueMap = i;
      }
    },
    watch: {
      options: {
        handler: "reloadMyOptionsData",
        immediate: !0
      },
      value: {
        handler: "reloadMyValueMap",
        immediate: !0
      }
    },
    mounted: function () {
      var _mounted6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee56() {
        var _this94 = this;

        return regeneratorRuntime.wrap(function _callee56$(_context56) {
          while (1) {
            switch (_context56.prev = _context56.next) {
              case 0:
                Ti.Dom.watchDocument("mouseup", function () {
                  return _this94.myFocusIndex = -1;
                });

              case 1:
              case "end":
                return _context56.stop();
            }
          }
        }, _callee56);
      }));

      function mounted() {
        return _mounted6.apply(this, arguments);
      }

      return mounted;
    }(),
    beforeDestroy: function beforeDestroy() {
      Ti.Dom.unwatchDocument("mouseup", this.__on_mouseup);
    }
  };
  Ti.Preload("ti/com/ti/switcher/ti-switcher.mjs", t);
}(), Ti.Preload("ti/com/ti/switcher/_com.json", {
  name: "ti-switcher",
  globally: !0,
  template: "./ti-switcher.html",
  props: "./ti-switcher-props.mjs",
  mixins: ["./ti-switcher.mjs"]
}), Ti.Preload("ti/com/ti/table/com/table-row/com/table-cell/table-cell.html", '<div class="table-cell"\n  :class="TopClass"\n  :style="TopStyle"\n  :col-index="index"\n  v-ti-activable>\n  <div class="cell-wrapper"\n    :class="WrapperClass">\n    \x3c!--Slot for first column--\x3e\n    <slot></slot>\n    \x3c!--Fields--\x3e\n    <div class="cell-con">\n      <component \n        v-for="(it, index) in cellItems"\n          :class="\'item-\'+index"\n          :key="it.uniqueKey"\n          :is="it.comType"\n          v-bind="it.comConf"\n          @change="OnItemChanged(it, $event)"/>\n    </div>\n  </div>\n</div>'), function () {
  var t = {
    inject: ["$table"],
    data: function data() {
      return {
        isEditingMode: !1,
        cellItems: [],
        myCellSize: -1
      };
    },
    props: {
      index: {
        type: Number,
        "default": -1
      },
      rowId: {
        type: String,
        "default": null
      },
      rowIndex: {
        type: Number,
        "default": -1
      },
      cellSize: {
        type: Number,
        "default": 0
      },
      title: {
        type: String,
        "default": null
      },
      nowrap: {
        type: Boolean,
        "default": !0
      },
      display: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      name: {
        type: [String, Array],
        "default": null
      },
      type: {
        type: String,
        "default": "String"
      },
      dict: {
        type: String,
        "default": "String"
      },
      comType: {
        type: String,
        "default": null
      },
      comConf: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      serializer: {
        type: Function,
        "default": _.identity
      },
      transformer: {
        type: Function,
        "default": _.identity
      },
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      isCurrent: {
        type: Boolean,
        "default": !1
      },
      isHover: {
        type: Boolean,
        "default": !1
      },
      isChecked: {
        type: Boolean,
        "default": !1
      },
      ignoreNil: {
        type: Boolean,
        "default": !0
      },
      focusBy: {
        type: String,
        "default": "focus"
      },
      widthBy: {
        type: String,
        "default": "width"
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TopStyle: function TopStyle() {
        if (this.cellSize > 0) return Ti.Css.toStyle({
          width: this.cellSize
        });
      },
      WrapperClass: function WrapperClass() {
        return {
          "is-nowrap": this.nowrap,
          "is-editing-mode": this.isEditingMode
        };
      },
      theCurrentDisplayItems: function theCurrentDisplayItems() {
        if (this.isActived && this.comType || _.isEmpty(this.display)) {
          this.isEditingMode = !0;

          var _t79 = _.assign({}, this.comConf);

          return this.focusBy && (_t79[this.focusBy] = "${=isActived}"), this.widthBy && (_t79[this.widthBy] = "${=cellSize}"), [{
            comType: this.comType,
            comConf: _t79,
            key: this.name,
            type: this.type,
            dict: this.dict,
            transformer: this.transformer,
            ignoreNil: !1
          }];
        }

        return this.isEditingMode = !1, this.display;
      }
    },
    methods: {
      evalCellDisplayItems: function evalCellDisplayItems() {
        var _this95 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee57() {
          var t, _iterator47, _step47, _e25, _i19, e, i;

          return regeneratorRuntime.wrap(function _callee57$(_context57) {
            while (1) {
              switch (_context57.prev = _context57.next) {
                case 0:
                  _this95.$table.reportReady(_this95.rowIndex, _this95.index, !_.isEmpty(_this95.cellItems));

                  t = [];
                  _iterator47 = _createForOfIteratorHelper(_this95.theCurrentDisplayItems);
                  _context57.prev = 3;

                  _iterator47.s();

                case 5:
                  if ((_step47 = _iterator47.n()).done) {
                    _context57.next = 13;
                    break;
                  }

                  _e25 = _step47.value;
                  _context57.next = 9;
                  return _this95.evalDataForFieldDisplayItem({
                    itemData: _this95.data,
                    displayItem: _e25,
                    vars: {
                      isCurrent: _this95.isCurrent,
                      isChecked: _this95.isChecked,
                      isHover: _this95.isHover,
                      isActived: _this95.isActived,
                      rowId: _this95.rowId,
                      cellSize: _this95.cellSize
                    },
                    autoIgnoreNil: !0
                  });

                case 9:
                  _i19 = _context57.sent;
                  _i19 && t.push(_i19);

                case 11:
                  _context57.next = 5;
                  break;

                case 13:
                  _context57.next = 18;
                  break;

                case 15:
                  _context57.prev = 15;
                  _context57.t0 = _context57["catch"](3);

                  _iterator47.e(_context57.t0);

                case 18:
                  _context57.prev = 18;

                  _iterator47.f();

                  return _context57.finish(18);

                case 21:
                  e = Ti.Util.pureCloneDeep(_this95.cellItems), i = Ti.Util.pureCloneDeep(t);
                  _.isEqual(e, i) || (_this95.cellItems = t), _this95.$table.reportReady(_this95.rowIndex, _this95.index, !0);

                case 23:
                case "end":
                  return _context57.stop();
              }
            }
          }, _callee57, null, [[3, 15, 18, 21]]);
        }))();
      },
      OnItemChanged: function OnItemChanged(t, e) {
        this.$table.$notify("cell:item:change", {
          rowId: this.rowId,
          cellIndex: this.index,
          index: this.rowIndex,
          name: t.key,
          value: e
        });
      }
    },
    watch: {
      data: {
        handler: "evalCellDisplayItems",
        immediate: !0
      },
      isCurrent: "evalCellDisplayItems",
      isChecked: "evalCellDisplayItems",
      isHover: "evalCellDisplayItems",
      isActived: "evalCellDisplayItems"
    }
  };
  Ti.Preload("ti/com/ti/table/com/table-row/com/table-cell/table-cell.mjs", t);
}(), Ti.Preload("ti/com/ti/table/com/table-row/com/table-cell/_com.json", {
  name: "table-cell",
  globally: !1,
  template: "./table-cell.html",
  methods: "@com:ti/support/field_display.mjs",
  mixins: ["./table-cell.mjs"],
  components: ["@com:ti/label"]
}), Ti.Preload("ti/com/ti/table/com/table-row/table-row.html", '<div class="table-row"\n  :class="TopClass"\n  @click.left="OnClickRow"\n  @dblclick.left="OnDblClickRow"\n  @mouseenter="OnMouseEnter"\n  @mouseleave="OnMouseLeave"\n  v-ti-activable>\n  \x3c!--\n    Cells\n  --\x3e\n  <table-cell v-for="fld in fields"\n    :key="fld.index"\n    v-bind="fld"\n    :row-id="rowId"\n    :row-index="index"\n    :cell-size="getCellSize(fld.index)"\n    :is-current="isCurrent"\n    :is-hover="isHover"\n    :is-checked="isChecked"\n    :data="data">\n    <template v-if="fld.index == 0">\n      <div class="table-row-head">\n        \x3c!--current actived row indicator--\x3e\n        <div class="row-actived-indicator"></div>\n        \x3c!-- Indents --\x3e\n        <div v-for="n in indent"\n            class="row-indent"></div>\n        \x3c!--ICON: Handler--\x3e\n        <template v-if="icon">\n          <ti-icon\n            v-if="hasRealIcon"\n              class="row-icon"\n              :value="icon"\n              @click.native.left.stop="OnClickIcon"/>\n          <div v-else\n            class="row-icon"></div>\n        </template>\n        \x3c!--ICON: Checker--\x3e\n        <ti-icon v-if="checkable"\n            class="row-checker"\n            :value="theCheckIcon"\n            @click.native.left.stop="OnClickChecker"/>\n      </div>\n    </template>\n  </table-cell>\n</div>'), function () {
  var t = {
    props: {
      indent: {
        type: Number,
        "default": 0
      },
      icon: {
        type: [Boolean, String],
        "default": null
      },
      fields: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      sizes: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      hoverId: {
        type: String,
        "default": null
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getListItemClass({
          "is-hover": this.isHover
        }, "row-indent-".concat(this.indent));
      },
      isHover: function isHover() {
        return this.hoverId && this.rowId == this.hoverId;
      },
      hasRealIcon: function hasRealIcon() {
        return this.icon && _.isString(this.icon);
      }
    },
    methods: {
      getCellSize: function getCellSize(t) {
        if (this.sizes.length > t) return this.sizes[t];
      },
      OnClickIcon: function OnClickIcon(t) {
        this.$notify("icon", {
          rowId: this.rowId,
          shift: t.shiftKey,
          toggle: t.ctrlKey || t.metaKey
        });
      },
      OnMouseEnter: function OnMouseEnter() {
        this.$notify("enter", {
          rowId: this.rowId
        });
      },
      OnMouseLeave: function OnMouseLeave() {
        this.$notify("leave", {
          rowId: this.rowId
        });
      }
    }
  };
  Ti.Preload("ti/com/ti/table/com/table-row/table-row.mjs", t);
}(), Ti.Preload("ti/com/ti/table/com/table-row/_com.json", {
  name: "table-row",
  globally: !1,
  template: "./table-row.html",
  mixins: ["@com:ti/support/list_item_mixins.mjs", "./table-row.mjs"],
  components: ["./com/table-cell"]
}), function () {
  var t = {
    iconBy: {
      type: [String, Function],
      "default": null
    },
    indentBy: {
      type: [String, Function],
      "default": null
    },
    fields: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    head: {
      type: String,
      "default": "frozen",
      validator: function validator(t) {
        return Ti.Util.isNil(t) || /^(frozen|none|normal)$/.test(t);
      }
    },
    border: {
      type: String,
      "default": "cell",
      validator: function validator(t) {
        return /^(row|column|cell|none)$/.test(t);
      }
    },
    autoScrollIntoView: {
      type: Boolean,
      "default": !0
    }
  };
  Ti.Preload("ti/com/ti/table/ti-table-props.mjs", t);
}(), function () {
  var t = {
    data: function data() {
      return {
        myViewportWidth: 0,
        myTableWidth: 0,
        myColSizes: {
          priHead: [],
          priBody: [],
          primary: [],
          fixeds: [],
          amended: []
        },
        myCellsReady: !1,
        myCellsReport: {},
        I_am_in_resizing: !1
      };
    },
    methods: {
      reportReady: function reportReady() {
        var _this96 = this;

        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;
        var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
        var n = "R".concat(t, "-C").concat(e);
        i ? delete this.myCellsReport[n] : this.myCellsReport[n] = i, _.delay(function () {
          _this96.myCellsReady = _.isEmpty(_this96.myCellsReport), _this96.myCellsReady && _this96.evalEachColumnSize();
        });
      },
      evalEachColumnSize: function evalEachColumnSize() {
        var _this97 = this;

        if (!this.I_am_in_resizing) {
          this.I_am_in_resizing = !0, this.myTableWidth = 0, this.myColSizes = {
            priHead: [],
            priBody: [],
            primary: [],
            fixeds: [],
            amended: []
          };

          var _iterator48 = _createForOfIteratorHelper(this.TableFields),
              _step48;

          try {
            for (_iterator48.s(); !(_step48 = _iterator48.n()).done;) {
              var _t84 = _step48.value;
              var e = _t84.width || "stretch";
              /^(stretch|auto)$/.test(e) ? this.myColSizes.fixeds.push(e) : this.myColSizes.fixeds.push(Ti.Css.toPixel(e, 1));
            }
          } catch (err) {
            _iterator48.e(err);
          } finally {
            _iterator48.f();
          }

          this.$nextTick(function () {
            var t = Ti.Dom.findAll(".table-head ul li", _this97.$el);

            var _iterator49 = _createForOfIteratorHelper(t),
                _step49;

            try {
              for (_iterator49.s(); !(_step49 = _iterator49.n()).done;) {
                var _e27 = _step49.value;

                var _t81 = Ti.Rects.createBy(_e27);

                _this97.myColSizes.priHead.push(_t81.width);
              }
            } catch (err) {
              _iterator49.e(err);
            } finally {
              _iterator49.f();
            }

            var e = Ti.Dom.findAll(".table-body .table-row", _this97.$el);

            var _iterator50 = _createForOfIteratorHelper(e),
                _step50;

            try {
              for (_iterator50.s(); !(_step50 = _iterator50.n()).done;) {
                var _t82 = _step50.value;

                var _e28 = Ti.Dom.findAll(":scope > div", _t82);

                for (var _t83 = 0; _t83 < _e28.length; _t83++) {
                  var _i20 = _e28[_t83],
                      _n11 = Ti.Rects.createBy(_i20);

                  _t83 >= _this97.myColSizes.priBody.length ? _this97.myColSizes.priBody[_t83] = _n11.width : _this97.myColSizes.priBody[_t83] = Math.max(_n11.width, _this97.myColSizes.priBody[_t83]);
                }
              }
            } catch (err) {
              _iterator50.e(err);
            } finally {
              _iterator50.f();
            }

            for (var _t80 = 0; _t80 < _this97.myColSizes.priHead.length; _t80++) {
              var _e26 = _this97.myColSizes.priHead[_t80],
                  i = _this97.myColSizes.priBody[_t80],
                  n = Math.max(_e26, i);

              _this97.myColSizes.primary.push(n);
            }

            _this97.onTableResize(), _.delay(function () {
              _this97.I_am_in_resizing = !1;
            }, 10);
          });
        }
      },
      onTableResize: function onTableResize() {
        if (this.myColSizes.primary.length <= 0) return;
        var t = Ti.Rects.createBy(this.$el).width,
            e = [],
            i = [];

        for (var _n12 = 0; _n12 < this.myColSizes.fixeds.length; _n12++) {
          var _a3 = this.myColSizes.fixeds[_n12],
              s = this.myColSizes.primary[_n12];
          if ("stretch" == _a3) e.push(_n12), i.push(s);else if ("auto" == _a3) i.push(s);else if (_a3 <= 1 && _a3 > 0) i.push(_a3 * t);else if (_a3 < 0 && _a3 >= -1) {
            var _e29 = Math.abs(_a3 * t);

            i.push(Math.max(_e29, s));
          } else if (_a3 < -1) {
            var _t85 = Math.abs(_a3);

            i.push(Math.max(_t85, s));
          } else i.push(_a3);
        }

        var n = _.sum(i),
            a = Math.max(t, n);

        if (this.myTableWidth = a, e.length > 0) {
          var _t86 = a - n;

          if (_t86 > 0) {
            var _n13 = _t86 / e.length;

            var _iterator51 = _createForOfIteratorHelper(e),
                _step51;

            try {
              for (_iterator51.s(); !(_step51 = _iterator51.n()).done;) {
                var _t87 = _step51.value;
                i[_t87] += _n13;
              }
            } catch (err) {
              _iterator51.e(err);
            } finally {
              _iterator51.f();
            }
          }
        }

        this.myColSizes.amended = i;
      }
    },
    mounted: function () {
      var _mounted7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee58() {
        var _this98 = this;

        return regeneratorRuntime.wrap(function _callee58$(_context58) {
          while (1) {
            switch (_context58.prev = _context58.next) {
              case 0:
                Ti.Viewport.watch(this, {
                  resize: _.debounce(function () {
                    return _this98.onTableResize();
                  }, 10)
                });

              case 1:
              case "end":
                return _context58.stop();
            }
          }
        }, _callee58, this);
      }));

      function mounted() {
        return _mounted7.apply(this, arguments);
      }

      return mounted;
    }(),
    beforeDestroy: function beforeDestroy() {
      Ti.Viewport.unwatch(this);
    }
  };
  Ti.Preload("ti/com/ti/table/ti-table-resizes.mjs", t);
}(), Ti.Preload("ti/com/ti/table/ti-table.html", '<div class="ti-table"\n  :class="TopClass"\n  @click="OnClickTop"\n  v-ti-activable>\n  \x3c!--\n    Blank\n  --\x3e\n  <div\n    v-if="isDataEmpty"\n      class="ti-blank is-big">\n      <ti-loading v-bind="blankAs"/>\n  </div>\n  \x3c!--\n    Show thead/tbody\n  --\x3e\n  <template v-else>\n    \x3c!--\n      Head\n    --\x3e\n    <div v-if="isShowHead"\n      class="table-head"\n      :style="TableStyle">\n      \x3c!--checker--\x3e\n      <div\n          v-if="checkable && multi"\n            class="as-checker"\n            @click.left="OnClickHeadChecker">\n            <ti-icon :value="HeadCheckerIcon"/>\n      </div>\n      \x3c!--field titles--\x3e\n      <ul>\n        <li\n          v-for="fld in TableFields"\n            class="table-head-cell"\n            :style="getHeadCellStyle(fld.index)"\n            :col-index="fld.index">\n          <span class="table-head-cell-text">{{fld.title|i18n}}</span>\n        </li>\n      </ul>\n    </div\n    \x3c!--\n      Body\n    --\x3e\n    <div ref="body"\n      class="table-body"\n      :style="TableStyle">\n      <table-row\n        v-for="row in myData"\n          :key="row.id"\n          :row-id="row.id"\n          :index="row.index"\n          :icon="row.icon"\n          :indent="row.indent"\n          :data="row.rawData"\n          :fields="TableFields"\n          :sizes="myColSizes.amended"\n          :current-id="theCurrentId"\n          :checked-ids="theCheckedIds"\n          :hover-id="myHoverId"\n          :changed-id="changedId"\n          :checkable="checkable"\n          :selectable="selectable"\n          :openable="openable"\n          @icon="$notify(\'icon\', $event)"\n          @checker="OnRowCheckerClick"\n          @select="OnRowSelect"\n          @open="OnRowOpen"\n          @enter="OnRowEnter"\n          @leave="OnRowLeave"/>\n    </div>\n  </template>\n</div>'), function () {
  var t = {
    provide: function provide() {
      return {
        $table: this
      };
    },
    data: function data() {
      return {
        myData: [],
        myHoverId: null
      };
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-cells-no-ready": !this.myCellsReady,
          "is-layout-ready": this.myCellsReady,
          "is-hoverable": this.hoverable
        }, ["is-border-".concat(this.border), "is-head-".concat(this.head || "none")]);
      },
      TableStyle: function TableStyle() {
        if (this.myTableWidth > 0) return Ti.Css.toStyle({
          width: this.myTableWidth
        });
      },
      getRowIndent: function getRowIndent() {
        var _this99 = this;

        return _.isFunction(this.indentBy) ? function (t) {
          return _this99.indentBy(t);
        } : _.isString(this.indentBy) ? function (t) {
          return _.get(t, _this99.indentBy);
        } : function (t) {
          return 0;
        };
      },
      getRowIcon: function getRowIcon() {
        var _this100 = this;

        return _.isFunction(this.iconBy) ? function (t) {
          return _this100.iconBy(t);
        } : _.isString(this.iconBy) ? function (t) {
          return _.get(t, _this100.iconBy);
        } : function (t) {
          return null;
        };
      },
      TheData: function TheData() {
        return this.myData;
      },
      isShowHead: function isShowHead() {
        return /^(frozen|normal)$/.test(this.head);
      },
      HeadCheckerIcon: function HeadCheckerIcon() {
        return this.isAllChecked ? "fas-check-square" : this.hasChecked ? "fas-minus-square" : "far-square";
      },
      TableFields: function TableFields() {
        var t = [];

        for (var e = 0; e < this.fields.length; e++) {
          var i = this.fields[e],
              n = this.evalFieldDisplay(i.display, i.name),
              a = Ti.Util.fallbackNil(i.width, "stretch");
          _.isString(a) ? /^\d+(\.\d+)?%$/.test(a) ? a = a.substring(0, a.length - 1) / 100 : /^(auto|stretch)$/.test(a) || (a = "stretch") : _.isNumber(a) || (a = "stretch"), t.push({
            index: e,
            title: i.title,
            nowrap: i.nowrap,
            width: a,
            name: i.name,
            display: n,
            type: i.type,
            comType: i.comType,
            comConf: i.comConf,
            transformer: i.transformer,
            serializer: i.serializer
          });
        }

        return t;
      }
    },
    methods: {
      OnRowEnter: function OnRowEnter() {
        var _ref67 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref67.rowId;

        this.hoverable && (this.myHoverId = t);
      },
      OnRowLeave: function OnRowLeave() {
        var _ref68 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref68.rowId;

        this.hoverable && this.myHoverId == t && (this.myHoverId = null);
      },
      OnClickHeadChecker: function OnClickHeadChecker() {
        this.isAllChecked ? this.cancelRow() : this.checkRow();
      },
      OnClickTop: function OnClickTop(t) {
        this.cancelable && Ti.Dom.hasOneClass(t.target, "ti-table", "table-body", "table-head-cell", "table-head-cell-text") && this.cancelRow();
      },
      onItemChanged: function onItemChanged(t) {
        this.$notify("item:change", t);
      },
      getHeadCellStyle: function getHeadCellStyle() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;
        if (this.myColSizes.amended.length > t) return Ti.Css.toStyle({
          width: this.myColSizes.amended[t]
        });
      },
      evalFieldDisplay: function evalFieldDisplay() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var e = arguments.length > 1 ? arguments[1] : undefined;
        t = _.concat(t);
        var i = [];

        var _iterator52 = _createForOfIteratorHelper(t),
            _step52;

        try {
          for (_iterator52.s(); !(_step52 = _iterator52.n()).done;) {
            var n = _step52.value;

            var _t88 = this.evalFieldDisplayItem(n, {
              funcSet: this.fnSet,
              defaultKey: e
            });

            _t88 && i.push(_t88);
          }
        } catch (err) {
          _iterator52.e(err);
        } finally {
          _iterator52.f();
        }

        return i;
      },
      scrollCurrentIntoView: function scrollCurrentIntoView() {
        if (this.autoScrollIntoView && this.myLastIndex >= 0) {
          var _t89 = this.$refs.body,
              e = Ti.Dom.find(".table-row:nth-child(".concat(this.myLastIndex + 1, ")"), _t89),
              i = Ti.Rects.createBy(_t89),
              n = Ti.Rects.createBy(e);
          i.contains(n) || (n.bottom > i.bottom ? _t89.scrollTop += n.bottom - i.bottom : _t89.scrollTop += n.top - i.top);
        }
      },
      __ti_shortcut: function __ti_shortcut(t) {
        return "ARROWUP" == t ? (this.selectPrevRow({
          payload: {
            byKeyboardArrow: !0
          }
        }), this.scrollCurrentIntoView(), {
          prevent: !0,
          stop: !0,
          quit: !0
        }) : "ARROWDOWN" == t ? (this.selectNextRow({
          payload: {
            byKeyboardArrow: !0
          }
        }), this.scrollCurrentIntoView(), {
          prevent: !0,
          stop: !0,
          quit: !0
        }) : void 0;
      }
    },
    watch: {
      data: {
        handler: function () {
          var _handler2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee59(t, e) {
            var _this101 = this;

            return regeneratorRuntime.wrap(function _callee59$(_context59) {
              while (1) {
                switch (_context59.prev = _context59.next) {
                  case 0:
                    _context59.t0 = _.isEqual(t, e);

                    if (_context59.t0) {
                      _context59.next = 5;
                      break;
                    }

                    _context59.next = 4;
                    return this.evalData(function (t) {
                      t.icon = _this101.getRowIcon(t.item), t.indent = _this101.getRowIndent(t.item);
                    });

                  case 4:
                    this.myData = _context59.sent;

                  case 5:
                    _.isEmpty(this.data) && (this.myCellsReady = !0);

                  case 6:
                  case "end":
                    return _context59.stop();
                }
              }
            }, _callee59, this);
          }));

          function handler(_x3, _x4) {
            return _handler2.apply(this, arguments);
          }

          return handler;
        }(),
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/ti/table/ti-table.mjs", t);
}(), Ti.Preload("ti/com/ti/table/_com.json", {
  name: "ti-table",
  globally: !0,
  template: "./ti-table.html",
  props: ["@com:ti/support/list_props.mjs", "./ti-table-props.mjs"],
  methods: "@com:ti/support/field_display.mjs",
  mixins: ["@com:ti/support/list_mixins.mjs", "./ti-table-resizes.mjs", "./ti-table.mjs"],
  components: ["./com/table-row"]
}), Ti.Preload("ti/com/ti/tags/com/tags-item/tags-item.html", '<div class="ti-tags-item" \n  :class="topClass"\n  @mouseenter="mouseEnter=\'top\'"\n  @mouseleave="mouseEnter=null"\n  @click.left="onClickTop">\n  \x3c!--\n    Deleter\n  --\x3e\n  <ti-icon v-if="removable"\n    class="as-del"\n    :value="removeIcon"\n    @mouseenter.native="mouseEnter=\'del\'"\n    @mouseleave.native="mouseEnter=\'top\'"\n    @click.native.stop="onClickDel"/>\n  \x3c!--\n    Icon\n  --\x3e\n  <ti-icon v-if="icon" \n    class="as-icon"\n    :value="icon"/>\n  \x3c!--\n    Text\n  --\x3e\n  <template v-if="text">\n    <a v-if="href"\n      class="as-text"\n      @click.prevent\n      :href="href"\n      :class="textClass">{{text|i18n}}</a>\n    <span v-else\n      class="as-text"\n      :class="textClass">{{text|i18n}}</span>\n  </template>\n  \x3c!--\n    Status Icon\n  --\x3e\n  <ti-icon v-if="hasOptions"\n    class="as-status"\n    :value="theStatusIcon"/>\n  \x3c!--\n    Drop & Mask\n  --\x3e\n  <template v-if="\'extended\' == status">\n    <div class="as-mask" @click.stop="closeDrop"></div>\n    <div class="as-drop" ref="drop"\n      @click.stop>\n      <ti-icon-text v-for="it in theOptions"\n        :key="it.index"\n        v-bind="it"\n        @click.native="onClickOption(it)"/>\n    </div>\n  </template>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        mouseEnter: null,
        status: "collapse"
      };
    },
    props: {
      index: {
        type: Number,
        "default": -1
      },
      atLast: {
        type: Boolean,
        "default": !1
      },
      icon: {
        type: [String, Object],
        "default": null
      },
      text: {
        type: String,
        "default": null
      },
      href: {
        type: String,
        "default": null
      },
      value: {
        type: [String, Number, Boolean, Object],
        "default": null
      },
      options: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      optionDefaultIcon: {
        type: String,
        "default": null
      },
      cancelBubble: {
        type: Boolean,
        "default": !1
      },
      removable: {
        type: Boolean,
        "default": !1
      },
      removeIcon: {
        type: String,
        "default": null
      },
      statusIcons: {
        type: Object,
        "default": function _default() {
          return {
            collapse: "zmdi-chevron-down",
            extended: "zmdi-chevron-up"
          };
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName({
          "has-options": this.hasOptions,
          "is-enter-top": "top" == this.mouseEnter && this.hasOptions,
          "is-enter-del": "del" == this.mouseEnter
        }, this.className);
      },
      textClass: function textClass() {
        return {
          "without-icon": !this.hasIcon && !this.removable,
          "without-options": !this.hasOptions
        };
      },
      hasIcon: function hasIcon() {
        return !!this.icon;
      },
      hasOptions: function hasOptions() {
        return _.isArray(this.options) && this.options.length > 0;
      },
      theOptions: function theOptions() {
        var _this102 = this;

        var t = _.filter(_.concat(this.options), function (t) {
          return !Ti.Util.isNil(t);
        }),
            e = [];

        return _.forEach(t, function (t, i) {
          var n;
          n = _.isPlainObject(t) ? _.assign({
            icon: _this102.optionDefaultIcon
          }, t, {
            index: i
          }) : {
            index: i,
            icon: _this102.optionDefaultIcon,
            text: Ti.Types.toStr(t),
            value: t
          }, _.isEqual(n.value, _this102.value) || e.push(n);
        }), e;
      },
      theStatusIcon: function theStatusIcon() {
        return this.statusIcons[this.status];
      },
      theData: function theData() {
        return {
          index: this.index,
          icon: this.icon,
          text: this.text,
          value: this.value,
          href: this.href,
          atLast: this.atLast,
          asterisk: this.asterisk
        };
      }
    },
    methods: {
      onClickDel: function onClickDel() {
        this.$notify("remove", this.theData);
      },
      onClickOption: function onClickOption() {
        var _ref69 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref69.value,
            e = _ref69.text,
            i = _ref69.icon;

        this.$notify("change", {
          value: t,
          text: e,
          icon: i,
          index: this.index
        }), this.closeDrop();
      },
      onClickTop: function onClickTop(t) {
        this.hasOptions ? (t.stopPropagation(), this.openDrop()) : this.cancelBubble && t.stopPropagation(), this.href && this.$notify("fire", this.theData);
      },
      openDrop: function openDrop() {
        var _this103 = this;

        this.hasOptions && (this.status = "extended", this.$nextTick(function () {
          _this103.dockDrop();
        }));
      },
      closeDrop: function closeDrop() {
        this.status = "collapse", this.mouseEnter = null;
      },
      dockDrop: function dockDrop() {
        var t = this.$refs.drop,
            e = this.$el;

        if (_.isElement(t) && _.isElement(e) && "extended" == this.status) {
          var i = Ti.Rects.createBy(e);
          Ti.Dom.setStyle(t, {
            "min-width": "".concat(i.width, "px")
          }), Ti.Dom.dockTo(t, e, {
            space: {
              y: 2
            },
            posListX: ["left", "right"]
          });
        }
      }
    },
    mounted: function mounted() {
      this.dockDrop();
    }
  };
  Ti.Preload("ti/com/ti/tags/com/tags-item/tags-item.mjs", t);
}(), Ti.Preload("ti/com/ti/tags/com/tags-item/_com.json", {
  name: "tags-item",
  globally: !1,
  template: "./tags-item.html",
  mixins: ["./tags-item.mjs"],
  components: ["@com:ti/icon/text"]
}), Ti.Preload("ti/com/ti/tags/ti-tags.html", '<div class="ti-tags"\n  :class="TopClass">\n  \x3c!--\n    Loop piece\n  --\x3e\n  <tags-item v-for="tag in myTags"\n    :key="tag.index"\n    v-bind="tag"\n    :cancel-bubble="cancelItemBubble"\n    :option-default-icon="optionDefaultIcon"\n    :removable="removable"\n    :remove-icon="removeIcon"\n    :status-icons="statusIcons"\n    @change="OnItemChanged"\n    @remove="OnItemRemoved"\n    @fire="OnItemFired"/>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myTags: [],
        myValues: []
      };
    },
    props: {
      value: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      dict: {
        type: [String, Ti.Dict],
        "default": null
      },
      mapping: {
        type: Object,
        "default": void 0
      },
      itemOptions: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      cancelItemBubble: {
        type: Boolean,
        "default": !1
      },
      removable: {
        type: Boolean,
        "default": !1
      },
      itemIconBy: {
        type: [String, Function],
        "default": void 0
      },
      optionDefaultIcon: {
        type: String,
        "default": void 0
      },
      itemDefaultIcon: {
        type: String,
        "default": void 0
      },
      removeIcon: {
        type: String,
        "default": "zmdi-close"
      },
      statusIcons: {
        type: Object,
        "default": function _default() {
          return {
            collapse: "zmdi-chevron-down",
            extended: "zmdi-chevron-up"
          };
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        if (this.className) return this.className;
      },
      getTagItemIcon: function getTagItemIcon() {
        var _this104 = this;

        return _.isFunction(this.itemIconBy) ? function (t) {
          return _this104.itemIconBy(t);
        } : _.isString(this.itemIconBy) ? function (t) {
          return _.get(t, _this104.itemIconBy);
        } : function (t) {
          return null;
        };
      },
      Dict: function Dict() {
        if (this.dict) {
          if (this.dict instanceof Ti.Dict) return this.dict;

          var _Ti$DictFactory$expla5 = Ti.DictFactory.explainDictName(this.dict),
              _t90 = _Ti$DictFactory$expla5.name;

          return Ti.DictFactory.CheckDict(_t90);
        }
      }
    },
    methods: {
      OnItemChanged: function OnItemChanged() {
        var _ref70 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref70.index,
            e = _ref70.value;

        if (t >= 0) {
          var i = this.getMyValues();
          i[t] = Ti.Util.fallback(e, null), this.$notify("change", i);
        }
      },
      OnItemRemoved: function OnItemRemoved() {
        var _ref71 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref71.index;

        if (t >= 0) {
          var e = this.getMyValues();
          _.pullAt(e, t), this.$notify("change", e);
        }
      },
      OnItemFired: function OnItemFired() {
        var _ref72 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref72$index = _ref72.index,
            t = _ref72$index === void 0 ? -1 : _ref72$index;

        if (t >= 0) {
          var e = _.nth(this.theData, t);

          e && this.$notify("item:actived", e);
        }
      },
      evalMyData: function evalMyData() {
        var _this105 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee60() {
          var t, e, i, n, a, _t91;

          return regeneratorRuntime.wrap(function _callee60$(_context60) {
            while (1) {
              switch (_context60.prev = _context60.next) {
                case 0:
                  t = [];

                  if (!_.isArray(_this105.value)) {
                    _context60.next = 22;
                    break;
                  }

                  e = _this105.value.length - 1;
                  i = 0;

                case 4:
                  if (!(i < _this105.value.length)) {
                    _context60.next = 22;
                    break;
                  }

                  n = void 0, a = _this105.value[i];

                  if (!_.isPlainObject(a)) {
                    _context60.next = 10;
                    break;
                  }

                  (n = _this105.mapping ? Ti.Util.translate(a, _this105.mapping) : _.cloneDeep(a)).icon || (n.icon = _this105.getTagItemIcon(a));
                  _context60.next = 18;
                  break;

                case 10:
                  if (!_this105.Dict) {
                    _context60.next = 17;
                    break;
                  }

                  _context60.next = 13;
                  return _this105.Dict.getItem(a);

                case 13:
                  _t91 = _context60.sent;
                  n = _.defaults({
                    icon: _this105.Dict.getIcon(_t91),
                    text: _this105.Dict.getText(_t91) || a,
                    value: a
                  });
                  _context60.next = 18;
                  break;

                case 17:
                  n = {
                    text: a,
                    value: a
                  };

                case 18:
                  _.defaults(n, {
                    index: i,
                    icon: _this105.itemDefaultIcon,
                    options: _this105.itemOptions,
                    atLast: i == e
                  }), t.push(n);

                case 19:
                  i++;
                  _context60.next = 4;
                  break;

                case 22:
                  _this105.myTags = t;

                case 23:
                case "end":
                  return _context60.stop();
              }
            }
          }, _callee60);
        }))();
      },
      getMyValues: function getMyValues() {
        var t = [];

        var _iterator53 = _createForOfIteratorHelper(this.myTags),
            _step53;

        try {
          for (_iterator53.s(); !(_step53 = _iterator53.n()).done;) {
            var e = _step53.value;
            t.push(Ti.Util.fallback(e.value, null));
          }
        } catch (err) {
          _iterator53.e(err);
        } finally {
          _iterator53.f();
        }

        return t;
      }
    },
    watch: {
      value: {
        handler: "evalMyData",
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/ti/tags/ti-tags.mjs", t);
}(), Ti.Preload("ti/com/ti/tags/_com.json", {
  name: "ti-tags",
  globally: !0,
  template: "./ti-tags.html",
  mixins: ["./ti-tags.mjs"],
  components: ["./com/tags-item"]
}), Ti.Preload("ti/com/ti/text/json/ti-text-json.html", '<ti-gui\n  class="ti-text-json"\n  :class="className"\n  keep-shown-to="ti-text-json-editor"\n  :layout="TheLayout"\n  :schema="TheSchema"\n  :can-loading="true"\n  @change="OnChange"/>'), function () {
  var t = {
    props: {
      tabAt: {
        type: String,
        "default": "bottom-left",
        validator: function validator(t) {
          return /^(top|bottom)-(left|center|right)$/.test(t);
        }
      },
      value: void 0,
      tree: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      TheContent: function TheContent() {
        return Ti.Util.isNil(this.value) ? "" : this.value;
      },
      TheData: function TheData() {
        return Ti.Util.isNil(this.value) ? null : Ti.Types.safeParseJson(this.value, null);
      },
      TheLayout: function TheLayout() {
        return {
          type: "tabs",
          tabAt: this.tabAt,
          blocks: [{
            title: "i18n:structure",
            name: "tree",
            body: "desktop-tree"
          }, {
            title: "i18n:source-code",
            name: "source",
            body: "desktop-source"
          }]
        };
      },
      TheSchema: function TheSchema() {
        return {
          "desktop-tree": {
            comType: "ti-text-json-tree",
            comConf: _.assign({}, this.tree, {
              value: this.TheData
            })
          },
          "desktop-source": {
            comType: "ti-text-raw",
            comConf: {
              showTitle: !1,
              value: this.value
            }
          }
        };
      }
    },
    methods: {
      OnChange: function OnChange(t) {
        this.$notify("change", t);
      }
    }
  };
  Ti.Preload("ti/com/ti/text/json/ti-text-json.mjs", t);
}(), Ti.Preload("ti/com/ti/text/json/tree/item/json-tree-item.html", '<div class="json-value"\n  :class="topClass"\n  v-ti-activable>\n  \x3c!--\n  //  - Label   : Readonly\n  --\x3e\n  <span v-if="isLabel"\n    class="as-editing as-label">{{theLabelDisplayText}}</span>\n  \x3c!--\n  //  - Boolean : Editable boolean value\n  --\x3e\n  <ti-toggle v-else-if="\'Boolean\' == valueType"\n    class="as-editing"\n    :value="value"\n    @change="$notify(\'change\', $event)"/>\n  \x3c!--\n  //  - Integer : Editable integer value\n  //  - Float   : Editable float value\n  //  - String  : Editable string value\n  //  - Nil     : Edtiable any value\n  --\x3e\n  <ti-label v-else\n    class="as-editing"\n    :value="value"\n    :class-name="theValueClassName"\n    :format="theValueFormat"\n    :editable="true"\n    @change="$notify(\'change\', $event)"/>\n  \x3c!--\n    Action Menu\n  --\x3e\n  <ti-actionbar v-if="showActions"\n    class="as-actions"\n    :items="theActionMenuData"\n    :status="theActionMenuStatus"/>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {};
    },
    props: {
      value: null,
      valueType: {
        type: String,
        "default": "Nil"
      },
      valuePath: {
        type: [String, Array],
        "default": function _default() {
          return [];
        }
      },
      showActions: {
        type: Boolean,
        "default": !1
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName({
          "is-self-actived": this.isSelfActived,
          "is-actived": this.isActived
        });
      },
      isLabel: function isLabel() {
        return /^(Array|Object)$/.test(this.valueType);
      },
      isTop: function isTop() {
        return 0 == this.theValuePath.length;
      },
      theLabelDisplayText: function theLabelDisplayText() {
        return "Array" == this.valueType ? "[..]" : "Object" == this.valueType ? "{..}" : "???";
      },
      theValuePath: function theValuePath() {
        return _.isArray(this.valuePath) ? this.valuePath : _.isString(this.valuePath) ? _.without(this.valuePath.split(/[\/.]/g), "") : [];
      },
      theValueClassName: function theValueClassName() {
        return _.kebabCase("is".concat(this.valueType));
      },
      theValueFormat: function theValueFormat() {
        if ("String" == this.valueType) return function (t) {
          return t ? "\"".concat(t, "\"") : '""';
        };
      },
      theActionMenuData: function theActionMenuData() {
        var _this106 = this;

        var t = [{
          name: "jvTypeArray",
          text: "i18n:json-Array",
          type: "action",
          altDisplay: {
            icon: "zmdi-check",
            capture: !1
          },
          action: function action() {
            _this106.$notify("change", {
              jsonMutate: "ChangeValueType",
              args: "Array"
            });
          }
        }, {
          name: "jvTypeObject",
          text: "i18n:json-Object",
          type: "action",
          altDisplay: {
            icon: "zmdi-check",
            capture: !1
          },
          action: function action() {
            _this106.$notify("change", {
              jsonMutate: "ChangeValueType",
              args: "Object"
            });
          }
        }],
            e = [{
          name: "jv-add",
          type: "action",
          icon: "zmdi-plus",
          action: function action() {
            _this106.$notify("change", {
              jsonMutate: "Add"
            });
          }
        }];
        return this.isTop || (e.push({
          type: "line"
        }), e.push({
          name: "jv-remove",
          type: "action",
          icon: "zmdi-delete",
          action: function action() {
            _this106.$notify("change", {
              jsonMutate: "Remove"
            });
          }
        }), t.push({
          type: "line"
        }), t.push({
          name: "jvTypeBoolean",
          text: "i18n:json-Boolean",
          type: "action",
          altDisplay: {
            icon: "zmdi-check",
            capture: !1
          },
          action: function action() {
            _this106.$notify("change", {
              jsonMutate: "ChangeValueType",
              args: "Boolean"
            });
          }
        }), t.push({
          name: "jvTypeNumber",
          text: "i18n:json-Number",
          type: "action",
          altDisplay: {
            icon: "zmdi-check",
            capture: !1
          },
          action: function action() {
            _this106.$notify("change", {
              jsonMutate: "ChangeValueType",
              args: "Number"
            });
          }
        }), t.push({
          name: "jvTypeString",
          text: "i18n:json-String",
          type: "action",
          altDisplay: {
            icon: "zmdi-check",
            capture: !1
          },
          action: function action() {
            _this106.$notify("change", {
              jsonMutate: "ChangeValueType",
              args: "String"
            });
          }
        }), t.push({
          name: "jvTypeNil",
          text: "i18n:json-Nil",
          type: "action",
          altDisplay: {
            icon: "zmdi-check",
            capture: !1
          },
          action: function action() {
            _this106.$notify("change", {
              jsonMutate: "ChangeValueType",
              args: "Nil"
            });
          }
        })), e.push({
          type: "line"
        }), e.push({
          key: "jv-types",
          type: "group",
          icon: "zmdi-more",
          items: t
        }), e;
      },
      theActionMenuStatus: function theActionMenuStatus() {
        return {
          jvTypeBoolean: "Boolean" == this.valueType,
          jvTypeInteger: "Integer" == this.valueType,
          jvTypeFloat: "Float" == this.valueType,
          jvTypeNumber: "Number" == this.valueType,
          jvTypeString: "String" == this.valueType,
          jvTypeArray: "Array" == this.valueType,
          jvTypeObject: "Object" == this.valueType,
          jvTypeNil: "Nil" == this.valueType
        };
      }
    },
    methods: {},
    watch: {},
    mounted: function mounted() {}
  };
  Ti.Preload("ti/com/ti/text/json/tree/item/json-tree-item.mjs", t);
}(), Ti.Preload("ti/com/ti/text/json/tree/item/_com.json", {
  name: "ti-text-json-tree-item",
  globally: !0,
  template: "./json-tree-item.html",
  mixins: ["./json-tree-item.mjs"]
}), Ti.Preload("ti/com/ti/text/json/tree/ti-text-json-tree.html", '<ti-tree class="ti-text-json-tree"\n  title="i18n:name"\n  :main-width="mainWidth"\n  :class="className"\n  :border="border"\n  :keep-open-by="keepOpenBy"\n  :multi="true"\n  :data="myTreeRoot"\n  :display="TreeDisplay"\n  :auto-open="autoOpen"\n  :current-id="myTreeCurrentPathId"\n  :default-open-depth="2"\n  :fields="TreeFields"\n  @select\n  @node:item:change="OnNodeItemChange"\n  @opened-status:changed="OnOpenedStatusChanged"/>'), function () {
  var t = {
    data: function data() {
      return {
        myTreeRoot: [],
        myTreeCurrentPathId: null,
        myTreeOpenedStatus: {}
      };
    },
    props: {
      value: null,
      mainWidth: {
        type: [String, Number],
        "default": .372
      },
      border: {
        type: String,
        "default": "cell",
        validator: function validator(t) {
          return /^(row|column|cell|none)$/.test(t);
        }
      },
      keepOpenBy: {
        type: String,
        "default": null
      },
      autoOpen: {
        type: Boolean,
        "default": !1
      },
      showRoot: {
        type: Boolean,
        "default": !0
      },
      editing: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      TreeDisplay: function TreeDisplay() {
        return {
          key: "name",
          comType: "ti-label",
          comConf: function comConf(t) {
            return {
              className: _.kebabCase("is-".concat(t.nameType)),
              editable: "Key" == t.nameType,
              format: {
                Index: "[${val}]",
                Label: "i18n:json-${val}"
              }[t.nameType]
            };
          }
        };
      },
      TreeFields: function TreeFields() {
        return [{
          title: "i18n:value",
          width: .618,
          display: {
            key: "value",
            ignoreNil: !1,
            comType: "ti-text-json-tree-item",
            comConf: {
              valueType: "${valueType}",
              valuePath: "${=rowId}",
              showActions: "${=isCurrent}"
            }
          }
        }];
      }
    },
    methods: {
      evalTreeData: function evalTreeData() {
        var t = [];
        this.joinTreeTableRow(t, this.value), this.myTreeRoot = _.first(t);
      },
      getJsValueType: function getJsValueType(t) {
        return Ti.Util.isNil(t) ? "Nil" : _.isArray(t) ? "Array" : _.isNumber(t) ? "Number" : _.upperFirst(_typeof(t));
      },
      joinTreeTableRow: function joinTreeTableRow() {
        var _this107 = this;

        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var e = arguments.length > 1 ? arguments[1] : undefined;
        var i = arguments.length > 2 ? arguments[2] : undefined;
        var n,
            a = this.getJsValueType(e);

        if (_.isUndefined(i) ? (i = a, n = "Label") : n = _.isNumber(i) ? "Index" : "Key", _.isUndefined(e) ? t.push({
          nameType: n,
          valueType: a,
          name: i,
          value: void 0
        }) : _.isNull(e) && t.push({
          nameType: n,
          valueType: a,
          name: i,
          value: null
        }), _.isArray(e)) {
          var _a4 = {
            nameType: n,
            valueType: "Array",
            name: i,
            value: e,
            children: []
          };

          for (var _t92 = 0; _t92 < e.length; _t92++) {
            var _i21 = e[_t92];
            this.joinTreeTableRow(_a4.children, _i21, _t92);
          }

          t.push(_a4);
        } else if (_.isPlainObject(e)) {
          var _a5 = {
            nameType: n,
            valueType: "Object",
            name: i,
            value: e,
            children: []
          };
          _.forEach(e, function (t, e) {
            _this107.joinTreeTableRow(_a5.children, t, e);
          }), t.push(_a5);
        } else _.isBoolean(e) ? t.push({
          nameType: n,
          valueType: a,
          name: i,
          value: !!e
        }) : _.isNumber(e) ? t.push({
          nameType: n,
          valueType: a,
          name: i,
          value: 1 * e
        }) : _.isString(e) && t.push({
          nameType: n,
          valueType: a,
          name: i,
          value: e + ""
        });
      },
      doAdd: function doAdd() {
        var _arguments14 = arguments,
            _this108 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee61() {
          var t, e, i, n, a, _t93, _i22, _n14, _a6, s, _t94;

          return regeneratorRuntime.wrap(function _callee61$(_context61) {
            while (1) {
              switch (_context61.prev = _context61.next) {
                case 0:
                  t = _arguments14.length > 0 && _arguments14[0] !== undefined ? _arguments14[0] : {};
                  e = _arguments14.length > 1 && _arguments14[1] !== undefined ? _arguments14[1] : [];
                  i = Ti.Trees.getByPath(_this108.myTreeRoot, e), n = _.isEmpty(e) ? t : _.get(t, e), a = _this108.myTreeOpenedStatus[e.join("/")];

                  if (!i) {
                    _context61.next = 34;
                    break;
                  }

                  if (!(a && _.isArray(n))) {
                    _context61.next = 8;
                    break;
                  }

                  n.push(null);
                  _context61.next = 33;
                  break;

                case 8:
                  if (!(a && _.isPlainObject(n))) {
                    _context61.next = 17;
                    break;
                  }

                  _context61.next = 11;
                  return Ti.Prompt("i18n:json-new-key");

                case 11:
                  _t93 = _context61.sent;

                  if (!Ti.Util.isNil(_t93)) {
                    _context61.next = 14;
                    break;
                  }

                  return _context61.abrupt("return");

                case 14:
                  n[_t93] = null;
                  _context61.next = 33;
                  break;

                case 17:
                  if (!(e.length > 0)) {
                    _context61.next = 33;
                    break;
                  }

                  _n14 = e.slice(0, e.length - 1), _a6 = _.isEmpty(_n14) ? t : _.get(t, _n14), s = _.last(e);

                  if (!_.isArray(_a6)) {
                    _context61.next = 23;
                    break;
                  }

                  _i22 = _a6, Ti.Util.insertToArray(_a6, s + 1, null);
                  _context61.next = 30;
                  break;

                case 23:
                  if (!_.isPlainObject(_a6)) {
                    _context61.next = 30;
                    break;
                  }

                  _context61.next = 26;
                  return Ti.Prompt("i18n:json-new-key");

                case 26:
                  _t94 = _context61.sent;

                  if (!Ti.Util.isNil(_t94)) {
                    _context61.next = 29;
                    break;
                  }

                  return _context61.abrupt("return");

                case 29:
                  _i22 = Ti.Util.appendToObject(_a6, s, _defineProperty({}, _t94, null));

                case 30:
                  if (!(0 == _n14.length)) {
                    _context61.next = 32;
                    break;
                  }

                  return _context61.abrupt("return", _i22);

                case 32:
                  _.set(t, _n14, _i22);

                case 33:
                  return _context61.abrupt("return", t);

                case 34:
                case "end":
                  return _context61.stop();
              }
            }
          }, _callee61);
        }))();
      },
      doRemove: function doRemove() {
        var _this109 = this;

        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        if (_.isEmpty(e)) return;

        var i,
            n = Ti.Trees.getByPath(this.myTreeRoot, e),
            a = Ti.Trees.nextCandidate(n),
            s = e.slice(0, e.length - 1),
            o = _.isEmpty(s) ? t : _.get(t, s),
            l = _.last(e);

        if (_.isArray(o) ? (i = [], _.forEach(o, function (t, e) {
          e != l && i.push(t);
        })) : _.isPlainObject(o) && (i = {}, _.forEach(o, function (t, e) {
          e != l && (i[e] = t);
        })), a && a.node) {
          var _t95 = _.concat(a.path, a.node.name).join("/");

          this.$nextTick(function () {
            _this109.myTreeCurrentPathId = _t95;
          });
        }

        return 0 == s.length ? i : (_.set(t, s, i), t);
      },
      doChangeValueType: function doChangeValueType() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        var i = arguments.length > 2 ? arguments[2] : undefined;

        var n = _.isEmpty(e),
            a = n ? t : _.get(t, e),
            s = {
          Boolean: function Boolean(t) {
            return !!t;
          },
          Number: function Number(t) {
            var e = 1 * t;
            return isNaN(e) ? -1 : e;
          },
          Integer: function Integer(t) {
            var e = parseInt(t);
            return isNaN(e) ? -1 : e;
          },
          Float: function Float(t) {
            var e = 1 * t;
            return isNaN(e) ? -1 : e;
          },
          String: function String(t) {
            return _.isArray(t) || _.isObject(t) ? JSON.stringify(t) : t + "";
          },
          Array: function Array(t) {
            return _.isArray(t) ? void 0 : Ti.Util.isNil(t) ? [] : [t];
          },
          Object: function Object(t) {
            if (_.isArray(t)) {
              var _e30 = _.fromPairs(t),
                  _i23 = {};

              return _.forEach(_e30, function (t, e) {
                Ti.Util.isNil(e) || _.isUndefined(t) || (_i23[e] = t);
              }), _.isEmpty(_i23) && !_.isEmpty(t) && Ti.Util.merge(_i23, t), _i23;
            }

            if (!_.isPlainObject(t)) return _.isString(t) ? Ti.Types.safeParseJson(t, {
              value: t
            }) : {
              value: t
            };
          },
          Nil: function Nil(t) {
            return null;
          }
        }[i];

        if (_.isFunction(s)) {
          var _i24 = s(a);

          if (_.isUndefined(_i24)) return;
          return n ? _i24 : (_.set(t, e, _i24), t);
        }
      },
      OnNodeItemChange: function OnNodeItemChange() {
        var _arguments15 = arguments,
            _this110 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee62() {
          var _ref73, t, e, i, n, a, s, o, _t96, _t97, _n15;

          return regeneratorRuntime.wrap(function _callee62$(_context62) {
            while (1) {
              switch (_context62.prev = _context62.next) {
                case 0:
                  _ref73 = _arguments15.length > 0 && _arguments15[0] !== undefined ? _arguments15[0] : {}, t = _ref73.name, e = _ref73.value, i = _ref73.data, n = _ref73.node, a = _ref73.nodeId;

                  if (n.id) {
                    _context62.next = 3;
                    break;
                  }

                  return _context62.abrupt("return");

                case 3:
                  s = _.cloneDeep(_this110.value), o = n.path;

                  if (!(e && e.jsonMutate)) {
                    _context62.next = 13;
                    break;
                  }

                  _t96 = {
                    Add: _this110.doAdd,
                    Remove: _this110.doRemove,
                    ChangeValueType: _this110.doChangeValueType
                  }[e.jsonMutate];
                  _context62.next = 8;
                  return Ti.DoInvoke(_t96, _.concat([s, o], e.args), _this110);

                case 8:
                  s = _context62.sent;

                  if (!_.isUndefined(s)) {
                    _context62.next = 11;
                    break;
                  }

                  return _context62.abrupt("return");

                case 11:
                  _context62.next = 14;
                  break;

                case 13:
                  if ("name" == t) s = Ti.Util.setKey(s, o, e);else if ("value" == t) {
                    _t97 = {
                      Integer: function Integer(t) {
                        var e = parseInt(t);
                        return isNaN(e) ? t : e;
                      },
                      Float: function Float(t) {
                        var e = 1 * t;
                        return isNaN(e) ? t : e;
                      },
                      Number: function Number(t) {
                        var e = 1 * t;
                        return isNaN(e) ? t : e;
                      },
                      Nil: function Nil(t) {
                        return Ti.S.toJsValue(t, {
                          autoDate: !1
                        });
                      }
                    }[i.valueType], _n15 = _.isFunction(_t97) ? _t97(e) : e;

                    _.set(s, o, _n15);
                  }

                case 14:
                  _this110.$notify("change", s);

                case 15:
                case "end":
                  return _context62.stop();
              }
            }
          }, _callee62);
        }))();
      },
      OnOpenedStatusChanged: function OnOpenedStatusChanged(t) {
        this.myTreeOpenedStatus = t;
      }
    },
    watch: {
      value: function value() {
        this.evalTreeData();
      }
    },
    mounted: function mounted() {
      this.evalTreeData();
    }
  };
  Ti.Preload("ti/com/ti/text/json/tree/ti-text-json-tree.mjs", t);
}(), Ti.Preload("ti/com/ti/text/json/tree/_com.json", {
  name: "ti-text-json-tree",
  globally: !0,
  i18n: "@i18n:ti-text-json",
  template: "./ti-text-json-tree.html",
  mixins: ["./ti-text-json-tree.mjs"],
  components: ["@com:ti/tree", "@com:ti/text/json/tree/item"]
}), Ti.Preload("ti/com/ti/text/json/_com.json", {
  name: "ti-text-json",
  globally: !0,
  i18n: "@i18n:ti-text-json",
  template: "./ti-text-json.html",
  mixins: ["./ti-text-json.mjs"],
  components: ["@com:ti/gui", "@com:ti/text/raw", "@com:ti/toggle", "@com:ti/text/json/tree"]
}), Ti.Preload("ti/com/ti/text/markdown/preview/markdown-preview.html", '<div class="ti-markdown-preview"\n  :class="TopClass">\n  <article \n    :class="ThemeClass"\n    v-html="myHtml"></article>\n  \x3c!--pre>{{myHtml}}</pre--\x3e\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myHtml: null,
        myTheme: null
      };
    },
    props: {
      mediaBase: {
        type: String,
        "default": void 0
      },
      value: {
        type: String,
        "default": ""
      },
      placeholder: {
        type: String,
        "default": "i18n:blank"
      },
      theme: {
        type: String,
        "default": "nice"
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      ThemeClass: function ThemeClass() {
        if (this.myTheme) return "ti-markdown-theme-".concat(this.myTheme);
      }
    },
    methods: {
      evalMediaSrc: function evalMediaSrc(t) {
        return t && this.mediaBase ? /^(https?:\/\/|\/)/i.test(t) ? t : Ti.Util.appendPath(this.mediaBase, t) : t;
      },
      renderMarkdown: function renderMarkdown() {
        var _this111 = this;

        if (Ti.Util.isBlank(this.value)) this.myHtml = Ti.I18n.text(this.placeholder), this.myTheme = this.theme;else {
          var _t98 = Cheap.parseMarkdown(this.value);

          console.log(_t98.toString()), this.myHtml = _t98.toBodyInnerHtml({
            mediaSrc: function mediaSrc(t) {
              return _this111.evalMediaSrc(t);
            }
          }), this.myTheme = _t98.getMeta("theme", this.theme);
        }
      }
    },
    watch: {
      value: {
        handler: "renderMarkdown",
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/ti/text/markdown/preview/markdown-preview.mjs", t);
}(), Ti.Preload("ti/com/ti/text/markdown/preview/_com.json", {
  name: "ti-text-markdown-preview",
  globally: !0,
  template: "./markdown-preview.html",
  mixins: ["./markdown-preview.mjs"]
}), Ti.Preload("ti/com/ti/text/markdown/richeditor/markdown-richeditor.html", '<div class="ti-markdown-richeditor"\n  :class="TopClass">\n  \x3c!--\n    Toolbar\n  --\x3e\n  <ti-actionbar \n    v-if="hasToolbar"\n      class="as-toolbar"\n      :items="ToolbarMenuData" \n      :align="toolbarAlign"\n      :status="myToolbarStatus"\n      @change="OnToolbarChange"/>\n  \x3c!--\n    Stage\n  --\x3e\n  <div ref="stage"\n    class="as-stage"\n    spellcheck="false"\n    :class="ThemeClass"></div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myMeta: {},
        syncForbid: 0,
        myToolbarStatus: {}
      };
    },
    props: {
      mediaBase: {
        type: String,
        "default": void 0
      },
      value: {
        type: String,
        "default": ""
      },
      placeholder: {
        type: String,
        "default": "i18n:blank"
      },
      theme: {
        type: String,
        "default": "nice"
      },
      toolbar: {
        type: Array,
        "default": function _default() {
          return ["Heading", "|", "B", "I", "|", "Link", "Code", "|", "BlockQuote", "CodeBlock", "|", "Outdent", "Indent", "|", "UL", "OL", "|", "Media"];
        }
      },
      toolbarAlign: {
        type: String,
        "default": "left",
        validator: function validator(t) {
          return /^(left|right|center)$/.test(t);
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      ThemeClass: function ThemeClass() {
        if (this.ThemeName) return "ti-markdown-theme-".concat(this.ThemeName);
      },
      ThemeName: function ThemeName() {
        return _.get(this.myMeta, "theme") || this.theme;
      },
      hasToolbar: function hasToolbar() {
        return !_.isEmpty(this.ToolbarMenuData);
      },
      ToolbarMenuData: function ToolbarMenuData() {
        var t = [];
        return _.forEach(this.toolbar, function (e) {
          var i = {
            "|": {
              type: "line"
            },
            B: {
              icon: "fas-bold",
              notify: "bold",
              highlight: "bold",
              disabled: "italic"
            },
            I: {
              icon: "fas-italic",
              notify: "italic",
              highlight: "italic",
              disabled: "bold"
            },
            Link: {
              icon: "fas-link",
              notify: "link",
              highlight: "link"
            },
            Code: {
              icon: "zmdi-code",
              notify: "code",
              highlight: "code"
            },
            Heading: {
              type: "group",
              icon: "fas-hashtag",
              text: "i18n:wordp-heading",
              items: [{
                text: "i18n:wordp-h1",
                notify: "header",
                highlight: "h1",
                value: 1
              }, {
                text: "i18n:wordp-h2",
                notify: "header",
                highlight: "h2",
                value: 2
              }, {
                text: "i18n:wordp-h3",
                notify: "header",
                highlight: "h3",
                value: 3
              }, {
                text: "i18n:wordp-h4",
                notify: "header",
                highlight: "h4",
                value: 4
              }, {
                text: "i18n:wordp-h5",
                notify: "header",
                highlight: "h5",
                value: 5
              }, {
                text: "i18n:wordp-h6",
                notify: "header",
                highlight: "h6",
                value: 6
              }, {
                text: "i18n:wordp-h0",
                notify: "header",
                highlight: "h0",
                value: 0
              }]
            },
            BlockQuote: {
              icon: "fas-quote-right",
              notify: "blockquote",
              highlight: "blockquote"
            },
            CodeBlock: {
              icon: "fas-code",
              notify: "code_block",
              highlight: "code-block"
            },
            Indent: {
              icon: "fas-indent",
              notify: "indent"
            },
            Outdent: {
              icon: "fas-outdent",
              notify: "outdent"
            },
            UL: {
              icon: "fas-list-ul",
              notify: "list",
              value: "bullet",
              highlight: {
                list: "bullet"
              }
            },
            OL: {
              icon: "fas-list-ol",
              notify: "list",
              value: "ordered",
              highlight: {
                list: "ordered"
              }
            },
            Media: {
              icon: "fas-photo-video",
              action: "$parent:OnInsertMedia"
            }
          }[e];
          i && t.push(i);
        }), t;
      }
    },
    methods: {
      OnToolbarChange: function OnToolbarChange() {
        var _ref74 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref74.name,
            e = _ref74.value;

        console.log({
          name: t,
          value: e
        });
        var i = {
          bold: function bold(t, e) {
            t.format("bold", e);
          },
          italic: function italic(t, e) {
            t.format("italic", e);
          },
          code: function code(t, e) {
            t.format("code", e);
          },
          header: function header(t, e) {
            t.format("header", e);
          },
          blockquote: function blockquote(t, e) {
            t.format("blockquote", e);
          },
          code_block: function code_block(t, e) {
            t.format("code-block", e);
          },
          link: function link(t, e) {
            return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee63() {
              var i, _e31;

              return regeneratorRuntime.wrap(function _callee63$(_context63) {
                while (1) {
                  switch (_context63.prev = _context63.next) {
                    case 0:
                      i = t.getSelection();

                      if (i) {
                        _context63.next = 5;
                        break;
                      }

                      _context63.next = 4;
                      return Ti.Toast.Open("i18n:wordp-nil-sel", "warn");

                    case 4:
                      return _context63.abrupt("return", _context63.sent);

                    case 5:
                      if (!e) {
                        _context63.next = 16;
                        break;
                      }

                      if (i.length > 0) {
                        _context63.next = 10;
                        break;
                      }

                      _context63.next = 9;
                      return Ti.Toast.Open("i18n:wordp-nil-sel", "warn");

                    case 9:
                      return _context63.abrupt("return", _context63.sent);

                    case 10:
                      _context63.next = 12;
                      return Ti.Prompt("i18n:wordp-link");

                    case 12:
                      _e31 = _context63.sent;
                      if (!Ti.Util.isNil(_e31)) t.format("link", _e31);
                      _context63.next = 17;
                      break;

                    case 16:
                      t.format("link", !1);

                    case 17:
                    case "end":
                      return _context63.stop();
                  }
                }
              }, _callee63);
            }))();
          },
          indent: function indent(t) {
            t.format("indent", "+1");
          },
          outdent: function outdent(t) {
            t.format("indent", "-1");
          },
          list: function list(t) {
            var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "bullet";
            t.format("list", e);
          }
        }[t];
        _.isFunction(i) && (i(this.$editor, e), this.quillUpdateFormat());
      },
      OnInsertMedia: function OnInsertMedia() {
        var _this112 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee64() {
          var t, _iterator54, _step54, e, _t99, i, n;

          return regeneratorRuntime.wrap(function _callee64$(_context64) {
            while (1) {
              switch (_context64.prev = _context64.next) {
                case 0:
                  _context64.next = 2;
                  return Wn.OpenObjSelector();

                case 2:
                  t = _context64.sent;

                  if (t && !_.isEmpty(t)) {
                    _iterator54 = _createForOfIteratorHelper(t);

                    try {
                      for (_iterator54.s(); !(_step54 = _iterator54.n()).done;) {
                        e = _step54.value;
                        _t99 = Wn.Session.getHomePath(), i = Ti.Util.getRelativePath(_t99, e.ph, ""), n = "/o/content?str=".concat(Ti.Util.appendPath("~", i));
                        e.mime && e.mime.startsWith("video") ? _this112.insertMedia("video", n, {
                          controls: !1,
                          autoplay: !1
                        }) : _this112.insertMedia("image", n);
                      }
                    } catch (err) {
                      _iterator54.e(err);
                    } finally {
                      _iterator54.f();
                    }
                  }

                case 4:
                case "end":
                  return _context64.stop();
              }
            }
          }, _callee64);
        }))();
      },
      insertMedia: function insertMedia() {
        var _n$insert;

        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "image";
        var e = arguments.length > 1 ? arguments[1] : undefined;
        var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        if (!e) return;
        var n = new (Quill["import"]("delta"))(),
            a = this.$editor.getSelection();
        console.log("selection", a), a || (this.$editor.setSelection(0), a = {
          index: 0,
          length: 0
        });
        var _a7 = a,
            s = _a7.index,
            o = _a7.length;
        n.retain(s), o > 0 && n["delete"](o), n.insert((_n$insert = {}, _defineProperty(_n$insert, t, e), _defineProperty(_n$insert, "attributes", i), _n$insert)), this.$editor.updateContents(n), this.$editor.setSelection(s + 1);
      },
      renderMarkdown: function renderMarkdown() {
        if (console.log("!!!!!!!!!!!!!!!!!!!!!! renderMarkdown"), Ti.Util.isBlank(this.value)) this.myMeta = {};else {
          var _t100 = Cheap.parseMarkdown(this.value);

          console.log(_t100.toString()), window.MdDoc = _t100, this.myMeta = _.cloneDeep(_t100.getMeta());

          var e = _t100.toDelta();

          this.$editor.setContents(e);
        }
      },
      syncMarkdown: function syncMarkdown() {
        this.syncForbid > 0 ? this.syncForbid-- : this.renderMarkdown();
      },
      highlightCode: function highlightCode() {
        var _iterator55 = _createForOfIteratorHelper(this.$refs.stage.querySelectorAll("pre")),
            _step55;

        try {
          for (_iterator55.s(); !(_step55 = _iterator55.n()).done;) {
            var _t101 = _step55.value;
            console.log(_t101), hljs.highlightBlock(_t101);
          }
        } catch (err) {
          _iterator55.e(err);
        } finally {
          _iterator55.f();
        }
      },
      quillChanged: function quillChanged(t) {
        console.log("changed", JSON.stringify(t, null, "  "));
        var e = Cheap.parseDelta(t);
        e.setDefaultMeta(this.myMeta), this.myMeta = e.getMeta(), console.log(e.toString());
        var i = e.toMarkdown();
        console.log(i), i != this.value && (this.syncForbid = 1, this.$notify("change", i));
      },
      quillSelectionChanged: function quillSelectionChanged(t) {
        if (t) {
          var e = [t.index];
          t.length > 0 && e.push(t.length), this.$notify("indicate", e.join(":")), this.quillUpdateFormat(t);
        }
      },
      quillUpdateFormat: function quillUpdateFormat(t) {
        var e = this.$editor.getFormat(t);
        e.header ? e["h".concat(e.header)] = !0 : e.h0 = !0, _.isEqual(this.myToolbarStatus, e) || (this.myToolbarStatus = e);
      },
      installQuillEditor: function installQuillEditor() {
        var _this113 = this;

        this.$editor || (!function (t) {
          if (t.__has_been_reset) return;
          var e = t["import"]("formats/indent");
          e.keyName = "li-indent", e.whitelist = [1, 2, 3, 4, 5, 6], t.__has_been_reset = !0;
        }(Quill), this.$editor = new Quill(this.$refs.stage, {
          modules: {
            syntax: !1
          },
          bounds: this.$refs.stage,
          placeholder: Ti.I18n.text(this.placeholder)
        }), this.debounceQuillChanged = _.debounce(function (t, e) {
          var i = e.compose(t);

          _this113.quillChanged(i);
        }, 1e3), this.$editor.on("text-change", function (t, e, i) {
          _this113.debounceQuillChanged(t, e);
        }), this.$editor.on("selection-change", function (t, e, i) {
          _this113.quillSelectionChanged(t);
        }));
      }
    },
    watch: {
      value: {
        handler: "syncMarkdown"
      }
    },
    mounted: function mounted() {
      this.installQuillEditor(), this.syncMarkdown();
    }
  };
  Ti.Preload("ti/com/ti/text/markdown/richeditor/markdown-richeditor.mjs", t);
}(), Ti.Preload("ti/com/ti/text/markdown/richeditor/_com.json", {
  name: "ti-text-markdown-richeditor",
  globally: !0,
  i18n: "@i18n:ti-text-editor",
  template: "./markdown-richeditor.html",
  css: "@deps:highlight/default.css",
  mixins: ["./markdown-richeditor.mjs"],
  components: ["@com:wn/adaptlist"],
  deps: ["@deps:quill/quill.js", "@deps:highlight/highlight.js"]
}), Ti.Preload("ti/com/ti/text/raw/ti-text-raw.html", '<div class="ti-text-raw"\n  :class="TopClass"\n  v-ti-activable>\n  \x3c!--\n    Show Editor\n  --\x3e\n  <template v-if="hasContent || showTitle">\n    <div\n      v-if="showTitle"\n        class="te-head"\n        :class="HeadClass">\n        <ti-icon class="center" :value="icon"/>\n        <b>{{title}}</b>\n    </div>\n    <div class="te-main">\n      <textarea ref="text" \n        spellcheck="false"\n        :placeholder="placeholder"\n        :value="myContent"\n        @keyup="OnTextareaKeyup"\n        @change="OnContentChanged"\n      ></textarea>\n    </div>\n  </template>\n  \x3c!--\n    Show Blank\n  --\x3e\n  <ti-loading \n    v-else\n      icon="zmdi-alert-circle-o"\n      :text="blankText"/>\n</div>'), function () {
  var t = {
    model: {
      prop: "content",
      event: "change"
    },
    data: function data() {
      return {
        myContent: null
      };
    },
    props: {
      icon: {
        type: [String, Object],
        "default": "im-hashtag"
      },
      title: {
        type: String,
        "default": "No Title"
      },
      showTitle: {
        type: Boolean,
        "default": !0
      },
      trimed: {
        type: Boolean,
        "default": !1
      },
      value: {
        type: String,
        "default": ""
      },
      status: {
        type: Object,
        "default": function _default() {}
      },
      ignoreKeyUp: {
        type: Boolean,
        "default": !1
      },
      blankText: {
        type: String,
        "default": "i18n:blank"
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "show-title": this.showTitle,
          "hide-title": !this.showTitle
        });
      },
      HeadClass: function HeadClass() {
        return {
          "content-changed": this.isContentChanged
        };
      },
      hasContent: function hasContent() {
        return !Ti.Util.isNil(this.value);
      },
      placeholder: function placeholder() {
        return Ti.I18n.text(this.blankText);
      },
      isContentChanged: function isContentChanged() {
        return this.ignoreKeyUp ? this.myContent != this.value : _.get(this.status, "changed");
      }
    },
    methods: {
      getContent: function getContent() {
        return this.myContent;
      },
      checkContentChanged: function checkContentChanged() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !0;
        var e = this,
            i = e.$refs.text;

        if (_.isElement(i)) {
          var n = i.value;
          this.trimed && (n = _.trim(n)), this.myContent = n, t && n != this.value && e.$notify("change", n);
        }
      },
      onTextareaKeyup: function onTextareaKeyup() {
        this.checkContentChanged(!this.ignoreKeyUp);
      },
      OnContentChanged: function OnContentChanged() {
        this.checkContentChanged(!0);
      },
      __ti_shortcut: function __ti_shortcut(t) {
        if ("CTRL+ENTER" == t) return this.checkContentChanged(), {
          prevent: !0
        };
      }
    },
    watch: {
      value: function value() {
        this.myContent = this.value;
      }
    },
    created: function created() {
      var _this114 = this;

      this.OnTextareaKeyup = _.debounce(function () {
        _this114.checkContentChanged(!_this114.ignoreKeyUp);
      }, 500);
    },
    mounted: function mounted() {
      this.myContent = this.value;
    }
  };
  Ti.Preload("ti/com/ti/text/raw/ti-text-raw.mjs", t);
}(), Ti.Preload("ti/com/ti/text/raw/_com.json", {
  name: "ti-text-raw",
  globally: !0,
  template: "./ti-text-raw.html",
  mixins: ["./ti-text-raw.mjs"]
}), Ti.Preload("ti/com/ti/time/ti-time.html", '<div class="ti-col-data as-time" \n  :class="topClass" \n  :style="topStyle">\n  <ti-list v-for="list in theListGroup"\n    :key="list.key"\n    :data="list.data"\n    :display="\'text\'"\n    :current-id="list.currentId"\n    :cancelable="false"\n    @select="onListSelected(list.key, $event)"/>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      value: {
        type: [String, Number, Date, Ti.Types.Time],
        "default": null
      },
      valueUnit: {
        type: String,
        "default": "s",
        validator: function validator(t) {
          return /^(ms|s|min|hr)$/.test(t);
        }
      },
      mode: {
        type: String,
        "default": "auto",
        validator: function validator(t) {
          return /^(sec|min|auto)$/.test(t);
        }
      },
      width: {
        type: [Number, String],
        "default": null
      },
      height: {
        type: [Number, String],
        "default": 200
      }
    },
    computed: {
      topClass: function topClass() {
        return this.getTopClass();
      },
      topStyle: function topStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      theTime: function theTime() {
        return Ti.Types.toTime(this.value || 0, {
          unit: this.valueUnit
        });
      },
      theListGroup: function theListGroup() {
        var t = [this.createList("hours", 0, 24, this.theTime.hours), this.createList("minutes", 0, 60, this.theTime.minutes)];
        return /^(auto|sec)$/.test(this.mode) && t.push(this.createList("seconds", 0, 60, this.theTime.seconds)), t;
      }
    },
    methods: {
      createList: function createList(t, e, i) {
        var n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
        var a = {
          key: t,
          currentId: "R-".concat(n),
          data: []
        };

        for (var _t102 = e; _t102 < i; _t102++) {
          a.data.push({
            id: "R-".concat(_t102),
            value: _t102,
            text: _.padStart(_t102, 2, "0")
          });
        }

        return a;
      },
      onListSelected: function onListSelected(t) {
        var _ref75 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            e = _ref75.current;

        var i = this.theTime.clone();
        i[t] = _.get(e, "value") || 0, this.$notify("change", i);
      }
    }
  };
  Ti.Preload("ti/com/ti/time/ti-time.mjs", t);
}(), Ti.Preload("ti/com/ti/time/_com.json", {
  name: "ti-time",
  globally: !0,
  template: "./ti-time.html",
  mixins: ["./ti-time.mjs"],
  components: ["@com:ti/list"]
}), Ti.Preload("ti/com/ti/toggle/ti-toggle.html", '<div class="ti-toggle"\n  :class="topClass">\n  <aside @click.left="onClick"><b></b></aside>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        isOn: !1
      };
    },
    props: {
      value: !1,
      readonly: !1,
      options: {
        type: Array,
        "default": function _default() {
          return [!1, !0];
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName({
          "is-off": !this.isOn,
          "is-on": this.isOn
        }, this.className);
      }
    },
    methods: {
      onClick: function onClick() {
        if (!this.readonly) {
          var _t103 = this.isOn ? 0 : 1;

          this.$notify("change", this.options[_t103]);
        }
      }
    },
    watch: {
      value: function value() {
        this.isOn = !!this.value;
      }
    },
    mounted: function mounted() {
      this.isOn = !!this.value;
    }
  };
  Ti.Preload("ti/com/ti/toggle/ti-toggle.mjs", t);
}(), Ti.Preload("ti/com/ti/toggle/_com.json", {
  name: "ti-toggle",
  globally: !0,
  template: "./ti-toggle.html",
  mixins: ["./ti-toggle.mjs"]
}), function () {
  var t = {
    options: {
      type: [String, Array, Function, Ti.Dict],
      "default": function _default() {
        return [];
      }
    },
    valueBy: {
      type: [String, Function],
      "default": void 0
    },
    textBy: {
      type: [String, Function],
      "default": void 0
    },
    iconeBy: {
      type: [String, Function],
      "default": void 0
    },
    value: void 0,
    canComType: {
      type: String,
      "default": void 0
    },
    canComConf: {
      type: Object,
      "default": void 0
    },
    selComType: {
      type: String,
      "default": void 0
    },
    selComConf: {
      type: Object,
      "default": void 0
    },
    filter: {
      type: Boolean,
      "default": !0
    },
    fltComType: {
      type: String,
      "default": "ti-input"
    },
    fltComConf: {
      type: Object,
      "default": void 0
    },
    display: {
      type: [Object, String, Array],
      "default": void 0
    },
    assignButtons: {
      type: Object,
      "default": function _default() {
        return {
          add: "fas-angle-double-right",
          remove: "fas-angle-double-left"
        };
      }
    },
    canTitle: {
      type: String,
      "default": "i18n:candidate"
    },
    selTitle: {
      type: String,
      "default": "i18n:checked"
    },
    width: {
      type: [Number, String],
      "default": null
    },
    height: {
      type: [Number, String],
      "default": null
    }
  };
  Ti.Preload("ti/com/ti/transfer/ti-transfer-props.mjs", t);
}(), Ti.Preload("ti/com/ti/transfer/ti-transfer.html", '<div class="ti-transfer"\n  :class="TopClass"\n  :style="TopStyle">\n  \x3c!--=========================================\n    Left: Candidates\n  --\x3e\n  <div class="as-box as-can-list">\n    \x3c!--\n      Head\n    --\x3e\n    <div class="as-box-head">\n      <div class="as-list-checker"\n        @click.left="OnClickHeadChecker(can)">\n        <ti-icon :value="GetHeadCheckerIcon(can)"/>\n      </div>\n      \x3c!--Title--\x3e\n      <div class="as-title">{{canTitle|i18n}}</div>\n      \x3c!--Filter--\x3e\n      <div v-if="filter"\n        class="as-filter">\n          <component \n            :is="fltComType"\n            v-bind="FilterComConf"\n            :value="myFilterValue"\n            @change="OnFilterChanged"\n            /></div>\n    </div>\n    \x3c!--\n      component\n    --\x3e\n    <component :is="CanListComType"\n      class="as-box-main ti-fill-parent"\n      v-bind="CanListComConf"\n      @select="OnCanListSelected"/>\n    \x3c!--\n      Foot\n    --\x3e\n    <div class="as-box-foot">\n      <span>{{\'total-count\'|i18n({nb:can.data.length})}}</span>\n    </div>\n  </div>\n  \x3c!--=========================================\n    Buttons\n  --\x3e\n  <div class="as-buttons">\n    \x3c!--Add--\x3e\n    <div class="as-btn is-add"\n      @click.left="canListToSel">\n      <ti-icon :value="assignButtons.add"/>\n    </div>\n    \x3c!--Remove--\x3e\n    <div class="as-btn is-remove"\n      @click.left="selListToCan">\n      <ti-icon :value="assignButtons.remove"/>\n    </div>\n  </div>\n  \x3c!--=========================================\n    Right: Checked\n  --\x3e\n  <div class="as-box as-sel-list">\n    \x3c!--\n      Head\n    --\x3e\n    <div class="as-box-head">\n      <div class="as-list-checker"\n        @click.left="OnClickHeadChecker(sel)">\n        <ti-icon :value="GetHeadCheckerIcon(sel)"/>\n      </div>\n      <div class="as-title">{{selTitle|i18n}}</div>\n    </div>\n    \x3c!--\n      component\n    --\x3e\n    <component :is="SelListComType"\n      class="as-box-main ti-fill-parent"\n      v-bind="SelListComConf"\n      @select="OnSelListSelected"/>\n    \x3c!--\n      Foot\n    --\x3e\n    <div class="as-box-foot">\n      <span>{{\'total-count\'|i18n({nb:sel.data.length})}}</span>\n    </div>\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        myFilterValue: null,
        myOptionsData: [],
        can: {
          data: [],
          checkedIds: []
        },
        sel: {
          data: [],
          checkedIds: []
        },
        selIdMap: {}
      };
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TopStyle: function TopStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      Values: function Values() {
        return Ti.S.toArray(this.value);
      },
      CanListComType: function CanListComType() {
        return this.canComType || "ti-list";
      },
      SelListComType: function SelListComType() {
        return this.selComType || "ti-list";
      },
      CanListComConf: function CanListComConf() {
        return this.genComConf(this.canComConf, this.can);
      },
      SelListComConf: function SelListComConf() {
        return this.genComConf(this.selComConf, this.sel);
      },
      FilterComConf: function FilterComConf() {
        return _.assign({
          trimed: !0,
          width: "100%",
          prefixIcon: "zmdi-filter-list",
          placeholder: "i18n:filter",
          hover: ["prefixIcon", "suffixText", "suffixIcon"]
        }, this.fltComConf);
      },
      GetValueBy: function GetValueBy() {
        var _this115 = this;

        return function (t) {
          return _this115.Dict.getValue(t);
        };
      },
      Dict: function Dict() {
        var _this116 = this;

        if (this.options instanceof Ti.Dict) return this.options;

        if (_.isString(this.options)) {
          var _t104 = Ti.DictFactory.DictReferName(this.options);

          if (_t104) return Ti.DictFactory.CheckDict(_t104, function (_ref76) {
            var t = _ref76.loading;
            _this116.loading = t;
          });
        }

        return Ti.DictFactory.CreateDict({
          data: this.options,
          getValue: Ti.Util.genGetter(this.valueBy || "value"),
          getText: Ti.Util.genGetter(this.textBy || "text|name"),
          getIcon: Ti.Util.genGetter(this.textBy || "icon")
        });
      }
    },
    methods: {
      OnCanListSelected: function OnCanListSelected(_ref77) {
        var t = _ref77.checkedIds;
        this.can.checkedIds = this.getIds(t);
      },
      OnSelListSelected: function OnSelListSelected(_ref78) {
        var t = _ref78.checkedIds;
        this.sel.checkedIds = this.getIds(t);
      },
      OnClickHeadChecker: function OnClickHeadChecker(t) {
        var e = t.data,
            i = t.checkedIds;
        if (e.length == i.length) t.checkedIds = [];else {
          var _i25 = this.rebuildIdMap(e);

          t.checkedIds = this.getIds(_i25);
        }
      },
      OnFilterChanged: function OnFilterChanged(t) {
        var _this117 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee65() {
          return regeneratorRuntime.wrap(function _callee65$(_context65) {
            while (1) {
              switch (_context65.prev = _context65.next) {
                case 0:
                  _this117.myFilterValue = t;
                  _context65.next = 3;
                  return _this117.Dict.queryData(t);

                case 3:
                  _this117.myOptionsData = _context65.sent;

                  _this117.evalShownCanList();

                case 5:
                case "end":
                  return _context65.stop();
              }
            }
          }, _callee65);
        }))();
      },
      GetHeadCheckerIcon: function GetHeadCheckerIcon(_ref79) {
        var t = _ref79.data,
            e = _ref79.checkedIds;

        if (t.length > 0) {
          if (t.length == e.length) return "fas-check-square";
          if (e.length > 0) return "fas-minus-square";
        }

        return "far-square";
      },
      canListToSel: function canListToSel() {
        if (_.isEmpty(this.can.checkedIds)) return;

        var _this$assignToList = this.assignToList(this.can, this.sel),
            t = _this$assignToList.src,
            e = _this$assignToList.tag;

        this.can = t, this.sel = e;
      },
      selListToCan: function selListToCan() {
        if (_.isEmpty(this.sel.checkedIds)) return;

        var _this$assignToList2 = this.assignToList(this.sel, this.can),
            t = _this$assignToList2.src,
            e = _this$assignToList2.tag;

        this.can = e, this.sel = t;
      },
      assignToList: function assignToList(_ref80, i) {
        var _this118 = this;

        var t = _ref80.data,
            e = _ref80.checkedIds;
        var n = {};

        _.forEach(e, function (t) {
          return n[t] = !0;
        });

        var a = [],
            s = [];
        return _.forEach(t, function (t) {
          var e = _this118.Dict.getValue(t);

          n[e] ? s.push(t) : a.push(t);
        }), _.forEach(i.checkedIds, function (t) {
          return n[t] = !0;
        }), {
          src: {
            data: a,
            checkedIds: []
          },
          tag: {
            data: _.concat(i.data, s),
            checkedIds: _.keys(n)
          }
        };
      },
      genComConf: function genComConf(t, _ref81) {
        var e = _ref81.data,
            i = _ref81.checkedIds;
        return _.assign({
          idBy: this.GetValueBy,
          display: this.display || "text"
        }, t, {
          data: e,
          checkedIds: i,
          multi: !0,
          checkable: !0,
          puppetMode: !0,
          autoCheckCurrent: !1
        });
      },
      evalShownCanList: function evalShownCanList() {
        var _this119 = this;

        var t = [];
        _.forEach(this.myOptionsData, function (e) {
          var i = _this119.Dict.getValue(e);

          _this119.selIdMap[i] || t.push(e);
        }), this.can.data = t, this.can.checkedIds = [];
      },
      reloadCanList: function reloadCanList() {
        var _this120 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee66() {
          return regeneratorRuntime.wrap(function _callee66$(_context66) {
            while (1) {
              switch (_context66.prev = _context66.next) {
                case 0:
                  _context66.next = 2;
                  return _this120.Dict.queryData(_this120.myFilterValue);

                case 2:
                  _this120.myOptionsData = _context66.sent;

                  _this120.evalShownCanList();

                case 4:
                case "end":
                  return _context66.stop();
              }
            }
          }, _callee66);
        }))();
      },
      reloadSelList: function reloadSelList() {
        var _arguments16 = arguments,
            _this121 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee67() {
          var t, e, _iterator56, _step56, i, _t105;

          return regeneratorRuntime.wrap(function _callee67$(_context67) {
            while (1) {
              switch (_context67.prev = _context67.next) {
                case 0:
                  t = _arguments16.length > 0 && _arguments16[0] !== undefined ? _arguments16[0] : _this121.Values;
                  e = [];
                  _iterator56 = _createForOfIteratorHelper(t);
                  _context67.prev = 3;

                  _iterator56.s();

                case 5:
                  if ((_step56 = _iterator56.n()).done) {
                    _context67.next = 13;
                    break;
                  }

                  i = _step56.value;
                  _context67.next = 9;
                  return _this121.Dict.getItem(i);

                case 9:
                  _t105 = _context67.sent;
                  _t105 ? e.push(_t105) : e.push(i);

                case 11:
                  _context67.next = 5;
                  break;

                case 13:
                  _context67.next = 18;
                  break;

                case 15:
                  _context67.prev = 15;
                  _context67.t0 = _context67["catch"](3);

                  _iterator56.e(_context67.t0);

                case 18:
                  _context67.prev = 18;

                  _iterator56.f();

                  return _context67.finish(18);

                case 21:
                  _this121.sel = {
                    data: e,
                    checkedIds: []
                  };

                case 22:
                case "end":
                  return _context67.stop();
              }
            }
          }, _callee67, null, [[3, 15, 18, 21]]);
        }))();
      },
      rebuildIdMap: function rebuildIdMap(t) {
        var _this122 = this;

        var e = {};
        return _.forEach(t, function (t) {
          var i = _this122.Dict.getValue(t);

          e[i] = !0;
        }), e;
      },
      rebuildSelIdMap: function rebuildSelIdMap() {
        this.selIdMap = this.rebuildIdMap(this.sel.data);
      },
      getIds: function getIds(t) {
        var e = [];
        return _.forEach(t, function (t, i) {
          t && e.push(i);
        }), e;
      }
    },
    watch: {
      value: function value(t, e) {
        _.isEqual(t, e) || this.reloadSelList();
      },
      options: function options(t, e) {
        _.isEqual(t, e) || this.reloadCanList();
      },
      "sel.data": function selData() {
        this.rebuildSelIdMap();

        var t = _.keys(this.selIdMap);

        _.isEqual(t, this.Values) || this.$notify("change", t);
      }
    },
    mounted: function () {
      var _mounted8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee68() {
        return regeneratorRuntime.wrap(function _callee68$(_context68) {
          while (1) {
            switch (_context68.prev = _context68.next) {
              case 0:
                _context68.next = 2;
                return this.reloadSelList();

              case 2:
                _context68.next = 4;
                return this.reloadCanList();

              case 4:
              case "end":
                return _context68.stop();
            }
          }
        }, _callee68, this);
      }));

      function mounted() {
        return _mounted8.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/ti/transfer/ti-transfer.mjs", t);
}(), Ti.Preload("ti/com/ti/transfer/_com.json", {
  name: "ti-transfer",
  globally: !0,
  template: "./ti-transfer.html",
  props: "./ti-transfer-props.mjs",
  mixins: ["./ti-transfer.mjs"]
}), Ti.Preload("ti/com/ti/tree/ti-tree.html", '<ti-table\n  class="ti-tree"\n  :class="TopClass"\n  id-by="id"\n  icon-by="icon"\n  indent-by="indent"\n  raw-data-by="rawData"\n  :fields="TableFields"\n  :data="myTreeTableData"\n  :changed-id="changedId"\n  :current-id="currentId"\n  :checked-ids="checkedIds"\n  :multi="multi"\n  :checkable="checkable"\n  :selectable="selectable"\n  :cancelable="cancelable"\n  :hoverable="hoverable"\n  :puppet-mode="puppetMode"\n  :width="width"\n  :height="height"\n  :head="TableHead"\n  :border="border"\n  :blank-as="blankAs"\n  :auto-scroll-into-view="autoScrollIntoView"\n  @icon="OnRowIconClick"\n  @open="OnRowOpen"\n  @select="OnRowSelect"\n  @cell:item:change="OnCellItemChange"/>\n  '), function () {
  var _t107;

  var t = (_t107 = {
    data: function data() {
      return {
        myTreeTableData: [],
        myOpenedNodePaths: {},
        myCurrentId: null
      };
    },
    props: {
      nodeClassName: {
        type: String,
        "default": null
      },
      data: {
        type: [Object, Array],
        "default": null
      },
      idBy: {
        type: [String, Function],
        "default": "id"
      },
      nameBy: {
        type: [String, Function],
        "default": "name"
      },
      childrenBy: {
        type: [String, Function],
        "default": "children"
      },
      leafBy: {
        type: [String, Function],
        "default": "!children"
      },
      title: {
        type: String,
        "default": "i18n:title"
      },
      mainWidth: {
        type: [String, Number],
        "default": "stretch"
      },
      display: {
        type: [String, Object, Array],
        "default": "name"
      },
      defaultOpenDepth: {
        type: Number,
        "default": 0
      },
      keepOpenBy: {
        type: String,
        "default": null
      },
      keepCurrentBy: {
        type: String,
        "default": null
      },
      changedId: {
        type: String,
        "default": null
      },
      currentId: {
        type: String,
        "default": null
      },
      checkedIds: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      openedNodePaths: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      multi: {
        type: Boolean,
        "default": !1
      },
      checkable: {
        type: Boolean,
        "default": !1
      },
      selectable: {
        type: Boolean,
        "default": !0
      },
      cancelable: {
        type: Boolean,
        "default": !0
      },
      hoverable: {
        type: Boolean,
        "default": !1
      },
      width: {
        type: [String, Number],
        "default": null
      },
      puppetMode: {
        type: Boolean,
        "default": !1
      },
      height: {
        type: [String, Number],
        "default": null
      },
      autoScrollIntoView: {
        type: Boolean,
        "default": !0
      },
      autoOpen: {
        type: Boolean,
        "default": !1
      },
      showRoot: {
        type: Boolean,
        "default": !0
      },
      nodeHandleIcons: {
        type: Array,
        "default": function _default() {
          return ["zmdi-chevron-right", "zmdi-chevron-down"];
        }
      },
      border: {
        type: String,
        "default": "column",
        validator: function validator(t) {
          return /^(row|column|cell|none)$/.test(t);
        }
      },
      fields: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      blankAs: void 0
    },
    watch: {},
    computed: {
      TopClass: function TopClass() {
        return Ti.Css.mergeClassName({
          "is-selectable": this.selectable,
          "is-hoverable": this.hoverable
        }, this.className);
      },
      getNodeId: function getNodeId() {
        var _this123 = this;

        return _.isFunction(this.idBy) ? function (t) {
          return _this123.idBy(t);
        } : function (t) {
          return _.get(t, _this123.idBy);
        };
      },
      getNodeName: function getNodeName() {
        var _this124 = this;

        return _.isFunction(this.nameBy) ? function (t) {
          return _this124.nameBy(t);
        } : function (t) {
          return _.get(t, _this124.nameBy);
        };
      },
      isNodeLeaf: function isNodeLeaf() {
        var _this125 = this;

        if (_.isFunction(this.leafBy)) return function (t) {
          return !!_this125.leafBy(t);
        };

        var t = /^(!)?(.+)$/.exec(this.leafBy),
            e = !!t[1],
            i = _.trim(t[2]);

        return function (t) {
          return _.get(t, i) ? !e : e;
        };
      },
      getNodeChildren: function getNodeChildren() {
        var _this126 = this;

        return _.isFunction(this.childrenBy) ? function (t) {
          return _this126.childrenBy(t);
        } : function (t) {
          return _.get(t, _this126.childrenBy);
        };
      },
      isTable: function isTable() {
        return _.isArray(this.fields) && !_.isEmpty(this.fields);
      },
      TableHead: function TableHead() {
        return this.isTable ? "frozen" : "none";
      },
      TableFields: function TableFields() {
        var t = {
          title: this.title,
          width: this.mainWidth,
          nowrap: !0,
          display: this.display
        };
        return this.isTable ? _.concat(t, this.fields) : [t];
      }
    },
    methods: {
      evalTreeTableData: function evalTreeTableData() {
        var _this127 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee69() {
          var t;
          return regeneratorRuntime.wrap(function _callee69$(_context69) {
            while (1) {
              switch (_context69.prev = _context69.next) {
                case 0:
                  t = [];

                  if (!_.isArray(_this127.data)) {
                    _context69.next = 6;
                    break;
                  }

                  _context69.next = 4;
                  return _this127.joinTreeTableRow(t, {}, null, _this127.data);

                case 4:
                  _context69.next = 10;
                  break;

                case 6:
                  _context69.t0 = _this127.data;

                  if (!_context69.t0) {
                    _context69.next = 10;
                    break;
                  }

                  _context69.next = 10;
                  return _this127.joinTreeTableRow(t, _this127.data, null);

                case 10:
                  _this127.myTreeTableData = t;

                case 11:
                case "end":
                  return _context69.stop();
              }
            }
          }, _callee69);
        }))();
      },
      joinTreeTableRow: function joinTreeTableRow() {
        var _arguments17 = arguments,
            _this128 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee70() {
          var t, e, i, n, a, _iterator57, _step57, _e32;

          return regeneratorRuntime.wrap(function _callee70$(_context70) {
            while (1) {
              switch (_context70.prev = _context70.next) {
                case 0:
                  t = _arguments17.length > 0 && _arguments17[0] !== undefined ? _arguments17[0] : [];
                  e = _arguments17.length > 1 && _arguments17[1] !== undefined ? _arguments17[1] : {};
                  i = _arguments17.length > 2 && _arguments17[2] !== undefined ? _arguments17[2] : [];
                  n = _arguments17.length > 3 ? _arguments17[3] : undefined;
                  a = {};
                  i ? (a.name = _this128.getNodeName(e), a.path = _.concat(i, a.name), a.pathId = a.path.join("/"), a.id = Ti.Util.fallbackNil(_this128.getNodeId(e), a.pathId), a.indent = a.path.length, a.leaf = _this128.isNodeLeaf(e), a.opened = Ti.Util.fallback(_this128.myOpenedNodePaths[a.pathId], a.indent < _this128.defaultOpenDepth), a.icon = !!a.leaf || _this128.nodeHandleIcons[a.opened ? 1 : 0]) : (a.name = _this128.getNodeName(e) || "$ROOT$", a.path = [], a.pathId = "/", a.id = Ti.Util.fallbackNil(_this128.getNodeId(e), a.pathId), a.indent = 0, a.leaf = !1, a.opened = !_this128.showRoot || Ti.Util.fallback(_this128.myOpenedNodePaths[a.pathId], a.indent < _this128.defaultOpenDepth), a.icon = !!a.leaf || _this128.nodeHandleIcons[a.opened ? 1 : 0]);
                  a.rawData = e;
                  _this128.showRoot ? t.push(a) : (a.indent--, a.indent >= 0 && t.push(a));
                  _context70.t0 = a.opened && !a.leaf;

                  if (!_context70.t0) {
                    _context70.next = 16;
                    break;
                  }

                  _context70.t1 = n;

                  if (_context70.t1) {
                    _context70.next = 15;
                    break;
                  }

                  _context70.next = 14;
                  return _this128.getNodeChildren(e);

                case 14:
                  n = _context70.sent;

                case 15:
                  _context70.t0 = _.isArray(n);

                case 16:
                  if (!_context70.t0) {
                    _context70.next = 34;
                    break;
                  }

                  _iterator57 = _createForOfIteratorHelper(n);
                  _context70.prev = 18;

                  _iterator57.s();

                case 20:
                  if ((_step57 = _iterator57.n()).done) {
                    _context70.next = 26;
                    break;
                  }

                  _e32 = _step57.value;
                  _context70.next = 24;
                  return _this128.joinTreeTableRow(t, _e32, a.path);

                case 24:
                  _context70.next = 20;
                  break;

                case 26:
                  _context70.next = 31;
                  break;

                case 28:
                  _context70.prev = 28;
                  _context70.t2 = _context70["catch"](18);

                  _iterator57.e(_context70.t2);

                case 31:
                  _context70.prev = 31;

                  _iterator57.f();

                  return _context70.finish(31);

                case 34:
                case "end":
                  return _context70.stop();
              }
            }
          }, _callee70, null, [[18, 28, 31, 34]]);
        }))();
      },
      findTableRow: function findTableRow(t) {
        if (!Ti.Util.isNil(t)) {
          var _iterator58 = _createForOfIteratorHelper(this.myTreeTableData),
              _step58;

          try {
            for (_iterator58.s(); !(_step58 = _iterator58.n()).done;) {
              var e = _step58.value;
              if (e.id == t) return e;
            }
          } catch (err) {
            _iterator58.e(err);
          } finally {
            _iterator58.f();
          }
        }
      },
      OnCellItemChange: function OnCellItemChange() {
        var _ref82 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref82.name,
            e = _ref82.value,
            i = _ref82.rowId;

        var n = this.findTableRow(i);
        n && this.$notify("node:item:change", {
          name: t,
          value: e,
          node: n,
          nodeId: i,
          data: n.rawData
        });
      },
      OnRowSelect: function OnRowSelect() {
        var _ref83 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref83.currentId,
            _ref83$checkedIds = _ref83.checkedIds,
            e = _ref83$checkedIds === void 0 ? {} : _ref83$checkedIds;

        var i,
            n,
            a = [];

        if (t) {
          var s;

          var _iterator59 = _createForOfIteratorHelper(this.myTreeTableData),
              _step59;

          try {
            for (_iterator59.s(); !(_step59 = _iterator59.n()).done;) {
              var _n16 = _step59.value;
              _n16.id == t && (s = _n16, i = _n16.rawData), e[_n16.id] && a.push(_n16.rawData);
            }
          } catch (err) {
            _iterator59.e(err);
          } finally {
            _iterator59.f();
          }

          s && this.autoOpen && this.openRow(s), this.myCurrentId = _.get(s, "id"), n = s;
        } else this.myCurrentId = null;

        this.keepCurrentBy && (this.puppetMode || Ti.Storage.session.set(this.keepCurrentBy, this.myCurrentId)), this.$notify("select", {
          node: n,
          current: i,
          selected: a,
          currentId: t,
          checkedIds: e
        });
      },
      OnRowIconClick: function OnRowIconClick() {
        var _ref84 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref84.rowId;

        var e = this.findTableRow(t);
        !e || e.leaf || e.opened ? this.closeRow(e) : this.openRow(e);
      },
      OnRowOpen: function OnRowOpen() {
        var _ref85 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref85.id;

        var e = this.findTableRow(t);
        !e || e.leaf || e.opened || this.openRow(e);
      },
      openRow: function openRow(t) {
        var e = _.isString(t) ? this.findTableRow(t) : t;
        !e || e.leaf || e.opened || (this.$set(this.myOpenedNodePaths, e.pathId, !0), this.$notify("opened", e), this.saveNodeOpenStatus());
      },
      isOpened: function isOpened(t) {
        var e = _.isString(t) ? this.findTableRow(t) : t;
        return !!e && e.opened;
      },
      closeRow: function closeRow(t) {
        var e = _.isString(t) ? this.findTableRow(t) : t;
        e && !e.leaf && e.opened && (this.$set(this.myOpenedNodePaths, e.pathId, !1), this.$notify("closed", e), this.saveNodeOpenStatus());
      },
      saveNodeOpenStatus: function saveNodeOpenStatus() {
        this.keepOpenBy && Ti.Storage.session.setObject(this.keepOpenBy, this.myOpenedNodePaths), this.$notify("opened-status:changed", this.myOpenedNodePaths);
      },
      syncOpenedNodePaths: function syncOpenedNodePaths() {
        this.myOpenedNodePaths = _.assign({}, this.openedNodePaths);
      },
      __ti_shortcut: function __ti_shortcut(t) {
        "ARROWLEFT" == t && this.closeRow(this.myCurrentId), "ARROWRIGHT" == t && this.openRow(this.myCurrentId);
      }
    }
  }, _defineProperty(_t107, "watch", {
    data: function () {
      var _data2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee71(t, e) {
        return regeneratorRuntime.wrap(function _callee71$(_context71) {
          while (1) {
            switch (_context71.prev = _context71.next) {
              case 0:
                _context71.t0 = _.isEqual(t, e);

                if (_context71.t0) {
                  _context71.next = 4;
                  break;
                }

                _context71.next = 4;
                return this.evalTreeTableData();

              case 4:
              case "end":
                return _context71.stop();
            }
          }
        }, _callee71, this);
      }));

      function data(_x5, _x6) {
        return _data2.apply(this, arguments);
      }

      return data;
    }(),
    openedNodePaths: function openedNodePaths(t, e) {
      _.isEqual(t, e) || this.syncOpenedNodePaths();
    }
  }), _defineProperty(_t107, "mounted", function () {
    var _mounted9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee72() {
      var _this129 = this;

      var _t106;

      return regeneratorRuntime.wrap(function _callee72$(_context72) {
        while (1) {
          switch (_context72.prev = _context72.next) {
            case 0:
              this.syncOpenedNodePaths();
              this.keepOpenBy && (this.myOpenedNodePaths = Ti.Storage.session.getObject(this.keepOpenBy), this.puppetMode || this.$notify("opened-status:changed", this.myOpenedNodePaths));
              _context72.next = 4;
              return this.evalTreeTableData();

            case 4:
              this.$watch("myOpenedNodePaths", function () {
                _this129.evalTreeTableData();
              }, {
                deep: !0
              });

              if (!this.keepCurrentBy) {
                _context72.next = 8;
                break;
              }

              _t106 = Ti.Storage.session.get(this.keepCurrentBy);
              Ti.Util.isNil(_t106) || this.$nextTick(function () {
                _this129.$children[0].selectRow(_t106);
              });

            case 8:
            case "end":
              return _context72.stop();
          }
        }
      }, _callee72, this);
    }));

    function mounted() {
      return _mounted9.apply(this, arguments);
    }

    return mounted;
  }()), _defineProperty(_t107, "beforeDestroy", function beforeDestroy() {}), _t107);
  Ti.Preload("ti/com/ti/tree/ti-tree.mjs", t);
}(), Ti.Preload("ti/com/ti/tree/_com.json", {
  name: "ti-tree",
  globally: !0,
  template: "./ti-tree.html",
  mixins: ["./ti-tree.mjs"],
  components: ["@com:ti/table"]
}), Ti.Preload("ti/com/ti/upload/file/ti-upload-file.html", '<div class="ti-upload-file"\n  :class="TopClass">\n  \x3c!--\n    Hidden input file to choose files\n  --\x3e\n  <input \n    type="file" \n    ref="file" \n    class="ti-hide"\n    @change.stop.seft="OnSelectLocalFilesToUpload">\n  \x3c!--\n    Major preview zone\n  --\x3e\n  <div ref="thumb"\n    class="thumb-con"\n    :style="ThumbStyle"\n    @click="OnClickToEdit"\n    v-drop-files.mask="OnDropFiles">\n    \x3c!--\n      Preview\n    --\x3e\n    <ti-obj-thumb \n      :preview="PreviewIcon"\n      :progress="progress"\n      :show-footer="false"/>\n    \x3c!--\n      Remove\n    --\x3e\n    <div ref="actions"\n      v-if="isShowRemoveIcon"\n        class="thumb-actions"\n        :style="ActionsStyle">\n        \x3c!--remove--\x3e\n        <div class="thumb-opt as-del"\n          @click.left.stop="OnRemove">\n          <ti-icon value="zmdi-delete"/>\n          <span class="it-text">{{\'clear\'|i18n}}</span>\n        </div>\n        \x3c!--open--\x3e\n        <div class="thumb-opt as-open"\n          @click.left.stop="OnOpen">\n          <ti-icon value="zmdi-open-in-new"/>\n          <span class="it-text">{{\'open\'|i18n}}</span>\n        </div>\n    </div>\n    \x3c!--//////--\x3e\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myArea: 0,
        myActionsWidth: 0
      };
    },
    props: {
      preview: {
        type: [String, Object],
        "default": null
      },
      uploadFile: {
        type: File,
        "default": null
      },
      progress: {
        type: Number,
        "default": -1
      },
      width: {
        type: [String, Number],
        "default": 120
      },
      height: {
        type: [String, Number],
        "default": 120
      },
      removable: {
        type: Boolean,
        "default": !0
      },
      areaSize: {
        type: Object,
        "default": function _default() {
          return {
            xs: 1e4,
            sm: 4e4,
            md: 16e4,
            lg: 36e4
          };
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass("is-area-".concat(this.AreaType));
      },
      AreaType: function AreaType() {
        var t = this.areaSize,
            e = this.myArea;
        return e <= 0 ? "nil" : _.inRange(e, 0, t.xs + 1) ? "xs" : _.inRange(e, t.xs, t.sm + 1) ? "sm" : _.inRange(e, t.sm, t.md + 1) ? "md" : _.inRange(e, t.md, t.lg + 1) ? "lg" : "xl";
      },
      ThumbStyle: function ThumbStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      ActionsStyle: function ActionsStyle() {
        if (/^(xs|sm)$/.test(this.AreaType)) return {
          right: Ti.Css.toSize(-1 * this.myActionsWidth)
        };
      },
      hasPreview: function hasPreview() {
        return !!this.preview;
      },
      isShowRemoveIcon: function isShowRemoveIcon() {
        return !(this.uploadFile || !this.hasPreview);
      },
      PreviewIcon: function PreviewIcon() {
        return this.uploadFile ? {
          type: "localFile",
          value: this.uploadFile
        } : this.preview ? this.preview : "zmdi-plus";
      }
    },
    methods: {
      OnClickToEdit: function OnClickToEdit() {
        this.$refs.file.click();
      },
      OnDropFiles: function OnDropFiles(t) {
        var _this130 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee73() {
          var e;
          return regeneratorRuntime.wrap(function _callee73$(_context73) {
            while (1) {
              switch (_context73.prev = _context73.next) {
                case 0:
                  e = _.get(t, 0);
                  e && _this130.$notify("upload", e);

                case 2:
                case "end":
                  return _context73.stop();
              }
            }
          }, _callee73);
        }))();
      },
      OnSelectLocalFilesToUpload: function OnSelectLocalFilesToUpload(t) {
        var _this131 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee74() {
          return regeneratorRuntime.wrap(function _callee74$(_context74) {
            while (1) {
              switch (_context74.prev = _context74.next) {
                case 0:
                  _context74.next = 2;
                  return _this131.OnDropFiles(t.target.files);

                case 2:
                  _this131.$refs.file.value = "";

                case 3:
                case "end":
                  return _context74.stop();
              }
            }
          }, _callee74);
        }))();
      },
      OnRemove: function OnRemove() {
        this.$notify("remove");
      },
      OnOpen: function OnOpen() {
        this.$notify("open");
      },
      recountArea: function recountArea() {
        var t = Ti.Rects.createBy(this.$refs.thumb);
        this.myArea = t.width * t.height, this.$refs.actions ? this.myActionsWidth = this.$refs.actions.getBoundingClientRect().width : this.myActionsWidth = 0;
      }
    },
    watch: {
      preview: function preview() {
        var _this132 = this;

        this.$nextTick(function () {
          return _this132.recountArea();
        });
      }
    },
    mounted: function mounted() {
      var _this133 = this;

      this.$nextTick(function () {
        return _this133.recountArea();
      });
    }
  };
  Ti.Preload("ti/com/ti/upload/file/ti-upload-file.mjs", t);
}(), Ti.Preload("ti/com/ti/upload/file/_com.json", {
  name: "ti-upload-file",
  globally: !0,
  template: "./ti-upload-file.html",
  mixins: ["./ti-upload-file.mjs"]
}), Ti.Preload("ti/com/ti/wall/com/wall-tile/wall-tile.html", '<div class="wall-tile"\n  :class="TopClass"\n  :style="TopStyle">\n  <div v-if="myCom"\n    class="tile-con"\n    @click.left="OnClickRow"\n    @dblclick.left="OnDblClickRow"\n    v-ti-activable>\n    <component   \n      :is="myCom.comType" \n      v-bind="myCom.comConf"/>\n  </div>\n</div>'), function () {
  var t = {
    inject: ["$wall"],
    data: function data() {
      return {
        myCom: null
      };
    },
    props: {
      display: {
        type: Object,
        "default": null
      },
      width: {
        type: [String, Number],
        "default": null
      },
      height: {
        type: [String, Number],
        "default": null
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getListItemClass();
      },
      TopStyle: function TopStyle() {
        var t = {};
        return this.width && (t.width = this.width), this.height && (t.height = this.height), Ti.Css.toStyle(t);
      }
    },
    methods: {
      evalMyDisplayCom: function evalMyDisplayCom() {
        var _this134 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee75() {
          var t, e, i;
          return regeneratorRuntime.wrap(function _callee75$(_context75) {
            while (1) {
              switch (_context75.prev = _context75.next) {
                case 0:
                  _this134.$wall.reportReady(_this134.index, !Ti.Util.isNil(_this134.myCom));

                  _context75.next = 3;
                  return _this134.evalDataForFieldDisplayItem({
                    itemData: _this134.data,
                    displayItem: _this134.display,
                    vars: _objectSpread({
                      isCurrent: _this134.isCurrent,
                      isChecked: _this134.isChecked,
                      isChanged: _this134.isChanged,
                      isActived: _this134.isActived,
                      rowId: _this134.rowId
                    }, _this134.$vars)
                  });

                case 3:
                  t = _context75.sent;
                  e = Ti.Util.pureCloneDeep(_this134.myCom);
                  i = Ti.Util.pureCloneDeep(t);
                  _.isEqual(e, i) || (_this134.myCom = t), _this134.$wall.reportReady(_this134.index, !0);

                case 7:
                case "end":
                  return _context75.stop();
              }
            }
          }, _callee75);
        }))();
      }
    },
    watch: {
      data: {
        handler: "evalMyDisplayCom",
        immediate: !0
      },
      isCurrent: "evalMyDisplayCom",
      isChecked: "evalMyDisplayCom"
    }
  };
  Ti.Preload("ti/com/ti/wall/com/wall-tile/wall-tile.mjs", t);
}(), Ti.Preload("ti/com/ti/wall/com/wall-tile/_com.json", {
  name: "wall-tile",
  globally: !1,
  template: "./wall-tile.html",
  methods: "@com:ti/support/field_display.mjs",
  mixins: ["@com:ti/support/list_item_mixins.mjs", "./wall-tile.mjs"]
}), Ti.Preload("ti/com/ti/wall/ti-wall.html", '<div class="ti-wall" \n  :class="TopClass"\n  @click="OnClickTop"\n  v-ti-activable>\n  \x3c!--\n    Blank\n  --\x3e\n  <div\n    v-if="isDataEmpty"\n      class="ti-blank is-big">\n      <ti-loading v-bind="blankAs"/>\n  </div>\n  \x3c!--\n    Show tiles\n  --\x3e\n  <template v-else>\n    \x3c!--tiles--\x3e\n    <wall-tile\n      v-for="row in TheData"\n        :key="row.id"\n        :row-id="row.id"\n        :index="row.index"\n        :display="ItemDisplay"\n        :data="row.rawData"\n        :current-id="theCurrentId"\n        :checked-ids="theCheckedIds"\n        :changed-id="changedId"\n        :checkable="checkable"\n        :selectable="selectable"\n        :openable="openable"\n        :class-name="itemClassName"\n        :width="itemWidth"\n        :height="itemHeight"\n        @select="OnRowSelect"\n        @open="OnRowOpen"/>\n    \x3c!--Blank Tile--\x3e\n    <div v-for="bc in BlankCols"\n      class="wall-tile"\n      :style="bc">\n    </div>\n  </template>\n</div>'), function () {
  var t = {
    provide: function provide() {
      return {
        $wall: this
      };
    },
    data: function data() {
      return {
        myData: [],
        myColCount: 0,
        myColWidth: 0,
        isOnlyOneRow: !0,
        myCellsReport: {},
        myNeedResize: !0
      };
    },
    props: {
      itemClassName: void 0,
      display: {
        type: [Object, String],
        "default": function _default() {
          return {
            key: "..",
            comType: "ti-label"
          };
        }
      },
      border: {
        type: Boolean,
        "default": !0
      },
      spacing: {
        type: String,
        "default": "sm"
      },
      itemWidth: {
        type: [String, Number],
        "default": null
      },
      itemHeight: {
        type: [String, Number],
        "default": null
      },
      resizeDelay: {
        type: Number,
        "default": 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-hoverable": this.hoverable,
          "show-border": this.border,
          "is-only-one-row": this.isOnlyOneRow,
          "is-multi-rows": !this.isOnlyOneRow
        }, ["spacing-".concat(this.spacing)]);
      },
      ItemDisplay: function ItemDisplay() {
        return this.evalFieldDisplayItem(this.display, {
          funcSet: this.fnSet
        });
      },
      TheData: function TheData() {
        return this.myData;
      },
      ListRealCount: function ListRealCount() {
        return this.TheData.length;
      },
      BlankCols: function BlankCols() {
        var t = [];

        if (!_.isEmpty(this.TheData) && this.myColCount > 0 && this.myColWidth > 1 && !this.isOnlyOneRow) {
          var e = this.ListRealCount % this.myColCount;

          if (e > 0) {
            var i = this.myColCount - e;

            for (var _e33 = 0; _e33 < i; _e33++) {
              t.push({
                width: "".concat(this.myColWidth, "px")
              });
            }
          }
        }

        return t;
      }
    },
    methods: {
      OnClickTop: function OnClickTop(t) {
        this.cancelable && Ti.Dom.hasOneClass(t.target, "ti-wall", "wall-tile") && this.cancelRow();
      },
      OnWallResize: function OnWallResize() {
        var t = Ti.Dom.findAll(":scope > .wall-tile", this.$el);
        if (_.isEmpty(t)) return;
        var e = 0,
            i = 1,
            n = -1,
            a = !0;

        var _iterator60 = _createForOfIteratorHelper(t),
            _step60;

        try {
          for (_iterator60.s(); !(_step60 = _iterator60.n()).done;) {
            var s = _step60.value;

            var _t108 = s.getBoundingClientRect();

            if (n < 0 && (n = _t108.top), n != _t108.top) {
              a = !1;
              break;
            }

            e++, i = Math.max(_t108.width, i);
          }
        } catch (err) {
          _iterator60.e(err);
        } finally {
          _iterator60.f();
        }

        i > 1 && (this.myColCount = e, this.myColWidth = i, this.isOnlyOneRow = a);
      },
      reportReady: function reportReady() {
        var _this135 = this;

        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
        var i = "R".concat(t);
        e ? delete this.myCellsReport[i] : (this.myCellsReport[i] = !1, this.myNeedResize = !0), e && _.delay(function () {
          _.isEmpty(_this135.myCellsReport) && _this135.myNeedResize && (_.delay(function () {
            _this135.OnWallResize();
          }, _this135.resizeDelay), _this135.myNeedResize = !1);
        });
      }
    },
    watch: {
      data: {
        handler: function () {
          var _handler3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee76(t, e) {
            return regeneratorRuntime.wrap(function _callee76$(_context76) {
              while (1) {
                switch (_context76.prev = _context76.next) {
                  case 0:
                    _context76.t0 = _.isEqual(t, e);

                    if (_context76.t0) {
                      _context76.next = 5;
                      break;
                    }

                    _context76.next = 4;
                    return this.evalData();

                  case 4:
                    this.myData = _context76.sent;

                  case 5:
                  case "end":
                    return _context76.stop();
                }
              }
            }, _callee76, this);
          }));

          function handler(_x7, _x8) {
            return _handler3.apply(this, arguments);
          }

          return handler;
        }(),
        immediate: !0
      }
    },
    mounted: function mounted() {
      var _this136 = this;

      Ti.Viewport.watch(this, {
        resize: _.debounce(function () {
          return _this136.OnWallResize();
        }, 100)
      });
    },
    destroyed: function destroyed() {
      Ti.Viewport.unwatch(this);
    }
  };
  Ti.Preload("ti/com/ti/wall/ti-wall.mjs", t);
}(), Ti.Preload("ti/com/ti/wall/_com.json", {
  name: "ti-wall",
  globally: !0,
  template: "./ti-wall.html",
  props: "@com:ti/support/list_props.mjs",
  methods: "@com:ti/support/field_display.mjs",
  mixins: ["@com:ti/support/list_mixins.mjs", "./ti-wall.mjs"],
  components: ["./com/wall-tile", "@com:ti/label"]
}), Ti.Preload("ti/com/ti/wizard/com/wizard-step/wizard-step.html", '<component \n  class="ti-fill-parent"\n  :is="comType"\n  v-bind="comConf"\n  @change="OnChange"/>'), function () {
  var t = {
    props: {
      index: {
        type: Number,
        "default": -1
      },
      stepKey: {
        type: String,
        "default": null
      },
      title: {
        type: String,
        "default": null
      },
      serializer: {
        type: Function,
        "default": null
      },
      comType: {
        type: String,
        "default": "ti-label"
      },
      comConf: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    methods: {
      OnChange: function OnChange(t) {
        _.isFunction(this.serializer) && (t = this.serializer(t)), this.$emit("data:change", t);
      }
    }
  };
  Ti.Preload("ti/com/ti/wizard/com/wizard-step/wizard-step.mjs", t);
}(), Ti.Preload("ti/com/ti/wizard/com/wizard-step/_com.json", {
  name: "wizard-step",
  globally: !0,
  template: "./wizard-step.html",
  mixins: ["./wizard-step.mjs"]
}), Ti.Preload("ti/com/ti/wizard/ti-wizard.html", '<div class="ti-wizard ti-fill-parent"\n  :class="TopClass"><div class="wizard-con">\n  \x3c!--\n    Header Indicators\n  --\x3e\n  <div class="as-head">\n    <ul>\n      <li v-for="(step, index) in StepHeads"\n        :key="step.stepKey"\n        :class="step.className"\n        @click.left="OnClickHeadItem(index, step)">\n        <span class="as-indicator">\n          <span class="as-line at-l"></span>\n          <span class="as-dot">{{index+1}}</span>\n          <span class="as-line at-r"></span>\n        </span>\n        <span class="as-text">{{step.title}}</span>\n      </li>\n    </ul>\n  </div>\n  \x3c!--\n    Current Step Component\n  --\x3e\n  <div class="as-main">\n    <WizardStep \n      v-bind="CurrentStep"\n      @data:change="OnDataChange"\n      @step:change="OnStepChange"/>\n  </div>\n  \x3c!--\n    Footer Default Buttons\n  --\x3e\n  <div v-if="BtnPrev || BtnNext"\n    class="as-foot">\n      \x3c!--\n        Btn: Prev\n      --\x3e\n      <div\n        v-if="BtnPrev" \n          class="as-btn is-prev"\n          :class="BtnPrev.className"\n          @click="OnClickBtnPrev">\n          <span v-if="BtnPrev.icon"\n            class="as-icon">\n            <ti-icon :value="BtnPrev.icon"/>\n          </span>\n          <span class="as-sep"></span>\n          <span class="as-text">{{BtnPrev.text|i18n}}</span>\n      </div>\n      \x3c!--Sep--\x3e\n      <div class="as-space"></div>\n      \x3c!--\n        Btn: Next\n      --\x3e\n      <div\n        v-if="BtnNext" \n          class="as-btn is-next"\n          :class="BtnNext.className"\n          @click="OnClickBtnNext">\n          <span v-if="BtnNext.icon"\n            class="as-icon">\n            <ti-icon :value="BtnNext.icon"/>\n          </span>\n          <span class="as-sep"></span>\n          <span class="as-text">{{BtnNext.text|i18n}}</span>\n      </div>\n  </div>\n</div></div>'), function () {
  var t = {
    data: function data() {
      return {
        myCurrent: void 0
      };
    },
    props: {
      steps: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      value: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      current: {
        type: [Number, String],
        "default": 0
      },
      canClickHeadItem: {
        type: String,
        "default": null
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      StepList: function StepList() {
        var t = [];
        if (_.isArray(this.steps)) for (var e = 0; e < this.steps.length; e++) {
          var i = this.steps[e],
              n = i.key || "step".concat(e);
          t.push({
            index: e,
            stepKey: n,
            title: i.title || n,
            comType: i.comType || "ti-label",
            comConf: i.comConf,
            serializer: i.serializer,
            prev: i.prev,
            next: i.next
          });
        }
        return t;
      },
      StepHeads: function StepHeads() {
        var t = [];

        if (_.isArray(this.steps)) {
          var _iterator61 = _createForOfIteratorHelper(this.StepList),
              _step61;

          try {
            for (_iterator61.s(); !(_step61 = _iterator61.n()).done;) {
              var e = _step61.value;
              var i = [];
              this.CurrentStepIndex == e.index ? i.push("is-current") : e.index > this.CurrentStepIndex ? i.push("is-future") : i.push("is-passed"), t.push(_.assign({}, e, {
                className: i
              }));
            }
          } catch (err) {
            _iterator61.e(err);
          } finally {
            _iterator61.f();
          }
        }

        return t;
      },
      CurrentStepIndex: function CurrentStepIndex() {
        return this.CurrentStep ? this.CurrentStep.index : -1;
      },
      hasCurrentStep: function hasCurrentStep() {
        return !!this.CurrentStep;
      },
      CurrentStep: function CurrentStep() {
        var t = Ti.Util.fallback(this.myCurrent, this.current),
            e = _.cloneDeep(this.getStep(t)),
            i = e.serializer ? Ti.Util.genInvoking(e.serializer, {
          context: this.value,
          partialRight: !0
        }) : _.identity,
            n = Ti.Util.explainObj(this.value, e.comConf);

        return _.assign({}, e, {
          serializer: i,
          comConf: n
        });
      },
      BtnPrev: function BtnPrev() {
        var t = _.get(this.CurrentStep, "prev");

        return this.getStepAction(t, {
          icon: "zmdi-chevron-left",
          text: "i18n:prev",
          enabled: !0
        });
      },
      BtnNext: function BtnNext() {
        var t = _.get(this.CurrentStep, "next");

        return this.getStepAction(t, {
          icon: "zmdi-chevron-right",
          text: "i18n:next",
          enabled: !0,
          reverse: !t.icon
        });
      }
    },
    methods: {
      OnDataChange: function OnDataChange(t) {
        var e = _.assign({}, this.value, t);

        this.$notify("change", e);
      },
      OnStepChange: function OnStepChange(t) {
        "@prev" == t ? this.gotoFromCurrent(-1) : "@next" == t ? this.gotoFromCurrent(1) : this.gotoStep(t);
      },
      OnClickHeadItem: function OnClickHeadItem(t) {
        "passed" == this.canClickHeadItem && this.CurrentStepIndex > t && this.gotoStep(t);
      },
      OnClickBtnPrev: function OnClickBtnPrev() {
        if (this.BtnPrev && this.BtnPrev.enabled) if (this.BtnPrev.handler) {
          Ti.Util.genInvoking(this.BtnPrev.handler, {
            context: this.value
          }).apply(this);
        } else this.gotoFromCurrent(-1);
      },
      OnClickBtnNext: function OnClickBtnNext() {
        if (this.BtnNext && this.BtnNext.enabled) if (this.BtnNext.handler) {
          Ti.Util.genInvoking(this.BtnNext.handler, {
            context: this.value
          }).apply(this);
        } else this.gotoFromCurrent(1);
      },
      getStep: function getStep(t) {
        if (_.isNumber(t)) {
          var e = Ti.Num.scrollIndex(t, this.StepList.length);
          if (e >= 0) return this.StepList[e];
        } else {
          var _iterator62 = _createForOfIteratorHelper(this.StepList),
              _step62;

          try {
            for (_iterator62.s(); !(_step62 = _iterator62.n()).done;) {
              var _e34 = _step62.value;
              if (_e34.stepKey == t) return _e34;
            }
          } catch (err) {
            _iterator62.e(err);
          } finally {
            _iterator62.f();
          }
        }
      },
      gotoStep: function gotoStep(t) {
        var e = this.getStep(t);

        if (e) {
          var _t109 = _.cloneDeep(this.CurrentStep);

          this.myCurrent = e.index, this.$notify("step:chanage", {
            index: e.index,
            step: e,
            oldStep: _t109
          });
        }
      },
      gotoFromCurrent: function gotoFromCurrent() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

        if (this.CurrentStep) {
          var e = this.CurrentStep.index + t;
          this.gotoStep(e);
        }
      },
      getStepAction: function getStepAction(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        if (t) {
          var i;
          return _.isBoolean(t) ? i = {} : _.isString(t) ? i = {
            text: t || dftText
          } : (i = _.assign({}, t), _.isPlainObject(i.enabled) && (i.enabled = Ti.Validate.match(this.value, i.enabled))), _.defaults(i, e), i.className = Ti.Css.mergeClassName(i.className), i.enabled && (i.className["is-enabled"] = !0), i.reverse && (i.className["is-reverse"] = !0), i;
        }
      }
    }
  };
  Ti.Preload("ti/com/ti/wizard/ti-wizard.mjs", t);
}(), Ti.Preload("ti/com/ti/wizard/_com.json", {
  name: "ti-wizard",
  globally: !0,
  template: "./ti-wizard.html",
  mixins: ["./ti-wizard.mjs"],
  components: ["./com/wizard-step"]
}), Ti.Preload("ti/com/web/auth/captcha/web-auth-captcha.html", '<div \n  class="ti-combo-captcha" \n  :class="topClass">\n \n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      value: {
        type: [String, Object],
        "default": ""
      },
      text: {
        type: String,
        "default": null
      },
      fontSize: {
        type: [Number, String],
        "default": null
      },
      width: {
        type: [Number, String],
        "default": null
      },
      height: {
        type: [Number, String],
        "default": null
      },
      color: {
        type: String,
        "default": ""
      },
      opacity: {
        type: Number,
        "default": -1
      }
    },
    computed: {
      topClass: function topClass() {
        if (this.className) return this.className;
      },
      icon: function icon() {
        var t;
        return _.isPlainObject(this.value) ? t = this.value.type && this.value.value ? this.value : Ti.Icons.get(this.value) : (t = {
          type: "font",
          value: this.value
        }, _.isString(this.value) && (t.type = Ti.Util.getSuffixName(this.value) || "font"), /^(jpe?g|gif|png)$/i.test(t.type) && (t.type = "img")), "font" == t.type && _.assign(t, Ti.Icons.parseFontIcon(t.value)), t.outerStyle = Ti.Css.toStyle({
          width: this.width,
          height: this.height,
          color: this.color,
          opacity: this.opacity >= 0 ? this.opacity : void 0
        }), "img" == t.type ? t.innerStyle = {
          width: this.width ? "100%" : void 0,
          height: this.height ? "100%" : void 0
        } : "font" == t.type && (t.innerStyle = {
          "font-size": this.fontSize ? Ti.Css.toSize(this.fontSize) : void 0
        }), t;
      }
    }
  };
  Ti.Preload("ti/com/web/auth/captcha/web-auth-captcha.mjs", t);
}(), Ti.Preload("ti/com/web/auth/captcha/_com.json", {
  name: "web-auth-captcha",
  globally: !0,
  template: "./web-auth-captcha.html",
  mixins: ["./web-auth-captcha.mjs"]
}), Ti.Preload("ti/com/web/auth/signup/web-auth-signup.html", '<div \n  class="web-auth-signup web-simple-form" \n  :class="TopClass">\n  \x3c!--\n    Top Logo\n  --\x3e\n  <div \n    v-if="logo"\n      class="as-logo">\n      <ti-icon :value="logo"/>\n  </div>\n  \x3c!--\n    Head text\n  --\x3e\n  <header>{{Msgs.title|i18n}}</header>\n  \x3c!--\n    Main Area\n  --\x3e\n  <section>\n    \x3c!--\n      Input: Name\n    --\x3e\n    <div class="as-input" :class="NameClass">\n      <input \n        spellcheck="false"\n        :placeholder="Msgs.nameTip|i18n"\n        v-model="data.name"></div>\n    \x3c!--\n      Input: Password\n    --\x3e\n    <div class="as-input" :class="PasswdClass">\n      <input \n        spellcheck="false"\n        :type="PasswdInputType"\n        :placeholder="Msgs.passwdTip|i18n"\n        v-model="data.passwd">\n      <span v-if="Msgs.codeGet">\n        <em v-if="delay>0">{{\'auth-vcode-delay\'|i18n({sec:delay})}}</em>\n        <a v-else\n          @click="OnGetVcode">{{Msgs.codeGet|i18n}}</a>\n      </span>\n    </div>\n    \x3c!--\n      Submit button\n    --\x3e\n    <div class="as-btn">\n      <button @click="OnAuthSubmit">{{Msgs.btnText|i18n}}</button>\n    </div>\n    \x3c!--\n      Sublinks: switch mode / passwd-back\n    --\x3e\n    <ul class="as-links">\n      <li v-if="Msgs.linkLeft"\n        class="at-left">\n        <a @click="OnChangeMode">{{Msgs.linkLeft   |i18n}}</a>\n      </li>\n      <li v-if="Msgs.linkRight"\n        class="at-right">\n        <a>{{Msgs.linkRight |i18n}}</a></li>\n    </ul>\n  </section>\n  \x3c!--\n    Bottom link for oauth2\n  --\x3e\n  <template v-if="hasOAuth2">\n    <div class="as-spacing"></div>\n    <footer>\n      <a\n        v-for="it in OAuth2Items"\n          :href="it.href"\n          :title="it.tip">\n          <ti-icon :value="it.icon"/>\n      </a>\n    </footer>\n  </template>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        data: {
          name: null,
          passwd: null
        },
        guarding: !1,
        currentMode: "login_by_passwd",
        invalidField: null,
        delay: -1
      };
    },
    props: {
      mode: {
        type: String,
        "default": "login_by_passwd"
      },
      toggleMode: {
        type: String,
        "default": "login_by_phone"
      },
      captcha: {
        type: String,
        required: !0,
        "default": null
      },
      scenes: {
        type: Object,
        "default": function _default() {
          return {
            robot: "robot",
            bind_phone: "auth",
            bind_email: "auth",
            login_by_email: "auth",
            login_by_phone: "auth",
            login_by_passwd: "auth"
          };
        }
      },
      getDelay: {
        type: Number,
        "default": 60
      },
      logo: {
        type: String,
        "default": void 0
      },
      oauth2: {
        type: Array,
        "default": function _default() {
          return [];
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      Msgs: function Msgs() {
        if ("login_by_passwd" == this.currentMode) return {
          title: "i18n:auth-passwd-title",
          nameTip: "login_by_email" == this.toggleMode ? "i18n:auth-passwd-name-email-tip" : "i18n:auth-passwd-name-phone-tip",
          passwdTip: "i18n:auth-passwd-tip",
          btnText: "i18n:auth-login",
          linkLeft: "login_by_email" == this.toggleMode ? "i18n:auth-go-email" : "i18n:auth-go-phone",
          linkRight: "i18n:auth-passwd-getback",
          blankName: "i18n:auth-blank-name"
        };
        if ("login_by_phone" == this.currentMode) return {
          title: "i18n:auth-phone-title",
          nameTip: "i18n:auth-phone-tip",
          passwdTip: "i18n:auth-phone-vcode",
          codeGet: "i18n:auth-phone-vcode-get",
          btnText: "i18n:auth-login-or-signup",
          linkLeft: "i18n:auth-go-passwd",
          linkRight: "i18n:auth-vcode-lost",
          blankName: "i18n:auth-blank-phone"
        };
        if ("login_by_email" == this.currentMode) return {
          title: "i18n:auth-email-title",
          nameTip: "i18n:auth-email-tip",
          passwdTip: "i18n:auth-email-vcode",
          codeGet: "i18n:auth-email-vcode-get",
          btnText: "i18n:auth-login-or-signup",
          linkLeft: "i18n:auth-go-passwd",
          linkRight: "i18n:auth-vcode-lost",
          blankName: "i18n:auth-blank-email"
        };
        if ("bind_phone" == this.currentMode) return {
          title: "i18n:auth-bind-phone-title",
          nameTip: "i18n:auth-phone-tip",
          passwdTip: "i18n:auth-phone-vcode",
          codeGet: "i18n:auth-phone-vcode-get",
          btnText: "i18n:auth-bind",
          linkRight: "i18n:auth-vcode-lost",
          blankName: "i18n:auth-blank-phone"
        };
        if ("bind_email" == this.currentMode) return {
          title: "i18n:auth-bind-email-title",
          nameTip: "i18n:auth-email-tip",
          passwdTip: "i18n:auth-email-vcode",
          codeGet: "i18n:auth-email-vcode-get",
          btnText: "i18n:auth-bind",
          linkRight: "i18n:auth-vcode-lost",
          blankName: "i18n:auth-blank-email"
        };
        throw Ti.Err.make("e.com.combo.auth.invalid-mode", this.currentMode);
      },
      Params: function Params() {
        return _.mapValues(this.data, function (t) {
          return _.trim(t);
        });
      },
      isBlankName: function isBlankName() {
        return !this.Params.name;
      },
      isBlankNameOrPasswd: function isBlankNameOrPasswd() {
        var _this$Params = this.Params,
            t = _this$Params.name,
            e = _this$Params.passwd;
        return !t || !e;
      },
      Invalid: function Invalid() {
        return {
          name: this.isInvalid("name"),
          passwd: this.isInvalid("passwd")
        };
      },
      NameClass: function NameClass() {
        if (this.guarding && (this.Invalid.name || !this.Params.name)) return "is-invalid";
      },
      PasswdClass: function PasswdClass() {
        if (this.guarding && (this.Invalid.passwd || !this.Params.passwd)) return "is-invalid";
      },
      PasswdInputType: function PasswdInputType() {
        return "login_by_passwd" == this.currentMode ? "password" : "text";
      },
      OAuth2Items: function OAuth2Items() {
        return _.cloneDeep(this.oauth2);
      },
      hasOAuth2: function hasOAuth2() {
        return !_.isEmpty(this.OAuth2Items);
      },
      ToggleModetName: function ToggleModetName() {
        return {
          login_by_phone: "i18n:auth-ta-phone",
          login_by_email: "i18n:auth-ta-email",
          bind_phone: "i18n:auth-ta-phone",
          bind_email: "i18n:auth-ta-email"
        }[this.toggleMode];
      },
      vCodeTargetName: function vCodeTargetName() {
        return {
          login_by_phone: "i18n:auth-ta-phone",
          login_by_email: "i18n:auth-ta-email",
          bind_phone: "i18n:auth-ta-phone",
          bind_email: "i18n:auth-ta-email"
        }[this.currentMode];
      },
      vCodeTargetBy: function vCodeTargetBy() {
        return {
          login_by_phone: "i18n:auth-ta-by-phone",
          login_by_email: "i18n:auth-ta-by-email",
          bind_phone: "i18n:auth-ta-by-phone",
          bind_email: "i18n:auth-ta-by-email"
        }[this.currentMode];
      },
      vCodeScene: function vCodeScene() {
        return _.get(this.scenes, this.currentMode) || "auth";
      }
    },
    methods: {
      OnChangeMode: function OnChangeMode() {
        "login_by_passwd" == this.currentMode ? this.currentMode = this.toggleMode : this.currentMode = "login_by_passwd", Ti.Be.BlinkIt(this.$el);
      },
      OnAuthSubmit: function OnAuthSubmit() {
        var _this137 = this;

        if (this.guarding = !0, this.isBlankNameOrPasswd) return Ti.Toast.Open("i18n:auth-blank-name-passwd", "warn");
        var t = Ti.Toast.Open({
          icon: "fas-spinner fa-spin",
          content: "i18n:auth-doing",
          position: "center",
          duration: 0,
          closer: !1
        });
        this.$notify("auth:send", {
          type: this.currentMode,
          name: this.Params.name,
          passwd: this.Params.passwd,
          done: function done() {
            t.close(), _this137.InvalidField = null;
          },
          ok: function ok() {
            Ti.Toast.Open({
              type: "success",
              position: "top",
              content: "i18n:auth-ok",
              duration: 2e3
            }), _this137.$notify("auth:ok");
          },
          noexist: function noexist() {
            _this137.InvalidField = "name";
          },
          invalid: function invalid() {
            _this137.InvalidField = "passwd";
          },
          others: function others() {
            _this137.InvalidField = ["name", "passwd"];
          },
          fail: function fail() {
            var _ref86 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                t = _ref86.errCode,
                e = _ref86.data;

            "e.auth.captcha.invalid" == t ? Ti.Toast.Open({
              type: "warn",
              position: "top",
              content: "i18n:e-www-invalid-captcha",
              vars: {
                ta: Ti.I18n.text(_this137.vCodeTargetName)
              },
              duration: 5e3
            }) : "e.auth.login.NoSaltedPasswd" == t ? Ti.Alert("i18n:auth-login-NoSaltedPasswd", {
              title: "i18n:e-auth-login-NoSaltedPasswd",
              icon: "zmdi-shield-security",
              textOk: "i18n:i-known",
              vars: {
                ta: Ti.I18n.text(_this137.ToggleModetName)
              }
            }) : Ti.Toast.Open({
              type: "warn",
              position: "top",
              content: "i18n:".concat(t),
              duration: 5e3
            });
          }
        });
      },
      OnGetVcode: function OnGetVcode() {
        var _this138 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee77() {
          var t, e, i, n;
          return regeneratorRuntime.wrap(function _callee77$(_context77) {
            while (1) {
              switch (_context77.prev = _context77.next) {
                case 0:
                  if (!(_this138.guarding = !0, _this138.isBlankName)) {
                    _context77.next = 2;
                    break;
                  }

                  return _context77.abrupt("return", (_this138.InvalidField = "name", void Ti.Toast.Open(_this138.Msgs.blankName, "warn")));

                case 2:
                  _this138.guarding = !1, _this138.InvalidField = null, console.log("captcha", _this138.captcha);
                  t = {
                    scene: _this138.scenes.robot,
                    account: _this138.Params.name
                  };
                  e = Ti.S.renderBy(_this138.captcha, t);
                  _context77.next = 7;
                  return Ti.Captcha(e);

                case 7:
                  i = _context77.sent;

                  if (i) {
                    _context77.next = 10;
                    break;
                  }

                  return _context77.abrupt("return");

                case 10:
                  n = Ti.Toast.Open({
                    icon: "fas-spinner fa-spin",
                    content: "i18n:auth-sending-vcode",
                    position: "center",
                    duration: 0,
                    closer: !1
                  });

                  _this138.$notify("get:vcode", {
                    type: _this138.currentMode,
                    scene: _this138.vCodeScene,
                    account: _this138.data.name,
                    captcha: i,
                    done: function done() {
                      n.close(), _this138.InvalidField = null, _this138.data.passwd = "";
                    },
                    ok: function ok() {
                      var _ref87 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                          _ref87$duInMin = _ref87.duInMin,
                          t = _ref87$duInMin === void 0 ? 60 : _ref87$duInMin;

                      _this138.delay = _this138.getDelay, Ti.Toast.Open({
                        type: "success",
                        position: "top",
                        content: "i18n:auth-sent-ok",
                        vars: {
                          ta: Ti.I18n.text(_this138.vCodeTargetName),
                          by: Ti.I18n.text(_this138.vCodeTargetBy),
                          min: t
                        },
                        duration: 5e3
                      });
                    },
                    fail: function fail() {
                      var _ref88 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                          t = _ref88.errCode,
                          e = _ref88.data;

                      Ti.Toast.Open({
                        type: "warn",
                        position: "top",
                        content: "i18n:".concat(t),
                        duration: 5e3
                      });
                    }
                  });

                case 12:
                case "end":
                  return _context77.stop();
              }
            }
          }, _callee77);
        }))();
      },
      isInvalid: function isInvalid() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
        return _.isArray(this.InvalidField) ? _.indexOf(this.InvalidField, t) >= 0 : t == this.InvalidField;
      }
    },
    watch: {
      currentMode: function currentMode() {
        this.guarding = !1, this.data.passwd = "";
      }
    },
    mounted: function mounted() {
      var _this139 = this;

      this.mode && (this.currentMode = this.mode), this.__H = window.setInterval(function () {
        _this139.delay >= 0 && _this139.delay--;
      }, 1e3);
    },
    beforeDestroy: function beforeDestroy() {
      this.__H && window.clearInterval(this.__H);
    }
  };
  Ti.Preload("ti/com/web/auth/signup/web-auth-signup.mjs", t);
}(), Ti.Preload("ti/com/web/auth/signup/_com.json", {
  name: "web-auth-signup",
  globally: !0,
  template: "./web-auth-signup.html",
  mixins: ["./web-auth-signup.mjs"]
}), Ti.Preload("ti/com/web/footer/web-footer.html", '<div class="ti-web-footer">\n  I footer\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      logo: {
        type: [String, Object],
        "default": "zmdi-chevron-down"
      },
      brief: {
        type: String,
        "default": null
      },
      copyright: {
        type: String,
        "default": null
      }
    },
    computed: {}
  };
  Ti.Preload("ti/com/web/footer/web-footer.mjs", t);
}(), Ti.Preload("ti/com/web/footer/_com.json", {
  name: "web-footer",
  globally: !0,
  template: "./web-footer.html",
  mixins: ["./web-footer.mjs"]
}), Ti.Preload("ti/com/web/media/image/web-media-image.html", '<img\n  :class="TopClass"\n  class="web-media-image"\n  :src="ImgSrc"/>'), function () {
  var t = {
    props: {
      base: {
        type: String,
        "default": void 0
      },
      src: {
        type: String,
        "default": void 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      ImgSrc: function ImgSrc() {
        return Ti.Util.appendPath(this.base, this.src);
      }
    }
  };
  Ti.Preload("ti/com/web/media/image/web-media-image.mjs", t);
}(), Ti.Preload("ti/com/web/media/image/_com.json", {
  name: "web-media-image",
  globally: !0,
  template: "./web-media-image.html",
  mixins: ["./web-media-image.mjs"]
}), Ti.Preload("ti/com/web/media/player/web-media-player.html", '<div class="ti-web-image">\n  \n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      src: {
        type: String,
        "default": void 0
      },
      value: {
        type: [String, Number],
        "default": void 0
      },
      bgColor: {
        type: [String, Number],
        "default": "#000000"
      },
      items: {
        type: [Array],
        "default": function _default() {
          return [];
        }
      }
    },
    computed: {
      TheItems: function TheItems() {
        return _.forEach(this.items, function (t) {}), [];
      }
    }
  };
  Ti.Preload("ti/com/web/media/player/web-media-player.mjs", t);
}(), Ti.Preload("ti/com/web/media/player/_com.json", {
  name: "web-media-player",
  globally: !0,
  template: "./web-media-player.html",
  mixins: ["./web-media-player.mjs"]
}), Ti.Preload("ti/com/web/meta/article/web-meta-article.html", '<div class="ti-web-meta-article">\n  \x3c!--\n    Title\n  --\x3e\n  <h1>{{title}}</h1>\n  \x3c!--\n    Brief\n  --\x3e\n  <div v-if="brief"\n    class="as-brief">{{brief}}</div>\n  \x3c!--\n    Author/Date\n  --\x3e\n  <div v-if="hasDateOrAuthor"\n    class="as-sub">\n    <ul>\n      <li v-if="author">{{author}}</li>\n      <li v-if="date">{{date}}</li>\n    </ul>\n  </div>\n  \x3c!--\n    Bottom line\n  --\x3e\n  <hr v-if="bottomLine">\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      meta: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      titleKey: {
        type: String,
        "default": "title"
      },
      briefKey: {
        type: String,
        "default": "brief"
      },
      dateKey: {
        type: String,
        "default": "date"
      },
      dateFormat: {
        type: String,
        "default": "yyyy-MM-dd"
      },
      authorKey: {
        type: String,
        "default": "author"
      },
      bottomLine: {
        type: Boolean,
        "default": !0
      }
    },
    computed: {
      title: function title() {
        return this.titleKey ? this.meta[this.titleKey] : "NoTitle";
      },
      brief: function brief() {
        if (this.briefKey) return this.meta[this.briefKey];
      },
      hasDateOrAuthor: function hasDateOrAuthor() {
        return !(!this.date && !this.author);
      },
      date: function date() {
        if (this.dateKey) {
          var _t110 = this.meta[this.dateKey];
          if (_t110) try {
            return Ti.Types.formatDate(_t110, this.dateFormat);
          } catch (t) {}
        }
      },
      author: function author() {
        if (this.authorKey) return this.meta[this.authorKey];
      }
    }
  };
  Ti.Preload("ti/com/web/meta/article/web-meta-article.mjs", t);
}(), Ti.Preload("ti/com/web/meta/article/_com.json", {
  name: "web-meta-article",
  globally: !0,
  template: "./web-meta-article.html",
  mixins: ["./web-meta-article.mjs"]
}), Ti.Preload("ti/com/web/meta/commodity/web-meta-commodity.html", '<div class="web-meta-commodity"\n  :class="TopClass">\n  <div class="as-main">\n    \x3c!--\n      Left: Preview\n    --\x3e\n    <div\n      v-if="previewImageSrc"\n        class="at-left">\n      <WebMediaImage\n        :src="previewImageSrc"/>\n    </div>\n    \x3c!--\n      Right: Information\n    --\x3e\n    <div class="at-right">\n      \x3c!--Title--\x3e\n      <h1>{{MetaTitle}}</h1>\n      <div class="as-form">\n        <ti-form\n          v-bind="form"\n          :data="FormData"\n          @change="OnFormChanged"/>\n      </div>\n      <div class="as-btns">\n        \x3c!--Buy Button--\x3e\n        <a class="ti-btn" @click="OnClickBuyNow">{{actions.buy|i18n}}</a>\n      </div>\n    </div>\n  </div>\n</div>'), function () {
  var t = {
    props: {
      meta: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      previewSrc: {
        type: String,
        "default": null
      },
      titleKey: {
        type: String,
        "default": "title"
      },
      buyAmount: {
        type: Number,
        "default": 1
      },
      form: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      actions: {
        type: Object,
        "default": function _default() {
          return {
            buy: "i18n:buy-now"
          };
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      FormData: function FormData() {
        return _objectSpread({}, this.meta, {
          buyAmount: this.buyAmount
        });
      },
      previewImageSrc: function previewImageSrc() {
        if (this.previewSrc && this.meta) return Ti.S.renderBy(this.previewSrc, this.meta);
      },
      MetaTitle: function MetaTitle() {
        return this.titleKey ? _.get(this.meta, this.titleKey) : "NoTitle";
      }
    },
    methods: {
      OnClickBuyNow: function OnClickBuyNow() {
        this.$notify("buy:now");
      },
      OnFormChanged: function OnFormChanged(_ref89) {
        var t = _ref89.name,
            e = _ref89.value;
        this.$notify("meta:changed", {
          name: t,
          value: e
        });
      }
    }
  };
  Ti.Preload("ti/com/web/meta/commodity/web-meta-commodity.mjs", t);
}(), Ti.Preload("ti/com/web/meta/commodity/_com.json", {
  name: "web-meta-commodity",
  globally: !0,
  template: "./web-meta-commodity.html",
  mixins: ["./web-meta-commodity.mjs"],
  components: ["@com:web/meta/preview"]
}), Ti.Preload("ti/com/web/meta/order/com/order-item/order-item.html", '<div class="as-row order-item">\n  \x3c!--Thumb/Title--\x3e\n  <div class="as-cell">\n    <div class="as-title">\n      <ti-icon \n        :value="thumbObj" \n        width=".32rem" \n        height=".32rem"/>\n      <span class="as-text">{{title}}</span>\n    </div>\n  </div>\n  \x3c!--price--\x3e\n  <div class="as-cell as-price">\n    <span>{{price}}</span>\n  </div>\n  \x3c!--amount--\x3e\n  <div class="as-cell as-amount">\n    <span>{{amount}}</span>\n  </div>\n  \x3c!--Total--\x3e\n  <div class="as-cell as-fee">\n    <em class="ti-num is-md">{{feeText}}</em>\n  </div>\n</div>'), function () {
  var t = {
    props: {
      id: {
        type: String,
        "default": null
      },
      thumb: {
        type: String,
        "default": null
      },
      src: {
        type: String,
        "default": "/api/thumb?id:${id}"
      },
      dftIcon: {
        type: String,
        "default": "fas-cube"
      },
      title: {
        type: String,
        "default": null
      },
      price: {
        type: Number,
        "default": 1
      },
      currency: {
        type: String,
        "default": "RMB"
      },
      amount: {
        type: Number,
        "default": 1
      }
    },
    computed: {
      thumbObj: function thumbObj() {
        if (this.thumb) {
          return {
            type: "image",
            value: Ti.S.renderBy(this.src, this)
          };
        }

        return this.dftIcon;
      },
      fee: function fee() {
        return Ti.WWW.evalFee(this);
      },
      feeText: function feeText() {
        return Ti.WWW.feeText(this.fee, this.currency);
      }
    }
  };
  Ti.Preload("ti/com/web/meta/order/com/order-item/order-item.mjs", t);
}(), Ti.Preload("ti/com/web/meta/order/com/order-item/_com.json", {
  name: "order-item",
  globally: !1,
  template: "./order-item.html",
  mixins: ["./order-item.mjs"]
}), Ti.Preload("ti/com/web/meta/order/web-meta-order.html", '<div class="ti-web-meta-order">\n  \x3c!--\n    Title\n  --\x3e\n  <h1>确认订单信息</h1>\n  \x3c!--\n    Item list\n  --\x3e\n  <div class="as-items">\n    <div class="as-table">\n      <div class="as-head">\n        <ul>\n          <li class="as-title">商品</li>\n          <li class="as-price">单价</li>\n          <li class="as-amount">数量</li>\n          <li class="as-fee">小计</li>\n        </ul>\n      </div>\n      <div class="as-body">\n        <order-item v-for="it in items"\n          :key="it.id"\n          v-bind="it"\n          :src="itemThumbSrc"\n          :currency="currency"/>\n      </div>\n    </div>\n  </div>\n  \x3c!--\n    Summary\n  --\x3e\n  <div class="as-summary">\n    <div class="as-sum-fee">\n      <span>实际支付</span>\n      <em class="ti-num is-xl">{{totalFeeText}}</em>\n    </div>\n    <div class="as-btns">\n      <a class="ti-btn" @click="onSubmit">提交订单</a>\n    </div>\n  </div>\n\n</div>'), function () {
  var t = {
    props: {
      items: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      itemThumbSrc: {
        type: String,
        "default": "/api/thumb?id:${id}"
      },
      currency: {
        type: String,
        "default": "RMB"
      }
    },
    computed: {
      totalFee: function totalFee() {
        var t = 0;

        var _iterator63 = _createForOfIteratorHelper(this.items),
            _step63;

        try {
          for (_iterator63.s(); !(_step63 = _iterator63.n()).done;) {
            var e = _step63.value;
            t += Ti.WWW.evalFee(e);
          }
        } catch (err) {
          _iterator63.e(err);
        } finally {
          _iterator63.f();
        }

        return t;
      },
      totalFeeText: function totalFeeText() {
        return Ti.WWW.feeText(this.totalFee, this.currency);
      }
    },
    methods: {
      onSubmit: function onSubmit() {
        this.$notify("order:submit", {
          items: this.items,
          currency: this.currency
        });
      }
    }
  };
  Ti.Preload("ti/com/web/meta/order/web-meta-order.mjs", t);
}(), Ti.Preload("ti/com/web/meta/order/_com.json", {
  name: "web-meta-order",
  globally: !0,
  template: "./web-meta-order.html",
  mixins: ["./web-meta-order.mjs"],
  components: ["./com/order-item"]
}), Ti.Preload("ti/com/web/meta/preview/web-meta-preview.html", '<div class="ti-web-preview ti-fill-parent">\n  \x3c!--\n    Top: Image\n  --\x3e\n  <div class="as-preview">\n    <ti-icon value="zmdi-image"/>\n  </div>\n  \x3c!--\n    Bottom: List\n  --\x3e\n  \n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      logo: {
        type: [String, Object],
        "default": "zmdi-chevron-down"
      },
      brief: {
        type: String,
        "default": null
      },
      copyright: {
        type: String,
        "default": null
      }
    },
    computed: {}
  };
  Ti.Preload("ti/com/web/meta/preview/web-meta-preview.mjs", t);
}(), Ti.Preload("ti/com/web/meta/preview/_com.json", {
  name: "web-meta-preview",
  globally: !0,
  template: "./web-meta-preview.html",
  mixins: ["./web-meta-preview.mjs"]
}), Ti.Preload("ti/com/web/nav/columns/nav-columns.html", '<nav class="web-nav-columns"\n  :class="TopClass">\n  \x3c!--=======================================--\x3e\n  <div v-for="it in TheItems"\n    class="as-column">\n    <div class="item-self">\n      <a\n        :key="it.index"\n        class="link-item"\n        :class="it.className"\n        :href="it.href"\n        :target="it.target"\n        @click.left="OnClickLink($event, it)">\n        \x3c!--Icon--\x3e\n        <ti-icon\n          v-if="it.icon"\n            :value="it.icon"/>\n        \x3c!--Text--\x3e\n        <span\n          v-if="it.title"\n            class="as-text">{{it.title}}</span>\n        </a>\n      </div>\n      \x3c!--===================================--\x3e\n      \x3c!--SubItems--\x3e\n      <div\n        v-if="it.items"\n          class="sub-items">\n          <div class="items-con">\n            <a\n              v-for="sub in it.items"\n                :key="sub.index"\n                class="sub-item"\n                :class="sub.className"\n                :href="sub.href"\n                :target="sub.target"\n                @click.left="OnClickLink($event, sub)">\n                \x3c!--Icon--\x3e\n                <ti-icon\n                  v-if="sub.icon"\n                    :value="sub.icon"/>\n                \x3c!--Text--\x3e\n                <span\n                  v-if="sub.title"\n                    class="as-text">{{sub.title}}</span>\n            </a>\n          </div>\n      </div>\n      \x3c!--===================================--\x3e\n  </div>\n  \x3c!--=======================================--\x3e\n</nav>'), function () {
  var t = {
    props: {
      items: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      path: {
        type: String,
        "default": null
      },
      align: {
        type: String,
        "default": "center",
        validator: function validator(t) {
          return /^(left|center|right)$/.test(t);
        }
      },
      spacing: {
        type: String,
        validator: function validator(t) {
          return /^(tiny|comfy|wide)$/.test(t);
        }
      },
      border: {
        type: String,
        "default": "solid",
        validator: function validator(t) {
          return /^(none|solid|dashed|dotted)$/.test(t);
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        var _this140 = this;

        return this.getTopClass("is-spacing-".concat(this.spacing), "is-align-".concat(this.align), function () {
          if (_this140.border) return "is-border-".concat(_this140.border);
        });
      },
      TheItems: function TheItems() {
        return this.evalItems(this.items);
      }
    },
    methods: {
      OnClickLink: function OnClickLink(t) {
        var _ref90 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            e = _ref90.type,
            i = _ref90.value;

        /^(page|action)$/.test(e) && (t.preventDefault(), console.log("onClickLink", "nav:to", {
          type: e,
          value: i
        }), this.$notify("nav:to", {
          type: e,
          value: i
        }));
      },
      evalItems: function evalItems(t) {
        var _this141 = this;

        var e = [];
        return _.forEach(t, function (t, i) {
          var n = _.pick(t, ["icon", "title", "type", "href", "target", "value"]);

          n.index = i, _this141.path && (n.highlight = t.highlightBy(_this141.path));
          var a = !!n.href;
          n.className = {
            "has-href": a,
            "nil-href": !a,
            "is-highlight": n.highlight,
            "is-normal": !n.highlight
          }, t.items && (n.items = _this141.evalItems(t.items)), e.push(n);
        }), e;
      }
    }
  };
  Ti.Preload("ti/com/web/nav/columns/nav-columns.mjs", t);
}(), Ti.Preload("ti/com/web/nav/columns/_com.json", {
  name: "web-nav-columns",
  globally: !0,
  template: "./nav-columns.html",
  mixins: ["./nav-columns.mjs"],
  components: []
}), Ti.Preload("ti/com/web/nav/links/nav-links.html", '<nav class="web-nav-links"\n  :class="TopClass">\n  \x3c!--=======================================--\x3e\n  <a\n    v-for="it in TheItems"\n      :key="it.index"\n      class="link-item"\n      :class="it.className"\n      :href="it.href"\n      :target="it.target"\n      @click.left="OnClickLink($event, it)"\n      @mouseenter="OnItemMouseEnter(it)"\n      @mouseleave="OnItemMouseLeave(it)">\n      \x3c!--Icon--\x3e\n      <ti-icon\n        v-if="it.icon"\n          :value="it.icon"/>\n      \x3c!--Text--\x3e\n      <span\n        v-if="it.title"\n          class="as-text">{{it.title}}</span>\n      \x3c!--===================================--\x3e\n      \x3c!--SubItems--\x3e\n      <div\n        v-if="mySubItems && mySubIndex == it.index"\n          class="sub-items">\n          <div class="items-con">\n            <a\n              v-for="sub in mySubItems"\n                :key="sub.index"\n                class="sub-item"\n                :class="sub.className"\n                :href="sub.href"\n                :target="sub.target"\n                @click.left="OnClickLink($event, sub)">\n                \x3c!--Icon--\x3e\n                <ti-icon\n                  v-if="sub.icon"\n                    :value="sub.icon"/>\n                \x3c!--Text--\x3e\n                <span\n                  v-if="sub.title"\n                    class="as-text">{{sub.title}}</span>\n            </a>\n          </div>\n      </div>\n      \x3c!--===================================--\x3e\n  </a>\n  \x3c!--=======================================--\x3e\n</nav>'), function () {
  var t = {
    data: function data() {
      return {
        mySubIndex: -1,
        mySubItems: null
      };
    },
    props: {
      items: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      path: {
        type: String,
        "default": null
      },
      align: {
        type: String,
        "default": "left",
        validator: function validator(t) {
          return /^(left|center|right)$/.test(t);
        }
      },
      spacing: {
        type: String,
        validator: function validator(t) {
          return /^(tiny|comfy|wide)$/.test(t);
        }
      },
      border: {
        type: String,
        "default": "solid",
        validator: function validator(t) {
          return /^(none|solid|dashed|dotted)$/.test(t);
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        var _this142 = this;

        return this.getTopClass("is-spacing-".concat(this.spacing), "is-align-".concat(this.align), function () {
          if (_this142.border) return "is-border-".concat(_this142.border);
        });
      },
      TheItems: function TheItems() {
        return this.evalItems(this.items);
      }
    },
    methods: {
      OnClickLink: function OnClickLink(t) {
        var _ref91 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            e = _ref91.type,
            i = _ref91.value;

        /^(page|action)$/.test(e) && (t.preventDefault(), console.log("onClickLink", "nav:to", {
          type: e,
          value: i
        }), this.$notify("nav:to", {
          type: e,
          value: i
        }));
      },
      OnItemMouseEnter: function OnItemMouseEnter(_ref92) {
        var _this143 = this;

        var t = _ref92.index,
            e = _ref92.items;
        if (_.isEmpty(e)) return this.mySubIndex = -1, void (this.mySubItems = null);
        this.mySubItems = this.evalItems(e), this.mySubIndex = t, this.$nextTick(function () {
          return _this143.dockSub();
        });
      },
      OnItemMouseLeave: function OnItemMouseLeave(_ref93) {
        var t = _ref93.index;
        this.mySubIndex == t && (this.mySubIndex = -1, this.mySubItems = null);
      },
      dockSub: function dockSub() {
        var t = Ti.Dom.find(".sub-items", this.$el);
        if (!t) return;
        var e = t.parentNode,
            i = Ti.Rects.createBy(e),
            n = Ti.Rects.createBy(t),
            a = Ti.Css.toStyle({
          top: i.height,
          left: (i.width - n.width) / 2
        });
        Ti.Dom.setStyle(t, a);
      },
      evalItems: function evalItems(t) {
        var _this144 = this;

        var e = [];
        return _.forEach(t, function (t, i) {
          var n = _.pick(t, ["icon", "title", "type", "href", "target", "value", "items"]);

          n.index = i, _this144.path && (n.highlight = t.highlightBy(_this144.path));
          var a = !!n.href;
          n.className = {
            "has-href": a,
            "nil-href": !a,
            "is-highlight": n.highlight,
            "is-normal": !n.highlight
          }, e.push(n);
        }), e;
      }
    }
  };
  Ti.Preload("ti/com/web/nav/links/nav-links.mjs", t);
}(), Ti.Preload("ti/com/web/nav/links/_com.json", {
  name: "web-nav-links",
  globally: !0,
  template: "./nav-links.html",
  mixins: ["./nav-links.mjs"],
  components: []
}), Ti.Preload("ti/com/web/pay/done/web-pay-done.html", '<div class="ti-web-pay-done"\n  :class="topClass">\n  <div class="done-con">\n    \x3c!--\n      Icon\n    --\x3e\n    <div class="done-icon">\n      <ti-icon :value="theIcon"/>\n    </div>\n    \x3c!--\n      Tip\n    --\x3e\n    <div class="done-tip">{{theTip | i18n}}</div>\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      payType: {
        type: String,
        "default": null
      },
      items: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      orderData: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return {
          "is-ok": this.isOK,
          "is-fail": this.isFAIL,
          "is-wait": this.isWAIT
        };
      },
      isOK: function isOK() {
        return "OK" == this.orderData.st;
      },
      isFAIL: function isFAIL() {
        return "FAIL" == this.orderData.st;
      },
      isWAIT: function isWAIT() {
        return "WAIT" == this.orderData.st;
      },
      theIcon: function theIcon() {
        return this.isOK ? "zmdi-check-circle" : this.isFAIL ? "zmdi-alert-octagon" : "zmdi-notifications-active";
      },
      theTip: function theTip() {
        return {
          OK: "pay-re-ok",
          FAIL: "pay-re-fail",
          WAIT: "pay-re-wait"
        }[this.orderData.st] || "pay-re-nil";
      }
    },
    methods: {},
    watch: {}
  };
  Ti.Preload("ti/com/web/pay/done/web-pay-done.mjs", t);
}(), Ti.Preload("ti/com/web/pay/done/_com.json", {
  name: "web-pay-done",
  globally: !0,
  template: "./web-pay-done.html",
  mixins: ["./web-pay-done.mjs"]
}), Ti.Preload("ti/com/web/pay/scan/web-pay-scan.html", '<div class="ti-web-pay-scan">\n  <div class="scan-con">\n    \x3c!--\n      QRCODE\n    --\x3e\n    <div v-if="isQRCODE"\n      class="is-qrcode">\n      <img :src="paymentDataAsQrcodeUrl">\n    </div>\n    \x3c!--\n      IFRAME\n    --\x3e\n    <div v-else-if="isIFRAME"\n      class="is-iframe">\n      <iframe \n        frameborder="0" \n        scrolling="no"\n        :src="paymentData"></iframe>\n    </div>\n    \x3c!--\n      Others\n    --\x3e\n    <div v-else>\n      {{paymentData}}\n    </div>\n    \x3c!--\n      Tip\n    --\x3e\n    <div class="scan-tip">{{theTip | i18n}}</div>\n  </div>\n  \x3c!--\n    Check Button\n  --\x3e\n  <div class="scan-check-btn ti-btn is-huge"\n    @click.left="onClickCheckBtn">\n    <ti-icon class="as-icon" :value="checkBtnIcon"/>\n    <span class="as-text">{{checkBtnText|i18n}}</span>\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        __WS: null
      };
    },
    props: {
      watchUser: {
        type: String,
        "default": null
      },
      payType: {
        type: String,
        "default": null
      },
      items: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      orderStatusOk: {
        type: Boolean,
        "default": !1
      },
      orderPayment: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      orderData: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      qrcodeSize: {
        type: Number,
        "default": 200
      }
    },
    computed: {
      isQRCODE: function isQRCODE() {
        return "QRCODE" == this.orderPayment.dataType;
      },
      isIFRAME: function isIFRAME() {
        return "IFRAME" == this.orderPayment.dataType;
      },
      isLINK: function isLINK() {
        return "LINK" == this.orderPayment.dataType;
      },
      isJSON: function isJSON() {
        return "JSON" == this.orderPayment.dataType;
      },
      isTEXT: function isTEXT() {
        return "TEXT" == this.orderPayment.dataType;
      },
      paymentData: function paymentData() {
        return this.orderPayment.data;
      },
      paymentDataAsQrcodeUrl: function paymentDataAsQrcodeUrl() {
        return "/gu/qrcode?d=".concat(this.orderPayment.data, "&s=").concat(this.qrcodeSize, "&_=").concat(Date.now());
      },
      theTip: function theTip() {
        return {
          "wx.qrcode": "pay-tip-wx-qrcode",
          "zfb.qrcode": "pay-tip-zfb-qrcode"
        }[this.payType] || "pay-by-nil";
      },
      checkBtnIcon: function checkBtnIcon() {
        return "zmdi-assignment-check";
      },
      checkBtnText: function checkBtnText() {
        return "i18n:pay-check-do";
      }
    },
    methods: {
      onClickCheckBtn: function onClickCheckBtn() {
        this.$notify("pay-check");
      },
      watchPaymentChanged: function watchPaymentChanged() {
        var _this145 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee78() {
          return regeneratorRuntime.wrap(function _callee78$(_context78) {
            while (1) {
              switch (_context78.prev = _context78.next) {
                case 0:
                  !_this145.__WS && _this145.watchUser && _this145.orderData && _this145.orderData.pay_id && (_this145.__WS = Ti.Websocket.listenRemote({
                    watchTo: {
                      method: "watch",
                      user: _this145.watchUser,
                      match: {
                        id: _this145.orderData.pay_id
                      }
                    },
                    received: function received(t) {
                      console.log("websocket", t), _this145.onClickCheckBtn();
                    },
                    closed: function closed() {
                      _this145.unwatchPaymentChanged();
                    }
                  }));

                case 1:
                case "end":
                  return _context78.stop();
              }
            }
          }, _callee78);
        }))();
      },
      unwatchPaymentChanged: function unwatchPaymentChanged() {
        this.__WS && this.__WS.close();
      }
    },
    watch: {
      "orderData.st": function orderDataSt() {
        /^(OK|FAIL)$/.test(this.orderData.st) && this.$notify("pay-done");
      }
    },
    mounted: function mounted() {
      this.watchPaymentChanged();
    },
    beforeDestroy: function beforeDestroy() {
      this.unwatchPaymentChanged();
    }
  };
  Ti.Preload("ti/com/web/pay/scan/web-pay-scan.mjs", t);
}(), Ti.Preload("ti/com/web/pay/scan/_com.json", {
  name: "web-pay-scan",
  globally: !0,
  template: "./web-pay-scan.html",
  mixins: ["./web-pay-scan.mjs"]
}), Ti.Preload("ti/com/web/pay/types/web-pay-types.html", '<div class="ti-web-pay-types">\n  \x3c!--Choosing--\x3e\n  <ti-web-choose-mode\n    :base="base"\n    :options="options"\n    :value="value"\n    @change="$notify(\'change\', $event)"/>\n  \x3c!--Button--\x3e\n  <div class="ti-btn is-huge" \n    :class="btnClass"\n    @click.left="onClickBtn">\n    <span class="as-text">{{payTypeText|i18n}}</span>\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      base: {
        type: String,
        "default": "/gu/rs/ti/icons/png/"
      },
      options: {
        type: Array,
        "default": function _default() {
          return [{
            icon: "wxpay256.png",
            value: "wx.qrcode",
            text: "i18n:pay-wx"
          }, {
            icon: "alipay256.png",
            value: "zfb.qrcode",
            text: "i18n:pay-zfb"
          }];
        }
      },
      value: {
        type: String,
        "default": null
      },
      apiName: {
        type: String,
        "default": null
      },
      orderStatusOk: {
        type: Boolean,
        "default": !1
      }
    },
    computed: {
      payTypeText: function payTypeText() {
        return {
          "wx.qrcode": "pay-by-wx-qrcode",
          "zfb.qrcode": "pay-by-zfb-qrcode"
        }[this.value] || "pay-by-nil";
      },
      btnClass: function btnClass() {
        return this.value ? "is-enabled" : "is-disabled";
      }
    },
    methods: {
      onClickBtn: function onClickBtn() {
        this.value && this.$notify("pay-buy");
      }
    },
    watch: {
      orderStatusOk: function orderStatusOk() {
        this.orderStatusOk && this.$notify("pay-ready");
      }
    }
  };
  Ti.Preload("ti/com/web/pay/types/web-pay-types.mjs", t);
}(), Ti.Preload("ti/com/web/pay/types/_com.json", {
  name: "web-pay-types",
  globally: !0,
  template: "./web-pay-types.html",
  mixins: ["./web-pay-types.mjs"],
  components: ["@com:web/widget/choose-mode"]
}), Ti.Preload("ti/com/web/shelf/free/web-shelf-free.html", '<div class="web-shelf-free"\n  :class="TopClass"\n  :style="TopStyle">\n  \x3c!--=============================--\x3e\n  <div class="free-main"\n    :style="MainStyle">\n    <div \n      v-for="it in TheItems"\n        :key="it.key"\n        class="free-item"\n        :class="it.className"\n        :style="it.style">\n      <component\n        :is="it.comType"\n        v-bind="it.comConf"/>\n    </div>\n  </div>\n  \x3c!--=============================--\x3e\n</div>'), function () {
  var t = {
    props: {
      base: {
        type: String,
        "default": void 0
      },
      items: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      background: {
        type: String,
        "default": null
      },
      width: {
        type: [String, Number],
        "default": void 0
      },
      height: {
        type: [String, Number],
        "default": void 0
      },
      mainBackground: {
        type: String,
        "default": null
      },
      mainWidth: {
        type: [String, Number],
        "default": void 0
      },
      mainHeight: {
        type: [String, Number],
        "default": void 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TopStyle: function TopStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height,
          backgroundImage: this.getCssBackgroundUrl(this.background)
        });
      },
      MainStyle: function MainStyle() {
        return Ti.Css.toStyle({
          width: this.mainWidth,
          height: this.mainHeight,
          backgroundImage: this.getCssBackgroundUrl(this.mainBackground)
        });
      },
      TheItems: function TheItems() {
        if (!_.isArray(this.items)) return [];
        var t = [];
        return _.forEach(this.items, function (e, i) {
          var n = ["at-".concat(e.position || "free"), "i-".concat(i)];
          e.className && n.push(e.className);
          var a = Ti.Css.toStyle(e.style);
          t.push({
            key: "It-".concat(i),
            index: i,
            className: Ti.Css.mergeClassName(n),
            style: a,
            comType: e.comType || "WebTextRaw",
            comConf: e.comConf
          });
        }), t;
      }
    },
    methods: {
      getCssBackgroundUrl: function getCssBackgroundUrl(t) {
        return Ti.Css.toBackgroundUrl(t, this.base);
      }
    }
  };
  Ti.Preload("ti/com/web/shelf/free/web-shelf-free.mjs", t);
}(), Ti.Preload("ti/com/web/shelf/free/_com.json", {
  name: "web-shelf-free",
  globally: !0,
  template: "./web-shelf-free.html",
  mixins: ["./web-shelf-free.mjs"]
}), Ti.Preload("ti/com/web/shelf/scroller/web-shelf-scroller.html", '<div class="web-shelf-scroller"\n  :class="TopClass">\n  \x3c!--=======================================--\x3e\n  <div class="scroll-btn at-left" :class="BtnLeftClass">\n    <span @click.left="OnScrollLeft"><ti-icon :value="iconLeft"/></span>\n  </div>\n  \x3c!--=======================================--\x3e\n  <div class="scroller-outer" ref="outer">\n    \x3c!--=====================================--\x3e\n    <div class="scroller-inner" ref="inner"\n      :style="InnerStyle">\n      \x3c!--===================================--\x3e\n      <div\n        v-for="it in ItemList"\n          class="scroller-tile"\n          :key="it.key"\n          :style="ItemStyle">\n          <component\n            :is="it.comType"\n            v-bind="it.comConf"/>\n      </div>\n      \x3c!--===================================--\x3e\n    </div>\n    \x3c!--=====================================--\x3e\n  </div>\n  \x3c!--=======================================--\x3e\n  <div class="scroll-btn at-right" :class="BtnRightClass">\n    <span @click.left="OnScrollRight"><ti-icon :value="iconRight"/></span>\n  </div>\n  \x3c!--=======================================--\x3e\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myScrollLeft: 0,
        myMaxScroll: 0,
        myScrollWidth: 0
      };
    },
    props: {
      data: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      cols: {
        type: Number,
        "default": 4,
        validator: function validator(t) {
          return t > 0;
        }
      },
      comType: {
        type: String,
        "default": "ti-label"
      },
      comConf: {
        type: Object,
        "default": function _default() {
          return {
            value: "=.."
          };
        }
      },
      iconLeft: {
        type: String,
        "default": "zmdi-chevron-left"
      },
      iconRight: {
        type: String,
        "default": "zmdi-chevron-right"
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      InnerStyle: function InnerStyle() {
        return {
          left: Ti.Css.toSize(this.myScrollLeft)
        };
      },
      ItemStyle: function ItemStyle() {
        return {
          width: Ti.Types.toPercent(1 / this.cols)
        };
      },
      isLeftEnabled: function isLeftEnabled() {
        return this.myScrollLeft < 0;
      },
      isRightEnabled: function isRightEnabled() {
        return this.myScrollLeft + this.myMaxScroll > this.myScrollWidth;
      },
      BtnLeftClass: function BtnLeftClass() {
        return {
          "is-enabled": this.isLeftEnabled,
          "is-disabled": !this.isLeftEnabled
        };
      },
      BtnRightClass: function BtnRightClass() {
        return {
          "is-enabled": this.isRightEnabled,
          "is-disabled": !this.isRightEnabled
        };
      },
      ItemList: function ItemList() {
        if (!_.isArray(this.data)) return [];
        var t = [];

        for (var e = 0; e < this.data.length; e++) {
          var i = this.data[e],
              n = _.assign({}, this.comConf, {
            value: i
          });

          t.push({
            key: "It-".concat(e),
            comType: this.comType,
            comConf: n
          });
        }

        return t;
      }
    },
    methods: {
      OnScrollLeft: function OnScrollLeft() {
        if (!this.isLeftEnabled) return;
        var t = Math.abs(this.myScrollLeft);
        t = Math.min(this.myScrollWidth, t), this.myScrollLeft += t;
      },
      OnScrollRight: function OnScrollRight() {
        if (!this.isRightEnabled) return;
        var t = this.myMaxScroll + this.myScrollLeft - this.myScrollWidth,
            e = Math.min(this.myScrollWidth, t);
        this.myScrollLeft -= e;
      },
      evalScrolling: function evalScrolling() {
        this.myMaxScroll = this.$refs.inner.scrollWidth, this.myScrollWidth = this.$refs.inner.getBoundingClientRect().width, this.myScrollLeft = 0;
      }
    },
    watch: {
      data: {
        handler: function handler() {
          var _this146 = this;

          this.$nextTick(function () {
            _this146.evalScrolling();
          });
        },
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/web/shelf/scroller/web-shelf-scroller.mjs", t);
}(), Ti.Preload("ti/com/web/shelf/scroller/_com.json", {
  name: "web-shelf-scroller",
  globally: !0,
  template: "./web-shelf-scroller.html",
  mixins: ["./web-shelf-scroller.mjs"]
}), Ti.Preload("ti/com/web/shelf/wall/web-shelf-wall.html", '<div class="web-shelf-wall"\n  :class="TopClass">\n  \x3c!--\n    Each rows\n  --\x3e\n  <div v-for="wr in WallList"\n    class="wall-group"\n    :key="wr.key">\n    \x3c!--\n      ===========================================\n      Items in row\n    --\x3e\n    <template v-for="it in wr.items">\n      \x3c!--\n        Blank\n      --\x3e\n      <div\n        v-if="it.blank"\n          class="wall-tile is-blank"\n          :style="ItemStyle"></div>\n      \x3c!--\n        Normal Item\n      --\x3e\n      <div\n        v-else\n          class="wall-tile is-com"\n          :style="ItemStyle">\n          <component\n            :is="it.comType"\n            v-bind="it.comConf"/>\n      </div>\n    </template> \x3c!-- End item--\x3e\n  </div> \x3c!--End Row--\x3e\n</div>'), function () {
  var t = {
    props: {
      data: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      cols: {
        type: Number,
        "default": 4,
        validator: function validator(t) {
          return t > 0 && parseInt(t) == t;
        }
      },
      comType: {
        type: String,
        "default": "ti-label"
      },
      comConf: {
        type: Object,
        "default": function _default() {
          return {
            value: "=.."
          };
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      ItemStyle: function ItemStyle() {
        return {
          width: Ti.Types.toPercent(1 / this.cols)
        };
      },
      WallList: function WallList() {
        if (!_.isArray(this.data)) return [];
        var t = [],
            e = [],
            i = 1;

        for (var n = 0; n < this.data.length; n++) {
          var a = this.data[n],
              s = _.assign({}, this.comConf, {
            value: a
          });

          e.push({
            key: "It-".concat(n),
            comType: this.comType,
            comConf: s
          }), i >= this.cols ? (i = 1, t.push({
            key: "Row-".concat(t.length),
            items: e
          }), e = []) : i++;
        }

        if (!_.isEmpty(e)) {
          for (var _t111 = e.length; _t111 < this.cols; _t111++) {
            e.push({
              key: "It-".concat(_t111),
              blank: !0
            });
          }

          t.push({
            key: "Row-".concat(t.length),
            items: e
          });
        }

        return t;
      }
    },
    methods: {}
  };
  Ti.Preload("ti/com/web/shelf/wall/web-shelf-wall.mjs", t);
}(), Ti.Preload("ti/com/web/shelf/wall/_com.json", {
  name: "web-shelf-wall",
  globally: !0,
  template: "./web-shelf-wall.html",
  mixins: ["./web-shelf-wall.mjs"]
}), Ti.Preload("ti/com/web/text/heading/web-text-heading.html", '<div class="web-text-heading">\n  \x3c!--Icon--\x3e\n  <div\n    v-if="icon"\n      class="as-icon"><ti-icon :value="icon"/></div>\n  \x3c!--Title--\x3e\n  <div\n    v-if="title"\n      class="as-title"\n      @click.left="OnClickTitle"><span>{{title|i18n}}</span></div>\n  \x3c!--Comments--\x3e\n  <div\n    v-if="comment"\n      class="as-comment"><span>{{comment|i18n}}</span></div>\n  \x3c!--View more--\x3e\n  <div\n    v-if="more"\n      class="as-more"\n      @click.left="OnClickMore"><span>{{more|i18n}}</span></div>\n</div>'), function () {
  var t = {
    props: {
      icon: {
        type: String,
        "default": null
      },
      title: {
        type: String,
        "default": null
      },
      comment: {
        type: String,
        "default": null
      },
      more: {
        type: String,
        "default": null
      },
      value: null
    },
    methods: {
      OnClickTitle: function OnClickTitle() {
        this.$notify("fire", this.value);
      },
      OnClickMore: function OnClickMore() {
        this.$notify("more", this.value);
      }
    }
  };
  Ti.Preload("ti/com/web/text/heading/web-text-heading.mjs", t);
}(), Ti.Preload("ti/com/web/text/heading/_com.json", {
  name: "web-text-heading",
  globally: !0,
  template: "./web-text-heading.html",
  mixins: ["./web-text-heading.mjs"]
}), Ti.Preload("ti/com/web/text/raw/web-text-raw.html", '<div class="web-text-raw" :class="TopClass"><span>{{TheValue}}</span></div>\n<div class="web-text-raw" :class="TopClass"><span>{{TheValue}}</span></div>'), function () {
  var t = {
    props: {
      value: {
        type: [String, Number],
        "default": "Web Text"
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TheValue: function TheValue() {
        return this.value;
      }
    }
  };
  Ti.Preload("ti/com/web/text/raw/web-text-raw.mjs", t);
}(), Ti.Preload("ti/com/web/text/raw/_com.json", {
  name: "web-text-raw",
  globally: !0,
  template: "./web-text-raw.html",
  mixins: ["./web-text-raw.mjs"]
}), Ti.Preload("ti/com/web/widget/choose-mode/web-choose-mode.html", '<div class="ti-web-choose-mode">\n  <div v-for="it in theItems"\n    class="wcm-item"\n    :class="it.className"\n    @click.left="onClickItem(it)">\n    \x3c!--Icon--\x3e\n    <ti-icon\n      class="as-icon"\n      :base="base"\n      :value="it.icon"/>\n    \x3c!--Text--\x3e\n    <div v-if="it.text"\n      class="as-text">{{it.text|i18n}}</div>\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      base: {
        type: String,
        "default": null
      },
      options: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      value: {
        type: String,
        "default": null
      }
    },
    computed: {
      theItems: function theItems() {
        var t = [];

        var _iterator64 = _createForOfIteratorHelper(this.options),
            _step64;

        try {
          for (_iterator64.s(); !(_step64 = _iterator64.n()).done;) {
            var e = _step64.value;
            t.push(_.assign({}, e, {
              className: _.isEqual(this.value, e.value) ? "is-current" : "is-others"
            }));
          }
        } catch (err) {
          _iterator64.e(err);
        } finally {
          _iterator64.f();
        }

        return t;
      }
    },
    methods: {
      onClickItem: function onClickItem(t) {
        this.$notify("change", t.value);
      }
    }
  };
  Ti.Preload("ti/com/web/widget/choose-mode/web-choose-mode.mjs", t);
}(), Ti.Preload("ti/com/web/widget/choose-mode/_com.json", {
  name: "web-choose-mode",
  globally: !0,
  template: "./web-choose-mode.html",
  mixins: ["./web-choose-mode.mjs"]
}), Ti.Preload("ti/com/web/widget/sharebar/web-widget-sharebar.html", '<div class="web-widget-sharebar"\n  :class="TopClass">\n  \x3c!--\n    Title\n  --\x3e\n  <div\n    v-if="title"\n      class="as-title">{{title|i18n}}</div>\n  \x3c!--\n    Items\n  --\x3e\n  <div class="as-items">\n    <a\n      v-for="it in TheItems"\n        class="bar-item">\n      <i :class="it.iconClass"></i>\n    </a>\n  </div>\n</div>'), function () {
  var t = {
    props: {
      title: {
        type: String,
        "default": null
      },
      items: {
        type: Array,
        "default": function _default() {
          return [];
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TheItems: function TheItems() {
        return this.evalItems(this.items);
      }
    },
    methods: {
      evalItems: function evalItems(t) {
        var e = [];
        return _.forEach(t, function (t, i) {
          var n = {
            facebook: {
              iconClass: "fab fa-facebook-f"
            },
            twitter: {
              iconClass: "fab fa-twitter"
            },
            instagram: {
              iconClass: "fab fa-instagram"
            },
            tumblr: {
              iconClass: "fab fa-tumblr"
            }
          }[t];
          n && e.push(n);
        }), e;
      }
    }
  };
  Ti.Preload("ti/com/web/widget/sharebar/web-widget-sharebar.mjs", t);
}(), Ti.Preload("ti/com/web/widget/sharebar/_com.json", {
  name: "web-widget-sharebar",
  globally: !0,
  template: "./web-widget-sharebar.html",
  mixins: ["./web-widget-sharebar.mjs"],
  components: []
}), function () {
  var t = {
    doCreate: function doCreate() {
      var _this147 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee79() {
        var _yield$Wn$Sys$exec, t, e, i, _t112, _e35;

        return regeneratorRuntime.wrap(function _callee79$(_context79) {
          while (1) {
            switch (_context79.prev = _context79.next) {
              case 0:
                _context79.next = 2;
                return Wn.Sys.exec("ti creation -cqn id:".concat(_this147.meta.id), {
                  as: "json"
                });

              case 2:
                _yield$Wn$Sys$exec = _context79.sent;
                t = _yield$Wn$Sys$exec.types;
                e = _yield$Wn$Sys$exec.freeCreate;
                _context79.next = 7;
                return Ti.App.Open({
                  title: "i18n:create",
                  type: "success",
                  position: "top",
                  width: 640,
                  height: "61.8%",
                  comType: "ti-obj-creation",
                  comConf: {
                    types: t,
                    freeCreate: e
                  },
                  components: ["@com:ti/obj/creation"]
                });

              case 7:
                i = _context79.sent;

                if (!(i && i.name)) {
                  _context79.next = 30;
                  break;
                }

                if (!(i.name.search(/[%;:"'*?`\t^<>\/\\]/) >= 0)) {
                  _context79.next = 13;
                  break;
                }

                _context79.next = 12;
                return Ti.Alert("i18n:wn-create-invalid");

              case 12:
                return _context79.abrupt("return", _context79.sent);

              case 13:
                if (!(i.length > 256)) {
                  _context79.next = 17;
                  break;
                }

                _context79.next = 16;
                return Ti.Alert("i18n:wn-create-too-long");

              case 16:
                return _context79.abrupt("return", _context79.sent);

              case 17:
                _t112 = JSON.stringify({
                  nm: i.name,
                  tp: "folder" == i.type ? "" : i.type,
                  race: i.race
                });
                _context79.next = 20;
                return Wn.Sys.exec2("obj id:".concat(_this147.meta.id, " -cqno -new '").concat(_t112, "'"), {
                  as: "json"
                });

              case 20:
                _e35 = _context79.sent;

                if (!(_e35 instanceof Error)) {
                  _context79.next = 25;
                  break;
                }

                Ti.Toast.Open("i18n:wn-create-fail", "error");
                _context79.next = 30;
                break;

              case 25:
                Ti.Toast.Open("i18n:wn-create-ok", "success");
                _context79.next = 28;
                return _this147._run("reload");

              case 28:
                _this147.myCheckedIds = [_e35.id];
                _this147.myCurrentId = _e35.id;

              case 30:
              case "end":
                return _context79.stop();
            }
          }
        }, _callee79);
      }))();
    },
    doRename: function doRename() {
      var _this148 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee80() {
        var t, e, i, n, a;
        return regeneratorRuntime.wrap(function _callee80$(_context80) {
          while (1) {
            switch (_context80.prev = _context80.next) {
              case 0:
                t = _this148.getCurrentItem();

                if (t) {
                  _context80.next = 5;
                  break;
                }

                _context80.next = 4;
                return Ti.Toast.Open("i18n:wn-rename-none", "warn");

              case 4:
                return _context80.abrupt("return", _context80.sent);

              case 5:
                _this148.setItemStatus(t.id, "renaming");

                _context80.prev = 6;
                _context80.next = 9;
                return Ti.Prompt({
                  text: "i18n:wn-rename",
                  vars: {
                    name: t.nm
                  }
                }, {
                  title: "i18n:rename",
                  placeholder: t.nm,
                  value: t.nm
                });

              case 9:
                e = _context80.sent;

                if (!e) {
                  _context80.next = 31;
                  break;
                }

                if (!(e.search(/[%;:"'*?`\t^<>\/\\]/) >= 0)) {
                  _context80.next = 15;
                  break;
                }

                _context80.next = 14;
                return Ti.Alert("i18n:wn-rename-invalid");

              case 14:
                return _context80.abrupt("return", _context80.sent);

              case 15:
                if (!(e.length > 256)) {
                  _context80.next = 19;
                  break;
                }

                _context80.next = 18;
                return Ti.Alert("i18n:wn-rename-too-long");

              case 18:
                return _context80.abrupt("return", _context80.sent);

              case 19:
                i = Ti.Util.getSuffix(t.nm), n = Ti.Util.getSuffix(e);

                if (!(i && i != n)) {
                  _context80.next = 26;
                  break;
                }

                _context80.next = 23;
                return Ti.Confirm("i18n:wn-rename-suffix-changed");

              case 23:
                _context80.t0 = _context80.sent;

                if (!_context80.t0) {
                  _context80.next = 26;
                  break;
                }

                e += i;

              case 26:
                _this148.setItemStatus(t.id, "loading");

                _context80.next = 29;
                return Wn.Sys.exec2("obj id:".concat(t.id, " -cqno -u 'nm:\"").concat(e, "\"'"), {
                  as: "json"
                });

              case 29:
                a = _context80.sent;
                a instanceof Error ? Ti.Toast.Open("i18n:wn-rename-fail", "error") : (Ti.Toast.Open("i18n:wn-rename-ok", "success"), _this148.setItem(a)), _this148.setItemStatus({
                  id: t.id,
                  status: {
                    loading: !1
                  }
                });

              case 31:
                _context80.prev = 31;

                _this148.setItemStatus(t.id, null);

                return _context80.finish(31);

              case 34:
              case "end":
                return _context80.stop();
            }
          }
        }, _callee80, null, [[6,, 31, 34]]);
      }))();
    },
    doDelete: function doDelete() {
      var _this149 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee81() {
        var t, e, i, _iterator65, _step65, n, _t114, _t113, _e36;

        return regeneratorRuntime.wrap(function _callee81$(_context81) {
          while (1) {
            switch (_context81.prev = _context81.next) {
              case 0:
                t = _this149.getCheckedItems();

                if (!_.isEmpty(t)) {
                  _context81.next = 5;
                  break;
                }

                _context81.next = 4;
                return Ti.Toast.Open("i18n:wn-del-none", "warn");

              case 4:
                return _context81.abrupt("return", _context81.sent);

              case 5:
                e = 0, i = {};
                _context81.prev = 6;
                _iterator65 = _createForOfIteratorHelper(t);
                _context81.prev = 8;

                _iterator65.s();

              case 10:
                if ((_step65 = _iterator65.n()).done) {
                  _context81.next = 38;
                  break;
                }

                n = _step65.value;

                if (!(!n || !n.id || !n.nm)) {
                  _context81.next = 14;
                  break;
                }

                return _context81.abrupt("continue", 36);

              case 14:
                if (!(n.__is && (n.__is.loading || n.__is.removed))) {
                  _context81.next = 16;
                  break;
                }

                return _context81.abrupt("continue", 36);

              case 16:
                if (!i[n.id]) {
                  _context81.next = 18;
                  break;
                }

                return _context81.abrupt("continue", 36);

              case 18:
                if (!(_this149.setItemStatus(n.id, "loading"), "DIR" == n.race)) {
                  _context81.next = 30;
                  break;
                }

                _context81.next = 21;
                return Wn.Sys.exec("count -A id:".concat(n.id));

              case 21:
                _t114 = _context81.sent;
                _context81.t0 = (_t114 = parseInt(_t114)) > 0;

                if (!_context81.t0) {
                  _context81.next = 27;
                  break;
                }

                _context81.next = 26;
                return Ti.Confirm({
                  text: "i18n:wn-del-no-empty-folder",
                  vars: {
                    nm: n.nm
                  }
                });

              case 26:
                _context81.t0 = !_context81.sent;

              case 27:
                if (!_context81.t0) {
                  _context81.next = 30;
                  break;
                }

                _this149.setItemStatus(n.id, null);

                return _context81.abrupt("continue", 36);

              case 30:
                _context81.next = 32;
                return Wn.Sys.exec("rm ".concat("DIR" == n.race ? "-r" : "", " id:").concat(n.id));

              case 32:
                _this149.setItemStatus(n.id, "removed");

                _t113 = /^id:(.+)$/.exec(n.videoc_dir);

                if (_t113) {
                  _e36 = _t113[1];
                  i[_e36] = !0, _this149.setItemStatus(_e36, "removed");
                }

                e++;

              case 36:
                _context81.next = 10;
                break;

              case 38:
                _context81.next = 43;
                break;

              case 40:
                _context81.prev = 40;
                _context81.t1 = _context81["catch"](8);

                _iterator65.e(_context81.t1);

              case 43:
                _context81.prev = 43;

                _iterator65.f();

                return _context81.finish(43);

              case 46:
                _context81.next = 48;
                return _this149._run("reload");

              case 48:
                _context81.prev = 48;
                Ti.Toast.Open("i18n:wn-del-ok", {
                  N: e
                }, "success");
                return _context81.finish(48);

              case 51:
              case "end":
                return _context81.stop();
            }
          }
        }, _callee81, null, [[6,, 48, 51], [8, 40, 43, 46]]);
      }))();
    },
    doUpload: function doUpload() {
      var _arguments18 = arguments,
          _this150 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee82() {
        var t, e, i, _iterator66, _step66, _loop;

        return regeneratorRuntime.wrap(function _callee82$(_context83) {
          while (1) {
            switch (_context83.prev = _context83.next) {
              case 0:
                t = _arguments18.length > 0 && _arguments18[0] !== undefined ? _arguments18[0] : [];
                e = _.map(t, function (t, e) {
                  return {
                    id: "U".concat(e, "_").concat(Ti.Random.str(6)),
                    file: t,
                    total: t.size,
                    current: 0
                  };
                });
                _this150.myUploadigFiles = e;
                i = {};
                _iterator66 = _createForOfIteratorHelper(e);
                _context83.prev = 5;
                _loop = /*#__PURE__*/regeneratorRuntime.mark(function _loop() {
                  var t, e, _yield$Wn$Io$uploadFi, n, a;

                  return regeneratorRuntime.wrap(function _loop$(_context82) {
                    while (1) {
                      switch (_context82.prev = _context82.next) {
                        case 0:
                          t = _step66.value;
                          e = t.file;
                          _context82.next = 4;
                          return Wn.Io.uploadFile(e, {
                            target: "id:".concat(_this150.meta.id),
                            progress: function progress(e) {
                              t.current = e.loaded;
                            }
                          });

                        case 4:
                          _yield$Wn$Io$uploadFi = _context82.sent;
                          n = _yield$Wn$Io$uploadFi.ok;
                          a = _yield$Wn$Io$uploadFi.data;
                          n && (i[a.id] = !0);

                        case 8:
                        case "end":
                          return _context82.stop();
                      }
                    }
                  }, _loop);
                });

                _iterator66.s();

              case 8:
                if ((_step66 = _iterator66.n()).done) {
                  _context83.next = 12;
                  break;
                }

                return _context83.delegateYield(_loop(), "t0", 10);

              case 10:
                _context83.next = 8;
                break;

              case 12:
                _context83.next = 17;
                break;

              case 14:
                _context83.prev = 14;
                _context83.t1 = _context83["catch"](5);

                _iterator66.e(_context83.t1);

              case 17:
                _context83.prev = 17;

                _iterator66.f();

                return _context83.finish(17);

              case 20:
                _.delay(function () {
                  _this150.myUploadigFiles = [];
                }, 1e3);

                Ti.Toast.Open("i18n:upload-done", "success");
                _context83.next = 24;
                return _this150._run("reload");

              case 24:
                _this150.myCheckedIds = i;
                _this150.myCurrentId = null;

              case 26:
              case "end":
                return _context83.stop();
            }
          }
        }, _callee82, null, [[5, 14, 17, 20]]);
      }))();
    },
    doDownload: function doDownload() {
      var _this151 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee83() {
        var t, _iterator67, _step67, e, _t115;

        return regeneratorRuntime.wrap(function _callee83$(_context84) {
          while (1) {
            switch (_context84.prev = _context84.next) {
              case 0:
                t = _this151.getCheckedItems();

                if (!_.isEmpty(t)) {
                  _context84.next = 5;
                  break;
                }

                _context84.next = 4;
                return Ti.Toast.Open("i18n:wn-download-none", "warn");

              case 4:
                return _context84.abrupt("return", _context84.sent);

              case 5:
                _context84.t0 = !(t.length > 5);

                if (_context84.t0) {
                  _context84.next = 10;
                  break;
                }

                _context84.next = 9;
                return Ti.Confirm({
                  text: "i18n:wn-download-too-many",
                  vars: {
                    N: t.length
                  }
                });

              case 9:
                _context84.t0 = _context84.sent;

              case 10:
                if (!_context84.t0) {
                  _context84.next = 34;
                  break;
                }

                _iterator67 = _createForOfIteratorHelper(t);
                _context84.prev = 12;

                _iterator67.s();

              case 14:
                if ((_step67 = _iterator67.n()).done) {
                  _context84.next = 26;
                  break;
                }

                e = _step67.value;

                if (!("FILE" != e.race)) {
                  _context84.next = 22;
                  break;
                }

                _context84.next = 19;
                return Ti.Confirm({
                  text: "i18n:wn-download-dir",
                  vars: e
                }, {
                  textYes: "i18n:continue",
                  textNo: "i18n:terminate"
                });

              case 19:
                if (_context84.sent) {
                  _context84.next = 21;
                  break;
                }

                return _context84.abrupt("return");

              case 21:
                return _context84.abrupt("continue", 24);

              case 22:
                _t115 = Wn.Util.getDownloadLink(e);
                Ti.Be.OpenLink(_t115);

              case 24:
                _context84.next = 14;
                break;

              case 26:
                _context84.next = 31;
                break;

              case 28:
                _context84.prev = 28;
                _context84.t1 = _context84["catch"](12);

                _iterator67.e(_context84.t1);

              case 31:
                _context84.prev = 31;

                _iterator67.f();

                return _context84.finish(31);

              case 34:
              case "end":
                return _context84.stop();
            }
          }
        }, _callee83, null, [[12, 28, 31, 34]]);
      }))();
    }
  };
  Ti.Preload("ti/com/wn/adaptlist/wn-adaptlist-methods.mjs", t);
}(), function () {
  var t = {
    meta: {
      type: Object,
      "default": null
    },
    data: {
      type: [Object, Array],
      "default": null
    },
    changedId: {
      type: String,
      "default": null
    },
    status: {
      type: Object,
      "default": function _default() {
        return {
          reloading: !1
        };
      }
    },
    droppable: {
      type: Boolean,
      "default": !0
    },
    multi: {
      type: Boolean,
      "default": !0
    },
    checkable: {
      type: Boolean,
      "default": !0
    },
    blurable: {
      type: Boolean,
      "default": !0
    },
    selectable: {
      type: Boolean,
      "default": !0
    },
    spacing: {
      type: String,
      "default": "sm"
    },
    keeyHiddenBy: {
      type: String,
      "default": "wn-list-adaptview-expose-hidden"
    },
    routers: {
      type: Object,
      "default": function _default() {
        return {
          reload: "dispatch:current/reload"
        };
      }
    },
    listConf: {
      type: Object,
      "default": void 0
    },
    itemClassName: {
      type: String,
      "default": null
    }
  };
  Ti.Preload("ti/com/wn/adaptlist/wn-adaptlist-props.mjs", t);
}(), Ti.Preload("ti/com/wn/adaptlist/wn-adaptlist.html", '<div class="wn-adaptlist" \n  :class="TopClass"\n  v-ti-activable>\n  <div class="ti-fill-parent"\n    v-drop-files.mask="OnDropFiles">\n    \x3c!--==================================\n      Show Loading\n    --\x3e\n    <ti-loading\n      v-if="isReloading" \n        text="i18n:reloading"/>\n    \x3c!--==================================\n      Data List\n    --\x3e\n    <ti-wall\n      v-else\n        class="ti-fill-parent"\n        :data="TheDataList"\n        :spacing="spacing"\n        :changed-id="changedId"\n        :current-id="myCurrentId"\n        :checked-ids="myCheckedIds"\n        :multi="multi"\n        :checkable="checkable"\n        :blurable="blurable"\n        :selectable="selectable"\n        :display="WallItemDisplay"\n        :puppet-mode="true"\n        v-bind="listConf"\n        :on-init="OnListInit"\n        @select="OnSelected"/>\n    \x3c!--==================================\n      Hidden file upload control\n    --\x3e\n    <input \n      type="file" \n      ref="file" \n      class="ti-hide"\n      multiple\n      @change.stop.seft="OnSelectLocalFilesToUpload">\n    \x3c!--==================================\n      Uploading Pannel\n    --\x3e\n    <div\n      class="wal-uploading"\n      :class="UploadingClass">\n      <header>\n        <ti-icon value="fas-spinner fa-pulse"/>\n        <span>{{\'uploading\'|i18n}}</span>\n      </header>\n      <section>\n        <ti-wall \n          :data="TheUploadingList"\n          :spacing="spacing"\n          :selectable="false"\n          :multi="false"\n          :checkable="false"\n          :blurable="false"\n          :display="UploadingItemDisplay"\n          :puppet-mode="true"/>\n      </section>\n    </div>\n    \x3c!--==================================--\x3e\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myCurrentId: null,
        myCheckedIds: {},
        myUploadigFiles: [],
        myItemStatus: {},
        myExposeHidden: !0,
        myData: null
      };
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      isReloading: function isReloading() {
        return _.get(this.status, "reloading");
      },
      WallItemDisplay: function WallItemDisplay() {
        return {
          key: "..",
          transformer: {
            name: "Wn.Util.getObjThumbInfo",
            args: [{
              status: this.myItemStatus,
              exposeHidden: this.myExposeHidden
            }]
          },
          comType: "ti-obj-thumb",
          comConf: {
            "...": "${=value}"
          }
        };
      },
      UploadingItemDisplay: function UploadingItemDisplay() {
        return {
          key: "..",
          comType: "ti-obj-thumb",
          comConf: {
            "...": "${=value}"
          }
        };
      },
      hasDataList: function hasDataList() {
        return this.myData && _.isArray(this.myData.list);
      },
      TheDataList: function TheDataList() {
        if (!this.myData || _.isEmpty(this.myData.list)) return [];
        var t = [];

        var _iterator68 = _createForOfIteratorHelper(this.myData.list),
            _step68;

        try {
          for (_iterator68.s(); !(_step68 = _iterator68.n()).done;) {
            var e = _step68.value;

            if (!this.isHiddenItem(e)) {
              var i = this.myItemStatus[e.id];
              t.push(_.assign({
                $wn$adaptlist$status: i
              }, e));
            }
          }
        } catch (err) {
          _iterator68.e(err);
        } finally {
          _iterator68.f();
        }

        return t;
      },
      TheUploadingList: function TheUploadingList() {
        var t = this.myUploadigFiles,
            e = [];

        if (_.isArray(t)) {
          var _iterator69 = _createForOfIteratorHelper(t),
              _step69;

          try {
            for (_iterator69.s(); !(_step69 = _iterator69.n()).done;) {
              var i = _step69.value;

              var _t116 = void 0,
                  n = i.file.type,
                  a = Ti.Util.getSuffixName(i.file.name);

              _t116 = /^image\//.test(n) ? {
                type: "localFile",
                value: i.file
              } : Ti.Icons.get({
                tp: a,
                mime: n
              }), e.push({
                id: i.id,
                title: i.file.name,
                preview: _t116,
                progress: i.current / i.total
              });
            }
          } catch (err) {
            _iterator69.e(err);
          } finally {
            _iterator69.f();
          }
        }

        return e;
      },
      hasUploading: function hasUploading() {
        return this.myUploadigFiles.length > 0;
      },
      UploadingClass: function UploadingClass() {
        return this.hasUploading ? "up-show" : "up-hide";
      }
    },
    methods: {
      OnListInit: function OnListInit(t) {
        this.$innerList = t;
      },
      OnSelected: function OnSelected(_ref94) {
        var t = _ref94.currentId,
            e = _ref94.checkedIds;
        return this.myCurrentId = t, this.myCheckedIds = e, {
          stop: !1
        };
      },
      OnDropFiles: function OnDropFiles(t) {
        var _this152 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee84() {
          var e;
          return regeneratorRuntime.wrap(function _callee84$(_context85) {
            while (1) {
              switch (_context85.prev = _context85.next) {
                case 0:
                  if (_this152.droppable) {
                    _context85.next = 2;
                    break;
                  }

                  return _context85.abrupt("return");

                case 2:
                  e = _toConsumableArray(t);
                  _context85.next = 5;
                  return _this152.doUpload(e);

                case 5:
                  _this152.$nextTick(function () {
                    var t = [];

                    var _iterator70 = _createForOfIteratorHelper(_this152.TheDataList),
                        _step70;

                    try {
                      for (_iterator70.s(); !(_step70 = _iterator70.n()).done;) {
                        var _e37 = _step70.value;
                        _this152.myCheckedIds[_e37.id] && t.push(_e37);
                      }
                    } catch (err) {
                      _iterator70.e(err);
                    } finally {
                      _iterator70.f();
                    }

                    _this152.$notify("uploaded", t);
                  });

                case 6:
                case "end":
                  return _context85.stop();
              }
            }
          }, _callee84);
        }))();
      },
      OnSelectLocalFilesToUpload: function OnSelectLocalFilesToUpload(t) {
        var _this153 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee85() {
          return regeneratorRuntime.wrap(function _callee85$(_context86) {
            while (1) {
              switch (_context86.prev = _context86.next) {
                case 0:
                  _context86.next = 2;
                  return _this153.OnDropFiles(t.target.files);

                case 2:
                  _this153.$refs.file.value = "";

                case 3:
                case "end":
                  return _context86.stop();
              }
            }
          }, _callee85);
        }))();
      },
      getCurrentItem: function getCurrentItem() {
        var _this154 = this;

        if (this.myCurrentId) return _.find(this.TheDataList, function (t) {
          return t.id == _this154.myCurrentId;
        });
      },
      getCheckedItems: function getCheckedItems() {
        var _this155 = this;

        return _.filter(this.TheDataList, function (t) {
          return _this155.myCheckedIds[t.id];
        });
      },
      setItem: function setItem(t) {
        if (t && this.hasDataList) {
          var e = _.map(this.TheDataList, function (e) {
            return e.id == t.id ? t : e;
          });

          this.myData.list = e;
        }
      },
      setItemStatus: function setItemStatus(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "loading";
        this.myItemStatus = _.assign({}, this.myItemStatus, _defineProperty({}, t, e));
      },
      invokeList: function invokeList(t) {
        console.log("methodName"), Ti.InvokeBy(this.$innerList, t);
      },
      isHiddenItem: function isHiddenItem(t) {
        return !(!t.nm.startsWith(".") || this.myExposeHidden);
      },
      _run: function _run(t, e) {
        var _this156 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee86() {
          var i, _t117;

          return regeneratorRuntime.wrap(function _callee86$(_context87) {
            while (1) {
              switch (_context87.prev = _context87.next) {
                case 0:
                  i = (_this156.routers || {})[t];

                  if (!_.isFunction(i)) {
                    _context87.next = 6;
                    break;
                  }

                  _context87.next = 4;
                  return i();

                case 4:
                  _context87.next = 11;
                  break;

                case 6:
                  if (!i) {
                    _context87.next = 11;
                    break;
                  }

                  _t117 = Ti.App(_this156);
                  _context87.next = 10;
                  return _t117.exec(i, e);

                case 10:
                  return _context87.abrupt("return", _context87.sent);

                case 11:
                case "end":
                  return _context87.stop();
              }
            }
          }, _callee86);
        }))();
      },
      toggleExposeHidden: function toggleExposeHidden() {
        var t = !this.myExposeHidden;
        this.myExposeHidden = t, this.keeyHiddenBy && Ti.Storage.session.set(this.keeyHiddenBy, t);
      },
      openLocalFileSelectdDialog: function openLocalFileSelectdDialog() {
        this.$refs.file.click();
      },
      openCurrentMeta: function openCurrentMeta() {
        var _this157 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee87() {
          var t, e, _t118, i;

          return regeneratorRuntime.wrap(function _callee87$(_context88) {
            while (1) {
              switch (_context88.prev = _context88.next) {
                case 0:
                  t = _this157.getCurrentItem() || _this157.meta;

                  if (t) {
                    _context88.next = 3;
                    break;
                  }

                  return _context88.abrupt("return", Ti.Toast.Open("i18n:nil-obj"));

                case 3:
                  _context88.next = 5;
                  return Wn.EditObjMeta(t, {
                    fields: "auto"
                  });

                case 5:
                  e = _context88.sent;

                  if (e) {
                    _t118 = e.updates, i = e.data;

                    _this157.setItem(i);
                  }

                case 7:
                case "end":
                  return _context88.stop();
              }
            }
          }, _callee87);
        }))();
      },
      syncMyData: function syncMyData() {
        this.myData = _.cloneDeep(this.data) || {
          list: [],
          pager: {}
        }, this.myItemStatus = {};
      }
    },
    watch: {
      data: {
        handler: "syncMyData",
        immediate: !0
      },
      myExposeHidden: function myExposeHidden(t) {
        this.$notify("expose-hidden", t);
      }
    },
    mounted: function mounted() {
      var _this158 = this;

      Ti.Fuse.getOrCreate().add({
        key: "wn-list-adaptview-check-uploading",
        everythingOk: function everythingOk() {
          return !_this158.hasUploading;
        },
        fail: function fail() {
          Ti.Toast.Open("i18n:upload-nofinished", "warn");
        }
      }), this.keeyHiddenBy && (this.myExposeHidden = Ti.Storage.session.getBoolean(this.keeyHiddenBy));
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Fuse.get().remove("wn-list-adaptview-check-uploading");
    }
  };
  Ti.Preload("ti/com/wn/adaptlist/wn-adaptlist.mjs", t);
}(), Ti.Preload("ti/com/wn/adaptlist/_com.json", {
  name: "wn-adaptlist",
  globally: !0,
  template: "./wn-adaptlist.html",
  props: "./wn-adaptlist-props.mjs",
  methods: "./wn-adaptlist-methods.mjs",
  mixins: ["./wn-adaptlist.mjs"],
  components: ["@com:ti/obj/thumb", "@com:ti/wall"]
}), Ti.Preload("ti/com/wn/combo/edit-com/wn-combo-edit-com.html", '<ti-label\n  class="wn-combo-edit-com"\n  :class="className"\n  :placeholder="placeholder"\n  :prefix-icon="ComIcon"\n  :value="ComTitle"\n  :suffix-icon="\'zmdi-delete\'"\n  @click:value="OnClickValue"\n  @suffix:icon="OnClickSuffixIcon"/>\n  '), function () {
  var t = {
    data: function data() {
      return {
        myCom: null
      };
    },
    props: {
      value: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      placeholder: {
        type: String,
        "default": "i18n:wn-edit-com-nil"
      }
    },
    computed: {
      Dict: function Dict() {
        return Wn.Dict.hMakerComponents();
      },
      ComIcon: function ComIcon() {
        return _.get(this.myCom, "icon");
      },
      ComTitle: function ComTitle() {
        return _.get(this.myCom, "title");
      }
    },
    methods: {
      OnClickValue: function OnClickValue() {
        var _this159 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee88() {
          var t;
          return regeneratorRuntime.wrap(function _callee88$(_context89) {
            while (1) {
              switch (_context89.prev = _context89.next) {
                case 0:
                  _context89.next = 2;
                  return Wn.EditTiComponent(_this159.value);

                case 2:
                  t = _context89.sent;
                  t && _this159.notifyChange(t);

                case 4:
                case "end":
                  return _context89.stop();
              }
            }
          }, _callee88);
        }))();
      },
      OnClickSuffixIcon: function OnClickSuffixIcon() {
        this.notifyChange({});
      },
      notifyChange: function notifyChange() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        t.comType || (t.comType = void 0, t.comConf = void 0), this.$notify("change", t);
      },
      reloadMyCom: function reloadMyCom() {
        var _this160 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee89() {
          var _t119;

          return regeneratorRuntime.wrap(function _callee89$(_context90) {
            while (1) {
              switch (_context90.prev = _context90.next) {
                case 0:
                  if (!_.isEmpty(_this160.value)) {
                    _context90.next = 4;
                    break;
                  }

                  _this160.myCom = null;
                  _context90.next = 8;
                  break;

                case 4:
                  _t119 = _this160.value.comType;
                  _context90.next = 7;
                  return _this160.Dict.getItem(_t119);

                case 7:
                  _this160.myCom = _context90.sent;

                case 8:
                case "end":
                  return _context90.stop();
              }
            }
          }, _callee89);
        }))();
      }
    },
    watch: {
      value: {
        handler: "reloadMyCom",
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/wn/combo/edit-com/wn-combo-edit-com.mjs", t);
}(), Ti.Preload("ti/com/wn/combo/edit-com/_com.json", {
  name: "wn-combo-edit-com",
  globally: !0,
  template: "./wn-combo-edit-com.html",
  mixins: "./wn-combo-edit-com.mjs"
}), Ti.Preload("ti/com/wn/combo/input/wn-combo-input.html", '<ti-combo-input v-bind="this"\n  \n  :options="OptionsDict"\n  :drop-com-type="DropComType"\n  :prefix-icon="ThePrefixIcon"\n  :drop-display="TheDropDisplay"\n  \n  @change="$notify(\'change\', $event)"/>\n  '), function () {
  var t = {
    data: function data() {
      return {
        loading: !1
      };
    },
    props: {
      itemBy: {
        type: [String, Function],
        "default": void 0
      },
      findBy: {
        type: [String, Function],
        "default": void 0
      },
      loadingIcon: {
        type: String,
        "default": "zmdi-settings zmdi-hc-spin"
      },
      canInput: {
        type: Boolean,
        "default": !0
      },
      autoCollapse: {
        type: Boolean,
        "default": !1
      }
    },
    computed: {
      DropComType: function DropComType() {
        return this.dropComType || "wn-list";
      },
      ThePrefixIcon: function ThePrefixIcon() {
        return this.loading ? this.loadingIcon : this.prefixIcon;
      },
      OptionsDict: function OptionsDict() {
        var _this161 = this;

        return Wn.Dict.evalOptionsDict(this, function (_ref95) {
          var t = _ref95.loading;
          _this161.loading = t;
        });
      },
      TheDropDisplay: function TheDropDisplay() {
        return this.dropDisplay || ["@<thumb>", "title|text"];
      }
    }
  };
  Ti.Preload("ti/com/wn/combo/input/wn-combo-input.mjs", t);
}(), Ti.Preload("ti/com/wn/combo/input/_com.json", {
  name: "wn-combo-input",
  globally: !0,
  template: "./wn-combo-input.html",
  props: ["@com:ti/input/ti-input-props.mjs", "@com:ti/combo/input/ti-combo-input-props.mjs"],
  mixins: "./wn-combo-input.mjs",
  components: ["@com:ti/combo/input", "@com:wn/list", "@com:wn/obj/icon"]
}), Ti.Preload("ti/com/wn/combo/multi-input/wn-combo-multi-input.html", '<ti-combo-multi-input v-bind="this"\n\n  :options="OptionsDict"\n  :tag-mapping="TheTagMapping"\n  :drop-com-type="DropComType"\n  :prefix-icon="ThePrefixIcon"\n  :tag-item-icon-by="TheTagItemIconBy"\n  :drop-display="TheDropDisplay"\n  \n  @change="$notify(\'change\', $event)"/>\n  '), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        loading: !1
      };
    },
    props: {
      itemBy: {
        type: [String, Function],
        "default": void 0
      },
      findBy: {
        type: [String, Function],
        "default": void 0
      },
      loadingIcon: {
        type: String,
        "default": "zmdi-settings zmdi-hc-spin"
      }
    },
    computed: {
      DropComType: function DropComType() {
        return this.dropComType || "wn-list";
      },
      ThePrefixIcon: function ThePrefixIcon() {
        return this.loading && this.prefixIcon ? this.loadingIcon : this.prefixIcon;
      },
      OptionsDict: function OptionsDict() {
        var _this162 = this;

        return Wn.Dict.evalOptionsDict(this, function (_ref96) {
          var t = _ref96.loading;
          _this162.loading = t;
        });
      },
      TheTagMapping: function TheTagMapping() {
        return _.isEmpty(this.tagMapping) ? {
          text: "title|nm",
          icon: "icon",
          value: "id"
        } : this.tagMapping;
      },
      TheTagItemIconBy: function TheTagItemIconBy() {
        return this.tagItemIconBy || function (t) {
          return Wn.Util.getObjIcon(t);
        };
      },
      TheDropDisplay: function TheDropDisplay() {
        return this.dropDisplay || ["@<thumb>", "title", "nm"];
      }
    }
  };
  Ti.Preload("ti/com/wn/combo/multi-input/wn-combo-multi-input.mjs", t);
}(), Ti.Preload("ti/com/wn/combo/multi-input/_com.json", {
  name: "wn-combo-multi-input",
  globally: !0,
  template: "./wn-combo-multi-input.html",
  props: ["@com:ti/input/ti-input-props.mjs", "@com:ti/input/tags/ti-input-tags-props.mjs", "@com:ti/combo/input/ti-combo-input-props.mjs"],
  mixins: "./wn-combo-multi-input.mjs",
  components: ["@com:ti/combo/multi-input", "@com:wn/list", "@com:wn/obj/icon"]
}), Ti.Preload("ti/com/wn/droplist/wn-droplist.html", '<component \n  :is="ComType"\n  v-bind="this"\n  :can-input="false"\n  :must-in-list="true"\n  :auto-collapse="true"\n  @change="$notify(\'change\', $event)"/>'), function () {
  var t = {
    props: {
      multi: {
        type: Boolean,
        "default": !1
      }
    },
    computed: {
      ComType: function ComType() {
        return this.multi ? "wn-combo-multi-input" : "wn-combo-input";
      }
    }
  };
  Ti.Preload("ti/com/wn/droplist/wn-droplist.mjs", t);
}(), Ti.Preload("ti/com/wn/droplist/_com.json", {
  name: "wn-droplist",
  globally: !0,
  template: "./wn-droplist.html",
  props: ["@com:ti/input/ti-input-props.mjs", "@com:ti/input/tags/ti-input-tags-props.mjs", "@com:ti/combo/input/ti-combo-input-props.mjs"],
  mixins: ["./wn-droplist.mjs"],
  components: ["@com:wn/combo/input", "@com:wn/combo/multi-input"]
}), Ti.Preload("ti/com/wn/explorer/wn-explorer.html", '<div class="wn-explorer"\n  v-drop-off\n  :class="topClass">\n  \x3c!--\n    Sky\n  --\x3e\n  <div v-if="show.sky"\n    class="explorer-sky">\n    \x3c!--Logo--\x3e\n    <div v-if="show.logo"\n      class="sky-logo ti-flex-center">\n      <slot name="logo"></slot>\n    </div>\n    \x3c!--Title/Crumb--\x3e\n    <div v-if="!noTitle"\n      class="sky-title">\n      <slot name="title">\n        <ul class="as-address-bar">\n          <li v-for="an in ancestors" :key="an.id">\n            <a :href="getObjLink(an)"\n              @click.prevent="$notify(\'main:open\', an)">{{getObjTitle(an)}}</a>\n            <ti-icon class="center" value="chevron_right"/>\n          </li>\n          <li v-if="meta">\n            <b>{{getObjTitle(meta)}}</b>\n            <span v-if="status.changed"\n              class="ti-mark-changed">*</span>\n          </li>\n        </ul>\n      </slot>\n    </div>\n    \x3c!--Actions--\x3e\n    <div v-if="show.action"\n      class="sky-action ti-flex-right">\n      <slot name="action"></slot>\n    </div>\n  </div>\n  \x3c!--\n    Aside\n  --\x3e\n  <div v-if="show.aside"\n    class="explorer-aside">\n    <slot name="aside"></slot>\n  </div>\n  \x3c!--\n    Main Arena\n  --\x3e\n  <div class="explorer-arena">\n    <slot name="arena"></slot>\n  </div>\n  \x3c!--\n    Footer\n  --\x3e\n  <div v-if="show.footer"\n    class="explorer-footer">\n    <slot name="footer"></slot>\n  </div>\n  <div v-if="loading" class="exploer-loading-mask"></div>\n</div>'), function () {
  var t = {
    props: {
      loading: {
        type: Boolean,
        "default": !1
      },
      noTitle: {
        type: Boolean,
        "default": !1
      },
      meta: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      ancestors: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      children: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      status: {
        type: Object,
        "default": function _default() {
          return {
            changed: !1
          };
        }
      }
    },
    computed: {
      show: function show() {
        var t = {
          logo: !!this.$slots.logo,
          action: !!this.$slots.action,
          aside: !!this.$slots.aside,
          footer: !!this.$slots.footer
        };
        return t.sky = !(this.noTitle && !t.logo && !t.action), t;
      },
      topClass: function topClass() {
        return {
          "no-sky": !this.show.sky,
          "no-aside": !this.show.aside,
          "no-footer": !this.show.footer
        };
      }
    },
    methods: {
      getObjTitle: function getObjTitle(t) {
        var e = t.title || t.nm;
        return Ti.I18n.text(e);
      },
      getObjLink: function getObjLink(t) {
        return Wn.Util.getAppLink(t).toString();
      }
    },
    mounted: function mounted() {}
  };
  Ti.Preload("ti/com/wn/explorer/wn-explorer.mjs", t);
}(), Ti.Preload("ti/com/wn/explorer/_com.json", {
  name: "wn-explorer",
  globally: !0,
  template: "./wn-explorer.html",
  mixins: ["./wn-explorer.mjs"]
}), Ti.Preload("ti/com/wn/gui/arena/wn-gui-arena.html", '<div class="wn-gui-arena">\n  <component \n    :is="comType"\n      class="ti-cover-parent"\n      v-bind="comConf"/>\n</div>'), function () {
  var t = {
    props: {
      meta: {
        type: Object,
        "default": null
      },
      comType: {
        type: String,
        "default": "ti-loading"
      },
      comConf: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    }
  };
  Ti.Preload("ti/com/wn/gui/arena/wn-gui-arena.mjs", t);
}(), Ti.Preload("ti/com/wn/gui/arena/_com.json", {
  name: "wn-gui-arena",
  globally: !0,
  template: "./wn-gui-arena.html",
  mixins: ["./wn-gui-arena.mjs"]
}), Ti.Preload("ti/com/wn/gui/footer/wn-gui-footer.html", '<div class="wn-gui-footer">\n  \x3c!--\n    Info\n  --\x3e\n  <div class="as-info ti-flex-center">\n    <ti-icon v-if="infoIcon"\n      :value="infoIcon"/>\n    <span v-if="infoText"\n      >{{infoText|i18n}}</span>\n  </div>\n  \x3c!--\n    Message\n  --\x3e\n  <div class="as-msg ti-flex-center">\n    {{message}}\n  </div>\n  \x3c!--\n    Indicator\n  --\x3e\n  <div class="as-indi">\n    {{indicator}}\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      infoIcon: {
        type: [String, Object],
        "default": void 0
      },
      infoText: {
        type: String,
        "default": void 0
      },
      message: {
        type: String,
        "default": void 0
      },
      indicator: {
        type: String,
        "default": void 0
      }
    }
  };
  Ti.Preload("ti/com/wn/gui/footer/wn-gui-footer.mjs", t);
}(), Ti.Preload("ti/com/wn/gui/footer/_com.json", {
  name: "wn-gui-footer",
  globally: !0,
  template: "./wn-gui-footer.html",
  mixins: ["./wn-gui-footer.mjs"]
}), Ti.Preload("ti/com/wn/gui/side/nav/com/side-nav-item/side-nav-item.html", '<div class="side-nav-item" :class="topClass">\n  \x3c!--\n    Self Info\n  --\x3e\n  <div class="it-info" >\n    \x3c!--Icon--\x3e\n    <span v-if="icon" class="it-info-icon">\n      <ti-icon :value="icon" size=".16rem"/>\n    </span>\n    \x3c!--Group--\x3e\n    <span v-if="isGroup"\n      class="it-info-text"\n      @click.stop.prevent="onClickGroupInfo">{{title|i18n}}</span>\n    \x3c!--Item--\x3e\n    <a v-else\n      class="it-info-text"\n      :href="href"\n      @click.stop.prevent="onClickItemInfo">\n      {{title|i18n}}\n    </a>\n  </div>\n  \x3c!--\n    Sub Container\n  --\x3e\n  <div class="it-con" v-if="items && items.length > 0">\n      <side-nav-item v-for="subIt in items"\n        :key="subIt.key"\n        :group-status-store-key="subIt.key"\n        :highlight-id="highlightId"\n        v-bind="subIt"\n        @item:actived="$notify(\'item:actived\', $event)"/>\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        collapse: !0
      };
    },
    props: {
      groupStatusStoreKey: {
        type: String,
        "default": null
      },
      highlightId: {
        type: String,
        "default": null
      },
      id: {
        type: String,
        "default": null
      },
      depth: {
        type: Number,
        "default": 0
      },
      icon: {
        type: [String, Object],
        "default": null
      },
      title: {
        type: String,
        "default": null
      },
      path: {
        type: String,
        "default": null
      },
      view: {
        type: String,
        "default": null
      },
      href: {
        type: String,
        "default": null
      },
      items: {
        type: Array,
        "default": function _default() {
          return [];
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return {
          "is-top": this.isTop,
          "is-sub": !this.isTop,
          "is-group": this.isGroup,
          "is-item": !this.isGroup,
          "is-collapse": this.collapse,
          "is-expend": !this.collapse,
          "is-highlight": this.isHighlight
        };
      },
      isTop: function isTop() {
        return 0 == this.depth;
      },
      isGroup: function isGroup() {
        return _.isArray(this.items);
      },
      isHighlight: function isHighlight() {
        return this.id && this.id == this.highlightId;
      }
    },
    methods: {
      onClickGroupInfo: function onClickGroupInfo() {
        this.isGroup && (this.collapse = !this.collapse, this.groupStatusStoreKey && Ti.Storage.session.set(this.groupStatusStoreKey, this.collapse));
      },
      onClickItemInfo: function onClickItemInfo() {
        this.$notify("item:actived", {
          id: this.id,
          title: this.title,
          path: this.path,
          href: this.href,
          view: this.view
        });
      }
    },
    mounted: function mounted() {
      this.isGroup && (this.isTop ? this.collapse = !1 : this.collapse = !0, this.groupStatusStoreKey && (this.collapse = Ti.Storage.session.getBoolean(this.groupStatusStoreKey, this.collapse)));
    }
  };
  Ti.Preload("ti/com/wn/gui/side/nav/com/side-nav-item/side-nav-item.mjs", t);
}(), Ti.Preload("ti/com/wn/gui/side/nav/com/side-nav-item/_com.json", {
  name: "side-nav-item",
  template: "./side-nav-item.html",
  mixins: ["./side-nav-item.mjs"]
}), Ti.Preload("ti/com/wn/gui/side/nav/wn-gui-side-nav.html", '<div class="wn-gui-side-nav"\n  :class="topClass"\n  v-ti-activable>\n  <side-nav-item v-for="it in theItems"\n    :key="it.key"\n    v-bind="it"\n    @item:actived="onItemActived"/>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      items: {
        type: Array,
        "default": null
      },
      highlightItemId: {
        type: String,
        "default": null
      },
      highlightItemPath: {
        type: String,
        "default": null
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName({
          "is-self-actived": this.isSelfActived,
          "is-actived": this.isActived
        }, this.className);
      },
      theItems: function theItems() {
        var t = [];

        if (_.isArray(this.items)) {
          var _iterator71 = _createForOfIteratorHelper(this.items),
              _step71;

          try {
            for (_iterator71.s(); !(_step71 = _iterator71.n()).done;) {
              var e = _step71.value;
              t.push(this.evalItem(e));
            }
          } catch (err) {
            _iterator71.e(err);
          } finally {
            _iterator71.f();
          }
        }

        return t;
      },
      theHighlightItemId: function theHighlightItemId() {
        var t = this.joinHighlightItems([], this.items);
        if (t.length > 0) return t.sort(function (t, e) {
          return t.score - e.score;
        }), _.first(t).id;
      }
    },
    methods: {
      evalItem: function evalItem() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var e = null;

        if (_.isArray(t.items)) {
          e = [];

          var _iterator72 = _createForOfIteratorHelper(t.items),
              _step72;

          try {
            for (_iterator72.s(); !(_step72 = _iterator72.n()).done;) {
              var i = _step72.value;
              e.push(this.evalItem(i));
            }
          } catch (err) {
            _iterator72.e(err);
          } finally {
            _iterator72.f();
          }
        }

        return _.assign(_.pick(t, ["id", "key", "depth", "icon", "title", "path", "view"]), {
          items: e,
          groupStatusStoreKey: t.key,
          highlightId: this.theHighlightItemId,
          href: t.id ? Wn.Util.getAppLink(t.id) + "" : null
        });
      },
      joinHighlightItems: function joinHighlightItems() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

        if (this.highlightItemId && _.isArray(e) && e.length > 0) {
          var _iterator73 = _createForOfIteratorHelper(e),
              _step73;

          try {
            for (_iterator73.s(); !(_step73 = _iterator73.n()).done;) {
              var i = _step73.value;
              if (i.id == this.highlightItemId) t.push({
                score: 0,
                id: i.id
              });else if (i.path && i.id && this.highlightItemPath && this.highlightItemPath.startsWith(i.path)) {
                var _e38 = this.highlightItemPath.length - i.path.length;

                t.push({
                  score: 1 + _e38,
                  id: i.id
                });
              }
              i.items && this.joinHighlightItems(t, i.items);
            }
          } catch (err) {
            _iterator73.e(err);
          } finally {
            _iterator73.f();
          }
        }

        return t;
      },
      onItemActived: function onItemActived() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        this.$notify("item:active", t);
      }
    }
  };
  Ti.Preload("ti/com/wn/gui/side/nav/wn-gui-side-nav.mjs", t);
}(), Ti.Preload("ti/com/wn/gui/side/nav/_com.json", {
  name: "wn-gui-side-nav",
  globally: !0,
  template: "./wn-gui-side-nav.html",
  mixins: ["./wn-gui-side-nav.mjs"],
  components: ["./com/side-nav-item"]
}), Ti.Preload("ti/com/wn/gui/side/tree/wn-gui-side-tree.html", '<ti-tree\n  class="ti-fill-parent wn-gui-side-tree"\n  id-by="value"\n  name-by="name"\n  :display="TreeDisplay"\n  :data="myTreeData"\n  :current-id="highlightItemId"\n  :checked-ids="CheckedIds"\n  keep-open-by="wn-gui-side-tree"\n  :auto-open="true"\n  :default-open-depth="2"\n  :show-root="false"\n  :puppet-mode="true"\n  @select="onItemActived"/>'), function () {
  var t = {
    data: function data() {
      return {
        myItems: [],
        myTreeData: []
      };
    },
    props: {
      items: {
        type: Array,
        "default": null
      },
      highlightItemId: {
        type: String,
        "default": null
      },
      highlightItemPath: {
        type: String,
        "default": null
      }
    },
    computed: {
      TreeDisplay: function TreeDisplay() {
        return ["<icon>", {
          key: "text",
          comConf: {
            className: "is-nowrap",
            href: "(value)?/a/open/wn.manager?ph=id:${value}"
          }
        }];
      },
      HighlightItemId: function HighlightItemId() {
        var t = this.joinHighlightItems([], this.items);
        if (t.length > 0) return t.sort(function (t, e) {
          return t.score - e.score;
        }), _.first(t).id;
      },
      CheckedIds: function CheckedIds() {
        return this.HighlightItemId ? [this.HighlightItemId] : [];
      }
    },
    methods: {
      evalTreeData: function evalTreeData() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        this.myItems = _.cloneDeep(t);
        var e = [];

        if (_.isArray(t)) {
          var _iterator74 = _createForOfIteratorHelper(t),
              _step74;

          try {
            for (_iterator74.s(); !(_step74 = _iterator74.n()).done;) {
              var i = _step74.value;
              e.push(this.evalItemToTreeNode(i));
            }
          } catch (err) {
            _iterator74.e(err);
          } finally {
            _iterator74.f();
          }
        }

        this.myTreeData = e;
      },
      evalItemToTreeNode: function evalItemToTreeNode() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var e = null;

        if (_.isArray(t.items)) {
          e = [];

          var _iterator75 = _createForOfIteratorHelper(t.items),
              _step75;

          try {
            for (_iterator75.s(); !(_step75 = _iterator75.n()).done;) {
              var i = _step75.value;
              e.push(this.evalItemToTreeNode(i));
            }
          } catch (err) {
            _iterator75.e(err);
          } finally {
            _iterator75.f();
          }
        }

        return {
          name: t.key,
          text: t.title,
          icon: t.icon,
          value: t.id,
          children: e
        };
      },
      joinHighlightItems: function joinHighlightItems() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

        if (this.highlightItemId && _.isArray(e) && e.length > 0) {
          var _iterator76 = _createForOfIteratorHelper(e),
              _step76;

          try {
            for (_iterator76.s(); !(_step76 = _iterator76.n()).done;) {
              var i = _step76.value;
              if (i.id == this.highlightItemId) t.push({
                score: 0,
                id: i.id
              });else if (i.path && i.id && this.highlightItemPath && this.highlightItemPath.startsWith(i.path)) {
                var _e39 = this.highlightItemPath.length - i.path.length;

                t.push({
                  score: 1 + _e39,
                  id: i.id
                });
              }
              i.items && this.joinHighlightItems(t, i.items);
            }
          } catch (err) {
            _iterator76.e(err);
          } finally {
            _iterator76.f();
          }
        }

        return t;
      },
      onItemActived: function onItemActived() {
        var _ref97 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref97$current = _ref97.current,
            t = _ref97$current === void 0 ? {} : _ref97$current;

        t.value && this.$notify("item:active", {
          id: t.value
        });
      }
    },
    watch: {
      items: {
        handler: function handler(t, e) {
          _.isEqual(t, this.myItems) || this.evalTreeData(t);
        },
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/wn/gui/side/tree/wn-gui-side-tree.mjs", t);
}(), Ti.Preload("ti/com/wn/gui/side/tree/_com.json", {
  name: "wn-gui-side-tree",
  globally: !0,
  template: "./wn-gui-side-tree.html",
  mixins: ["./wn-gui-side-tree.mjs"],
  components: ["@com:ti/tree"]
}), Ti.Preload("ti/com/wn/gui/test.json", {
  layout: {
    type: "cols",
    border: !0,
    blocks: [{
      name: "C0",
      icon: "im-award",
      title: "Test C0",
      closer: !0,
      actions: [{
        type: "group",
        icon: "zmdi-more-vert",
        items: [{
          key: "show-P1",
          text: "show P1",
          type: "action",
          action: "main:showBlock(P1)"
        }, {
          key: "hide-P1",
          text: "hide P1",
          type: "action",
          action: "main:hideBlock(P1)"
        }]
      }],
      size: "20%",
      type: "rows",
      border: !0,
      blocks: [{
        name: "C0-1",
        size: 100,
        body: {
          comType: "ti-label",
          comConf: {
            value: "C0-1 content"
          }
        }
      }, {
        name: "C0-2",
        body: {
          comType: "ti-label",
          comConf: {
            value: "C0-2 content"
          }
        }
      }, {
        name: "C0-3",
        body: {
          comType: "ti-label",
          comConf: {
            value: "C0-3 content"
          }
        }
      }]
    }, {
      name: "C1",
      icon: "im-award",
      title: "Test C1",
      actions: [{
        type: "group",
        icon: "zmdi-more-vert",
        items: [{
          key: "show-P1",
          text: "show P1",
          type: "action",
          action: "main:showBlock(P1)"
        }, {
          key: "hide-P1",
          text: "hide P1",
          type: "action",
          action: "main:hideBlock(P1)"
        }]
      }],
      size: "stretch",
      type: "tabs",
      blocks: [{
        name: "C1-1",
        size: 100,
        body: {
          comType: "ti-label",
          comConf: {
            value: "C1-1 content"
          }
        }
      }, {
        name: "C1-2",
        body: {
          comType: "ti-label",
          comConf: {
            value: "C1-2 content"
          }
        }
      }, {
        name: "C1-3",
        body: {
          comType: "ti-label",
          comConf: {
            value: "C1-3 content"
          }
        }
      }]
    }, {
      name: "C2",
      body: "C2",
      size: 260
    }],
    panels: [{
      name: "P1",
      closer: "right",
      position: "left-top",
      width: "50%",
      height: "50%",
      mask: !0,
      body: {
        comType: "ti-label",
        comConf: {
          value: "P1"
        }
      }
    }]
  },
  schema: {
    C1: {
      comType: "ti-label",
      comConf: {
        value: "I am C11"
      }
    },
    C2: {
      comType: "ti-label",
      comConf: {
        value: "I am C22"
      }
    }
  },
  actions: [{
    key: "reloading",
    type: "action",
    icon: "zmdi-refresh",
    text: "i18n:refresh",
    altDisplay: {
      icon: "zmdi-refresh zmdi-hc-spin",
      text: "i18n:loading"
    },
    action: "dispatch:main/reload",
    shortcut: "CTRL+R"
  }, {
    key: "show-P1",
    text: "show P1",
    type: "action",
    action: "main:showBlock(P1)"
  }, {
    key: "hide-P1",
    text: "hide P1",
    type: "action",
    action: "main:hideBlock(P1)"
  }]
}), Ti.Preload("ti/com/wn/gui/wn-gui.html", '<ti-gui\n  v-bind="layout"\n  :schema="schema"\n  :shown="shown"\n  @block:show="showBlock"\n  @block:hide="hideBlock"/>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        shown: {}
      };
    },
    props: {
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      layout: function layout() {
        return this.data ? this.data.layout : {};
      },
      schema: function schema() {
        return this.data ? this.data.schema : {};
      }
    },
    watch: {
      "data.actions": function dataActions() {}
    },
    methods: {
      showBlock: function showBlock(t) {
        this.shown = this.createGuiBlockShown(this.shown, t, !0);
      },
      hideBlock: function hideBlock(t) {
        this.shown = this.createGuiBlockShown(this.shown, t, !1);
      }
    }
  };
  Ti.Preload("ti/com/wn/gui/wn-gui.mjs", t);
}(), Ti.Preload("ti/com/wn/gui/_com.json", {
  name: "wn-gui",
  globally: !0,
  template: "./wn-gui.html",
  methods: "@com:ti/gui/ti-gui-methods.mjs",
  mixins: ["./wn-gui.mjs"],
  components: ["@com:ti/gui"]
}), Ti.Preload("ti/com/wn/imgfile/wn-imgfile.html", '<ti-imgfile\n  :src="imageSrc"\n  :width="width"\n  :height="height"\n  :progress="progress"\n  :upload-file="uploadFile"\n  :removable="removable"\n  @upload="onUpload"\n  @remove="onRemove"\n  @open="onOpen"/>'), function () {
  var t = {
    data: function data() {
      return {
        src_ts: null,
        oImage: null,
        uploadFile: null,
        progress: -1
      };
    },
    props: {
      value: {
        type: String,
        "default": null
      },
      width: {
        type: [String, Number],
        "default": void 0
      },
      height: {
        type: [String, Number],
        "default": void 0
      },
      removable: {
        type: Boolean,
        "default": !0
      },
      target: {
        type: String,
        required: !0,
        "default": null
      },
      supportTypes: {
        type: [String, Array],
        "default": function _default() {
          return ["png", "jpg", "jpeg", "gif"];
        }
      },
      supportMimes: {
        type: [String, Array],
        "default": function _default() {
          return ["image/png", "image/jpeg", "image/gif"];
        }
      },
      filter: {
        type: [Array, String],
        "default": null
      },
      quality: {
        type: Number,
        "default": 0
      }
    },
    computed: {
      acceptTypes: function acceptTypes() {
        return _.isString(this.supportTypes) ? this.supportTypes.split(",") : this.supportTypes;
      },
      acceptMimes: function acceptMimes() {
        return _.isString(this.supportMimes) ? this.supportMimes.split(",") : this.supportMimes;
      },
      imageFilter: function imageFilter() {
        return this.filter ? [].concat(this.filter) : [];
      },
      imageSrc: function imageSrc() {
        if (this.oImage) {
          var _t120 = ["/o/content?str=id:", this.oImage.id];
          return this.src_ts && (_t120.push("&_t="), _t120.push(this.src_ts)), _t120.join("");
        }
      }
    },
    methods: {
      assertListHas: function assertListHas(t, e, i, n) {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee90() {
          var _n17, _iterator77, _step77, _i26;

          return regeneratorRuntime.wrap(function _callee90$(_context91) {
            while (1) {
              switch (_context91.prev = _context91.next) {
                case 0:
                  if (_.isEmpty(t)) {
                    _context91.next = 24;
                    break;
                  }

                  _n17 = !0;
                  _iterator77 = _createForOfIteratorHelper(t);
                  _context91.prev = 3;

                  _iterator77.s();

                case 5:
                  if ((_step77 = _iterator77.n()).done) {
                    _context91.next = 12;
                    break;
                  }

                  _i26 = _step77.value;

                  if (!(_i26 == e)) {
                    _context91.next = 10;
                    break;
                  }

                  _n17 = !1;
                  return _context91.abrupt("break", 12);

                case 10:
                  _context91.next = 5;
                  break;

                case 12:
                  _context91.next = 17;
                  break;

                case 14:
                  _context91.prev = 14;
                  _context91.t0 = _context91["catch"](3);

                  _iterator77.e(_context91.t0);

                case 17:
                  _context91.prev = 17;

                  _iterator77.f();

                  return _context91.finish(17);

                case 20:
                  if (!_n17) {
                    _context91.next = 24;
                    break;
                  }

                  _context91.next = 23;
                  return Ti.Alert(i, {
                    type: "warn",
                    icon: "zmdi-alert-triangle"
                  });

                case 23:
                  return _context91.abrupt("return", !1);

                case 24:
                  return _context91.abrupt("return", !0);

                case 25:
                case "end":
                  return _context91.stop();
              }
            }
          }, _callee90, null, [[3, 14, 17, 20]]);
        }))();
      },
      onOpen: function onOpen() {
        var _this163 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee91() {
          var _t121;

          return regeneratorRuntime.wrap(function _callee91$(_context92) {
            while (1) {
              switch (_context92.prev = _context92.next) {
                case 0:
                  if (!_this163.oImage) {
                    _context92.next = 4;
                    break;
                  }

                  _t121 = Wn.Util.getAppLink(_this163.oImage);
                  _context92.next = 4;
                  return Ti.Be.Open(_t121.url, {
                    params: _t121.params
                  });

                case 4:
                case "end":
                  return _context92.stop();
              }
            }
          }, _callee91);
        }))();
      },
      onRemove: function onRemove() {
        var _this164 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee92() {
          return regeneratorRuntime.wrap(function _callee92$(_context93) {
            while (1) {
              switch (_context93.prev = _context93.next) {
                case 0:
                  _context93.t0 = _this164.oImage;

                  if (!_context93.t0) {
                    _context93.next = 4;
                    break;
                  }

                  _context93.next = 4;
                  return Wn.Sys.exec2("rm id:".concat(_this164.oImage.id));

                case 4:
                  _this164.$notify("change", null);

                case 5:
                case "end":
                  return _context93.stop();
              }
            }
          }, _callee92);
        }))();
      },
      onUpload: function onUpload(t) {
        var _this165 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee93() {
          var e, _yield$Wn$Io$uploadFi2, i, n, a, _t122, _e40;

          return regeneratorRuntime.wrap(function _callee93$(_context94) {
            while (1) {
              switch (_context94.prev = _context94.next) {
                case 0:
                  e = Ti.Util.getSuffixName(t.name);
                  _context94.next = 3;
                  return _this165.assertListHas(_this165.acceptTypes, e, {
                    text: "i18n:wn-invalid-types",
                    vars: {
                      current: e,
                      supports: _this165.acceptTypes.join(", ")
                    }
                  });

                case 3:
                  if (_context94.sent) {
                    _context94.next = 5;
                    break;
                  }

                  return _context94.abrupt("return");

                case 5:
                  _context94.next = 7;
                  return _this165.assertListHas(_this165.acceptMimes, t.type, {
                    text: "i18n:wn-invalid-mimes",
                    vars: {
                      current: t.type,
                      supports: _this165.acceptMimes.join(", ")
                    }
                  });

                case 7:
                  if (_context94.sent) {
                    _context94.next = 9;
                    break;
                  }

                  return _context94.abrupt("return");

                case 9:
                  _this165.uploadFile = t, _this165.progress = 0;
                  _context94.next = 12;
                  return Wn.Io.uploadFile(t, {
                    target: _this165.target,
                    mode: "r",
                    progress: function progress(t) {
                      _this165.progress = t.loaded / t.total;
                    }
                  });

                case 12:
                  _yield$Wn$Io$uploadFi2 = _context94.sent;
                  i = _yield$Wn$Io$uploadFi2.ok;
                  n = _yield$Wn$Io$uploadFi2.msg;
                  a = _yield$Wn$Io$uploadFi2.data;

                  if (!(_this165.uploadFile = null, _this165.progress = -1, i)) {
                    _context94.next = 26;
                    break;
                  }

                  if (_.isEmpty(_this165.imageFilter)) {
                    _context94.next = 23;
                    break;
                  }

                  _t122 = ["imagic", "id:".concat(a.id), "-filter \"".concat(_this165.imageFilter.join(" "), "\"")];
                  _this165.quality > 0 && _this165.quality <= 1 && _t122.push("-qa ".concat(_this165.quality)), _t122.push("-out inplace");
                  _e40 = _t122.join(" ");
                  _context94.next = 23;
                  return Wn.Sys.exec2(_e40);

                case 23:
                  _this165.src_ts = Date.now(), _this165.oImage = a, _this165.$notify("change", a);
                  _context94.next = 28;
                  break;

                case 26:
                  _context94.next = 28;
                  return Ti.Alert("i18n:".concat(n), {
                    type: "warn",
                    icon: "zmdi-alert-triangle"
                  });

                case 28:
                case "end":
                  return _context94.stop();
              }
            }
          }, _callee93);
        }))();
      },
      reload: function reload() {
        var _this166 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee94() {
          return regeneratorRuntime.wrap(function _callee94$(_context95) {
            while (1) {
              switch (_context95.prev = _context95.next) {
                case 0:
                  if (!_this166.value) {
                    _context95.next = 6;
                    break;
                  }

                  _context95.next = 3;
                  return Wn.Io.loadMeta(_this166.value);

                case 3:
                  _this166.oImage = _context95.sent;
                  _context95.next = 7;
                  break;

                case 6:
                  _this166.oImage = null;

                case 7:
                case "end":
                  return _context95.stop();
              }
            }
          }, _callee94);
        }))();
      }
    },
    watch: {
      value: function value() {
        this.reload();
      }
    },
    mounted: function () {
      var _mounted10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee95() {
        return regeneratorRuntime.wrap(function _callee95$(_context96) {
          while (1) {
            switch (_context96.prev = _context96.next) {
              case 0:
                _context96.next = 2;
                return this.reload();

              case 2:
              case "end":
                return _context96.stop();
            }
          }
        }, _callee95, this);
      }));

      function mounted() {
        return _mounted10.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/wn/imgfile/wn-imgfile.mjs", t);
}(), Ti.Preload("ti/com/wn/imgfile/_com.json", {
  name: "wn-imgfile",
  globally: !0,
  template: "./wn-imgfile.html",
  mixins: ["./wn-imgfile.mjs"],
  components: ["@com:ti/imgfile"]
}), Ti.Preload("ti/com/wn/label/wn-label.html", '<ti-label\n  :class-name="className"\n  :blank-as="blankAs"\n  :value="theValue"\n  :format="format"\n  :prefix-icon="prefixIcon"\n  :prefix-text="prefixText"\n  :suffix-text="suffixText"\n  :suffix-icon="suffixIcon"\n  :href="href"\n  :new-tab="newTab"/>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        theValue: null
      };
    },
    props: {
      blankAs: {
        type: String,
        "default": "i18n:nil"
      },
      value: null,
      format: void 0,
      prefixIcon: {
        type: String,
        "default": null
      },
      prefixText: {
        type: String,
        "default": null
      },
      suffixText: {
        type: String,
        "default": null
      },
      suffixIcon: {
        type: String,
        "default": null
      },
      dict: {
        type: String,
        "default": null
      },
      href: {
        type: String,
        "default": null
      },
      newTab: {
        type: Boolean,
        "default": !1
      }
    },
    watch: {
      value: function () {
        var _value = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee96() {
          return regeneratorRuntime.wrap(function _callee96$(_context97) {
            while (1) {
              switch (_context97.prev = _context97.next) {
                case 0:
                  _context97.next = 2;
                  return this.evalTheValue();

                case 2:
                case "end":
                  return _context97.stop();
              }
            }
          }, _callee96, this);
        }));

        function value() {
          return _value.apply(this, arguments);
        }

        return value;
      }()
    },
    methods: {
      evalTheValue: function evalTheValue() {
        var _this167 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee97() {
          return regeneratorRuntime.wrap(function _callee97$(_context98) {
            while (1) {
              switch (_context98.prev = _context98.next) {
                case 0:
                  if (!(!Ti.Util.isNil(_this167.value) && _this167.dict)) {
                    _context98.next = 6;
                    break;
                  }

                  _context98.next = 3;
                  return Wn.Dict.get(_this167.dict, _this167.value);

                case 3:
                  _this167.theValue = _context98.sent;
                  _context98.next = 7;
                  break;

                case 6:
                  _this167.theValue = _this167.value;

                case 7:
                case "end":
                  return _context98.stop();
              }
            }
          }, _callee97);
        }))();
      }
    },
    mounted: function () {
      var _mounted11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee98() {
        return regeneratorRuntime.wrap(function _callee98$(_context99) {
          while (1) {
            switch (_context99.prev = _context99.next) {
              case 0:
                _context99.next = 2;
                return this.evalTheValue();

              case 2:
              case "end":
                return _context99.stop();
            }
          }
        }, _callee98, this);
      }));

      function mounted() {
        return _mounted11.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/wn/label/wn-label.mjs", t);
}(), Ti.Preload("ti/com/wn/label/_com.json", {
  name: "wn-label",
  globally: !0,
  template: "./wn-label.html",
  mixins: ["./wn-label.mjs"],
  components: ["@com:ti/label"]
}), Ti.Preload("ti/com/wn/list/wn-list.html", '<ti-list\n  v-bind="this"\n  :display="DisplayItems"\n  :on-init="OnSubListInit"\n  @select="OnSelected"\n  @open="$notify(\'open\', $event)"/>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        isAllChecked: !1,
        hasChecked: !1,
        theCurrentId: !1,
        theCheckedIds: !1
      };
    },
    props: {
      iconBy: {
        type: [String, Function],
        "default": void 0
      },
      indentBy: {
        type: [String, Function],
        "default": void 0
      },
      itemClassName: void 0,
      display: {
        type: [Object, String, Array],
        "default": function _default() {
          return {
            key: "..",
            comType: "ti-label"
          };
        }
      },
      border: {
        type: Boolean,
        "default": !0
      },
      autoScrollIntoView: {
        type: Boolean,
        "default": !0
      }
    },
    computed: {
      DisplayItems: function DisplayItems() {
        return this.explainDisplayItems(this.display);
      }
    },
    methods: {
      OnSubListInit: function OnSubListInit(t) {
        this.$list = t;
      },
      OnSelected: function OnSelected() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        this.theCheckedIds = t.checkedIds, this.theCurrentId = t.currentId, this.syncCheckStatus(), this.$notify("select", t);
      },
      syncCheckStatus: function syncCheckStatus() {
        this.isAllChecked = this.$list.isAllChecked, this.hasChecked = this.$list.hasChecked;
      },
      selectPrevRow: function selectPrevRow(t) {
        this.$list.selectPrevRow(t);
      },
      selectNextRow: function selectNextRow(t) {
        this.$list.selectNextRow(t);
      },
      getCurrentRow: function getCurrentRow(t) {
        return this.$list.getCurrentRow(t);
      },
      getCheckedRow: function getCheckedRow(t) {
        return this.$list.getCheckedRow(t);
      },
      getCurrent: function getCurrent(t) {
        return this.$list.getCurrent(t);
      },
      getChecked: function getChecked(t) {
        return this.$list.getChecked(t);
      },
      selectRow: function selectRow(t) {
        this.$list.selectRow(t);
      },
      checkRow: function checkRow(t) {
        this.$list.checkRow(t);
      },
      cancelRow: function cancelRow(t) {
        this.$list.cancelRow(t);
      }
    },
    watch: {
      data: function data() {
        this.syncCheckStatus();
      },
      checkedIds: function checkedIds() {
        this.syncCheckStatus();
      }
    }
  };
  Ti.Preload("ti/com/wn/list/wn-list.mjs", t);
}(), Ti.Preload("ti/com/wn/list/_com.json", {
  name: "wn-list",
  globally: !0,
  template: "./wn-list.html",
  props: ["@com:ti/support/list_props.mjs"],
  mixins: ["@com:wn/support/wn_list_wrapper_mixins.mjs", "./wn-list.mjs"],
  components: ["@com:ti/table"]
}), Ti.Preload("ti/com/wn/obj/form/wn-obj-form.html", '<ti-form \n  v-bind="this"\n  :auto-show-blank="isAutoShowBlank"\n  :class-name="className"\n  @field:change="OnFieldChange"\n  @change="OnChange"\n  @invalid="OnInvalid"/>'), function () {
  var t = {
    props: {
      fuse: {
        type: Object,
        "default": function _default() {
          return {
            key: "wn-obj-form",
            noti: null
          };
        }
      },
      setDataBy: {
        type: [String, Object, Boolean],
        "default": null
      },
      updateBy: {
        type: [String, Object, Boolean],
        "default": null
      },
      setFieldStatusBy: {
        type: [String, Object, Boolean],
        "default": null
      }
    },
    computed: {
      isAutoShowBlank: function isAutoShowBlank() {
        return Ti.Util.fallback(this.autoShowBlank, !0);
      }
    },
    methods: {
      doAction: function doAction(t, e, i) {
        _.isPlainObject(e) ? Ti.App(this)[e.method](e.target, i) : _.isString(e) ? Ti.App(this).exec(e, i) : e && this.$notify(t, i);
      },
      OnFieldChange: function OnFieldChange() {
        var _ref98 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref98.name,
            e = _ref98.value;

        this.doAction("field:change", this.updateBy, {
          name: t,
          value: e
        });
      },
      OnChange: function OnChange(t) {
        this.doAction("change", this.setDataBy, t);
      },
      OnInvalid: function OnInvalid(t) {
        var e = {
          name: t.name,
          message: [t.errMessage, t.value].join(" :: "),
          status: "warn"
        };
        this.doAction("invalid", this.setFieldStatusBy, e);
      }
    }
  };
  Ti.Preload("ti/com/wn/obj/form/wn-obj-form.mjs", t);
}(), Ti.Preload("ti/com/wn/obj/form/_com.json", {
  name: "wn-obj-form",
  globally: !0,
  template: "./wn-obj-form.html",
  props: "@com:ti/form/ti-form-props.mjs",
  mixins: ["./wn-obj-form.mjs"],
  components: ["@com:ti/form", "@com:wn/transfer", "@com:wn/droplist", "@com:wn/combo/input", "@com:wn/imgfile", "@com:wn/combo/multi-input"]
}), Ti.Preload("ti/com/wn/obj/icon/wn-obj-icon.html", '<ti-icon \n  class="wn-obj-icon" \n  :class="topClass"\n  :value="theIcon"/>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      icon: {
        type: String,
        "default": null
      },
      thumb: {
        type: String,
        "default": null
      },
      mime: {
        type: String,
        "default": null
      },
      type: {
        type: String,
        "default": null
      },
      race: {
        type: String,
        "default": null
      },
      candidateIcon: {
        type: String,
        "default": null
      },
      timestamp: {
        type: Number,
        "default": 0
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName(this.className);
      },
      theIcon: function theIcon() {
        return Wn.Util.getObjThumbIcon({
          candidateIcon: this.candidateIcon,
          timestamp: this.timestamp,
          thumb: this.thumb,
          icon: this.icon,
          mime: this.mime,
          type: this.type,
          race: this.race
        }, "fas-cube");
      }
    },
    methods: {}
  };
  Ti.Preload("ti/com/wn/obj/icon/wn-obj-icon.mjs", t);
}(), Ti.Preload("ti/com/wn/obj/icon/_com.json", {
  name: "wn-obj-icon",
  globally: !0,
  template: "./wn-obj-icon.html",
  mixins: ["./wn-obj-icon.mjs"]
}), Ti.Preload("ti/com/wn/obj/json/wn-obj-json.html", '<div class="wn-obj-json">\n  \x3c!--\n    Show Text Editor\n  --\x3e\n  <ti-text-json v-if="hasMeta"\n    class="ti-fill-parent"\n    :value="value"\n    :data="data"\n    @change="onChangeContent"/>\n  \x3c!--\n    Empty Data\n  --\x3e\n  <ti-loading v-else/>\n</div>'), function () {
  var t = {
    props: {
      meta: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      value: {
        type: String,
        "default": null
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      hasMeta: function hasMeta() {
        return !!this.meta;
      }
    },
    methods: {
      onChangeContent: function onChangeContent(t) {
        this.$notify("change", t);
      }
    },
    mounted: function mounted() {
      var _this168 = this;

      Ti.Fuse.getOrCreate().add({
        key: "wn-obj-json",
        everythingOk: function everythingOk() {
          return !_this168.status.changed;
        },
        fail: function fail() {
          Ti.Toast.Open("i18n:wn-obj-nosaved", "warn");
        }
      });
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Fuse.get().remove("wn-obj-json");
    }
  };
  Ti.Preload("ti/com/wn/obj/json/wn-obj-json.mjs", t);
}(), Ti.Preload("ti/com/wn/obj/json/_com.json", {
  name: "wn-obj-json",
  globally: !0,
  template: "./wn-obj-json.html",
  mixins: ["./wn-obj-json.mjs"],
  components: ["@com:ti/text/json"]
}), Ti.Preload("ti/com/wn/obj/picker/wn-obj-picker.html", '<div class="wn-obj-picker">\n  <ti-box ref="box"\n    :empty="empty"\n    :items="formedItems"\n    :loading="loading"\n    :multi="multi"\n    :icon="theChooseIcon"\n    :clear-icon="clearIcon"\n    @open="openPicker"\n    @remove="onRemoveItem"\n    @clear="onClearItems"/>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        loading: !1,
        items: []
      };
    },
    props: {
      empty: {
        type: Object,
        "default": function _default() {
          return {
            text: "i18n:no-selected",
            value: void 0
          };
        }
      },
      value: {
        type: [Object, String, Array],
        "default": null
      },
      base: {
        type: [Object, String],
        "default": "~"
      },
      multi: {
        type: Boolean,
        "default": !1
      },
      clearIcon: {
        type: [String, Object],
        "default": "zmdi-close-circle"
      },
      chooseIcon: {
        type: String,
        "default": "zmdi-folder-outline"
      },
      textBy: {
        type: [String, Array],
        "default": null
      }
    },
    watch: {
      value: function value() {
        this.reload();
      }
    },
    computed: {
      formedItems: function formedItems() {
        var t = [];

        var _iterator78 = _createForOfIteratorHelper(this.items),
            _step78;

        try {
          for (_iterator78.s(); !(_step78 = _iterator78.n()).done;) {
            var e = _step78.value;
            var i = {
              icon: Wn.Util.genPreviewObj(e),
              text: Wn.Util.getObjDisplayName(e, this.textBy),
              value: e.id
            };
            t.push(i);
          }
        } catch (err) {
          _iterator78.e(err);
        } finally {
          _iterator78.f();
        }

        return t;
      },
      oneItem: function oneItem() {
        var t = _.isArray(this.value) ? _.get(this.value, 0) : this.value;
        return "id:" == t || !t || _.isEmpty(t) ? null : t;
      },
      theChooseIcon: function theChooseIcon() {
        return _.isEmpty(this.items) ? this.chooseIcon : null;
      }
    },
    methods: {
      openPicker: function openPicker() {
        var _this169 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee99() {
          var t, e, i;
          return regeneratorRuntime.wrap(function _callee99$(_context100) {
            while (1) {
              switch (_context100.prev = _context100.next) {
                case 0:
                  t = _this169.oneItem, e = !1;
                  t && !_.isEmpty(t) || (t = _this169.base || "~", e = !0);
                  _context100.next = 4;
                  return Wn.OpenObjSelector(t, {
                    multi: _this169.multi,
                    selected: _this169.items,
                    autoOpenDir: e
                  });

                case 4:
                  i = _context100.sent;
                  _.isUndefined(i) || _this169.$notify("change", i);

                case 6:
                case "end":
                  return _context100.stop();
              }
            }
          }, _callee99);
        }))();
      },
      onRemoveItem: function onRemoveItem(t) {
        var e = [];

        for (var i = 0; i < this.items.length; i++) {
          var n = this.items[i],
              a = this.formedItems[i];
          _.isEqual(a.value, t.value) || e.push(n);
        }

        this.$notify("change", e);
      },
      onClearItems: function onClearItems() {
        console.log("remove!!"), this.$notify("change", this.multi ? [] : null);
      },
      reload: function reload() {
        var _this170 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee100() {
          return regeneratorRuntime.wrap(function _callee100$(_context101) {
            while (1) {
              switch (_context101.prev = _context101.next) {
                case 0:
                  _this170.loading = !0;
                  _context101.next = 3;
                  return _this170.doReload();

                case 3:
                  _this170.loading = !1;

                case 4:
                case "end":
                  return _context101.stop();
              }
            }
          }, _callee100);
        }))();
      },
      doReload: function doReload() {
        var _this171 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee101() {
          var t, e, _iterator79, _step79, i, _t123;

          return regeneratorRuntime.wrap(function _callee101$(_context102) {
            while (1) {
              switch (_context102.prev = _context102.next) {
                case 0:
                  t = _this171.value ? [].concat(_this171.value) : [], e = [];
                  _iterator79 = _createForOfIteratorHelper(t);
                  _context102.prev = 2;

                  _iterator79.s();

                case 4:
                  if ((_step79 = _iterator79.n()).done) {
                    _context102.next = 13;
                    break;
                  }

                  i = _step79.value;
                  _context102.next = 8;
                  return _this171.reloadItem(i);

                case 8:
                  _t123 = _context102.sent;

                  if (!(_t123 && e.push(_t123), !_this171.multi && e.length > 0)) {
                    _context102.next = 11;
                    break;
                  }

                  return _context102.abrupt("break", 13);

                case 11:
                  _context102.next = 4;
                  break;

                case 13:
                  _context102.next = 18;
                  break;

                case 15:
                  _context102.prev = 15;
                  _context102.t0 = _context102["catch"](2);

                  _iterator79.e(_context102.t0);

                case 18:
                  _context102.prev = 18;

                  _iterator79.f();

                  return _context102.finish(18);

                case 21:
                  _this171.items = e;

                case 22:
                case "end":
                  return _context102.stop();
              }
            }
          }, _callee101, null, [[2, 15, 18, 21]]);
        }))();
      },
      reloadItem: function reloadItem(t) {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee102() {
          return regeneratorRuntime.wrap(function _callee102$(_context103) {
            while (1) {
              switch (_context103.prev = _context103.next) {
                case 0:
                  if (!(!t || _.isEmpty(t))) {
                    _context103.next = 2;
                    break;
                  }

                  return _context103.abrupt("return", null);

                case 2:
                  if (!_.isString(t)) {
                    _context103.next = 6;
                    break;
                  }

                  _context103.next = 5;
                  return Wn.Io.loadMeta(t);

                case 5:
                  return _context103.abrupt("return", _context103.sent);

                case 6:
                  if (!t.id) {
                    _context103.next = 10;
                    break;
                  }

                  _context103.next = 9;
                  return Wn.Io.loadMetaById(t.id);

                case 9:
                  return _context103.abrupt("return", _context103.sent);

                case 10:
                  throw Ti.Err.make("e-wn-obj-picker-unsupported-value-form", t);

                case 11:
                case "end":
                  return _context103.stop();
              }
            }
          }, _callee102);
        }))();
      }
    },
    mounted: function () {
      var _mounted12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee103() {
        return regeneratorRuntime.wrap(function _callee103$(_context104) {
          while (1) {
            switch (_context104.prev = _context104.next) {
              case 0:
                _context104.next = 2;
                return this.reload();

              case 2:
              case "end":
                return _context104.stop();
            }
          }
        }, _callee103, this);
      }));

      function mounted() {
        return _mounted12.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/wn/obj/picker/wn-obj-picker.mjs", t);
}(), Ti.Preload("ti/com/wn/obj/picker/_com.json", {
  name: "wn-obj-picker",
  globally: !0,
  template: "./wn-obj-picker.html",
  mixins: ["./wn-obj-picker.mjs"],
  components: ["@com:wn/adaptlist"]
}), Ti.Preload("ti/com/wn/obj/preview/com/preview-info-field/preview-info-field.html", '<div class="info-field">\n  <div class="as-name" :style="theNameStyle">\n    <ti-icon v-if="icon" class="it-icon" :value="icon"/>\n    <span class="it-text">{{title|i18n}}</span>\n  </div>\n  <div class="as-value" :style="theValueStyle">{{theValue}}</div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        theValue: null
      };
    },
    props: {
      icon: {
        type: String,
        "default": null
      },
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      type: {
        type: String,
        "default": "String"
      },
      title: {
        type: String,
        "default": null
      },
      name: {
        type: String,
        "default": null
      },
      dict: {
        type: String,
        "default": null
      },
      nameWidth: {
        type: [String, Number],
        "default": 50
      },
      valueWidth: {
        type: [String, Number],
        "default": 200
      },
      transformer: {
        type: [String, Object, Function],
        "default": null
      }
    },
    watch: {
      data: function () {
        var _data3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee104() {
          return regeneratorRuntime.wrap(function _callee104$(_context105) {
            while (1) {
              switch (_context105.prev = _context105.next) {
                case 0:
                  _context105.next = 2;
                  return this.evalTheValue();

                case 2:
                  this.theValue = _context105.sent;

                case 3:
                case "end":
                  return _context105.stop();
              }
            }
          }, _callee104, this);
        }));

        function data() {
          return _data3.apply(this, arguments);
        }

        return data;
      }(),
      name: function () {
        var _name = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee105() {
          return regeneratorRuntime.wrap(function _callee105$(_context106) {
            while (1) {
              switch (_context106.prev = _context106.next) {
                case 0:
                  _context106.next = 2;
                  return this.evalTheValue();

                case 2:
                  this.theValue = _context106.sent;

                case 3:
                case "end":
                  return _context106.stop();
              }
            }
          }, _callee105, this);
        }));

        function name() {
          return _name.apply(this, arguments);
        }

        return name;
      }()
    },
    computed: {
      theTransformer: function theTransformer() {
        var t = this.transformer || "Ti.Types." + Ti.Types.getFuncByType(this.type || "String", "transformer");
        return Ti.Util.genInvoking(t, {
          context: this.data,
          partialRight: !0
        });
      },
      theNameStyle: function theNameStyle() {
        return Ti.Css.toStyle({
          width: this.nameWidth
        });
      },
      theValueStyle: function theValueStyle() {
        return Ti.Css.toStyle({
          width: this.valueWidth
        });
      }
    },
    methods: {
      evalTheValue: function evalTheValue() {
        var _this172 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee106() {
          var t;
          return regeneratorRuntime.wrap(function _callee106$(_context107) {
            while (1) {
              switch (_context107.prev = _context107.next) {
                case 0:
                  t = _.get(_this172.data, _this172.name);
                  _context107.t0 = _this172.dict;

                  if (!_context107.t0) {
                    _context107.next = 6;
                    break;
                  }

                  _context107.next = 5;
                  return wn.Dict.get(_this172.dict, t);

                case 5:
                  t = _context107.sent;

                case 6:
                  _.isFunction(_this172.theTransformer) && (t = _this172.theTransformer(t));
                  return _context107.abrupt("return", t);

                case 8:
                case "end":
                  return _context107.stop();
              }
            }
          }, _callee106);
        }))();
      }
    },
    mounted: function () {
      var _mounted13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee107() {
        return regeneratorRuntime.wrap(function _callee107$(_context108) {
          while (1) {
            switch (_context108.prev = _context108.next) {
              case 0:
                _context108.next = 2;
                return this.evalTheValue();

              case 2:
                this.theValue = _context108.sent;

              case 3:
              case "end":
                return _context108.stop();
            }
          }
        }, _callee107, this);
      }));

      function mounted() {
        return _mounted13.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/wn/obj/preview/com/preview-info-field/preview-info-field.mjs", t);
}(), Ti.Preload("ti/com/wn/obj/preview/com/preview-info-field/_com.json", {
  name: "wn-obj-preview-info-field",
  globally: !0,
  template: "./preview-info-field.html",
  mixins: ["./preview-info-field.mjs"]
}), Ti.Preload("ti/com/wn/obj/preview/wn-obj-preview.html", '<div class="wn-obj-preview" :class="TopClass">\n  \x3c!--\n    With content\n  --\x3e\n  <div class="wop-con" v-if="hasMeta">\n    \x3c!--Main View--\x3e\n    <component class="as-main"\n      :is="PreviewComType"\n      :icon="DataIcon"\n      :title="DataTitle"\n      :src="DataSource"/>\n    \x3c!--ActionBar at top--\x3e\n    <div class="as-abar">\n      <ul>\n        <li v-for="it in TheActions"\n          @click.left="OnAction(it.action)">\n          <ti-icon class="it-icon" :value="it.icon"/>\n        </li>\n      </ul>\n    </div>\n    \x3c!--Meta at bottom--\x3e\n    <div class="as-info" v-if="isShowInfo">\n      \x3c!--\n        Head\n      --\x3e\n      <div class="info-head">\n        \x3c!--Pin Status Icon--\x3e\n        <span class="it-icon" @click.left="toggleInfoFloat">\n          <ti-icon :value="PreviewInfoPinIcon"/>\n        </span>\n        \x3c!--Head text--\x3e\n        <span class="it-text">{{\'i18n:info\'|i18n}}</span>\n        \x3c!--Edit Button--\x3e\n        <span class="it-edit"\n          @click.left="OnEditInfo">{{\'i18n:edit\'|i18n}}</span>\n      </div>\n      \x3c!--\n        Fields\n      --\x3e\n      <div class="info-field-con">\n        <wn-obj-preview-info-field\n          v-for="fld in PrevewInfoFields"\n          :key="fld.name"\n          v-bind="fld"\n          :data="meta"/>\n      </div>\n    </div>\n  </div>\n  \x3c!--\n    Empty \n  --\x3e\n  <div v-else\n    class="ti-blank is-big">\n    <ti-icon value="fas-file-image"/>\n    <span>{{\'nil-obj\'|i18n}}</span>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        isInFullScreen: !1,
        isShowInfo: !1,
        isFloatInfo: !1
      };
    },
    props: {
      meta: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      actions: {
        type: Array,
        "default": function _default() {
          return ["fullscreen", "newtab", "download", "info"];
        }
      },
      showInfo: {
        type: Boolean,
        "default": !1
      },
      floatInfo: {
        type: Boolean,
        "default": !1
      },
      editInfoBy: {
        type: [Function, String],
        "default": null
      },
      infoPosition: {
        type: String,
        "default": "bottom",
        validator: function validator(t) {
          return /^(bottom|left)$/.test(t);
        }
      },
      infoNameWidth: {
        type: [String, Number],
        "default": 50
      },
      infoValueWidth: {
        type: [String, Number],
        "default": 200
      },
      infoFields: {
        type: Array,
        "default": function _default() {
          return ["nm", "tp", "mime", "width", "height", "len", "duration"];
        }
      },
      stateLocalKey: {
        type: String,
        "default": null
      }
    },
    computed: {
      hasMeta: function hasMeta() {
        return !_.isEmpty(this.meta);
      },
      TopClass: function TopClass() {
        return _defineProperty({
          "is-fullscreen": this.isInFullScreen,
          "is-show-info": this.isShowInfo,
          "is-float-info": this.isFloatInfo
        }, "is-info-at-".concat(this.infoPosition), !0);
      },
      PreviewComType: function PreviewComType() {
        if (this.meta) {
          var _t124 = this.meta.mime || "";

          return _t124.startsWith("video/") ? "ti-media-video" : _t124.startsWith("image/") ? "ti-media-image" : "ti-media-binary";
        }
      },
      PreviewInfoPinIcon: function PreviewInfoPinIcon() {
        return this.isFloatInfo ? "fas-thumbtack" : "zmdi-layers";
      },
      PrevewInfoFields: function PrevewInfoFields() {
        var _this173 = this;

        return Wn.Obj.evalFields(this.meta, this.infoFields, function (t) {
          if (!t.quickName || !_.isUndefined(t.value)) return "Group" == t.type ? t : _.defaults(t, {
            nameWidth: _this173.infoNameWidth,
            valueWidth: _this173.infoValueWidth
          });
        });
      },
      TheActions: function TheActions() {
        var _this174 = this;

        var t = [];
        return this.hasMeta && _.forEach(this.actions, function (e) {
          "fullscreen" == e ? _this174.isInFullScreen ? t.push({
            icon: "zmdi-fullscreen-exit",
            text: "i18n:wop-fullscreen-quit",
            action: function action() {
              return _this174.exitFullscreen();
            }
          }) : t.push({
            icon: "zmdi-fullscreen",
            text: "i18n:wop-fullscreen-enter",
            action: function action() {
              return _this174.enterFullscreen();
            }
          }) : "newtab" == e ? t.push({
            icon: "zmdi-open-in-new",
            text: "i18n:open-newtab",
            action: function action() {
              return _this174.openInNewTab();
            }
          }) : "download" == e ? t.push({
            icon: "zmdi-download",
            text: "i18n:download-to-local",
            action: function action() {
              return _this174.download();
            }
          }) : "info" == e ? _this174.isShowInfo ? t.push({
            icon: "zmdi-info-outline",
            text: "i18n:info",
            action: function action() {
              return _this174.doHideInfo();
            }
          }) : t.push({
            icon: "zmdi-info",
            text: "i18n:info",
            action: function action() {
              return _this174.doShowInfo();
            }
          }) : _.isPlainObject(e) && e.action && t.push(e);
        }), t;
      },
      DataSource: function DataSource() {
        if (!this.meta) return "";
        return Wn.Util.getDownloadLink(this.meta, {
          mode: "auto"
        }).toString();
      },
      DataIcon: function DataIcon() {
        return Wn.Util.getIconObj(this.meta);
      },
      DataTitle: function DataTitle() {
        return Wn.Util.getObjDisplayName(this.meta);
      }
    },
    methods: {
      OnAction: function OnAction(t) {
        _.isString(t) ? Ti.App(this).exec(actionName) : _.isFunction(t) && t();
      },
      OnEditInfo: function OnEditInfo() {
        this.meta && (_.isString(this.editInfoBy) ? Ti.App(this).exec(this.editInfoBy, this.meta) : _.isFunction(this.editInfoBy) ? this.editInfoBy(this.meta) : Wn.EditObjMeta(this.meta));
      },
      enterFullscreen: function enterFullscreen() {
        this.isInFullScreen = !0, this.resizeMediaViewport();
      },
      exitFullscreen: function exitFullscreen() {
        this.isInFullScreen = !1, this.resizeMediaViewport();
      },
      doShowInfo: function doShowInfo() {
        this.isShowInfo = !0, this.saveStateToLocal(), this.resizeMediaViewport();
      },
      doHideInfo: function doHideInfo() {
        this.isShowInfo = !1, this.saveStateToLocal(), this.resizeMediaViewport();
      },
      toggleInfoFloat: function toggleInfoFloat() {
        this.isFloatInfo = !this.isFloatInfo, this.saveStateToLocal(), this.resizeMediaViewport();
      },
      resizeMediaViewport: function resizeMediaViewport() {
        var _this175 = this;

        var _iterator80 = _createForOfIteratorHelper(this.$children),
            _step80;

        try {
          var _loop2 = function _loop2() {
            var t = _step80.value;
            _.isFunction(t.onResizeViewport) && _this175.$nextTick(function () {
              t.onResizeViewport();
            });
          };

          for (_iterator80.s(); !(_step80 = _iterator80.n()).done;) {
            _loop2();
          }
        } catch (err) {
          _iterator80.e(err);
        } finally {
          _iterator80.f();
        }
      },
      openInNewTab: function openInNewTab() {
        var t = Wn.Util.getAppLink(this.meta);
        Ti.Be.OpenLink(t);
      },
      download: function download() {
        var t = Wn.Util.getDownloadLink(this.meta);
        Ti.Be.OpenLink(t);
      },
      saveStateToLocal: function saveStateToLocal() {
        this.stateLocalKey && Ti.Storage.session.mergeObject(this.stateLocalKey, {
          isShowInfo: this.isShowInfo,
          isFloatInfo: this.isFloatInfo
        });
      },
      loadStateFromLocal: function loadStateFromLocal() {
        if (this.stateLocalKey) {
          var _t125 = Ti.Storage.session.getObject(this.stateLocalKey);

          _.defaults(_t125, {
            isShowInfo: this.isShowInfo,
            isFloatInfo: this.isFloatInfo
          }), this.isShowInfo = _t125.isShowInfo, this.isFloatInfo = _t125.isFloatInfo;
        }
      }
    },
    watch: {
      showInfo: function showInfo(t) {
        console.log("showInfo watched"), this.isShowInfo = t;
      },
      floatInfo: function floatInfo(t) {
        console.log("floatInfo watched"), this.isFloatInfo = t;
      }
    },
    mounted: function mounted() {
      var _this176 = this;

      this.isShowInfo = this.showInfo, this.isFloatInfo = this.floatInfo, this.$nextTick(function () {
        _this176.loadStateFromLocal();
      });
    }
  };
  Ti.Preload("ti/com/wn/obj/preview/wn-obj-preview.mjs", t);
}(), Ti.Preload("ti/com/wn/obj/preview/_com.json", {
  name: "wn-obj-preview",
  globally: !0,
  i18n: "@i18n:wn-obj-preview",
  template: "./wn-obj-preview.html",
  mixins: ["./wn-obj-preview.mjs"],
  components: ["./com/preview-info-field", "@com:ti/media/binary", "@com:ti/media/image", "@com:ti/media/video"]
}), Ti.Preload("ti/com/wn/obj/puretext/wn-obj-puretext.html", '<div class="wn-obj-puretext">\n  \x3c!--\n    Show Text Editor\n  --\x3e\n  <ti-text-raw v-if="hasMeta"\n    class="ti-fill-parent"\n    :icon="theIcon"\n    :title="theTitle"\n    :show-title="showTitle"\n    :value="content"\n    :content-is-changed="status.changed"\n    :blank-text="blankText"\n    @change="onChangeContent"/>\n  \x3c!--\n    Empty Data\n  --\x3e\n  <div v-else\n    class="ti-blank is-big">\n    <ti-icon value="zmdi-alert-circle-o"/>\n    <span>{{"empty-data"|i18n}}</span>\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !0,
    props: {
      meta: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      content: {
        type: String,
        "default": null
      },
      savedContent: {
        type: String,
        "default": null
      },
      contentType: {
        type: String,
        "default": null
      },
      showTitle: {
        type: Boolean,
        "default": !0
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      blankText: {
        type: String,
        "default": "i18n:blank"
      }
    },
    computed: {
      theIcon: function theIcon() {
        return this.meta ? Wn.Util.getIconObj(this.meta) : Ti.Icons.get();
      },
      theTitle: function theTitle() {
        return this.meta ? this.meta.title || this.meta.nm : "no-title";
      },
      hasMeta: function hasMeta() {
        return !!this.meta;
      }
    },
    methods: {
      onChangeContent: function onChangeContent(t) {
        this.$notify("change", {
          content: t
        });
      }
    },
    mounted: function mounted() {
      var _this177 = this;

      Ti.Fuse.getOrCreate().add({
        key: "wn-obj-puretext",
        everythingOk: function everythingOk() {
          return !_this177.status.changed;
        },
        fail: function fail() {
          Ti.Toast.Open("i18n:wn-obj-nosaved", "warn");
        }
      });
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Fuse.get().remove("wn-obj-puretext");
    }
  };
  Ti.Preload("ti/com/wn/obj/puretext/wn-obj-puretext.mjs", t);
}(), Ti.Preload("ti/com/wn/obj/puretext/_com.json", {
  name: "wn-obj-puretext",
  globally: !0,
  template: "./wn-obj-puretext.html",
  mixins: ["./wn-obj-puretext.mjs"],
  components: ["@com:ti/text/raw"]
}), Ti.Preload("ti/com/wn/obj/uploader/wn-obj-uploader.html", '<ti-uploader\n  :value="formedValue"/>'), function () {
  var t = {
    props: {
      value: {
        type: [String, Object, Array],
        "default": null
      },
      multi: {
        type: Boolean,
        "default": !0
      },
      removable: {
        type: Boolean,
        "default": !0
      },
      remained: {
        type: Number,
        "default": 0
      },
      target: {
        type: String,
        "default": null
      },
      nameTransformer: {
        type: [Function, String, Object],
        "default": null
      },
      supportTypes: {
        type: [Array, String],
        "default": null
      },
      imageFilter: {
        type: [Array, String],
        "default": null
      },
      imageQuality: {
        type: Number,
        "default": 0
      }
    },
    computed: {
      formedValue: function formedValue() {
        return null;
      }
    },
    methods: {
      getObj: function getObj(t) {
        t && _.isString(t);
      }
    }
  };
  Ti.Preload("ti/com/wn/obj/uploader/wn-obj-uploader.mjs", t);
}(), Ti.Preload("ti/com/wn/obj/uploader/_com.json", {
  name: "wn-obj-uploader",
  globally: !0,
  template: "./wn-obj-uploader.html",
  mixins: ["./wn-obj-uploader.mjs"],
  components: ["@com:ti/uploader"]
}), function () {
  var t = {
    methods: {
      explainDisplayItems: function explainDisplayItems() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

        var e = _.concat(t),
            i = [];

        return _.forEach(e, function (t) {
          if (!Ti.Util.isNil(t)) {
            if (_.isString(t)) {
              var _e41 = /^@<thumb(:([^>]*))?>$/.exec(t);

              if (_e41) {
                var _t126 = _e41[2] || void 0;

                return void i.push({
                  key: ["icon", "thumb", "tp", "mime", "race", "__updated_time"],
                  type: "Object",
                  transformer: {
                    name: "Ti.Types.toObject",
                    args: {
                      icon: "icon",
                      thumb: "thumb",
                      type: "tp",
                      mime: "mime",
                      race: "race",
                      timestamp: "__updated_time"
                    }
                  },
                  comType: "wn-obj-icon",
                  comConf: {
                    "...": "${=value}",
                    candidateIcon: _t126
                  }
                });
              }
            }

            i.push(t);
          }
        }), i;
      }
    }
  };
  Ti.Preload("ti/com/wn/support/wn_list_wrapper_mixins.mjs", t);
}(), Ti.Preload("ti/com/wn/table/wn-table.html", '<ti-table\n  v-bind="this"\n  :fields="TheFields"\n  :on-init="OnSubListInit"\n  @select="OnSelected"\n  @open="$notify(\'open\', $event)"/>'), function () {
  var t = {
    data: function data() {
      return {
        isAllChecked: !1,
        hasChecked: !1,
        theCurrentId: !1,
        theCheckedIds: !1
      };
    },
    computed: {
      TheFields: function TheFields() {
        var t = [];

        var _iterator81 = _createForOfIteratorHelper(this.fields),
            _step81;

        try {
          for (_iterator81.s(); !(_step81 = _iterator81.n()).done;) {
            var e = _step81.value;

            var i = _.assign({}, e);

            i.display = this.explainDisplayItems(e.display), t.push(i);
          }
        } catch (err) {
          _iterator81.e(err);
        } finally {
          _iterator81.f();
        }

        return t;
      }
    },
    methods: {
      OnSubListInit: function OnSubListInit(t) {
        this.$list = t;
      },
      OnSelected: function OnSelected() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        this.theCheckedIds = t.checkedIds, this.theCurrentId = t.currentId, this.syncCheckStatus(), this.$notify("select", t);
      },
      syncCheckStatus: function syncCheckStatus() {
        this.isAllChecked = this.$list.isAllChecked, this.hasChecked = this.$list.hasChecked;
      },
      selectPrevRow: function selectPrevRow(t) {
        this.$list.selectPrevRow(t);
      },
      selectNextRow: function selectNextRow(t) {
        this.$list.selectNextRow(t);
      },
      getCurrentRow: function getCurrentRow(t) {
        return this.$list.getCurrentRow(t);
      },
      getCheckedRow: function getCheckedRow(t) {
        return this.$list.getCheckedRow(t);
      },
      getCurrent: function getCurrent(t) {
        return this.$list.getCurrent(t);
      },
      getChecked: function getChecked(t) {
        return this.$list.getChecked(t);
      },
      selectRow: function selectRow(t) {
        this.$list.selectRow(t);
      },
      checkRow: function checkRow(t) {
        this.$list.checkRow(t);
      },
      cancelRow: function cancelRow(t) {
        this.$list.cancelRow(t);
      }
    },
    watch: {
      data: function data() {
        this.syncCheckStatus();
      },
      checkedIds: function checkedIds() {
        this.syncCheckStatus();
      }
    }
  };
  Ti.Preload("ti/com/wn/table/wn-table.mjs", t);
}(), Ti.Preload("ti/com/wn/table/_com.json", {
  name: "wn-table",
  globally: !0,
  template: "./wn-table.html",
  props: ["@com:ti/support/list_props.mjs", "@com:ti/table/ti-table-props.mjs"],
  mixins: ["@com:wn/support/wn_list_wrapper_mixins.mjs", "./wn-table.mjs"],
  components: ["@com:ti/table"]
}), Ti.Preload("ti/com/wn/thing/manager/com/thing-creator/thing-creator.html", '<div class="thing-creator ti-box-relative">\n  <ti-form\n    :fields="fields"\n    :only-fields="false"\n    v-model="myData"/>\n  <hr class="no-space">\n  <div class="ti-flex-center ti-padding-10">\n    <div class="ti-btn is-big" \n      @click="onCreate">\n      <span>{{\'create-now\'|i18n}}</span>\n    </div>\n  </div>\n  <div v-if="creating"\n    class="ti-box-mask as-thin ti-flex-center">\n    <ti-loading text="i18n:creating"/>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myData: {},
        creating: !1
      };
    },
    props: {
      fields: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    methods: {
      onChanged: function onChanged() {
        var _ref100 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref100.name,
            e = _ref100.value;

        this.obj = _.assign({}, this.obj, _defineProperty({}, t, e));
      },
      onCreate: function onCreate() {
        var _this178 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee108() {
          var t;
          return regeneratorRuntime.wrap(function _callee108$(_context109) {
            while (1) {
              switch (_context109.prev = _context109.next) {
                case 0:
                  _this178.creating = !0;
                  t = Ti.App(_this178);
                  _context109.next = 4;
                  return t.dispatch("main/create", _this178.myData);

                case 4:
                  _this178.$notify("block:hide", "creator");

                case 5:
                case "end":
                  return _context109.stop();
              }
            }
          }, _callee108);
        }))();
      }
    },
    watch: {
      data: {
        handler: function handler() {
          this.myData = _.assign({}, this.data);
        },
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/wn/thing/manager/com/thing-creator/thing-creator.mjs", t);
}(), Ti.Preload("ti/com/wn/thing/manager/com/thing-creator/_com.json", {
  name: "wn-thing-creator",
  globally: !0,
  template: "./thing-creator.html",
  mixins: ["./thing-creator.mjs"],
  components: []
}), function () {
  var t = {
    dirName: {
      type: String,
      "default": "media"
    },
    dataHome: {
      type: String,
      "default": null
    },
    files: {
      type: Object,
      "default": void 0
    },
    preview: {
      type: Object,
      "default": void 0
    },
    previewEdit: {
      type: Object,
      "default": void 0
    },
    actions: {
      type: Array,
      "default": function _default() {
        return [{
          name: "reloading",
          type: "action",
          icon: "zmdi-refresh",
          tip: "i18n:refresh",
          altDisplay: {
            icon: "zmdi-refresh zmdi-hc-spin"
          },
          action: "$parent:reloadData"
        }, {
          type: "line"
        }, {
          name: "deleting",
          type: "action",
          icon: "zmdi-delete",
          text: "i18n:del",
          altDisplay: {
            icon: "zmdi-refresh zmdi-hc-spin",
            text: "i18n:del-ing"
          },
          action: "$parent:doDeleteSelected"
        }, {
          type: "line"
        }, {
          name: "upload",
          type: "action",
          icon: "zmdi-cloud-upload",
          text: "i18n:upload",
          action: "$parent:doUploadFiles"
        }];
      }
    },
    stateLocalKey: {
      type: String,
      "default": null
    },
    dirNameTip: {
      type: String,
      "default": "i18n:thing-files"
    },
    dirNameComType: {
      type: String,
      "default": "ti-droplist"
    },
    dirNameOptions: {
      type: Array,
      "default": function _default() {
        return [{
          icon: "zmdi-collection-image",
          text: "i18n:media",
          value: "media"
        }, {
          icon: "zmdi-attachment-alt",
          text: "i18n:attachment",
          value: "attachment"
        }];
      }
    }
  };
  Ti.Preload("ti/com/wn/thing/manager/com/thing-files/thing-files-props.mjs", t);
}(), Ti.Preload("ti/com/wn/thing/manager/com/thing-files/thing-files.html", '<div class="thing-files">\n  \x3c!--\n    With Data Home\n  --\x3e\n  <template v-if="dataHome">\n    \x3c!--\n      Head bar for switch dir and actions\n    --\x3e\n    <div class="as-header">\n      <div v-if="dirNameTip"\n        class="as-tip">\n        <span>{{dirNameTip|i18n}}</span>\n      </div>\n      \x3c!--Left: select files home dirName--\x3e\n      <div class="as-name">\n        <component \n          :is="dirNameComType"\n          height=".3rem"\n          :allow-empty="false"\n          :options="dirNameOptions"\n          :value="dirName"\n          :prefix-icon-for-clean="false"\n          @change="OnDirNameChanged"/>\n      </div>\n      \x3c!--Right: Common Actions--\x3e\n      <div class="as-menu">\n        <ti-actionbar \n          :items="actions"\n          :status="myStatus"/>\n      </div>\n    </div>\n    \x3c!--\n      File Preview\n    --\x3e\n    <div class="as-preview">\n      <wn-obj-preview\n        class="ti-fill-parent"\n        v-bind="ThePreview"\n        :meta="CurrentFile"/>\n    </div>\n    \x3c!--\n      File List\n    --\x3e\n    <div class="as-list">\n      <wn-adaptlist\n        class="ti-fill-parent"\n        v-bind="TheFiles"\n        :data="myData"\n        :meta="myHome"\n        :status="myStatus"\n        @uploaded="OnFileUploaded"\n        @select="OnFileSelected"\n        :on-init="OnAdaptListInit"/>\n    </div>\n  </template>\n  \x3c!--\n    Without Data Home\n  --\x3e\n  <ti-loading v-else\n    text="i18n:empty-data"\n    icon="zmdi-alert-circle-o"/>\n</div>'), function () {
  var t = {
    inject: ["$ThingManager"],
    data: function data() {
      return {
        myHome: null,
        myData: {},
        myStatus: {
          reloading: !1
        },
        myCurrentId: null
      };
    },
    computed: {
      hasDataHome: function hasDataHome() {
        return !!this.dataHome;
      },
      CurrentFile: function CurrentFile() {
        if (this.myCurrentId && this.myData.list) {
          var _iterator82 = _createForOfIteratorHelper(this.myData.list),
              _step82;

          try {
            for (_iterator82.s(); !(_step82 = _iterator82.n()).done;) {
              var _t127 = _step82.value;
              if (this.myCurrentId == _t127.id) return _t127;
            }
          } catch (err) {
            _iterator82.e(err);
          } finally {
            _iterator82.f();
          }
        }
      },
      ThePreview: function ThePreview() {
        var _this179 = this;

        var t = Ti.Util.getFallback(this.preview, this.dirName, "@default") || this.preview || {};
        return _objectSpread({
          showInfo: !1,
          floatInfo: !1,
          infoPosition: "left",
          infoNameWidth: 40,
          infoValueWidth: 120,
          stateLocalKey: this.stateLocalKey
        }, t, {
          editInfoBy: function editInfoBy() {
            _this179.editPreviewInfo();
          }
        });
      },
      TheFiles: function TheFiles() {
        var _this180 = this;

        return _.assign({}, this.files, {
          routers: {
            reload: function () {
              var _reload = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee109() {
                return regeneratorRuntime.wrap(function _callee109$(_context110) {
                  while (1) {
                    switch (_context110.prev = _context110.next) {
                      case 0:
                        _context110.next = 2;
                        return _this180.reloadData();

                      case 2:
                      case "end":
                        return _context110.stop();
                    }
                  }
                }, _callee109);
              }));

              function reload() {
                return _reload.apply(this, arguments);
              }

              return reload;
            }()
          }
        });
      }
    },
    methods: {
      OnAdaptListInit: function OnAdaptListInit(t) {
        this.$adaptlist = t;
      },
      OnDirNameChanged: function OnDirNameChanged(t) {
        var _this181 = this;

        Ti.App(this).commit("main/setCurrentDataDir", t), this.$nextTick(function () {
          _this181.reloadData();
        });
      },
      OnFileSelected: function OnFileSelected(_ref101) {
        var t = _ref101.currentId;
        this.myCurrentId = t;
      },
      OnFileUploaded: function OnFileUploaded() {
        var _arguments19 = arguments,
            _this182 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee110() {
          var t, e;
          return regeneratorRuntime.wrap(function _callee110$(_context111) {
            while (1) {
              switch (_context111.prev = _context111.next) {
                case 0:
                  t = _arguments19.length > 0 && _arguments19[0] !== undefined ? _arguments19[0] : [];
                  e = _.first(t);
                  e && (_this182.$adaptlist.myCurrentId = e.id, _this182.myCurrentId = e.id);
                  _context111.next = 5;
                  return _this182.doUpdateFilesCount();

                case 5:
                case "end":
                  return _context111.stop();
              }
            }
          }, _callee110);
        }))();
      },
      doUpdateFilesCount: function doUpdateFilesCount() {
        var _this183 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee111() {
          var t, e, i;
          return regeneratorRuntime.wrap(function _callee111$(_context112) {
            while (1) {
              switch (_context112.prev = _context112.next) {
                case 0:
                  t = _.get(_this183.$ThingManager, "current.meta");

                  if (!t) {
                    _context112.next = 7;
                    break;
                  }

                  e = ["thing", t.th_set, "file", t.id, "-ufc -cqn"].join(" ");
                  _context112.next = 5;
                  return Wn.Sys.exec2(e, {
                    as: "json"
                  });

                case 5:
                  i = _context112.sent;
                  Ti.App(_this183).dispatch("main/setCurrentMeta", i);

                case 7:
                case "end":
                  return _context112.stop();
              }
            }
          }, _callee111);
        }))();
      },
      doDeleteSelected: function doDeleteSelected() {
        var _this184 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee112() {
          return regeneratorRuntime.wrap(function _callee112$(_context113) {
            while (1) {
              switch (_context113.prev = _context113.next) {
                case 0:
                  _context113.next = 2;
                  return _this184.$adaptlist.doDelete();

                case 2:
                  _context113.next = 4;
                  return _this184.doUpdateFilesCount();

                case 4:
                case "end":
                  return _context113.stop();
              }
            }
          }, _callee112);
        }))();
      },
      doUploadFiles: function doUploadFiles() {
        var _this185 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee113() {
          var _t128, e, i, n;

          return regeneratorRuntime.wrap(function _callee113$(_context114) {
            while (1) {
              switch (_context114.prev = _context114.next) {
                case 0:
                  if (!_this185.hasDataHome) {
                    _context114.next = 10;
                    break;
                  }

                  if (_this185.myHome) {
                    _context114.next = 7;
                    break;
                  }

                  _t128 = _this185.dataHome.indexOf("/"), e = _this185.dataHome.substring(0, _t128), i = {
                    race: "DIR",
                    nm: Ti.Util.appendPath(_this185.dataHome.substring(_t128 + 1), _this185.dirName)
                  }, n = "obj \"".concat(e, "\" -IfNoExists -new '").concat(JSON.stringify(i), "' -cqno");
                  console.log(n);
                  _context114.next = 6;
                  return Wn.Sys.exec2(n, {
                    as: "json"
                  });

                case 6:
                  _this185.myHome = _context114.sent;

                case 7:
                  if (_this185.myHome) {
                    _context114.next = 9;
                    break;
                  }

                  throw "Impossible!!!";

                case 9:
                  _this185.$adaptlist.openLocalFileSelectdDialog();

                case 10:
                case "end":
                  return _context114.stop();
              }
            }
          }, _callee113);
        }))();
      },
      editPreviewInfo: function editPreviewInfo() {
        var _this186 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee114() {
          var _t129, e;

          return regeneratorRuntime.wrap(function _callee114$(_context115) {
            while (1) {
              switch (_context115.prev = _context115.next) {
                case 0:
                  if (!_this186.CurrentFile) {
                    _context115.next = 6;
                    break;
                  }

                  _t129 = _.get(_this186.previewEdit, _this186.dirName);
                  _context115.next = 4;
                  return Wn.EditObjMeta(_this186.CurrentFile, _t129);

                case 4:
                  e = _context115.sent;
                  e && e.data && _this186.updateItemInDataList(e.data);

                case 6:
                case "end":
                  return _context115.stop();
              }
            }
          }, _callee114);
        }))();
      },
      updateItemInDataList: function updateItemInDataList(t) {
        t && this.myData && _.isArray(this.myData.list) && (this.myData.list = _.map(this.myData.list, function (e) {
          return e.id == t.id ? t : e;
        }));
      },
      reloadData: function reloadData() {
        var _this187 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee115() {
          var _t130, e, _t131;

          return regeneratorRuntime.wrap(function _callee115$(_context116) {
            while (1) {
              switch (_context116.prev = _context116.next) {
                case 0:
                  if (!(_this187.dataHome && _this187.dirName)) {
                    _context116.next = 17;
                    break;
                  }

                  _this187.myStatus.reloading = !0;
                  _t130 = Ti.Util.appendPath(_this187.dataHome, _this187.dirName);
                  _context116.next = 5;
                  return Wn.Io.loadMeta(_t130);

                case 5:
                  e = _context116.sent;

                  if (!e) {
                    _context116.next = 13;
                    break;
                  }

                  _context116.next = 9;
                  return Wn.Io.loadChildren(e);

                case 9:
                  _t131 = _context116.sent;
                  _this187.myHome = e, _this187.myData = _t131;
                  _context116.next = 14;
                  break;

                case 13:
                  _this187.myHome = null, _this187.myData = {};

                case 14:
                  _.delay(function () {
                    _this187.myStatus.reloading = !1;
                  }, 100);

                  _context116.next = 18;
                  break;

                case 17:
                  _this187.myHome = null, _this187.myData = {};

                case 18:
                case "end":
                  return _context116.stop();
              }
            }
          }, _callee115);
        }))();
      }
    },
    watch: {
      dataHome: {
        handler: "reloadData",
        immediate: !0
      }
    },
    mounted: function mounted() {
      this.$ThingManager.$files = this;
    }
  };
  Ti.Preload("ti/com/wn/thing/manager/com/thing-files/thing-files.mjs", t);
}(), Ti.Preload("ti/com/wn/thing/manager/com/thing-files/_com.json", {
  name: "wn-thing-files",
  globally: !0,
  template: "./thing-files.html",
  props: "./thing-files-props.mjs",
  mixins: ["./thing-files.mjs"],
  components: ["@com:wn/adaptlist"]
}), Ti.Preload("ti/com/wn/thing/manager/com/thing-filter/thing-filter.html", '<div class="thing-filter"\n  :class="topClass">\n  \x3c!--\n    Icon: Recycle Bin\n  --\x3e\n  <div v-if="isInRecycleBin"\n    class="filter-recycle-bin"\n    @click="onLeaveRecycleBin">\n    <span class="it-icon">\n      <ti-icon value="fas-recycle"/>\n      <ti-icon value="far-arrow-alt-circle-left"/>\n    </span>\n    <span class="it-text">{{\'i18n:thing-recycle-bin\'|i18n}}</span>\n  </div>\n  \x3c!--\n    Keyword\n  --\x3e\n  <div class="filter-keyword"\n    :class="keywordClass">\n    \x3c!--Input Box--\x3e\n    <input ref="input"\n      :placeholder="placeholderText" \n      spellcheck="false"\n      @change="onInputChanged"\n      @focus="keywordFocus=true"\n      @blur="keywordFocus=false">\n    \x3c!--Search Icon--\x3e\n    <ti-icon v-if="searchIcon" :value="searchIcon"/>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        keywordFocus: !1
      };
    },
    props: {
      placeholder: {
        type: String,
        "default": "i18n:thing-filter-kwdplhd"
      },
      searchIcon: {
        type: String,
        "default": "zmdi-search"
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      placeholderText: function placeholderText() {
        return this.placeholder ? Ti.I18n.text(this.placeholder) : "";
      },
      keywordClass: function keywordClass() {
        return {
          "has-icon": this.hasSearchIcon,
          "is-focus": this.keywordFocus
        };
      },
      isInRecycleBin: function isInRecycleBin() {
        return this.status.inRecycleBin;
      },
      topClass: function topClass() {
        return {
          "in-recycle-bin": this.isInRecycleBin
        };
      }
    },
    methods: {
      onInputChanged: function onInputChanged() {
        var t = _.trim(this.$refs.input.value);

        t = _.isEmpty(t) ? null : "^.*".concat(t, ".*$"), Ti.App(this).commit("main/search/updateFilter", {
          th_nm: t
        }), Ti.App(this).dispatch("main/reloadSearch");
      },
      onLeaveRecycleBin: function onLeaveRecycleBin() {
        Ti.App(this).dispatch("main/toggleInRecycleBin");
      }
    }
  };
  Ti.Preload("ti/com/wn/thing/manager/com/thing-filter/thing-filter.mjs", t);
}(), Ti.Preload("ti/com/wn/thing/manager/com/thing-filter/_com.json", {
  name: "wn-thing-filter",
  globally: !0,
  template: "./thing-filter.html",
  mixins: ["./thing-filter.mjs"],
  components: []
}), Ti.Preload("ti/com/wn/thing/manager/wn-thing-manager.html", '<ti-gui\n  class="wn-thing"\n  :class="TopClass"\n  :layout="TheLayout"\n  :schema="TheSchema"\n  :shown="TheShown"\n  :can-loading="true"\n  :loading-as="GuiLoadingAs"\n  :action-status="status"\n  @block:show="showBlock"\n  @block:hide="hideBlock"\n  @block:shown="changeShown"\n  @filter::change="OnFilterChange"\n  @sorter::change="OnSorterChange"\n  @list::select="OnListSelect"\n  @list::open="OnListOpen"\n  @content::change="OnContentChange"\n  @pager::change="OnPagerChange"\n  @view-current-source="OnViewCurrentSource"/>'), function () {
  var t = {
    provide: function provide() {
      return {
        $ThingManager: this
      };
    },
    props: {
      meta: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      currentDataHome: {
        type: String,
        "default": null
      },
      currentDataDir: {
        type: String,
        "default": "media"
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      config: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      search: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      current: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      files: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      preview: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      emitChange: {
        type: Boolean,
        "default": !1
      }
    },
    computed: _objectSpread({}, Vuex.mapGetters("main/search", ["currentItem", "checkedItems"]), {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TheShown: function TheShown() {
        return _.get(this.config, "shown") || {};
      },
      TheLayout: function TheLayout() {
        return Ti.Util.explainObj(this, this.config.layout);
      },
      TheSchema: function TheSchema() {
        return Ti.Util.explainObj(this, this.config.schema);
      },
      TheLoadingAs: function TheLoadingAs() {
        return _.assign({
          reloading: {
            icon: "fas-spinner fa-spin",
            text: "i18n:loading"
          },
          saving: {
            icon: "zmdi-settings fa-spin",
            text: "i18n:saving"
          },
          deleting: {
            icon: "zmdi-refresh fa-spin",
            text: "i18n:del-ing"
          },
          publishing: {
            icon: "zmdi-settings zmdi-hc-spin",
            text: "i18n:publishing"
          },
          restoring: {
            icon: "zmdi-time-restore zmdi-hc-spin",
            text: "i18n:thing-restoring"
          },
          cleaning: {
            icon: "zmdi-settings zmdi-hc-spin",
            text: "i18n:thing-cleaning"
          }
        }, _.get(this.TheSchema, "loadingAs"));
      },
      ChangedRowId: function ChangedRowId() {
        if (this.currentItem && this.current.status.changed) return this.currentItem.id;
      },
      GuiLoadingAs: function GuiLoadingAs() {
        var t = _.findKey(this.status, function (t) {
          return t;
        });

        return _.get(this.TheLoadingAs, t);
      },
      curentThumbTarget: function curentThumbTarget() {
        if (this.currentItem) {
          return "id:".concat(this.meta.id, "/data/").concat(this.currentItem.id, "/thumb.jpg");
        }

        return "";
      },
      SchemaMethods: function SchemaMethods() {
        return this.TheSchema && this.TheSchema.methods ? Ti.Util.merge({}, this.TheSchema.methods) : {};
      }
    }),
    methods: {
      OnFilterChange: function OnFilterChange(t) {
        var _this188 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee116() {
          return regeneratorRuntime.wrap(function _callee116$(_context117) {
            while (1) {
              switch (_context117.prev = _context117.next) {
                case 0:
                  Ti.App(_this188).commit("main/search/setFilter", t);
                  _context117.next = 3;
                  return Ti.App(_this188).dispatch("main/reloadSearch");

                case 3:
                case "end":
                  return _context117.stop();
              }
            }
          }, _callee116);
        }))();
      },
      OnSorterChange: function OnSorterChange() {
        var _arguments20 = arguments,
            _this189 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee117() {
          var t;
          return regeneratorRuntime.wrap(function _callee117$(_context118) {
            while (1) {
              switch (_context118.prev = _context118.next) {
                case 0:
                  t = _arguments20.length > 0 && _arguments20[0] !== undefined ? _arguments20[0] : {};
                  Ti.App(_this189).commit("main/search/setSorter", t);
                  _context118.next = 4;
                  return Ti.App(_this189).dispatch("main/reloadSearch");

                case 4:
                case "end":
                  return _context118.stop();
              }
            }
          }, _callee117);
        }))();
      },
      OnListSelect: function OnListSelect(_ref102) {
        var t = _ref102.current,
            e = _ref102.currentId,
            i = _ref102.checkedIds,
            n = _ref102.checked;
        Ti.App(this).dispatch("main/setCurrentThing", {
          meta: t,
          currentId: e,
          checkedIds: i
        }), this.emitChange && this.$emit("change", {
          current: t,
          currentId: e,
          checkedIds: i,
          checked: n
        });
      },
      OnListOpen: function OnListOpen(_ref103) {
        var t = _ref103.rawData;
        var e = Ti.App(this);
        e.dispatch("main/config/updateShown", this.config.listOpen), e.dispatch("main/setCurrentThing", {
          meta: t
        });
      },
      OnContentChange: function OnContentChange(t) {
        var e = Ti.App(this);
        e.dispatch("main/current/changeContent", t), e.commit("main/syncStatusChanged");
      },
      OnPagerChange: function OnPagerChange() {
        var _ref104 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref104.pn,
            e = _ref104.pgsz;

        Ti.App(this).dispatch("main/search/reloadPage", {
          pn: t,
          pgsz: e
        });
      },
      OnViewCurrentSource: function OnViewCurrentSource() {
        this.viewCurrentSource();
      },
      changeShown: function changeShown() {
        var _arguments21 = arguments,
            _this190 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee118() {
          var t;
          return regeneratorRuntime.wrap(function _callee118$(_context119) {
            while (1) {
              switch (_context119.prev = _context119.next) {
                case 0:
                  t = _arguments21.length > 0 && _arguments21[0] !== undefined ? _arguments21[0] : {};
                  Ti.App(_this190).dispatch("main/doChangeShown", t);

                case 2:
                case "end":
                  return _context119.stop();
              }
            }
          }, _callee118);
        }))();
      },
      showBlock: function showBlock(t) {
        "creator" == t && this.status.inRecycleBin ? Ti.Alert("i18n:thing-create-in-recyclebin", {
          title: "i18n:warn",
          icon: "im-warning",
          type: "warn"
        }) : ("files" == t ? Ti.App(this).dispatch("main/reloadFiles") : "content" == t && Ti.App(this).dispatch("main/current/reload"), Ti.App(this).dispatch("main/doChangeShown", _defineProperty({}, t, !0)));
      },
      hideBlock: function hideBlock(t) {
        Ti.App(this).dispatch("main/doChangeShown", _defineProperty({}, t, !1));
      },
      toggleBlock: function toggleBlock(t) {
        Ti.App(this).dispatch("main/doChangeShown", _defineProperty({}, t, !this.TheShown[t]));
      },
      batchUpdate: function batchUpdate() {
        var _this191 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee119() {
          var t, e, i, _t132, _t133, _t134, n, _t135, a;

          return regeneratorRuntime.wrap(function _callee119$(_context120) {
            while (1) {
              switch (_context120.prev = _context120.next) {
                case 0:
                  if (!_.isEmpty(_this191.checkedItems)) {
                    _context120.next = 2;
                    break;
                  }

                  return _context120.abrupt("return", Ti.Toast.Open("i18n:batch-none", "warn"));

                case 2:
                  t = _.first(_this191.checkedItems), e = _.get(_this191.config, "schema.behavior.batch") || {};
                  _.defaults(e, {
                    comType: "wn-obj-form",
                    comConf: {},
                    fields: "schema.meta.comConf.fields",
                    names: null,
                    valueKey: "data"
                  }), e.comType = _.kebabCase(e.comType), /^(ti-|wn-obj-)(form)$/.test(e.comType) && _.defaults(e.comConf, {
                    autoShowBlank: !1,
                    updateBy: !0,
                    setDataBy: !0
                  });
                  if (_.isString(e.names)) {
                    if (e.names.startsWith("^")) {
                      _t132 = new RegExp(e.names);

                      i = function i(e) {
                        return _t132.test(e.name);
                      };
                    } else if (e.names.startsWith("!^")) {
                      _t133 = new RegExp(e.names.substring(1));

                      i = function i(e) {
                        return !_t133.test(e.name);
                      };
                    } else {
                      _t134 = Ti.S.toArray(e.names);

                      i = function i(e) {
                        return _t134.indexOf(e.name) >= 0;
                      };
                    }
                  } else i = _.isArray(e.names) && !_.isEmpty(e.names) ? function (t) {
                    return e.name.indexOf(t) >= 0;
                  } : function (t) {
                    return !0;
                  };
                  n = _.get(_this191.config, e.fields);

                  if (!_.isEmpty(e.names)) {
                    _t135 = function _t135() {
                      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
                      var i = arguments.length > 1 ? arguments[1] : undefined;
                      var n = [];

                      var _iterator83 = _createForOfIteratorHelper(e),
                          _step83;

                      try {
                        for (_iterator83.s(); !(_step83 = _iterator83.n()).done;) {
                          var _a8 = _step83.value;

                          if (_.isArray(_a8.fields)) {
                            var _e42 = _.cloneDeept(_a8);

                            _e42.fields = _t135(_a8.fields, names), _.isEmpty(_e42.fields) || n.push(_e42);
                          } else i(_a8) && n.push(_a8);
                        }
                      } catch (err) {
                        _iterator83.e(err);
                      } finally {
                        _iterator83.f();
                      }

                      return n;
                    };

                    n = _t135(n, i);
                  }

                  _context120.next = 9;
                  return Ti.App.Open({
                    title: "i18n:batch-update",
                    width: 640,
                    height: "90%",
                    position: "top",
                    comType: "inner-body",
                    components: [{
                      name: "inner-body",
                      globally: !1,
                      data: {
                        update: {},
                        value: t,
                        innerComConf: _objectSpread({}, e.comConf, {
                          fields: n
                        })
                      },
                      template: "<".concat(e.comType, "\n            v-bind=\"innerComConf\"\n            :").concat(e.valueKey, "=\"value\"\n            @field:change=\"OnFieldChange\"\n            @change=\"OnChange\"/>"),
                      methods: {
                        OnFieldChange: function OnFieldChange(_ref105) {
                          var t = _ref105.name,
                              e = _ref105.value;
                          _.set(this.update, t, e), this.$notify("change", this.update);
                        },
                        OnChange: function OnChange(t) {
                          this.value = t;
                        }
                      }
                    }]
                  });

                case 9:
                  a = _context120.sent;
                  _context120.t0 = _.isEmpty(a);

                  if (_context120.t0) {
                    _context120.next = 14;
                    break;
                  }

                  _context120.next = 14;
                  return Ti.App(_this191).dispatch("main/batchUpdateMetas", a);

                case 14:
                case "end":
                  return _context120.stop();
              }
            }
          }, _callee119);
        }))();
      },
      viewCurrentSource: function viewCurrentSource() {
        var _this192 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee120() {
          var t;
          return regeneratorRuntime.wrap(function _callee120$(_context121) {
            while (1) {
              switch (_context121.prev = _context121.next) {
                case 0:
                  if (_this192.currentItem) {
                    _context121.next = 4;
                    break;
                  }

                  _context121.next = 3;
                  return Ti.Toast.Open("i18n:empty-data", "warn");

                case 3:
                  return _context121.abrupt("return", _context121.sent);

                case 4:
                  _context121.next = 6;
                  return Wn.EditObjContent(_this192.currentItem, {
                    showEditorTitle: !1,
                    icon: Wn.Util.getObjIcon(_this192.currentItem, "zmdi-tv"),
                    title: Wn.Util.getObjDisplayName(_this192.currentItem),
                    width: "61.8%",
                    height: "96%",
                    content: _this192.current.content,
                    saveBy: null
                  });

                case 6:
                  t = _context121.sent;
                  _.isUndefined(t) || Ti.App(_this192).dispatch("main/setCurrentContent", t);

                case 8:
                case "end":
                  return _context121.stop();
              }
            }
          }, _callee120);
        }))();
      },
      invoke: function invoke(t) {
        var _this193 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee121() {
          var e;
          return regeneratorRuntime.wrap(function _callee121$(_context122) {
            while (1) {
              switch (_context122.prev = _context122.next) {
                case 0:
                  e = _.get(_this193.SchemaMethods, t);

                  if (!_.isFunction(e)) {
                    _context122.next = 5;
                    break;
                  }

                  _context122.next = 4;
                  return e.apply(_this193, []);

                case 4:
                  return _context122.abrupt("return", _context122.sent);

                case 5:
                  throw Ti.Err.make("e.thing.fail-to-invoke", t);

                case 6:
                case "end":
                  return _context122.stop();
              }
            }
          }, _callee121);
        }))();
      },
      checkActionsUpdate: function checkActionsUpdate() {
        var t = _.get(this.config, "actions");

        _.isArray(t) && this.$notify("actions:update", t);
      },
      reloadCurrentFiles: function reloadCurrentFiles() {
        var _this194 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee122() {
          return regeneratorRuntime.wrap(function _callee122$(_context123) {
            while (1) {
              switch (_context123.prev = _context123.next) {
                case 0:
                  _context123.next = 2;
                  return _this194.$files.reloadData();

                case 2:
                case "end":
                  return _context123.stop();
              }
            }
          }, _callee122);
        }))();
      },
      deleteCurrentSelectedFiles: function deleteCurrentSelectedFiles() {
        var _this195 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee123() {
          return regeneratorRuntime.wrap(function _callee123$(_context124) {
            while (1) {
              switch (_context124.prev = _context124.next) {
                case 0:
                  _context124.next = 2;
                  return _this195.$files.doDeleteSelected();

                case 2:
                case "end":
                  return _context124.stop();
              }
            }
          }, _callee123);
        }))();
      },
      uploadFilesToCurrent: function uploadFilesToCurrent() {
        var _this196 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee124() {
          return regeneratorRuntime.wrap(function _callee124$(_context125) {
            while (1) {
              switch (_context125.prev = _context125.next) {
                case 0:
                  _context125.next = 2;
                  return _this196.$files.doUploadFiles();

                case 2:
                case "end":
                  return _context125.stop();
              }
            }
          }, _callee124);
        }))();
      }
    },
    mounted: function mounted() {
      this.THING_MANAGER_ROOT = !0, this.checkActionsUpdate();
    }
  };
  Ti.Preload("ti/com/wn/thing/manager/wn-thing-manager.mjs", t);
}(), Ti.Preload("ti/com/wn/thing/manager/_com.json", {
  name: "wn-thing-manager",
  globally: !0,
  i18n: "@i18n:wn-thing",
  template: "./wn-thing-manager.html",
  mixins: ["./wn-thing-manager.mjs"],
  components: ["./com/thing-files", "./com/thing-filter", "./com/thing-creator", "./com/thing-files", "@com:ti/gui", "@com:ti/combo/filter", "@com:ti/paging/jumper", "@com:wn/table", "@com:wn/obj/icon", "@com:wn/obj/puretext", "@com:wn/obj/preview", "@com:wn/obj/form", "@com:wn/upload/file"]
}), Ti.Preload("ti/com/wn/thing/_test/thing-actions.json", ""), Ti.Preload("ti/com/wn/thing/_test/thing-layout.json", {
  shown: {
    search: !0,
    meta: !0,
    content: !1,
    files: !1
  },
  listOpen: {
    content: !0,
    files: !0
  },
  desktop: {
    type: "cols",
    border: !0,
    blocks: [{
      name: "search",
      size: "50%",
      type: "rows",
      border: !0,
      blocks: [{
        name: "filter",
        size: 50,
        body: "filter"
      }, {
        name: "list",
        size: "stretch",
        overflow: "hidden",
        body: "list"
      }, {
        name: "pager",
        size: "auto",
        body: "pager"
      }]
    }, {
      name: "meta",
      title: "i18n:thing-meta",
      icon: "zmdi-info",
      actions: [{
        key: "show-content",
        statusKey: "content",
        type: "action",
        text: "i18n:thing-content-show",
        altDisplay: {
          text: "i18n:thing-content-hide",
          capture: !1
        },
        action: "main:toggleBlock(content)"
      }, {
        key: "show-files",
        statusKey: "files",
        type: "action",
        text: "i18n:thing-files-show",
        altDisplay: {
          text: "i18n:thing-files-hide",
          capture: !1
        },
        action: "main:toggleBlock(files)"
      }],
      size: "stretch",
      body: "meta"
    }],
    panels: [{
      name: "content",
      title: "i18n:thing-content",
      icon: "zmdi-file-text",
      body: "content",
      position: "left",
      width: "50%",
      height: "100%",
      closer: "default",
      status: "=current.status",
      actions: [{
        key: "saving",
        type: "action",
        icon: "zmdi-floppy",
        text: "i18n:save-change",
        altDisplay: {
          icon: "fas-spinner fa-pulse",
          text: "i18n:saving"
        },
        enableBy: "changed",
        action: "dispatch:main/saveCurrent"
      }]
    }, {
      name: "files",
      title: "i18n:thing-files",
      icon: "zmdi-collection-image",
      body: "files",
      position: "right",
      width: "50%",
      height: "100%",
      closer: "default"
    }, {
      name: "creator",
      title: "i18n:thing-create",
      icon: "zmdi-flare",
      body: "creator",
      position: "top",
      width: "61.8%",
      mask: !0,
      closer: "bottom",
      status: "=status"
    }]
  },
  tablet: "phone",
  phone: {
    name: "search",
    size: "50%",
    type: "rows",
    border: !0,
    blocks: [{
      name: "filter",
      size: 50,
      body: "filter"
    }, {
      name: "list",
      size: "stretch",
      overflow: "hidden",
      body: "list"
    }, {
      name: "pager",
      size: "auto",
      body: "pager"
    }],
    panels: [{
      name: "meta",
      title: "i18n:thing-meta",
      icon: "zmdi-info",
      position: "right",
      width: "100%",
      height: "100%",
      closer: "default",
      body: "meta",
      actionDisplayMode: "desktop",
      actions: [{
        key: "show-content",
        statusKey: "content",
        type: "action",
        text: "i18n:thing-content-show",
        altDisplay: {
          text: "i18n:thing-content-hide",
          capture: !1
        },
        action: "main:toggleBlock(content)"
      }, {
        key: "show-files",
        statusKey: "files",
        type: "action",
        text: "i18n:thing-files-show",
        altDisplay: {
          text: "i18n:thing-files-hide",
          capture: !1
        },
        action: "main:toggleBlock(files)"
      }]
    }, {
      name: "content",
      title: "i18n:thing-content",
      icon: "zmdi-file-text",
      body: "content",
      position: "bottom",
      width: "100%",
      height: "100%",
      closer: "default",
      status: "=current.status",
      actionDisplayMode: "desktop",
      actions: [{
        key: "saving",
        type: "action",
        icon: "zmdi-floppy",
        text: "i18n:save-change",
        altDisplay: {
          icon: "fas-spinner fa-pulse",
          text: "i18n:saving"
        },
        enableBy: "changed",
        action: "dispatch:main/saveCurrent"
      }]
    }, {
      name: "files",
      title: "i18n:thing-files",
      icon: "zmdi-collection-image",
      body: "files",
      position: "bottom",
      width: "100%",
      height: "100%",
      closer: "default",
      status: "=files.status",
      actionDisplayMode: "desktop",
      actions: [{
        key: "deleting",
        type: "action",
        icon: "zmdi-delete",
        text: "i18n:del-checked",
        altDisplay: {
          icon: "zmdi-refresh zmdi-hc-spin",
          text: "i18n:del-ing"
        },
        action: "dispatch:main/files/deleteSelected"
      }, {
        key: "upload",
        type: "action",
        icon: "zmdi-cloud-upload",
        text: "i18n:upload-file",
        action: "commit:main/files/showUploadFilePicker"
      }]
    }, {
      name: "creator",
      title: "i18n:thing-create",
      icon: "zmdi-flare",
      body: "creator",
      position: "top",
      width: "100%",
      mask: !0,
      closer: "bottom",
      status: "=status"
    }]
  }
}), Ti.Preload("ti/com/wn/thing/_test/thing-schema.json", {
  filter: {
    comType: "wn-thing-filter",
    comConf: {
      status: "=status"
    }
  },
  list: {
    comType: "ti-table",
    comConf: {
      list: "=search.list",
      changedId: "=changedRowId",
      currentId: "=search.currentId",
      checkedIds: "=search.checkedIds",
      border: !0,
      checkable: !0,
      multi: !0,
      fields: [{
        title: "名称",
        display: ["th_nm", "lbls"]
      }, {
        title: "标签",
        display: "lbls"
      }, {
        title: "创建时间",
        type: "DateTime",
        display: {
          key: "ct",
          transformer: {
            name: "formatDate",
            args: "yyyyMMdd/HH:mm:s"
          }
        }
      }]
    }
  },
  pager: {
    comType: "ti-paging-jumper",
    comConf: {
      data: "=search.pager"
    }
  },
  creator: {
    comType: "wn-thing-creator",
    comConf: {
      config: {
        fields: [{
          name: "th_nm",
          comType: "ti-input",
          comConf: {}
        }]
      },
      data: {
        th_nm: "新数据对象"
      }
    }
  },
  meta: {
    comType: "wn-obj-form",
    comConf: {
      data: "=current.meta",
      status: "=current.status",
      fieldStatus: "=current.fieldStatus",
      config: {
        fields: [{
          title: "ID",
          name: "id"
        }, {
          title: "名称",
          name: "th_nm",
          comType: "ti-input"
        }, {
          icon: "zmdi-labels",
          title: "标签",
          name: "lbls",
          type: "Array",
          transformer: "toStr",
          comType: "ti-input"
        }, {
          icon: "zmdi-time",
          title: "最后修改时间",
          name: "lm",
          type: "DateTime",
          comConf: {
            format: "yyyy年MM月dd日"
          }
        }]
      },
      updateBy: {
        method: "dispatch",
        target: "main/updateCurrent"
      },
      setFieldStatusBy: {
        method: "commit",
        target: "main/current/setMetaFieldStatus"
      }
    }
  },
  content: {
    comType: "wn-obj-puretext",
    comConf: {
      showTitle: !1,
      meta: "=current.meta",
      content: "=current.content",
      savedContent: "=current.__saved_content",
      contentType: "=current.contentType",
      status: "=current.status"
    }
  },
  files: {
    comType: "wn-thing-files",
    comConf: {
      filesName: "=filesName",
      files: "=files",
      stateLocalKey: "=meta.id",
      preview: "=preview",
      dirNameTip: null,
      dirNameComType: "ti-switcher",
      dirNameOptions: [{
        icon: "fas-camera-retro",
        text: "实地拍摄",
        value: "media"
      }, {
        icon: "fas-paperclip",
        text: "其他文件",
        value: "attachment"
      }]
    }
  }
}), Ti.Preload("ti/com/wn/transfer/wn-transfer.html", '<ti-transfer v-bind="this"\n  \n  :options="OptionsDict"\n  :can-com-type="TheCanComType"\n  :sel-com-type="TheSelComType"\n  :display="TheDisplay"\n\n  @change="$notify(\'change\', $event)"/>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {};
    },
    props: {
      itemBy: {
        type: [String, Function],
        "default": void 0
      },
      findBy: {
        type: [String, Function],
        "default": void 0
      }
    },
    computed: {
      TheCanComType: function TheCanComType() {
        return this.canComType || "wn-list";
      },
      TheSelComType: function TheSelComType() {
        return this.selComType || "wn-list";
      },
      TheDisplay: function TheDisplay() {
        return this.display || ["@<thumb>", "title", "nm"];
      },
      OptionsDict: function OptionsDict() {
        return Wn.Dict.evalOptionsDict(this);
      }
    }
  };
  Ti.Preload("ti/com/wn/transfer/wn-transfer.mjs", t);
}(), Ti.Preload("ti/com/wn/transfer/_com.json", {
  name: "wn-transfer",
  globally: !0,
  template: "./wn-transfer.html",
  props: "@com:ti/transfer/ti-transfer-props.mjs",
  mixins: ["./wn-transfer.mjs"],
  components: ["@com:ti/transfer"]
}), Ti.Preload("ti/com/wn/upload/file/wn-upload-file.html", '<TiUploadFile\n  :preview="PreviewIcon"\n  :width="width"\n  :height="height"\n  :progress="progress"\n  :upload-file="uploadFile"\n  :removable="removable"\n  @upload="onUpload"\n  @remove="onRemove"\n  @open="onOpen"/>'), function () {
  var t = {
    data: function data() {
      return {
        src_ts: null,
        oFile: null,
        uploadFile: null,
        progress: -1
      };
    },
    props: {
      value: {
        type: String,
        "default": null
      },
      valueType: {
        type: String,
        "default": "obj",
        validator: function validator(t) {
          return /^(obj|path|fullPath|idPath|id)$/.test(t);
        }
      },
      width: {
        type: [String, Number],
        "default": void 0
      },
      height: {
        type: [String, Number],
        "default": void 0
      },
      removable: {
        type: Boolean,
        "default": !0
      },
      target: {
        type: String,
        "default": null
      },
      supportTypes: {
        type: [String, Array],
        "default": function _default() {
          return [];
        }
      },
      supportMimes: {
        type: [String, Array],
        "default": function _default() {
          return [];
        }
      },
      filter: {
        type: [Array, String],
        "default": null
      },
      quality: {
        type: Number,
        "default": 0
      }
    },
    computed: {
      AcceptTypes: function AcceptTypes() {
        return _.isString(this.supportTypes) ? this.supportTypes.split(",") : this.supportTypes;
      },
      AcceptMimes: function AcceptMimes() {
        return _.isString(this.supportMimes) ? this.supportMimes.split(",") : this.supportMimes;
      },
      ImageFilter: function ImageFilter() {
        return this.filter ? [].concat(this.filter) : [];
      },
      PreviewIcon: function PreviewIcon() {
        if (this.oFile) {
          if (Wn.Obj.isMime(this.oFile, /^(image\/)/)) {
            var _t136 = ["/o/content?str=id:", this.oFile.id];
            return this.src_ts && (_t136.push("&_t="), _t136.push(this.src_ts)), {
              type: "image",
              value: _t136.join("")
            };
          }

          if (Wn.Obj.isMime(this.oFile, /^(video\/)/)) {
            var _t137 = ["/o/content?str=id:", this.oFile.video_cover];
            return this.src_ts && (_t137.push("&_t="), _t137.push(this.src_ts)), {
              type: "image",
              value: _t137.join("")
            };
          }

          return Wn.Util.getObjIcon(this.oFile);
        }
      }
    },
    methods: {
      assertListHas: function assertListHas(t, e, i, n) {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee125() {
          var a, _iterator84, _step84, _i27;

          return regeneratorRuntime.wrap(function _callee125$(_context126) {
            while (1) {
              switch (_context126.prev = _context126.next) {
                case 0:
                  if (_.isEmpty(t)) {
                    _context126.next = 25;
                    break;
                  }

                  a = !0;
                  _iterator84 = _createForOfIteratorHelper(t);
                  _context126.prev = 3;

                  _iterator84.s();

                case 5:
                  if ((_step84 = _iterator84.n()).done) {
                    _context126.next = 12;
                    break;
                  }

                  _i27 = _step84.value;

                  if (!(_i27 == e)) {
                    _context126.next = 10;
                    break;
                  }

                  a = !1;
                  return _context126.abrupt("break", 12);

                case 10:
                  _context126.next = 5;
                  break;

                case 12:
                  _context126.next = 17;
                  break;

                case 14:
                  _context126.prev = 14;
                  _context126.t0 = _context126["catch"](3);

                  _iterator84.e(_context126.t0);

                case 17:
                  _context126.prev = 17;

                  _iterator84.f();

                  return _context126.finish(17);

                case 20:
                  if (!a) {
                    _context126.next = 25;
                    break;
                  }

                  console.log("haha");
                  _context126.next = 24;
                  return Ti.Alert(i, {
                    type: "warn",
                    icon: "zmdi-alert-triangle",
                    vars: n
                  });

                case 24:
                  return _context126.abrupt("return", !1);

                case 25:
                  return _context126.abrupt("return", !0);

                case 26:
                case "end":
                  return _context126.stop();
              }
            }
          }, _callee125, null, [[3, 14, 17, 20]]);
        }))();
      },
      onOpen: function onOpen() {
        var _this197 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee126() {
          var _t138;

          return regeneratorRuntime.wrap(function _callee126$(_context127) {
            while (1) {
              switch (_context127.prev = _context127.next) {
                case 0:
                  if (!_this197.oFile) {
                    _context127.next = 4;
                    break;
                  }

                  _t138 = Wn.Util.getAppLink(_this197.oFile);
                  _context127.next = 4;
                  return Ti.Be.Open(_t138.url, {
                    params: _t138.params
                  });

                case 4:
                case "end":
                  return _context127.stop();
              }
            }
          }, _callee126);
        }))();
      },
      onRemove: function onRemove() {
        var _this198 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee127() {
          return regeneratorRuntime.wrap(function _callee127$(_context128) {
            while (1) {
              switch (_context128.prev = _context128.next) {
                case 0:
                  _context128.t0 = _this198.oFile;

                  if (!_context128.t0) {
                    _context128.next = 4;
                    break;
                  }

                  _context128.next = 4;
                  return Wn.Sys.exec2("rm id:".concat(_this198.oFile.id));

                case 4:
                  _this198.$notify("change", null);

                case 5:
                case "end":
                  return _context128.stop();
              }
            }
          }, _callee127);
        }))();
      },
      onUpload: function onUpload(t) {
        var _this199 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee128() {
          var e, _yield$Wn$Io$uploadFi3, i, n, a, _t139, _e43, s;

          return regeneratorRuntime.wrap(function _callee128$(_context129) {
            while (1) {
              switch (_context129.prev = _context129.next) {
                case 0:
                  e = Ti.Util.getSuffixName(t.name);
                  _context129.next = 3;
                  return _this199.assertListHas(_this199.AcceptTypes, e, "i18n:wn-invalid-types", {
                    current: e,
                    supports: _this199.AcceptTypes.join(", ")
                  });

                case 3:
                  if (_context129.sent) {
                    _context129.next = 5;
                    break;
                  }

                  return _context129.abrupt("return");

                case 5:
                  _context129.next = 7;
                  return _this199.assertListHas(_this199.AcceptMimes, t.type, "i18n:wn-invalid-mimes", {
                    current: t.type,
                    supports: _this199.AcceptMimes.join(", ")
                  });

                case 7:
                  if (_context129.sent) {
                    _context129.next = 9;
                    break;
                  }

                  return _context129.abrupt("return");

                case 9:
                  _this199.uploadFile = t, _this199.progress = 0;
                  _context129.next = 12;
                  return Wn.Io.uploadFile(t, {
                    target: _this199.target,
                    mode: "r",
                    progress: function progress(t) {
                      _this199.progress = t.loaded / t.total;
                    }
                  });

                case 12:
                  _yield$Wn$Io$uploadFi3 = _context129.sent;
                  i = _yield$Wn$Io$uploadFi3.ok;
                  n = _yield$Wn$Io$uploadFi3.msg;
                  a = _yield$Wn$Io$uploadFi3.data;

                  if (!(_this199.uploadFile = null, _this199.progress = -1, !i)) {
                    _context129.next = 20;
                    break;
                  }

                  _context129.next = 19;
                  return Ti.Alert("i18n:".concat(n), {
                    type: "warn",
                    icon: "zmdi-alert-triangle"
                  });

                case 19:
                  return _context129.abrupt("return", void _context129.sent);

                case 20:
                  if (_.isEmpty(_this199.ImageFilter)) {
                    _context129.next = 26;
                    break;
                  }

                  _t139 = ["imagic", "id:".concat(a.id), "-filter \"".concat(_this199.ImageFilter.join(" "), "\"")];
                  _this199.quality > 0 && _this199.quality <= 1 && _t139.push("-qa ".concat(_this199.quality)), _t139.push("-out inplace");
                  _e43 = _t139.join(" ");
                  _context129.next = 26;
                  return Wn.Sys.exec2(_e43);

                case 26:
                  _this199.src_ts = Date.now(), _this199.oFile = a;
                  s = a;
                  "path" == _this199.valueType ? s = Wn.Io.getFormedPath(a) : "fullPath" == _this199.valueType ? s = a.ph : "idPath" == _this199.valueType ? s = "id:".concat(a.id) : "id" == _this199.valueType && (s = a.id), _this199.$notify("change", s);

                case 29:
                case "end":
                  return _context129.stop();
              }
            }
          }, _callee128);
        }))();
      },
      reload: function reload() {
        var _this200 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee129() {
          return regeneratorRuntime.wrap(function _callee129$(_context130) {
            while (1) {
              switch (_context130.prev = _context130.next) {
                case 0:
                  if (!_this200.value) {
                    _context130.next = 6;
                    break;
                  }

                  _context130.next = 3;
                  return Wn.Io.loadMeta(_this200.value);

                case 3:
                  _this200.oFile = _context130.sent;
                  _context130.next = 7;
                  break;

                case 6:
                  _this200.oFile = null;

                case 7:
                case "end":
                  return _context130.stop();
              }
            }
          }, _callee129);
        }))();
      }
    },
    watch: {
      value: function value() {
        this.reload();
      }
    },
    mounted: function () {
      var _mounted14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee130() {
        return regeneratorRuntime.wrap(function _callee130$(_context131) {
          while (1) {
            switch (_context131.prev = _context131.next) {
              case 0:
                _context131.next = 2;
                return this.reload();

              case 2:
              case "end":
                return _context131.stop();
            }
          }
        }, _callee130, this);
      }));

      function mounted() {
        return _mounted14.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/wn/upload/file/wn-upload-file.mjs", t);
}(), Ti.Preload("ti/com/wn/upload/file/_com.json", {
  name: "wn-upload-file",
  globally: !0,
  template: "./wn-upload-file.html",
  mixins: ["./wn-upload-file.mjs"],
  components: ["@com:ti/upload/file"]
}), function () {
  var t = {
    reload: function reload(_ref106, i) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee131() {
        var t, e;
        return regeneratorRuntime.wrap(function _callee131$(_context132) {
          while (1) {
            switch (_context132.prev = _context132.next) {
              case 0:
                t = _ref106.state, e = _ref106.commit;
                !t.status.reloading && t.status.saving;

              case 2:
              case "end":
                return _context132.stop();
            }
          }
        }, _callee131);
      }))();
    }
  };
  Ti.Preload("ti/mod/hmaker/website/mod/site-config/site-config-actions.mjs", t);
}(), Ti.Preload("ti/mod/hmaker/website/mod/site-config/site-config.json", {
  meta: null,
  desktop: {
    mapping: {
      paths: {
        "site-state.json": "desktopSiteStateView"
      },
      types: {},
      mimes: {
        "application/json": "desktopJsonView",
        "text/*, application/*": "desktopTextView"
      },
      races: {
        DIR: "desktopAdaptList",
        FILE: "desktopObjPreview"
      }
    }
  },
  tablet: "desktop",
  phone: "desktop",
  views: {
    desktopSiteStateView: {
      comType: "hmaker-site-state",
      comConf: {
        home: "=home",
        content: "=currentContent"
      },
      actions: [{
        key: "saving",
        type: "action",
        icon: "zmdi-floppy",
        text: "i18n:save-change",
        altDisplay: {
          icon: "fas-spinner fa-pulse",
          text: "i18n:saving"
        },
        enableBy: "changed",
        action: "dispatch:main/saveCurrent",
        shortcut: "CTRL+S"
      }, {
        key: "reloading",
        type: "action",
        icon: "zmdi-rotate-right",
        text: "i18n:revoke-change",
        altDisplay: {
          icon: "zmdi-refresh zmdi-hc-spin",
          text: "i18n:loading"
        },
        action: "dispatch:main/reloadCurrent"
      }, {
        type: "Group",
        icon: "zmdi-more-vert",
        items: [{
          type: "action",
          icon: "zmdi-info-outline",
          text: "i18n:properties",
          action: "main:editCurrentObjMeta"
        }]
      }]
    },
    desktopTextView: {
      comType: "ti-text-raw",
      comConf: {
        showTitle: !1,
        content: "=currentContent",
        contentIsChanged: "=status.changed"
      },
      actions: [{
        key: "saving",
        type: "action",
        icon: "zmdi-floppy",
        text: "i18n:save-change",
        altDisplay: {
          icon: "fas-spinner fa-pulse",
          text: "i18n:saving"
        },
        enableBy: "changed",
        action: "dispatch:main/saveCurrent",
        shortcut: "CTRL+S"
      }, {
        key: "reloading",
        type: "action",
        icon: "zmdi-rotate-right",
        text: "i18n:revoke-change",
        altDisplay: {
          icon: "zmdi-refresh zmdi-hc-spin",
          text: "i18n:loading"
        },
        action: "dispatch:main/reloadCurrent"
      }, {
        type: "Group",
        icon: "zmdi-more-vert",
        items: [{
          type: "action",
          icon: "zmdi-info-outline",
          text: "i18n:properties",
          action: "main:editCurrentObjMeta"
        }]
      }]
    },
    desktopJsonView: {
      comType: "ti-text-json",
      comConf: {
        data: "=currentData"
      },
      actions: [{
        key: "saving",
        type: "action",
        icon: "zmdi-floppy",
        text: "i18n:save-change",
        altDisplay: {
          icon: "fas-spinner fa-pulse",
          text: "i18n:saving"
        },
        enableBy: "changed",
        action: "dispatch:main/saveCurrent",
        shortcut: "CTRL+S"
      }, {
        key: "reloading",
        type: "action",
        icon: "zmdi-rotate-right",
        text: "i18n:revoke-change",
        altDisplay: {
          icon: "zmdi-refresh zmdi-hc-spin",
          text: "i18n:loading"
        },
        action: "dispatch:main/reloadCurrent"
      }, {
        type: "Group",
        icon: "zmdi-more-vert",
        items: [{
          type: "action",
          icon: "zmdi-info-outline",
          text: "i18n:properties",
          action: "main:editCurrentObjMeta"
        }]
      }]
    },
    desktopAdaptList: {
      comType: "wn-adaptlist",
      comConf: {
        list: "=currentData.list"
      }
    },
    desktopObjPreview: {
      comType: "wn-obj-preview",
      comConf: {
        meta: "=currentMeta"
      }
    }
  },
  status: {
    reloading: !1
  }
}), function () {
  var t = {
    mutations: {
      setMeta: function setMeta(t, e) {
        t.meta = e;
      },
      setStatus: function setStatus(t, e) {
        t.status = _.assign({}, t.status, e);
      }
    }
  };
  Ti.Preload("ti/mod/hmaker/website/mod/site-config/site-config.mjs", t);
}(), Ti.Preload("ti/mod/hmaker/website/mod/site-config/_mod.json", {
  name: "hmaker-site-config",
  namespaced: !0,
  state: "./site-config.json",
  actions: "./site-config-actions.mjs",
  mixins: "./site-config.mjs"
}), function () {
  var t = {
    appendNode: function appendNode(_ref107, n) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee132() {
        var t, e, i;
        return regeneratorRuntime.wrap(function _callee132$(_context133) {
          while (1) {
            switch (_context133.prev = _context133.next) {
              case 0:
                t = _ref107.state, e = _ref107.commit, i = _ref107.dispatch;
                console.log("TODO appendNode", n);

              case 2:
              case "end":
                return _context133.stop();
            }
          }
        }, _callee132);
      }))();
    },
    reloadNode: function reloadNode(_ref108) {
      var _arguments22 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee134() {
        var t, e, i, _ref109, n, a, _ref109$self, s, _ref109$force, o, _ref109$depth, l, r, c, d, _t140, h;

        return regeneratorRuntime.wrap(function _callee134$(_context135) {
          while (1) {
            switch (_context135.prev = _context135.next) {
              case 0:
                t = _ref108.state, e = _ref108.commit, i = _ref108.dispatch;
                _ref109 = _arguments22.length > 1 && _arguments22[1] !== undefined ? _arguments22[1] : {}, n = _ref109.id, a = _ref109.path, _ref109$self = _ref109.self, s = _ref109$self === void 0 ? !1 : _ref109$self, _ref109$force = _ref109.force, o = _ref109$force === void 0 ? !1 : _ref109$force, _ref109$depth = _ref109.depth, l = _ref109$depth === void 0 ? 1 : _ref109$depth;
                c = _.cloneDeep(t.root), d = !1;

                if (r = _.isUndefined(n) ? Ti.Trees.getNodeByPath(c, a) : Ti.Trees.getNodeById(c, n)) {
                  _context135.next = 5;
                  break;
                }

                return _context135.abrupt("return");

              case 5:
                if (!s) {
                  _context135.next = 10;
                  break;
                }

                _context135.next = 8;
                return Wn.Io.loadMetaById(r.id);

              case 8:
                _t140 = _context135.sent;
                r.rawData = _t140, d = !0;

              case 10:
                h = /*#__PURE__*/function () {
                  var _ref110 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee133(t, e) {
                    var _i28, _yield$Wn$Io$loadChil, _n18, _iterator85, _step85, _t141, _n19;

                    return regeneratorRuntime.wrap(function _callee133$(_context134) {
                      while (1) {
                        switch (_context134.prev = _context134.next) {
                          case 0:
                            if (!(e > 0 && !t.leaf && (e--, o || _.isEmpty(t.children)))) {
                              _context134.next = 26;
                              break;
                            }

                            _i28 = [];
                            _context134.next = 4;
                            return Wn.Io.loadChildren(t.rawData);

                          case 4:
                            _yield$Wn$Io$loadChil = _context134.sent;
                            _n18 = _yield$Wn$Io$loadChil.list;
                            _iterator85 = _createForOfIteratorHelper(_n18);
                            _context134.prev = 7;

                            _iterator85.s();

                          case 9:
                            if ((_step85 = _iterator85.n()).done) {
                              _context134.next = 17;
                              break;
                            }

                            _t141 = _step85.value;
                            _n19 = Wn.Util.wrapTreeNode(_t141);
                            _context134.next = 14;
                            return h(_n19, e);

                          case 14:
                            _i28.push(_n19);

                          case 15:
                            _context134.next = 9;
                            break;

                          case 17:
                            _context134.next = 22;
                            break;

                          case 19:
                            _context134.prev = 19;
                            _context134.t0 = _context134["catch"](7);

                            _iterator85.e(_context134.t0);

                          case 22:
                            _context134.prev = 22;

                            _iterator85.f();

                            return _context134.finish(22);

                          case 25:
                            return _context134.abrupt("return", (t.children = _i28, !0));

                          case 26:
                            return _context134.abrupt("return", !1);

                          case 27:
                          case "end":
                            return _context134.stop();
                        }
                      }
                    }, _callee133, null, [[7, 19, 22, 25]]);
                  }));

                  return function h(_x9, _x10) {
                    return _ref110.apply(this, arguments);
                  };
                }();

                _context135.t0 = d;
                _context135.next = 14;
                return h(r, l);

              case 14:
                _context135.t1 = d = _context135.t0 |= _context135.sent;

                if (!_context135.t1) {
                  _context135.next = 17;
                  break;
                }

                e("setRoot", c);

              case 17:
              case "end":
                return _context135.stop();
            }
          }
        }, _callee134);
      }))();
    },
    reloadRoot: function reloadRoot(_ref111, n) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee135() {
        var t, e, i, _e44, _iterator86, _step86, _n20, _e45;

        return regeneratorRuntime.wrap(function _callee135$(_context136) {
          while (1) {
            switch (_context136.prev = _context136.next) {
              case 0:
                t = _ref111.state, e = _ref111.commit, i = _ref111.dispatch;
                e("setRoot", Wn.Util.wrapTreeNode(n));
                _context136.next = 4;
                return i("reloadNode");

              case 4:
                if (_.isEmpty(t.root.children)) {
                  _context136.next = 26;
                  break;
                }

                _e44 = _.keys(t.openedNodePaths).sort();
                _iterator86 = _createForOfIteratorHelper(_e44);
                _context136.prev = 7;

                _iterator86.s();

              case 9:
                if ((_step86 = _iterator86.n()).done) {
                  _context136.next = 18;
                  break;
                }

                _n20 = _step86.value;
                _e45 = Ti.Trees.getByPath(t.root, _n20);
                _context136.t0 = _e45 && !_e45.node.leaf;

                if (!_context136.t0) {
                  _context136.next = 16;
                  break;
                }

                _context136.next = 16;
                return i("reloadNode", {
                  path: _e45.path
                });

              case 16:
                _context136.next = 9;
                break;

              case 18:
                _context136.next = 23;
                break;

              case 20:
                _context136.prev = 20;
                _context136.t1 = _context136["catch"](7);

                _iterator86.e(_context136.t1);

              case 23:
                _context136.prev = 23;

                _iterator86.f();

                return _context136.finish(23);

              case 26:
              case "end":
                return _context136.stop();
            }
          }
        }, _callee135, null, [[7, 20, 23, 26]]);
      }))();
    }
  };
  Ti.Preload("ti/mod/hmaker/website/mod/site-tree/site-tree-actions.mjs", t);
}(), Ti.Preload("ti/mod/hmaker/website/mod/site-tree/site-tree.json", {
  root: {},
  currentId: null,
  openedNodePaths: {}
}), function () {
  var t = {
    mutations: {
      setRoot: function setRoot(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
        _.isEqual(t.root, e) || (t.root = e);
      },
      setCurrentId: function setCurrentId(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
        t.currentId = e;
      },
      setOpenedNodePaths: function setOpenedNodePaths(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        t.openedNodePaths = _.cloneDeep(e);
      }
    }
  };
  Ti.Preload("ti/mod/hmaker/website/mod/site-tree/site-tree.mjs", t);
}(), Ti.Preload("ti/mod/hmaker/website/mod/site-tree/_mod.json", {
  name: "hmaker-site-tree",
  namespaced: !0,
  state: "./site-tree.json",
  actions: "./site-tree-actions.mjs",
  mixins: "./site-tree.mjs"
}), function () {
  var t = {
    setTreeOpenedNodePaths: function setTreeOpenedNodePaths(_ref112) {
      var t = _ref112.getters,
          e = _ref112.commit;
      var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      t.TREE_OPEND_KEY && (e("tree/setOpenedNodePaths", i = _.pickBy(i, function (t) {
        return t;
      })), Ti.Storage.session.setObject(t.TREE_OPEND_KEY, i));
    },
    setTreeSelected: function setTreeSelected(_ref113) {
      var _arguments23 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee136() {
        var t, e, i, n, a;
        return regeneratorRuntime.wrap(function _callee136$(_context137) {
          while (1) {
            switch (_context137.prev = _context137.next) {
              case 0:
                t = _ref113.getters, e = _ref113.commit, i = _ref113.dispatch;
                n = _arguments23.length > 1 && _arguments23[1] !== undefined ? _arguments23[1] : null;

                if (!t.TREE_SELECTED_KEY) {
                  _context137.next = 14;
                  break;
                }

                e("tree/setCurrentId", n), Ti.Storage.session.set(t.TREE_SELECTED_KEY, n), e("setStatus", {
                  reloading: !0
                });
                a = null;
                _context137.t0 = n;

                if (!_context137.t0) {
                  _context137.next = 10;
                  break;
                }

                _context137.next = 9;
                return Wn.Io.loadMetaById(n);

              case 9:
                a = _context137.sent;

              case 10:
                _context137.next = 12;
                return i("current/reload", a);

              case 12:
                e("setStatus", {
                  reloading: !1
                });
                e("syncStatusChanged");

              case 14:
              case "end":
                return _context137.stop();
            }
          }
        }, _callee136);
      }))();
    },
    onCurrentChanged: function onCurrentChanged(_ref114, i) {
      var t = _ref114.commit,
          e = _ref114.dispatch;
      e("current/onChanged", i), t("syncStatusChanged");
    },
    saveCurrent: function saveCurrent(_ref115) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee137() {
        var t, e, i;
        return regeneratorRuntime.wrap(function _callee137$(_context138) {
          while (1) {
            switch (_context138.prev = _context138.next) {
              case 0:
                t = _ref115.state, e = _ref115.commit, i = _ref115.dispatch;
                _context138.t0 = t.current.meta;

                if (!_context138.t0) {
                  _context138.next = 8;
                  break;
                }

                e("setStatus", {
                  saving: !0
                });
                _context138.next = 6;
                return i("current/save");

              case 6:
                e("setStatus", {
                  saving: !1
                });
                e("syncStatusChanged");

              case 8:
              case "end":
                return _context138.stop();
            }
          }
        }, _callee137);
      }))();
    },
    reloadCurrent: function reloadCurrent(_ref116, i) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee138() {
        var t, e;
        return regeneratorRuntime.wrap(function _callee138$(_context139) {
          while (1) {
            switch (_context139.prev = _context139.next) {
              case 0:
                t = _ref116.commit, e = _ref116.dispatch;
                t("setStatus", {
                  reloading: !0
                });
                _context139.next = 4;
                return e("current/reload", i);

              case 4:
                t("setStatus", {
                  reloading: !1
                });
                t("syncStatusChanged");

              case 6:
              case "end":
                return _context139.stop();
            }
          }
        }, _callee138);
      }))();
    },
    reloadConfig: function reloadConfig(_ref117) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee139() {
        var t, e;
        return regeneratorRuntime.wrap(function _callee139$(_context140) {
          while (1) {
            switch (_context140.prev = _context140.next) {
              case 0:
                t = _ref117.state, e = _ref117.dispatch;
                _context140.next = 3;
                return e("config/reload");

              case 3:
              case "end":
                return _context140.stop();
            }
          }
        }, _callee139);
      }))();
    },
    reloadTree: function reloadTree(_ref118) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee140() {
        var t, e, i, n, _e46;

        return regeneratorRuntime.wrap(function _callee140$(_context141) {
          while (1) {
            switch (_context141.prev = _context141.next) {
              case 0:
                t = _ref118.getters, e = _ref118.state, i = _ref118.commit, n = _ref118.dispatch;

                if (t.TREE_OPEND_KEY) {
                  i("tree/setOpenedNodePaths", Ti.Storage.session.getObject(t.TREE_OPEND_KEY));
                }

                _context141.next = 4;
                return n("tree/reloadRoot", e.home);

              case 4:
                if (!t.TREE_SELECTED_KEY) {
                  _context141.next = 11;
                  break;
                }

                _e46 = Ti.Storage.session.getString(t.TREE_SELECTED_KEY);
                i("tree/setCurrentId", _e46);
                _context141.t0 = _e46;

                if (!_context141.t0) {
                  _context141.next = 11;
                  break;
                }

                _context141.next = 11;
                return n("setTreeSelected", _e46);

              case 11:
              case "end":
                return _context141.stop();
            }
          }
        }, _callee140);
      }))();
    },
    reloadTreeNode: function reloadTreeNode(_ref119, i) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee141() {
        var t, e;
        return regeneratorRuntime.wrap(function _callee141$(_context142) {
          while (1) {
            switch (_context142.prev = _context142.next) {
              case 0:
                t = _ref119.commit, e = _ref119.dispatch;
                t("setStatus", {
                  reloading: !0
                });
                _context142.next = 4;
                return e("tree/reloadNode", i);

              case 4:
                t("setStatus", {
                  reloading: !1
                });

              case 5:
              case "end":
                return _context142.stop();
            }
          }
        }, _callee141);
      }))();
    },
    reload: function reload(_ref120, n) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee142() {
        var t, e, i;
        return regeneratorRuntime.wrap(function _callee142$(_context143) {
          while (1) {
            switch (_context143.prev = _context143.next) {
              case 0:
                t = _ref120.state, e = _ref120.commit, i = _ref120.dispatch;
                n ? e("setHome", n) : n = t.home;
                e("setStatus", {
                  reloading: !0
                });
                _context143.next = 5;
                return i("reloadConfig");

              case 5:
                _context143.next = 7;
                return i("reloadTree");

              case 7:
                e("setStatus", {
                  reloading: !1
                });

              case 8:
              case "end":
                return _context143.stop();
            }
          }
        }, _callee142);
      }))();
    }
  };
  Ti.Preload("ti/mod/hmaker/website/website-actions.mjs", t);
}(), Ti.Preload("ti/mod/hmaker/website/website.json", {
  home: null,
  status: {
    reloading: !1,
    doing: !1,
    saving: !1,
    deleting: !1,
    changed: !1,
    publishing: !1,
    exposeHidden: !1
  }
}), function () {
  var t = {
    getters: {
      TREE_OPEND_KEY: function TREE_OPEND_KEY(t) {
        if (t.home) return "website_tree_openeds_".concat(t.home.id);
      },
      TREE_SELECTED_KEY: function TREE_SELECTED_KEY(t) {
        if (t.home) return "website_tree_selected_".concat(t.home.id);
      }
    },
    mutations: {
      setHome: function setHome(t, e) {
        t.home = e;
      },
      setStatus: function setStatus(t, e) {
        t.status = _.assign({}, t.status, e);
      },
      setExposeHidden: function setExposeHidden(t, e) {
        t.status.exposeHidden = e;
      },
      syncStatusChanged: function syncStatusChanged(t) {
        t.current && (t.status.changed = t.current.status.changed);
      }
    }
  };
  Ti.Preload("ti/mod/hmaker/website/website.mjs", t);
}(), Ti.Preload("ti/mod/hmaker/website/_mod.json", {
  name: "hmaker-website",
  namespaced: !0,
  state: "./website.json",
  actions: "./website-actions.mjs",
  mixins: "./website.mjs",
  modules: {
    tree: "./mod/site-tree",
    config: "./mod/site-config",
    current: "@mod:wn/obj-current"
  }
}), Ti.Preload("ti/mod/ti/viewport/ti-viewport.json", {
  mode: "desktop",
  activedIds: []
}), function () {
  var t = {
    getters: {
      viewportMode: function viewportMode(t) {
        return t.mode;
      },
      viewportActivedComIds: function viewportActivedComIds(t) {
        return t.activedIds;
      },
      isViewportModeDesktop: function isViewportModeDesktop(t) {
        return "desktop" == t.mode;
      },
      isViewportModeTablet: function isViewportModeTablet(t) {
        return "tablet" == t.mode;
      },
      isViewportModePhone: function isViewportModePhone(t) {
        return "phone" == t.mode;
      },
      isViewportModeDesktopOrTablet: function isViewportModeDesktopOrTablet(t) {
        return "desktop" == t.mode || "tablet" == t.mode;
      },
      isViewportModePhoneOrTablet: function isViewportModePhoneOrTablet(t) {
        return "phone" == t.mode || "tablet" == t.mode;
      }
    },
    mutations: {
      setMode: function setMode(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "desktop";
        t.mode = e;
      },
      setActivedIds: function setActivedIds(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        t.activedIds = _.cloneDeep(e);
      }
    }
  };
  Ti.Preload("ti/mod/ti/viewport/ti-viewport.mjs", t);
}(), Ti.Preload("ti/mod/ti/viewport/_mod.json", {
  state: "./ti-viewport.json",
  mixins: "./ti-viewport.mjs"
}), function () {
  var t = {
    onChanged: function onChanged(_ref121, e) {
      var t = _ref121.dispatch;
      t("changeContent", e);
    },
    changeContent: function changeContent(_ref122, e) {
      var t = _ref122.commit;
      t("setContent", e), t("syncStatusChanged");
    },
    changeMeta: function changeMeta(_ref123) {
      var t = _ref123.commit;

      var _ref124 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          e = _ref124.name,
          i = _ref124.value;

      if (e) {
        t("mergeMeta", _.set({}, e, i)), t("syncStatusChanged");
      }
    },
    updateContent: function updateContent(_ref125, i) {
      var t = _ref125.state,
          e = _ref125.commit;
      e("setContent", i), t.meta && "FILE" == t.meta.race && e("setSavedContent", i), e("syncStatusChanged");
    },
    openMetaEditor: function openMetaEditor(_ref126) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee143() {
        var t, e, i;
        return regeneratorRuntime.wrap(function _callee143$(_context144) {
          while (1) {
            switch (_context144.prev = _context144.next) {
              case 0:
                t = _ref126.state, e = _ref126.dispatch;

                if (t.meta) {
                  _context144.next = 5;
                  break;
                }

                _context144.next = 4;
                return Ti.Toast.Open("i18n:empty-data", "warn");

              case 4:
                return _context144.abrupt("return", _context144.sent);

              case 5:
                _context144.next = 7;
                return Wn.EditObjMeta(t.meta, {
                  fields: "auto"
                });

              case 7:
                i = _context144.sent;
                _context144.t0 = _.isUndefined(i);

                if (_context144.t0) {
                  _context144.next = 14;
                  break;
                }

                _context144.t1 = i.saved;

                if (!_context144.t1) {
                  _context144.next = 14;
                  break;
                }

                _context144.next = 14;
                return e("reload", i.data);

              case 14:
              case "end":
                return _context144.stop();
            }
          }
        }, _callee143);
      }))();
    },
    openContentEditor: function openContentEditor(_ref127) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee144() {
        var t, e, i;
        return regeneratorRuntime.wrap(function _callee144$(_context145) {
          while (1) {
            switch (_context145.prev = _context145.next) {
              case 0:
                t = _ref127.state, e = _ref127.dispatch;

                if (t.meta) {
                  _context145.next = 5;
                  break;
                }

                _context145.next = 4;
                return Ti.Toast.Open("i18n:empty-data", "warn");

              case 4:
                return _context145.abrupt("return", _context145.sent);

              case 5:
                _context145.next = 7;
                return Wn.EditObjContent(t.meta, {
                  content: t.content
                });

              case 7:
                i = _context145.sent;
                _context145.t0 = _.isUndefined(i);

                if (_context145.t0) {
                  _context145.next = 12;
                  break;
                }

                _context145.next = 12;
                return e("changeContent", i);

              case 12:
              case "end":
                return _context145.stop();
            }
          }
        }, _callee144);
      }))();
    },
    updateMeta: function updateMeta(_ref128) {
      var _arguments24 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee145() {
        var t, e, _ref129, i, n, a;

        return regeneratorRuntime.wrap(function _callee145$(_context146) {
          while (1) {
            switch (_context146.prev = _context146.next) {
              case 0:
                t = _ref128.commit, e = _ref128.dispatch;
                _ref129 = _arguments24.length > 1 && _arguments24[1] !== undefined ? _arguments24[1] : {}, i = _ref129.name, n = _ref129.value;
                a = Ti.Types.toObjByPair({
                  name: i,
                  value: n
                });
                _context146.next = 5;
                return e("updateMetas", a);

              case 5:
              case "end":
                return _context146.stop();
            }
          }
        }, _callee145);
      }))();
    },
    updateMetas: function updateMetas(_ref130) {
      var _arguments25 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee146() {
        var t, e, i, n, a, s, o;
        return regeneratorRuntime.wrap(function _callee146$(_context147) {
          while (1) {
            switch (_context147.prev = _context147.next) {
              case 0:
                t = _ref130.state, e = _ref130.commit;
                i = _arguments25.length > 1 && _arguments25[1] !== undefined ? _arguments25[1] : {};

                if (!_.isMatchWith(t.meta, i, _.isEqual)) {
                  _context147.next = 4;
                  break;
                }

                return _context147.abrupt("return");

              case 4:
                _.forEach(i, function (t, i) {
                  e("setFieldStatus", {
                    name: i,
                    type: "spinning",
                    text: "i18n:saving"
                  });
                });

                n = JSON.stringify(i);
                a = "thing ".concat(t.meta.th_set, " update ").concat(t.meta.id, " -fields -cqn");
                _context147.next = 9;
                return Wn.Sys.exec2(a, {
                  input: n,
                  as: "json"
                });

              case 9:
                s = _context147.sent;
                o = s instanceof Error;
                o || Ti.Util.isNil(s) || e("setMeta", s), _.forEach(i, function (t, i) {
                  o ? e("setFieldStatus", {
                    name: i,
                    type: "warn",
                    text: s.message || "i18n:fail"
                  }) : (e("setFieldStatus", {
                    name: i,
                    type: "ok",
                    text: "i18n:ok"
                  }), _.delay(function () {
                    e("clearFieldStatus", i);
                  }, 500));
                });

              case 12:
              case "end":
                return _context147.stop();
            }
          }
        }, _callee146);
      }))();
    },
    save: function save(_ref131) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee147() {
        var t, e, i, n, a;
        return regeneratorRuntime.wrap(function _callee147$(_context148) {
          while (1) {
            switch (_context148.prev = _context148.next) {
              case 0:
                t = _ref131.state, e = _ref131.commit;

                if (!(t.status.saving || !t.status.changed)) {
                  _context148.next = 3;
                  break;
                }

                return _context148.abrupt("return");

              case 3:
                e("setStatus", {
                  saving: !0
                });
                i = t.meta;
                n = t.content;
                _context148.next = 8;
                return Wn.Io.saveContentAsText(i, n);

              case 8:
                a = _context148.sent;
                return _context148.abrupt("return", (e("setStatus", {
                  saving: !1
                }), e("setMeta", a), e("setSavedContent", n), e("syncStatusChanged"), a));

              case 10:
              case "end":
                return _context148.stop();
            }
          }
        }, _callee147);
      }))();
    },
    reload: function reload(_ref132, n) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee148() {
        var t, e, i, a;
        return regeneratorRuntime.wrap(function _callee148$(_context149) {
          while (1) {
            switch (_context149.prev = _context149.next) {
              case 0:
                t = _ref132.state, e = _ref132.commit, i = _ref132.dispatch;

                if (!(t.status.reloading || t.status.saving)) {
                  _context149.next = 3;
                  break;
                }

                return _context149.abrupt("return");

              case 3:
                _.isUndefined(n) && (n = t.meta);
                _context149.t0 = _.isString(n);

                if (!_context149.t0) {
                  _context149.next = 9;
                  break;
                }

                _context149.next = 8;
                return Wn.Io.loadMeta(n);

              case 8:
                n = _context149.sent;

              case 9:
                if (n) {
                  _context149.next = 11;
                  break;
                }

                return _context149.abrupt("return", (e("setMeta", null), void e("setContent", null)));

              case 11:
                a = null;
                e("setStatus", {
                  reloading: !0
                });

                if (!("FILE" == n.race)) {
                  _context149.next = 19;
                  break;
                }

                _context149.next = 16;
                return Wn.Io.loadContent(n);

              case 16:
                a = _context149.sent;
                _context149.next = 24;
                break;

              case 19:
                _context149.t1 = "DIR" == n.race;

                if (!_context149.t1) {
                  _context149.next = 24;
                  break;
                }

                _context149.next = 23;
                return Wn.Io.loadChildren(n);

              case 23:
                a = _context149.sent;

              case 24:
                e("setStatus", {
                  reloading: !1
                });
                e("setMeta", n);
                e("clearFieldStatus");
                i("updateContent", a);

              case 28:
              case "end":
                return _context149.stop();
            }
          }
        }, _callee148);
      }))();
    }
  };
  Ti.Preload("ti/mod/wn/obj-current/m-obj-current-actions.mjs", t);
}(), Ti.Preload("ti/mod/wn/obj-current/m-obj-current.json", {
  meta: null,
  content: null,
  data: null,
  __saved_content: null,
  status: {
    changed: !1,
    saving: !1,
    reloading: !1
  },
  fieldStatus: {}
}), function () {
  var t = {
    mutations: {
      setMeta: function setMeta(t, e) {
        t.meta = e;
      },
      assignMeta: function assignMeta(t, e) {
        t.meta = _.assign({}, t.meta, e);
      },
      mergeMeta: function mergeMeta(t, e) {
        t.meta = _.merge({}, t.meta, e);
      },
      setContent: function setContent(t, e) {
        var i = t.meta;
        if (!i || Ti.Util.isNil(e)) return t.content = null, t.data = null, t.__saved_content = null, void (t.status.changed = !1);
        if ("DIR" == i.race) t.content = null, t.__saved_content = null, t.data = e;else if ("FILE" == i.race) if (_.isString(e)) {
          if (t.content = e, Wn.Util.isMimeJson(i.mime)) try {
            t.data = JSON.parse(e);
          } catch (e) {
            t.data = null;
          } else Wn.Util.isMimeText(i.mime) && (t.data = null);
        } else t.content = JSON.stringify(e, null, "  "), Wn.Util.isMimeJson(i.mime) ? t.data = e : Wn.Util.isMimeText(i.mime) && (t.data = null);
      },
      setData: function setData(t, e) {
        t.data = e;
      },
      setSavedContent: function setSavedContent(t, e) {
        t.__saved_content = e;
      },
      setStatus: function setStatus(t, e) {
        t.status = _.assign({}, t.status, e);
      },
      syncStatusChanged: function syncStatusChanged(t) {
        Ti.Util.isNil(t.content) && Ti.Util.isNil(t.__saved_content) ? t.status.changed = !1 : t.status.changed = !_.isEqual(t.content, t.__saved_content);
      },
      setFieldStatus: function setFieldStatus(t) {
        var _ref133 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            e = _ref133.name,
            i = _ref133.type,
            n = _ref133.text;

        if (e) {
          var a = _.concat(e).join("-");

          Vue.set(t.fieldStatus, a, {
            type: i,
            text: n
          });
        }
      },
      clearFieldStatus: function clearFieldStatus(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        _.isEmpty(e) ? t.fieldStatus = {} : t.fieldStatus = _.omit(t.fieldStatus, e);
      }
    }
  };
  Ti.Preload("ti/mod/wn/obj-current/m-obj-current.mjs", t);
}(), Ti.Preload("ti/mod/wn/obj-current/_mod.json", {
  name: "wn-obj-current",
  namespaced: !0,
  state: "./m-obj-current.json",
  actions: "./m-obj-current-actions.mjs",
  mixins: "./m-obj-current.mjs"
}), function () {
  var t = {
    updateMeta: function updateMeta(_ref134) {
      var _arguments26 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee149() {
        var t, e, _ref135, i, n, a, s, o, l;

        return regeneratorRuntime.wrap(function _callee149$(_context150) {
          while (1) {
            switch (_context150.prev = _context150.next) {
              case 0:
                t = _ref134.state, e = _ref134.commit;
                _ref135 = _arguments26.length > 1 && _arguments26[1] !== undefined ? _arguments26[1] : {}, i = _ref135.name, n = _ref135.value;
                a = Ti.Types.toObjByPair({
                  name: i,
                  value: n
                });

                if (!_.isMatchWith(t.meta, a, _.isEqual)) {
                  _context150.next = 5;
                  break;
                }

                return _context150.abrupt("return");

              case 5:
                e("setStatus", {
                  saving: !0
                }), e("setFieldStatus", {
                  name: i,
                  status: "spinning"
                });
                s = JSON.stringify(a);
                o = "obj 'id:".concat(t.meta.id, "' -ocqn -u");
                _context150.next = 10;
                return Wn.Sys.exec2(o, {
                  input: s,
                  as: "json"
                });

              case 10:
                l = _context150.sent;
                return _context150.abrupt("return", (e("setMeta", l), e("clearFieldStatus", i), e("setStatus", {
                  saving: !1
                }), l));

              case 12:
              case "end":
                return _context150.stop();
            }
          }
        }, _callee149);
      }))();
    },
    loadMetaById: function loadMetaById(_ref136, e) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee150() {
        var t;
        return regeneratorRuntime.wrap(function _callee150$(_context151) {
          while (1) {
            switch (_context151.prev = _context151.next) {
              case 0:
                t = _ref136.dispatch;
                t("loadMeta", "id:".concat(e));

              case 2:
              case "end":
                return _context151.stop();
            }
          }
        }, _callee150);
      }))();
    },
    loadMeta: function loadMeta(_ref137, i) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee151() {
        var t, e;
        return regeneratorRuntime.wrap(function _callee151$(_context152) {
          while (1) {
            switch (_context152.prev = _context152.next) {
              case 0:
                t = _ref137.state, e = _ref137.commit;

                if (!i) {
                  _context152.next = 11;
                  break;
                }

                e("setStatus", {
                  reloading: !0
                });
                _context152.t0 = e;
                _context152.next = 6;
                return Wn.Io.loadMeta(i);

              case 6:
                _context152.t1 = _context152.sent;
                (0, _context152.t0)("setMeta", _context152.t1);
                e("setStatus", {
                  reloading: !1
                });
                _context152.next = 12;
                break;

              case 11:
                e("reset");

              case 12:
              case "end":
                return _context152.stop();
            }
          }
        }, _callee151);
      }))();
    },
    loadAncestors: function loadAncestors(_ref138) {
      var _arguments27 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee152() {
        var t, e, i, n, a;
        return regeneratorRuntime.wrap(function _callee152$(_context153) {
          while (1) {
            switch (_context153.prev = _context153.next) {
              case 0:
                t = _ref138.state, e = _ref138.commit;
                i = _arguments27.length > 1 && _arguments27[1] !== undefined ? _arguments27[1] : t.meta;
                e("setStatus", {
                  reloading: !0
                });
                _context153.next = 5;
                return Wn.Io.loadAncestors("id:" + i.id);

              case 5:
                n = _context153.sent;
                a = _.last(n);
                e("setMeta", i), e("setParent", a), e("setAncestors", n), e("setStatus", {
                  reloading: !1
                });

              case 8:
              case "end":
                return _context153.stop();
            }
          }
        }, _callee152);
      }))();
    },
    reload: function () {
      var _reload2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee153(_ref139, i) {
        var t, e;
        return regeneratorRuntime.wrap(function _callee153$(_context154) {
          while (1) {
            switch (_context154.prev = _context154.next) {
              case 0:
                t = _ref139.state, e = _ref139.dispatch;

                if (!_.isString(i)) {
                  _context154.next = 8;
                  break;
                }

                _context154.next = 4;
                return e("loadMeta", i);

              case 4:
                _context154.next = 6;
                return e("loadAncestors");

              case 6:
                _context154.next = 12;
                break;

              case 8:
                _context154.t0 = _.isPlainObject(i);

                if (!_context154.t0) {
                  _context154.next = 12;
                  break;
                }

                _context154.next = 12;
                return e("loadAncestors", i);

              case 12:
                return _context154.abrupt("return", t.meta);

              case 13:
              case "end":
                return _context154.stop();
            }
          }
        }, _callee153);
      }));

      function reload(_x11, _x12) {
        return _reload2.apply(this, arguments);
      }

      return reload;
    }()
  };
  Ti.Preload("ti/mod/wn/obj-meta/m-obj-meta-actions.mjs", t);
}(), Ti.Preload("ti/mod/wn/obj-meta/m-obj-meta.json", {
  ancestors: [],
  parent: null,
  meta: null,
  status: {
    changed: !1,
    saving: !1,
    reloading: !1
  },
  fieldStatus: {}
}), function () {
  var t = {
    getters: {
      get: function get(t) {
        return t;
      },
      getHome: function getHome(t) {
        var e = t.meta,
            i = t.ancestors;

        if (_.isEmpty(i)) {
          if (e && "root" == e.nm) return e;
        } else {
          if (1 == i.length && "home" == i[0].nm) return e;
          if ("home" == i[0].nm) return i[1];
        }

        return null;
      },
      hasParent: function hasParent(t) {
        return !!t.parent;
      },
      parentIsHome: function parentIsHome(t) {
        return !(_.isEmpty(t.ancestors) || !t.parent || !t.meta || !/^\/home\//.test(t.meta.ph)) && t.parent.pid == t.ancestors[0].id;
      },
      isHome: function isHome(t) {
        return !(_.isEmpty(t.ancestors) || !t.meta || !/^\/home\//.test(t.meta.ph)) && t.meta.pid == t.ancestors[0].id;
      }
    },
    mutations: {
      reset: function reset(t) {
        _.assign(t, {
          ancestors: [],
          parent: null,
          meta: null,
          status: {
            changed: !1,
            saving: !1,
            reloading: !1
          },
          fieldStatus: {}
        });
      },
      setAncestors: function setAncestors(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        t.ancestors = _.concat(e);
      },
      setParent: function setParent(t, e) {
        t.parent = e;
      },
      setMeta: function setMeta(t, e) {
        t.meta = e;
      },
      setFieldStatus: function setFieldStatus(t) {
        var _ref140 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            e = _ref140.name,
            i = _ref140.message,
            n = _ref140.status;

        if (e) {
          var a = n ? {
            status: n,
            message: i
          } : null,
              s = _.concat(e).join("-");

          Vue.set(t.fieldStatus, s, a);
        }
      },
      clearFieldStatus: function clearFieldStatus(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        _.isEmpty(e) ? t.fieldStatus = {} : t.fieldStatus = _.omit(t.fieldStatus, e);
      },
      setStatus: function setStatus(t, e) {
        t.status = _.assign({}, t.status, e);
      }
    }
  };
  Ti.Preload("ti/mod/wn/obj-meta/m-obj-meta.mjs", t);
}(), Ti.Preload("ti/mod/wn/obj-meta/_mod.json", {
  state: "./m-obj-meta.json",
  actions: "./m-obj-meta-actions.mjs",
  mixins: "./m-obj-meta.mjs"
}), Ti.Preload("ti/mod/wn/session/m-session.json", {
  id: null,
  grp: null,
  du: -1,
  expi: 0,
  pwd: "~",
  ticket: null,
  uid: null,
  unm: null,
  me: null,
  envs: {}
}), function () {
  var t = {
    getters: {
      get: function get(t) {
        return t;
      }
    },
    mutations: {
      set: function set(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        t.id = e.id, t.grp = e.grp, t.du = e.du, t.expi = e.expi, t.pwd = e.pwd, t.ticket = e.ticket, t.uid = e.uid, t.unm = e.unm, t.me = e.me, t.envs = _.cloneDeep(e.envs);
      }
    },
    actions: {
      reload: function reload() {
        _.delay(function () {
          console.log("hahah");
        }, 1e3);
      }
    }
  };
  Ti.Preload("ti/mod/wn/session/m-session.mjs", t);
}(), Ti.Preload("ti/mod/wn/session/_mod.json", {
  state: "./m-session.json",
  mixins: ["./m-session.mjs"]
}), function () {
  var t = {
    saveCurrent: function saveCurrent(_ref141) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee154() {
        var t, e;
        return regeneratorRuntime.wrap(function _callee154$(_context155) {
          while (1) {
            switch (_context155.prev = _context155.next) {
              case 0:
                t = _ref141.commit, e = _ref141.dispatch;
                t("setStatus", {
                  saving: !0
                });
                _context155.next = 4;
                return e("current/save");

              case 4:
                t("setStatus", {
                  saving: !1
                });
                t("syncStatusChanged");

              case 6:
              case "end":
                return _context155.stop();
            }
          }
        }, _callee154);
      }))();
    },
    updateCurrent: function updateCurrent(_ref142) {
      var _arguments28 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee155() {
        var t, e, i, n, _ref143, a, s;

        return regeneratorRuntime.wrap(function _callee155$(_context156) {
          while (1) {
            switch (_context156.prev = _context156.next) {
              case 0:
                t = _ref142.state, e = _ref142.commit, i = _ref142.dispatch, n = _ref142.getters;
                _ref143 = _arguments28.length > 1 && _arguments28[1] !== undefined ? _arguments28[1] : {}, a = _ref143.name, s = _ref143.value;
                _context156.t0 = n.hasCurrent;

                if (!_context156.t0) {
                  _context156.next = 7;
                  break;
                }

                _context156.next = 6;
                return i("current/updateMeta", {
                  name: a,
                  value: s
                });

              case 6:
                e("search/updateItem", t.current.meta);

              case 7:
              case "end":
                return _context156.stop();
            }
          }
        }, _callee155);
      }))();
    },
    updateCurrentMetas: function updateCurrentMetas(_ref144) {
      var _arguments29 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee156() {
        var t, e, i, n, a;
        return regeneratorRuntime.wrap(function _callee156$(_context157) {
          while (1) {
            switch (_context157.prev = _context157.next) {
              case 0:
                t = _ref144.state, e = _ref144.commit, i = _ref144.dispatch, n = _ref144.getters;
                a = _arguments29.length > 1 && _arguments29[1] !== undefined ? _arguments29[1] : {};
                _context157.t0 = n.hasCurrent;

                if (!_context157.t0) {
                  _context157.next = 7;
                  break;
                }

                _context157.next = 6;
                return i("current/updateMetas", a);

              case 6:
                e("search/updateItem", t.current.meta);

              case 7:
              case "end":
                return _context157.stop();
            }
          }
        }, _callee156);
      }))();
    },
    batchUpdateMetas: function batchUpdateMetas(_ref145) {
      var _arguments30 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee157() {
        var t, e, i, n, a, s, o, l, _iterator87, _step87, _t142, _i29, _n21;

        return regeneratorRuntime.wrap(function _callee157$(_context158) {
          while (1) {
            switch (_context158.prev = _context158.next) {
              case 0:
                t = _ref145.state, e = _ref145.commit, i = _ref145.getters;
                n = _arguments30.length > 1 && _arguments30[1] !== undefined ? _arguments30[1] : {};
                a = i["search/checkedItems"];

                if (!(_.isEmpty(a) || _.isEmpty(n))) {
                  _context158.next = 5;
                  break;
                }

                return _context158.abrupt("return");

              case 5:
                e("setStatus", {
                  reloading: !0
                });
                s = _.get(t.current, "meta.id"), o = JSON.stringify(n), l = t.meta.id;
                _iterator87 = _createForOfIteratorHelper(a);
                _context158.prev = 8;

                _iterator87.s();

              case 10:
                if ((_step87 = _iterator87.n()).done) {
                  _context158.next = 19;
                  break;
                }

                _t142 = _step87.value;
                _i29 = "thing ".concat(l, " update ").concat(_t142.id, " -fields -cqn");
                _context158.next = 15;
                return Wn.Sys.exec2(_i29, {
                  as: "json",
                  input: o
                });

              case 15:
                _n21 = _context158.sent;
                e("search/updateItem", _n21), _n21.id == s && e("current/setMeta", _n21);

              case 17:
                _context158.next = 10;
                break;

              case 19:
                _context158.next = 24;
                break;

              case 21:
                _context158.prev = 21;
                _context158.t0 = _context158["catch"](8);

                _iterator87.e(_context158.t0);

              case 24:
                _context158.prev = 24;

                _iterator87.f();

                return _context158.finish(24);

              case 27:
                e("setStatus", {
                  reloading: !1
                });

              case 28:
              case "end":
                return _context158.stop();
            }
          }
        }, _callee157, null, [[8, 21, 24, 27]]);
      }))();
    },
    setCurrentMeta: function setCurrentMeta(_ref146, i) {
      var t = _ref146.state,
          e = _ref146.commit;
      console.log(" -> setCurrentMeta", i), e("current/assignMeta", i), e("syncStatusChanged"), e("search/updateItem", t.current.meta);
    },
    setCurrentContent: function setCurrentContent(_ref147, n) {
      var t = _ref147.state,
          e = _ref147.commit,
          i = _ref147.dispatch;
      i("current/onChanged", n), e("syncStatusChanged"), e("search/updateItem", t.current.meta);
    },
    autoSyncCurrentFilesCount: function autoSyncCurrentFilesCount(_ref148) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee158() {
        var t, e, i, n, _t143, a;

        return regeneratorRuntime.wrap(function _callee158$(_context159) {
          while (1) {
            switch (_context159.prev = _context159.next) {
              case 0:
                t = _ref148.state, e = _ref148.commit;
                i = t.current.meta, n = t.currentDataDir;

                if (!(i && i.id && n)) {
                  _context159.next = 8;
                  break;
                }

                _t143 = "thing ".concat(i.th_set, " ").concat(n, " ").concat(i.id, " -ufc -cqn");
                _context159.next = 6;
                return Wn.Sys.exec2(_t143, {
                  as: "json"
                });

              case 6:
                a = _context159.sent;
                e("current/setMeta", a), e("search/updateItem", a);

              case 8:
              case "end":
                return _context159.stop();
            }
          }
        }, _callee158);
      }))();
    },
    toggleInRecycleBin: function toggleInRecycleBin(_ref149) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee159() {
        var t, e, i, n, a;
        return regeneratorRuntime.wrap(function _callee159$(_context160) {
          while (1) {
            switch (_context160.prev = _context160.next) {
              case 0:
                t = _ref149.state, e = _ref149.commit, i = _ref149.dispatch, n = _ref149.getters;
                a = !n.isInRecycleBin;
                e("search/setInRecycleBin", a);
                e("setStatus", {
                  inRecycleBin: a,
                  reloading: !0
                });
                _context160.next = 6;
                return i("search/reload");

              case 6:
                e("setStatus", {
                  reloading: !1
                });

              case 7:
              case "end":
                return _context160.stop();
            }
          }
        }, _callee159);
      }))();
    },
    create: function create(_ref150) {
      var _arguments31 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee160() {
        var t, e, i, n, a, s, o, l, r, c, d, h;
        return regeneratorRuntime.wrap(function _callee160$(_context161) {
          while (1) {
            switch (_context161.prev = _context161.next) {
              case 0:
                t = _ref150.state, e = _ref150.commit, i = _ref150.dispatch;
                n = _arguments31.length > 1 && _arguments31[1] !== undefined ? _arguments31[1] : {};
                a = _.get(t.config, "schema.behavior.create") || {}, s = a.unique, o = a.after, l = a.fixed, r = JSON.stringify(n), c = ["thing ".concat(t.meta.id, " create -cqn -fields")];
                !_.isEmpty(s) && _.isString(s) && c.push(" -unique '".concat(s, "'")), !_.isEmpty(l) && _.isString(s) && c.push(" -fixed '".concat(JSON.stringify(l), "'")), !_.isEmpty(o) && _.isString(o) && c.push(" -after '".concat(o, "'")), e("setStatus", {
                  reloading: !0
                });
                d = c.join(" ");
                _context161.next = 7;
                return Wn.Sys.exec2(d, {
                  input: r,
                  as: "json"
                });

              case 7:
                h = _context161.sent;
                _context161.next = 10;
                return i("current/reload", h);

              case 10:
                e("search/prependToList", h);
                e("search/selectItem", h.id);
                e("setStatus", {
                  reloading: !1
                });
                return _context161.abrupt("return", h);

              case 14:
              case "end":
                return _context161.stop();
            }
          }
        }, _callee160);
      }))();
    },
    removeChecked: function removeChecked(_ref151) {
      var _arguments32 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee161() {
        var t, e, i, n, a, s, o, l;
        return regeneratorRuntime.wrap(function _callee161$(_context162) {
          while (1) {
            switch (_context162.prev = _context162.next) {
              case 0:
                t = _ref151.state, e = _ref151.commit, i = _ref151.dispatch, n = _ref151.getters;
                a = _arguments32.length > 1 && _arguments32[1] !== undefined ? _arguments32[1] : !1;
                s = t.search.checkedIds;

                if (!_.isEmpty(s)) {
                  _context162.next = 7;
                  break;
                }

                _context162.next = 6;
                return Ti.Alert("i18n:del-none");

              case 6:
                return _context162.abrupt("return", _context162.sent);

              case 7:
                e("setStatus", {
                  deleting: !0
                });
                o = "thing ".concat(t.meta.id, " delete ").concat(a ? "-hard" : "", " -cqn -l ").concat(s.join(" "));
                _context162.next = 11;
                return Wn.Sys.exec2(o, {
                  as: "json"
                });

              case 11:
                e("search/removeItems", t.search.checkedIds);
                l = n["search/currentItem"];
                _context162.next = 15;
                return i("current/reload", l);

              case 15:
                e("setStatus", {
                  deleting: !1
                });

              case 16:
              case "end":
                return _context162.stop();
            }
          }
        }, _callee161);
      }))();
    },
    restoreRecycleBin: function restoreRecycleBin(_ref152) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee162() {
        var t, e, i, n, a, s, o;
        return regeneratorRuntime.wrap(function _callee162$(_context163) {
          while (1) {
            switch (_context163.prev = _context163.next) {
              case 0:
                t = _ref152.state, e = _ref152.commit, i = _ref152.dispatch, n = _ref152.getters;
                a = t.search.checkedIds;

                if (!_.isEmpty(a)) {
                  _context163.next = 6;
                  break;
                }

                _context163.next = 5;
                return Ti.Alert("i18n:thing-restore-none");

              case 5:
                return _context163.abrupt("return", _context163.sent);

              case 6:
                e("setStatus", {
                  restoring: !0
                });
                s = "thing ".concat(t.meta.id, " restore -quiet -cqn -l ").concat(a.join(" "));
                _context163.next = 10;
                return Wn.Sys.exec2(s, {
                  as: "json"
                });

              case 10:
                _context163.next = 12;
                return i("search/reload");

              case 12:
                o = n["search/currentItem"];
                _context163.next = 15;
                return i("current/reload", o);

              case 15:
                e("setStatus", {
                  restoring: !1
                });

              case 16:
              case "end":
                return _context163.stop();
            }
          }
        }, _callee162);
      }))();
    },
    cleanRecycleBin: function cleanRecycleBin(_ref153) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee163() {
        var t, e, i, n;
        return regeneratorRuntime.wrap(function _callee163$(_context164) {
          while (1) {
            switch (_context164.prev = _context164.next) {
              case 0:
                t = _ref153.state, e = _ref153.commit, i = _ref153.dispatch;
                e("setStatus", {
                  cleaning: !0
                });
                n = "thing ".concat(t.meta.id, " clean -limit 3000");
                _context164.next = 5;
                return Wn.Sys.exec2(n);

              case 5:
                e("setStatus", {
                  cleaning: !1
                });
                _context164.next = 8;
                return i("reload");

              case 8:
              case "end":
                return _context164.stop();
            }
          }
        }, _callee163);
      }))();
    },
    openMetaEditor: function openMetaEditor(_ref154) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee164() {
        var t, e, i, _e47, n;

        return regeneratorRuntime.wrap(function _callee164$(_context165) {
          while (1) {
            switch (_context165.prev = _context165.next) {
              case 0:
                t = _ref154.state, e = _ref154.getters, i = _ref154.dispatch;

                if (t.meta) {
                  _context165.next = 5;
                  break;
                }

                _context165.next = 4;
                return Ti.Toast.Open("i18n:empty-data", "warn");

              case 4:
                return _context165.abrupt("return", _context165.sent);

              case 5:
                if (!e.hasCurrent) {
                  _context165.next = 18;
                  break;
                }

                _context165.next = 8;
                return Wn.EditObjMeta(t.current.meta, {
                  fields: "default",
                  autoSave: !1
                });

              case 8:
                _e47 = _context165.sent;

                if (!_.isUndefined(_e47)) {
                  _context165.next = 11;
                  break;
                }

                return _context165.abrupt("return");

              case 11:
                n = _e47.updates;
                _context165.t0 = _.isEmpty(n);

                if (_context165.t0) {
                  _context165.next = 16;
                  break;
                }

                _context165.next = 16;
                return i("updateCurrentMetas", n);

              case 16:
                _context165.next = 20;
                break;

              case 18:
                _context165.next = 20;
                return Wn.EditObjMeta(t.meta, {
                  fields: "auto",
                  autoSave: !0
                });

              case 20:
              case "end":
                return _context165.stop();
            }
          }
        }, _callee164);
      }))();
    },
    reloadFiles: function reloadFiles(_ref155) {
      var _arguments33 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee165() {
        var t, e, i, n, _ref156, _ref156$force, a, s, o, l, _e48, _n22, _t144, _i30;

        return regeneratorRuntime.wrap(function _callee165$(_context166) {
          while (1) {
            switch (_context166.prev = _context166.next) {
              case 0:
                t = _ref155.state, e = _ref155.commit, i = _ref155.dispatch, n = _ref155.getters;
                _ref156 = _arguments33.length > 1 && _arguments33[1] !== undefined ? _arguments33[1] : {}, _ref156$force = _ref156.force, a = _ref156$force === void 0 ? !1 : _ref156$force;
                s = _.get(t.current, "meta"), o = _.get(s, "id"), l = t.filesName;

                if (!(o && l)) {
                  _context166.next = 15;
                  break;
                }

                _e48 = t.meta.id, _n22 = t.files.meta;

                if (!(!_n22 || !_n22.ph || !_n22.ph.endsWith("/data/".concat(o, "/").concat(l)))) {
                  _context166.next = 11;
                  break;
                }

                _t144 = {
                  race: "DIR",
                  nm: "".concat(o, "/").concat(l)
                }, _i30 = "obj \"".concat("id:".concat(_e48, "/data"), "\" -IfNoExists -new '", JSON.stringify(_t144), "' -cqno");
                _context166.next = 9;
                return Wn.Sys.exec2(_i30, {
                  as: "json"
                });

              case 9:
                if (_n22 = _context166.sent) {
                  _context166.next = 11;
                  break;
                }

                return _context166.abrupt("return");

              case 11:
                _context166.next = 13;
                return i("files/reload", _n22);

              case 13:
                _context166.next = 16;
                break;

              case 15:
                e("files/reset");

              case 16:
              case "end":
                return _context166.stop();
            }
          }
        }, _callee165);
      }))();
    },
    reloadSearch: function reloadSearch(_ref157) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee166() {
        var t, e, i, n, _e49, _n23, _iterator88, _step88, _i31;

        return regeneratorRuntime.wrap(function _callee166$(_context167) {
          while (1) {
            switch (_context167.prev = _context167.next) {
              case 0:
                t = _ref157.state, e = _ref157.commit, i = _ref157.dispatch;
                n = t.meta;
                e("setStatus", {
                  reloading: !0
                });
                _context167.next = 5;
                return i("search/reload", n);

              case 5:
                if (!t.current.meta) {
                  _context167.next = 27;
                  break;
                }

                _e49 = t.current.meta.id, _n23 = null;
                _iterator88 = _createForOfIteratorHelper(t.search.list);
                _context167.prev = 8;

                _iterator88.s();

              case 10:
                if ((_step88 = _iterator88.n()).done) {
                  _context167.next = 17;
                  break;
                }

                _i31 = _step88.value;

                if (!(_i31.id == _e49)) {
                  _context167.next = 15;
                  break;
                }

                _n23 = _i31;
                return _context167.abrupt("break", 17);

              case 15:
                _context167.next = 10;
                break;

              case 17:
                _context167.next = 22;
                break;

              case 19:
                _context167.prev = 19;
                _context167.t0 = _context167["catch"](8);

                _iterator88.e(_context167.t0);

              case 22:
                _context167.prev = 22;

                _iterator88.f();

                return _context167.finish(22);

              case 25:
                _context167.next = 27;
                return i("setCurrentThing", {
                  meta: _n23
                });

              case 27:
                e("setStatus", {
                  reloading: !1
                });

              case 28:
              case "end":
                return _context167.stop();
            }
          }
        }, _callee166, null, [[8, 19, 22, 25]]);
      }))();
    },
    setCurrentThing: function setCurrentThing(_ref158) {
      var _arguments34 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee167() {
        var t, e, i, _ref159, _ref159$meta, n, _ref159$checkedIds, a, s, o, l;

        return regeneratorRuntime.wrap(function _callee167$(_context168) {
          while (1) {
            switch (_context168.prev = _context168.next) {
              case 0:
                t = _ref158.state, e = _ref158.commit, i = _ref158.dispatch;
                _ref159 = _arguments34.length > 1 && _arguments34[1] !== undefined ? _arguments34[1] : {}, _ref159$meta = _ref159.meta, n = _ref159$meta === void 0 ? null : _ref159$meta, _ref159$checkedIds = _ref159.checkedIds, a = _ref159$checkedIds === void 0 ? {} : _ref159$checkedIds;
                _context168.next = 4;
                return i("current/reload", n);

              case 4:
                s = n ? n.id : null, o = Ti.Util.truthyKeys(a);
                Ti.Util.isNil(s) || o.push(s), e("search/setCurrentId", s), e("search/setCheckedIds", o);
                l = t.meta;
                e("setCurrentDataHome", s ? "id:".concat(l.id, "/data/").concat(s) : null);

              case 8:
              case "end":
                return _context168.stop();
            }
          }
        }, _callee167);
      }))();
    },
    doChangeShown: function doChangeShown(_ref160, n) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee168() {
        var t, e, i;
        return regeneratorRuntime.wrap(function _callee168$(_context169) {
          while (1) {
            switch (_context169.prev = _context169.next) {
              case 0:
                t = _ref160.state, e = _ref160.commit, i = _ref160.dispatch;
                i("config/updateShown", n);

              case 2:
              case "end":
                return _context169.stop();
            }
          }
        }, _callee168);
      }))();
    },
    reload: function reload(_ref161, n) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee169() {
        var t, e, i, a, s, o, _e50;

        return regeneratorRuntime.wrap(function _callee169$(_context170) {
          while (1) {
            switch (_context170.prev = _context170.next) {
              case 0:
                t = _ref161.state, e = _ref161.commit, i = _ref161.dispatch;
                n ? e("setMeta", n) : n = t.meta;
                e("setStatus", {
                  reloading: !0
                });
                _context170.next = 5;
                return i("config/reload", n);

              case 5:
                a = Ti.Storage.session.getObject(n.id) || {};

                _.defaults(a, {
                  filter: {},
                  sorter: {},
                  pager: {}
                });

                s = _.get(t.config.schema, "behavior.filter") || {};
                s = _.assign({}, s, a.filter), _.isEmpty(s) || e("search/setFilter", s);
                o = _.get(t.config.schema, "behavior.sorter") || {};
                o = _.assign({}, o, a.sorter);
                _.isEmpty(o) || e("search/setSorter", o);
                _.isEmpty(a.pager) || e("search/setPager", a.pager);
                _context170.next = 15;
                return i("reloadSearch");

              case 15:
                if (!(_.get(t, "meta.th_auto_select") && !t.current.meta && !_.isEmpty(t.search.list))) {
                  _context170.next = 19;
                  break;
                }

                _e50 = t.search.list[0];
                _context170.next = 19;
                return i("setCurrentThing", {
                  meta: _e50,
                  force: !1
                });

              case 19:
                e("setStatus", {
                  reloading: !1
                });

              case 20:
              case "end":
                return _context170.stop();
            }
          }
        }, _callee169);
      }))();
    }
  };
  Ti.Preload("ti/mod/wn/thing/m-thing-actions.mjs", t);
}(), Ti.Preload("ti/mod/wn/thing/m-thing.json", {
  meta: null,
  currentDataDir: "media",
  currentDataHome: null,
  status: {
    reloading: !1,
    doing: !1,
    saving: !1,
    deleting: !1,
    changed: !1,
    restoring: !1,
    cleaning: !1,
    inRecycleBin: !1
  }
}), function () {
  var t = {
    getters: {
      hasCurrent: function hasCurrent(t) {
        return t.current && t.current.meta;
      },
      isInRecycleBin: function isInRecycleBin(t) {
        return t.search.inRecycleBin;
      }
    },
    mutations: {
      setMeta: function setMeta(t, e) {
        t.meta = e;
      },
      setCurrentDataDir: function setCurrentDataDir(t, e) {
        t.currentDataDir = e;
      },
      setCurrentDataHome: function setCurrentDataHome(t, e) {
        t.currentDataHome = e;
      },
      setStatus: function setStatus(t, e) {
        t.status = _.assign({}, t.status, e);
      },
      syncStatusChanged: function syncStatusChanged(t) {
        t.current && (t.status.changed = t.current.status.changed);
      }
    }
  };
  Ti.Preload("ti/mod/wn/thing/m-thing.mjs", t);
}(), function () {
  var t = {
    updateShown: function updateShown(_ref162, e) {
      var t = _ref162.commit;
      t("mergeShown", e), t("persistShown");
    },
    reloadSchema: function reloadSchema(_ref163) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee170() {
        var t, e, i, n, a, _t145;

        return regeneratorRuntime.wrap(function _callee170$(_context171) {
          while (1) {
            switch (_context171.prev = _context171.next) {
              case 0:
                t = _ref163.state, e = _ref163.commit;
                i = "id:".concat(t.meta.id, "/thing-schema.json");
                _context171.next = 4;
                return Wn.Io.loadMeta(i);

              case 4:
                n = _context171.sent;
                _context171.next = 7;
                return Wn.Io.loadContent(n, {
                  as: "json"
                });

              case 7:
                a = _context171.sent;

                if (!a.methods) {
                  _context171.next = 13;
                  break;
                }

                _context171.next = 11;
                return Ti.Load(a.methods);

              case 11:
                _t145 = _context171.sent;
                _.isArray(_t145) || (_t145 = [_t145]), a.methods = _t145;

              case 13:
                return _context171.abrupt("return", (e("setSchema", a), a));

              case 14:
              case "end":
                return _context171.stop();
            }
          }
        }, _callee170);
      }))();
    },
    reloadLayout: function reloadLayout(_ref164) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee171() {
        var t, e, i, n, a;
        return regeneratorRuntime.wrap(function _callee171$(_context172) {
          while (1) {
            switch (_context172.prev = _context172.next) {
              case 0:
                t = _ref164.state, e = _ref164.commit;
                i = "id:".concat(t.meta.id, "/thing-layout.json");
                _context172.next = 4;
                return Wn.Io.loadMeta(i);

              case 4:
                n = _context172.sent;
                _context172.next = 7;
                return Wn.Io.loadContent(n, {
                  as: "json"
                });

              case 7:
                a = _context172.sent;
                return _context172.abrupt("return", (e("setLayout", a), e("restoreShown"), a));

              case 9:
              case "end":
                return _context172.stop();
            }
          }
        }, _callee171);
      }))();
    },
    reloadActions: function reloadActions(_ref165) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee172() {
        var t, e, i, n, a;
        return regeneratorRuntime.wrap(function _callee172$(_context173) {
          while (1) {
            switch (_context173.prev = _context173.next) {
              case 0:
                t = _ref165.state, e = _ref165.commit;
                i = "id:".concat(t.meta.id, "/thing-actions.json");
                _context173.next = 4;
                return Wn.Io.loadMeta(i);

              case 4:
                n = _context173.sent;
                _context173.next = 7;
                return Wn.Io.loadContent(n, {
                  as: "json"
                });

              case 7:
                a = _context173.sent;
                return _context173.abrupt("return", (e("setActions", a), a));

              case 9:
              case "end":
                return _context173.stop();
            }
          }
        }, _callee172);
      }))();
    },
    reload: function reload(_ref166, n) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee173() {
        var t, e, i;
        return regeneratorRuntime.wrap(function _callee173$(_context174) {
          while (1) {
            switch (_context174.prev = _context174.next) {
              case 0:
                t = _ref166.state, e = _ref166.commit, i = _ref166.dispatch;
                n ? e("setMeta", n) : n = t.meta;
                e("setStatus", {
                  reloading: !0
                });
                _context174.next = 5;
                return i("reloadSchema");

              case 5:
                _context174.next = 7;
                return i("reloadLayout");

              case 7:
                _context174.next = 9;
                return i("reloadActions");

              case 9:
                e("setStatus", {
                  reloading: !1
                });

              case 10:
              case "end":
                return _context174.stop();
            }
          }
        }, _callee173);
      }))();
    }
  };
  Ti.Preload("ti/mod/wn/thing/mod/config/m-thing-config-actions.mjs", t);
}(), Ti.Preload("ti/mod/wn/thing/mod/config/m-thing-config.json", {
  meta: null,
  shown: {
    search: !0,
    meta: !0,
    content: !0,
    files: !1
  },
  listOpen: {
    content: !0
  },
  schema: {},
  layout: {
    deskstop: {},
    tablet: {},
    phone: {}
  },
  actions: [],
  status: {
    reloading: !1,
    saving: !1
  }
}), function () {
  var t = {
    mutations: {
      setMeta: function setMeta(t, e) {
        t.meta = e;
      },
      setStatus: function setStatus(t, e) {
        t.status = _.assign({}, t.status, e);
      },
      setSchema: function setSchema(t, e) {
        t.schema = e;
      },
      setLayout: function setLayout(t, e) {
        t.layout = _.pick(e, ["desktop", "tablet", "phone"]), t.shown = e.shown || {}, t.listOpen = e.listOpen || {};
      },
      setActions: function setActions(t, e) {
        t.actions = e;
      },
      mergeShown: function mergeShown(t, e) {
        e && !_.isEmpty(e) && (t.shown = _.assign({}, t.shown, e));
      },
      persistShown: function persistShown(t) {
        t.meta && t.meta.id && Ti.Storage.session.setObject("".concat(t.meta.id, "-shown"), t.shown);
      },
      restoreShown: function restoreShown(t) {
        if (t.meta && t.meta.id) {
          var e = Ti.Storage.session.getObject("".concat(t.meta.id, "-shown"));
          t.shown = _.assign({}, t.shown, e);
        }
      }
    }
  };
  Ti.Preload("ti/mod/wn/thing/mod/config/m-thing-config.mjs", t);
}(), Ti.Preload("ti/mod/wn/thing/mod/config/_mod.json", {
  namespaced: !0,
  state: "./m-thing-config.json",
  actions: "./m-thing-config-actions.mjs",
  mixins: "./m-thing-config.mjs"
}), function () {
  var t = {
    reloadPage: function reloadPage(_ref167, n) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee174() {
        var t, e, i;
        return regeneratorRuntime.wrap(function _callee174$(_context175) {
          while (1) {
            switch (_context175.prev = _context175.next) {
              case 0:
                t = _ref167.state, e = _ref167.commit, i = _ref167.dispatch;
                e("updatePager", n);
                _context175.next = 4;
                return i("reload");

              case 4:
              case "end":
                return _context175.stop();
            }
          }
        }, _callee174);
      }))();
    },
    reload: function reload(_ref168, n) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee175() {
        var t, e, i, a, _ref169, s, o, l, _t146, _e51, _n24, _iterator89, _step89, _i32, _n25, _e52, r, _t147, _e53, c, d, h;

        return regeneratorRuntime.wrap(function _callee175$(_context176) {
          while (1) {
            switch (_context176.prev = _context176.next) {
              case 0:
                t = _ref168.state, e = _ref168.commit, i = _ref168.rootState;
                n ? e("setMeta", n) : n = t.meta, e("setStatus", {
                  reloading: !0
                });
                a = ["thing id:".concat(n.id, " query -pager -cqn")], _ref169 = t.filter || {}, s = _ref169.keyword, o = _ref169.match, l = {};

                if (!s) {
                  _context176.next = 29;
                  break;
                }

                if (!/^[0-9a-z]{32}$/.test(s)) {
                  _context176.next = 8;
                  break;
                }

                l.id = s;
                _context176.next = 29;
                break;

              case 8:
                _t146 = "title", _e51 = _.get(i, "main.config.schema.behavior") || {}, _n24 = _.keys(_e51.keyword);
                _iterator89 = _createForOfIteratorHelper(_n24);
                _context176.prev = 10;

                _iterator89.s();

              case 12:
                if ((_step89 = _iterator89.n()).done) {
                  _context176.next = 20;
                  break;
                }

                _i32 = _step89.value;
                _n25 = _e51.keyword[_i32];

                if (!new RegExp(_n25).test(s)) {
                  _context176.next = 18;
                  break;
                }

                _t146 = _i32;
                return _context176.abrupt("break", 20);

              case 18:
                _context176.next = 12;
                break;

              case 20:
                _context176.next = 25;
                break;

              case 22:
                _context176.prev = 22;
                _context176.t0 = _context176["catch"](10);

                _iterator89.e(_context176.t0);

              case 25:
                _context176.prev = 25;

                _iterator89.f();

                return _context176.finish(25);

              case 28:
                l[_t146] = "^.*" + s;

              case 29:
                if (_.isEmpty(o) || _.assign(l, o), l.th_live = t.inRecycleBin ? -1 : 1, !_.isEmpty(t.sorter)) {
                  _e52 = JSON.stringify(t.sorter);
                  a.push("-sort '".concat(_e52, "'"));
                }

                r = t.pager;

                if (!_.isEmpty(r) && r.pgsz > 0 && r.pn > 0) {
                  _t147 = r.pgsz, _e53 = r.pgsz * (r.pn - 1);
                  a.push("-limit ".concat(_t147)), a.push("-skip  ".concat(_e53));
                }

                c = _.isEmpty(l) ? void 0 : JSON.stringify(l);
                d = a.join(" ");
                _context176.next = 36;
                return Wn.Sys.exec2(d, {
                  input: c,
                  as: "json"
                });

              case 36:
                h = _context176.sent;
                e("setPager", h.pager), e("setList", h.list), e("setStatus", {
                  reloading: !1
                });

              case 38:
              case "end":
                return _context176.stop();
            }
          }
        }, _callee175, null, [[10, 22, 25, 28]]);
      }))();
    }
  };
  Ti.Preload("ti/mod/wn/thing/mod/search/m-thing-search-actions.mjs", t);
}(), Ti.Preload("ti/mod/wn/thing/mod/search/m-thing-search.json", {
  meta: null,
  filter: {},
  sorter: {
    ct: -1
  },
  inRecycleBin: !1,
  pager: {
    pn: 1,
    pgsz: 50,
    pgc: 0,
    sum: 0,
    skip: 0,
    count: 0
  },
  currentId: null,
  checkedIds: [],
  list: [],
  status: {
    reloading: !1,
    saving: !1,
    deleting: !1
  }
}), function () {
  function t(t, e, i) {
    if (!t) return;
    var n = Ti.Storage.session.getObject(t.id) || {};
    _.defaults(n, {
      filter: {},
      sorter: {},
      pager: {}
    }), n[e] = i, Ti.Storage.session.setObject(t.id, n);
  }

  var e = {
    getters: {
      currentItem: function currentItem(t) {
        if (t.currentId) {
          var _iterator90 = _createForOfIteratorHelper(t.list),
              _step90;

          try {
            for (_iterator90.s(); !(_step90 = _iterator90.n()).done;) {
              var _e54 = _step90.value;
              if (_e54.id == t.currentId) return _e54;
            }
          } catch (err) {
            _iterator90.e(err);
          } finally {
            _iterator90.f();
          }
        }

        return null;
      },
      checkedItems: function checkedItems(t) {
        var e = {};

        var _iterator91 = _createForOfIteratorHelper(t.checkedIds),
            _step91;

        try {
          for (_iterator91.s(); !(_step91 = _iterator91.n()).done;) {
            var _i33 = _step91.value;
            e[_i33] = !0;
          }
        } catch (err) {
          _iterator91.e(err);
        } finally {
          _iterator91.f();
        }

        var i = [];

        var _iterator92 = _createForOfIteratorHelper(t.list),
            _step92;

        try {
          for (_iterator92.s(); !(_step92 = _iterator92.n()).done;) {
            var n = _step92.value;
            e[n.id] && i.push(n);
          }
        } catch (err) {
          _iterator92.e(err);
        } finally {
          _iterator92.f();
        }

        return i;
      }
    },
    mutations: {
      setMeta: function setMeta(t, e) {
        t.meta = e;
      },
      setStatus: function setStatus(t, e) {
        t.status = _.assign({}, t.status, e);
      },
      setFilter: function setFilter(e) {
        var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        e.filter = i, t(e.meta, "filter", e.filter);
      },
      updateFilter: function updateFilter(e) {
        var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        e.filter = _.assign({}, e.filter, i), t(e.meta, "filter", e.filter);
      },
      setSorter: function setSorter(e, i) {
        e.sorter = i, t(e.meta, "sorter", e.sorter);
      },
      setPager: function setPager(e, i) {
        e.pager = i, t(e.meta, "pager", e.pager);
      },
      updatePager: function updatePager(t, e) {
        t.pager = _.defaults({}, e, t.pager);
      },
      setInRecycleBin: function setInRecycleBin(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
        t.inRecycleBin = e;
      },
      setList: function setList(t, e) {
        t.list = e;
      },
      setCurrentId: function setCurrentId(t, e) {
        t.currentId = e || null;
      },
      setCheckedIds: function setCheckedIds(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        t.checkedIds = _.union(e);
      },
      selectItem: function selectItem(t, e) {
        t.currentId != e && (t.currentId = e, t.checkedIds = [], e && t.checkedIds.push(e));
      },
      removeItems: function removeItems(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        var i = -1;
        if (t.currentId) for (var _e55 = 0; _e55 < t.list.length; _e55++) {
          if (t.list[_e55].id == t.currentId) {
            i = _e55;
            break;
          }
        }
        var n = {};

        var _iterator93 = _createForOfIteratorHelper(e),
            _step93;

        try {
          for (_iterator93.s(); !(_step93 = _iterator93.n()).done;) {
            var _t148 = _step93.value;
            n[_t148] = !0;
          }
        } catch (err) {
          _iterator93.e(err);
        } finally {
          _iterator93.f();
        }

        var a = [];

        var _iterator94 = _createForOfIteratorHelper(t.list),
            _step94;

        try {
          for (_iterator94.s(); !(_step94 = _iterator94.n()).done;) {
            var _e56 = _step94.value;
            n[_e56.id] || a.push(_e56);
          }
        } catch (err) {
          _iterator94.e(err);
        } finally {
          _iterator94.f();
        }

        var s = null;
        (i = Math.min(i, a.length - 1)) >= 0 ? (s = a[i], t.currentId = s.id, t.checkedIds = [s.id]) : (t.currentId = null, t.checkedIds = []), t.list = a, t.pager && (t.pager.count = a.length, t.pager.sum = t.pager.pgsz * (t.pager.pgc - 1) + a.length);
      },
      updateItem: function updateItem(t, e) {
        var i = [];

        var _iterator95 = _createForOfIteratorHelper(t.list),
            _step95;

        try {
          for (_iterator95.s(); !(_step95 = _iterator95.n()).done;) {
            var n = _step95.value;
            n.id == e.id ? i.push(_objectSpread({}, e, {
              __updated_time: Date.now()
            })) : i.push(n);
          }
        } catch (err) {
          _iterator95.e(err);
        } finally {
          _iterator95.f();
        }

        t.list = i;
      },
      appendToList: function appendToList(t, e) {
        e && (t.list = [].concat(t.list, e));
      },
      prependToList: function prependToList(t, e) {
        e && (t.list = [].concat(e, t.list));
      }
    }
  };
  Ti.Preload("ti/mod/wn/thing/mod/search/m-thing-search.mjs", e);
}(), Ti.Preload("ti/mod/wn/thing/mod/search/_mod.json", {
  namespaced: !0,
  state: "./m-thing-search.json",
  actions: "./m-thing-search-actions.mjs",
  mixins: "./m-thing-search.mjs"
}), Ti.Preload("ti/mod/wn/thing/_mod.json", {
  name: "wn-thing",
  namespaced: !0,
  state: "./m-thing.json",
  actions: "./m-thing-actions.mjs",
  mixins: "./m-thing.mjs",
  modules: {
    config: "./mod/config",
    search: "./mod/search",
    current: "@mod:wn/obj-current"
  }
}), Ti.Preload("ti/lib/www/com/site-main.html", '<div class="site-main">\n  <ti-gui \n    class="site-page"\n    v-bind="PageGUI"\n    :loading-as="loading"\n    :shown="page.shown"/>\n  \x3c!--pre>{{page}}</pre--\x3e\n</div>'), function () {
  var t = {
    computed: _objectSpread({}, Vuex.mapState({
      siteId: function siteId(t) {
        return t.siteId;
      },
      logo: function logo(t) {
        return t.logo;
      },
      utils: function utils(t) {
        return t.utils;
      },
      page: function page(t) {
        return t.page;
      },
      auth: function auth(t) {
        return t.auth;
      },
      domain: function domain(t) {
        return t.domain;
      },
      base: function base(t) {
        return t.base;
      },
      apiBase: function apiBase(t) {
        return t.apiBase;
      },
      cdnBase: function cdnBase(t) {
        return t.cdnBase;
      },
      captcha: function captcha(t) {
        return t.captcha;
      },
      schema: function schema(t) {
        return t.schema;
      },
      blocks: function blocks(t) {
        return t.blocks;
      },
      loading: function loading(t) {
        return t.loading;
      },
      isReady: function isReady(t) {
        return t.isReady;
      }
    }), {}, Vuex.mapGetters(["actions", "getUrl", "getApiUrl"]), {}, Vuex.mapGetters("page", ["pageLink"]), {
      SiteLogo: function SiteLogo() {
        return this.logo && /\.(png|jpe?g)$/.test(this.logo) ? this.getUrl(this.logo) : this.logo || "zmdi-globe";
      },
      SiteNav: function SiteNav() {
        var _this201 = this;

        var t = {};
        return _.forEach(this.$store.state.nav, function (e, i) {
          t[i] = Ti.WWW.explainNavigation(e, _this201.base);
        }), t;
      },
      SiteCaptcha: function SiteCaptcha() {
        var t = Ti.S.renderBy(this.captcha, {
          site: this.siteId
        });
        return t.startsWith("/") ? t : this.getApiUrl(t);
      },
      SiteLoginMode: function SiteLoginMode() {
        return this.auth.me ? "bind_phone" : "login_by_passwd";
      },
      PageFnSet: function PageFnSet() {
        return Ti.AddGlobalFuncs(this.utils), Ti.GlobalFuncs();
      },
      PageGUI: function PageGUI() {
        var _this202 = this;

        var t = this.page;
        if (!t || !t.layout) return {};
        var e = t.layout;

        if (e) {
          var _t149 = function _t149(e) {
            if (_.isString(e)) {
              var _t150 = /^@BLOCK\(([^ ]+)\)$/.exec(e);

              if (_t150) {
                var _e57 = _t150[1];
                return _.get(_this202.blocks, _e57);
              }
            } else {
              if (_.isArray(e)) return _.map(e, _t149);
              if (_.isPlainObject(e)) return _.mapValues(e, _t149);
            }

            return e;
          };

          e = _t149(e);
        }

        var i = {
          defaultFlex: "none",
          layout: e,
          schema: {},
          canLoading: !0
        };

        _.assign(i.schema, this.schema, t.schema);

        return Ti.Util.explainObj(this, i, {
          fnSet: this.PageFnSet
        });
      }
    }),
    methods: {
      showBlock: function showBlock(t) {
        var _this203 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee176() {
          return regeneratorRuntime.wrap(function _callee176$(_context177) {
            while (1) {
              switch (_context177.prev = _context177.next) {
                case 0:
                  Ti.App(_this203).dispatch("page/showBlock", t);

                case 1:
                case "end":
                  return _context177.stop();
              }
            }
          }, _callee176);
        }))();
      },
      hideBlock: function hideBlock(t) {
        var _this204 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee177() {
          return regeneratorRuntime.wrap(function _callee177$(_context178) {
            while (1) {
              switch (_context178.prev = _context178.next) {
                case 0:
                  Ti.App(_this204).dispatch("page/hideBlock", t);

                case 1:
                case "end":
                  return _context178.stop();
              }
            }
          }, _callee177);
        }))();
      },
      __on_events: function __on_events(t) {
        var _console,
            _this205 = this;

        for (var _len4 = arguments.length, e = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
          e[_key4 - 1] = arguments[_key4];
        }

        return (_console = console).log.apply(_console, ["site-main.__on_events", t].concat(e)), "block:show" == t ? function (t) {
          return _this205.showBlock(t);
        } : "block:hide" == t ? function (t) {
          return _this205.hideBlock(t);
        } : function () {
          for (var _len5 = arguments.length, e = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
            e[_key5] = arguments[_key5];
          }

          _this205.invokeAction(t, e);
        };
      },
      invokeAction: function invokeAction(t) {
        var _arguments35 = arguments,
            _this206 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee178() {
          var e, i, _e58, _e59, _e60, _t151, _n26, n, _iterator96, _step96, _t152;

          return regeneratorRuntime.wrap(function _callee178$(_context179) {
            while (1) {
              switch (_context179.prev = _context179.next) {
                case 0:
                  e = _arguments35.length > 1 && _arguments35[1] !== undefined ? _arguments35[1] : [];
                  i = _.get(_this206.actions, t);

                  if (i) {
                    _context179.next = 11;
                    break;
                  }

                  _e58 = _.split(t, "::");

                case 4:
                  if (!(_e58.length > 1)) {
                    _context179.next = 11;
                    break;
                  }

                  _e59 = _e58, _e60 = _toArray(_e59), _t151 = _e60.slice(1), _n26 = _t151.join("::");

                  if (!(i = _.get(_this206.actions, _n26))) {
                    _context179.next = 8;
                    break;
                  }

                  return _context179.abrupt("break", 11);

                case 8:
                  _e58 = _t151;

                case 9:
                  _context179.next = 4;
                  break;

                case 11:
                  if (i) {
                    _context179.next = 13;
                    break;
                  }

                  return _context179.abrupt("return");

                case 13:
                  n = Ti.App(_this206);

                  if (!_.isArray(i)) {
                    _context179.next = 34;
                    break;
                  }

                  _iterator96 = _createForOfIteratorHelper(i);
                  _context179.prev = 16;

                  _iterator96.s();

                case 18:
                  if ((_step96 = _iterator96.n()).done) {
                    _context179.next = 24;
                    break;
                  }

                  _t152 = _step96.value;
                  _context179.next = 22;
                  return n.dispatch("doAction", {
                    action: _t152.action,
                    payload: _t152.payload,
                    args: e
                  });

                case 22:
                  _context179.next = 18;
                  break;

                case 24:
                  _context179.next = 29;
                  break;

                case 26:
                  _context179.prev = 26;
                  _context179.t0 = _context179["catch"](16);

                  _iterator96.e(_context179.t0);

                case 29:
                  _context179.prev = 29;

                  _iterator96.f();

                  return _context179.finish(29);

                case 32:
                  _context179.next = 41;
                  break;

                case 34:
                  if (!_.isString(i)) {
                    _context179.next = 39;
                    break;
                  }

                  _context179.next = 37;
                  return n.dispatch("doAction", {
                    action: i,
                    args: e
                  });

                case 37:
                  _context179.next = 41;
                  break;

                case 39:
                  _context179.next = 41;
                  return n.dispatch("doAction", {
                    action: i.action,
                    payload: i.payload,
                    args: e
                  });

                case 41:
                case "end":
                  return _context179.stop();
              }
            }
          }, _callee178, null, [[16, 26, 29, 32]]);
        }))();
      },
      pushBrowserHistory: function pushBrowserHistory() {
        var t = window.history;
        if (!t) return;
        var e = window.location,
            i = [e.pathname, e.search, e.hash].join(""),
            n = this.getUrl(this.pageLink);
        i != n && t.pushState(this.page, this.page.title, n);
      }
    },
    watch: {
      "page.finger": function pageFinger() {
        var t = Ti.Util.explainObj(this, this.page.title);
        document.title = t, this.pushBrowserHistory();
      },
      isReady: function isReady(t, e) {
        !0 === t && !1 === e && this.invokeAction("@page:ready", {});
      }
    },
    mounted: function mounted() {
      var _this207 = this;

      window.onpopstate = function (t) {
        var e = t.state;

        if (e && e.path) {
          console.log("window.onpopstate", e);
          Ti.App(_this207).dispatch("navTo", {
            type: "page",
            value: e.path,
            params: e.params,
            anchor: e.anchor
          });
        }
      };
    }
  };
  Ti.Preload("ti/lib/www/com/site-main.mjs", t);
}(), Ti.Preload("ti/lib/www/mod/auth/www-mod-auth.json", {
  ticket: null,
  expi: 0,
  me: null,
  paths: {
    checkme: "auth/checkme",
    login_by_wxcode: "auth/login_by_wxcode",
    login_by_phone: "auth/login_by_phone",
    login_by_email: "auth/login_by_email",
    login_by_passwd: "auth/login_by_passwd",
    bind_phone: "auth/bind_account",
    bind_email: "auth/bind_account",
    get_sms_vcode: "auth/get_sms_vcode",
    get_email_vcode: "auth/get_email_vcode",
    check_name: "auth/check_name",
    check_phone: "auth/check_phone",
    logout: "auth/logout"
  }
}), function () {
  var t = {
    getters: {
      hasSession: function hasSession(t) {
        return !_.isEmpty(t.ticket) && t.expi > Date.now() && !_.isEmpty(t.me);
      },
      sessionState: function sessionState(t, e) {
        return {
          ok: e.hasSession,
          data: {
            me: t.me || null,
            ticket: t.ticket || null,
            expi: t.expi || 0
          }
        };
      },
      urls: function urls(t, e, i, n) {
        var a = {};
        return _.forEach(t.paths, function (t, e) {
          a[e] = n.getApiUrl(t);
        }), a;
      }
    },
    mutations: {
      setTicket: function setTicket(t, e) {
        t.ticket = e;
      },
      setExpi: function setExpi(t, e) {
        t.expi = e;
      },
      setMe: function setMe(t, e) {
        t.me = e;
      },
      setPaths: function setPaths(t, e) {
        _.assign(t.paths, e);
      },
      mergePaths: function mergePaths(t, e) {
        _.merge(t.paths, e);
      }
    },
    actions: {
      doCheckMe: function doCheckMe(_ref170) {
        var _arguments36 = arguments;
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee179() {
          var t, e, i, n, a, _ref171, _ref171$force, s, o, l, r, c, d, h;

          return regeneratorRuntime.wrap(function _callee179$(_context180) {
            while (1) {
              switch (_context180.prev = _context180.next) {
                case 0:
                  t = _ref170.state, e = _ref170.commit, i = _ref170.dispatch, n = _ref170.getters, a = _ref170.rootState;
                  _ref171 = _arguments36.length > 1 && _arguments36[1] !== undefined ? _arguments36[1] : {}, _ref171$force = _ref171.force, s = _ref171$force === void 0 ? !1 : _ref171$force, o = _ref171.success, l = _ref171.fail, r = _ref171.nophone;
                  console.log("I am doCheckMe", {
                    force: s,
                    success: o,
                    fail: l,
                    nophone: r
                  });
                  c = a.siteId;

                  if (c) {
                    _context180.next = 6;
                    break;
                  }

                  return _context180.abrupt("return", void Ti.Alert("Without siteId!!!"));

                case 6:
                  d = Ti.Storage.local.getString("www-ticket-".concat(c), "");
                  e("setLoading", !0, {
                    root: !0
                  });
                  h = n.sessionState;
                  _context180.t0 = !d || !s && h.ok;

                  if (_context180.t0) {
                    _context180.next = 14;
                    break;
                  }

                  _context180.next = 13;
                  return Ti.Http.get(n.urls.checkme, {
                    params: {
                      site: c,
                      ticket: d
                    },
                    as: "json"
                  });

                case 13:
                  h = _context180.sent;

                case 14:
                  e("setLoading", !1, {
                    root: !0
                  });

                  if (!h.ok) {
                    _context180.next = 27;
                    break;
                  }

                  if (!(console.log("checkme OK", h), e("setTicket", h.data.ticket), e("setExpi", h.data.expi), e("setMe", h.data.me), r)) {
                    _context180.next = 21;
                    break;
                  }

                  if (h.data.me.phone) {
                    _context180.next = 21;
                    break;
                  }

                  _context180.next = 20;
                  return i(r.action, r.payload, {
                    root: !0
                  });

                case 20:
                  return _context180.abrupt("return", void _context180.sent);

                case 21:
                  _context180.t1 = o;

                  if (!_context180.t1) {
                    _context180.next = 25;
                    break;
                  }

                  _context180.next = 25;
                  return i(o.action, o.payload, {
                    root: !0
                  });

                case 25:
                  _context180.next = 31;
                  break;

                case 27:
                  _context180.t2 = l;

                  if (!_context180.t2) {
                    _context180.next = 31;
                    break;
                  }

                  _context180.next = 31;
                  return i(l.action, l.payload, {
                    root: !0
                  });

                case 31:
                case "end":
                  return _context180.stop();
              }
            }
          }, _callee179);
        }))();
      },
      autoCheckmeOrAuthByWxghCode: function autoCheckmeOrAuthByWxghCode(_ref172) {
        var _arguments37 = arguments;
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee180() {
          var t, _ref173, _ref173$codeKey, e, _ref173$codeTypeBy, i, _ref173$force, n, a, s;

          return regeneratorRuntime.wrap(function _callee180$(_context181) {
            while (1) {
              switch (_context181.prev = _context181.next) {
                case 0:
                  t = _ref172.dispatch;
                  _ref173 = _arguments37.length > 1 && _arguments37[1] !== undefined ? _arguments37[1] : {}, _ref173$codeKey = _ref173.codeKey, e = _ref173$codeKey === void 0 ? "code" : _ref173$codeKey, _ref173$codeTypeBy = _ref173.codeTypeBy, i = _ref173$codeTypeBy === void 0 ? "ct" : _ref173$codeTypeBy, _ref173$force = _ref173.force, n = _ref173$force === void 0 ? !1 : _ref173$force, a = _ref173.fail, s = _ref173.nophone;
                  console.log("autoCheckmeOrAuthByWxghCode"), t("doCheckMe", {
                    force: n,
                    fail: {
                      action: "auth/authByWxghCode",
                      payload: {
                        codeKey: e,
                        codeTypeBy: i,
                        fail: function fail() {
                          a && t(a.action, a.payload, {
                            root: !0
                          });
                        },
                        ok: function ok() {
                          var _ref174 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                              _ref174$me = _ref174.me,
                              e = _ref174$me === void 0 ? {} : _ref174$me;

                          s && (e.phone || t(s.action, s.payload, {
                            root: !0
                          }));
                        }
                      }
                    }
                  });

                case 3:
                case "end":
                  return _context181.stop();
              }
            }
          }, _callee180);
        }))();
      },
      authByWxghCode: function authByWxghCode(_ref175) {
        var _arguments38 = arguments;
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee181() {
          var t, e, i, _ref176, _ref176$codeKey, n, _ref176$codeTypeBy, a, _ref176$done, s, _ref176$ok, o, _ref176$fail, l, _ref176$invalid, r, _ref176$others, c, d, h, m, u, p, f;

          return regeneratorRuntime.wrap(function _callee181$(_context182) {
            while (1) {
              switch (_context182.prev = _context182.next) {
                case 0:
                  t = _ref175.commit, e = _ref175.getters, i = _ref175.rootState;
                  _ref176 = _arguments38.length > 1 && _arguments38[1] !== undefined ? _arguments38[1] : {}, _ref176$codeKey = _ref176.codeKey, n = _ref176$codeKey === void 0 ? "code" : _ref176$codeKey, _ref176$codeTypeBy = _ref176.codeTypeBy, a = _ref176$codeTypeBy === void 0 ? "ct" : _ref176$codeTypeBy, _ref176$done = _ref176.done, s = _ref176$done === void 0 ? _.identity : _ref176$done, _ref176$ok = _ref176.ok, o = _ref176$ok === void 0 ? _.identity : _ref176$ok, _ref176$fail = _ref176.fail, l = _ref176$fail === void 0 ? _.identity : _ref176$fail, _ref176$invalid = _ref176.invalid, r = _ref176$invalid === void 0 ? _.identity : _ref176$invalid, _ref176$others = _ref176.others, c = _ref176$others === void 0 ? _.identity : _ref176$others;
                  d = i.page.params[n];

                  if (d) {
                    _context182.next = 5;
                    break;
                  }

                  return _context182.abrupt("return");

                case 5:
                  h = i.page.params[a];
                  console.log("authByWxghCode", {
                    codeType: h,
                    code: d
                  });
                  m = i.siteId;

                  if (m) {
                    _context182.next = 10;
                    break;
                  }

                  return _context182.abrupt("return", void Ti.Alert("Without siteId!!!"));

                case 10:
                  u = e.urls.login_by_wxcode;
                  p = {
                    site: m,
                    code: d,
                    ct: h
                  };
                  _context182.next = 14;
                  return Ti.Http.get(u, {
                    params: p,
                    as: "json"
                  });

                case 14:
                  f = _context182.sent;
                  console.log(f), s(f), f.ok && f.data ? (Ti.Storage.local.set("www-ticket-".concat(m), f.data.ticket), t("setTicket", f.data.ticket), t("setExpi", f.data.expi), t("setMe", f.data.me), o(f.data)) : (/^e.www.login.invalid/.test(f.errCode) ? r(f) : c(f), l(f));

                case 16:
                case "end":
                  return _context182.stop();
              }
            }
          }, _callee181);
        }))();
      },
      doAuth: function doAuth(_ref177) {
        var _arguments39 = arguments;
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee182() {
          var _y;

          var t, e, i, _ref178, _ref178$type, n, a, s, _ref178$done, o, _ref178$ok, l, _ref178$fail, r, _ref178$noexist, c, _ref178$invalid, d, _ref178$others, h, m, u, p, f, y, g;

          return regeneratorRuntime.wrap(function _callee182$(_context183) {
            while (1) {
              switch (_context183.prev = _context183.next) {
                case 0:
                  t = _ref177.commit, e = _ref177.getters, i = _ref177.rootState;
                  _ref178 = _arguments39.length > 1 && _arguments39[1] !== undefined ? _arguments39[1] : {}, _ref178$type = _ref178.type, n = _ref178$type === void 0 ? "login_by_passwd" : _ref178$type, a = _ref178.name, s = _ref178.passwd, _ref178$done = _ref178.done, o = _ref178$done === void 0 ? _.identity : _ref178$done, _ref178$ok = _ref178.ok, l = _ref178$ok === void 0 ? _.identity : _ref178$ok, _ref178$fail = _ref178.fail, r = _ref178$fail === void 0 ? _.identity : _ref178$fail, _ref178$noexist = _ref178.noexist, c = _ref178$noexist === void 0 ? _.identity : _ref178$noexist, _ref178$invalid = _ref178.invalid, d = _ref178$invalid === void 0 ? _.identity : _ref178$invalid, _ref178$others = _ref178.others, h = _ref178$others === void 0 ? _.identity : _ref178$others;
                  console.log("doAuth", a, s);
                  m = i.siteId;

                  if (m) {
                    _context183.next = 6;
                    break;
                  }

                  return _context183.abrupt("return", void Ti.Alert("Without siteId!!!"));

                case 6:
                  u = e.urls[n], p = Ti.Storage.local.getString("www-ticket-".concat(m), ""), f = {
                    login_by_passwd: "passwd",
                    login_by_phone: "vcode",
                    login_by_email: "vcode",
                    bind_phone: "vcode",
                    bind_email: "vcode"
                  }[n];

                  if (f) {
                    _context183.next = 9;
                    break;
                  }

                  throw "Unknown auth type: " + n;

                case 9:
                  y = (_y = {
                    site: m,
                    name: a
                  }, _defineProperty(_y, f, s), _defineProperty(_y, "ticket", p), _defineProperty(_y, "ajax", !0), _y);
                  _context183.next = 12;
                  return Ti.Http.post(u, {
                    params: y,
                    as: "json"
                  });

                case 12:
                  g = _context183.sent;
                  console.log(g), o(g), g.ok && g.data ? (Ti.Storage.local.set("www-ticket-".concat(m), g.data.ticket), t("setTicket", g.data.ticket), t("setExpi", g.data.expi), t("setMe", g.data.me), l(g.data)) : ("e.www.login.noexists" == g.errCode ? c(g) : /^e.www.login.invalid/.test(g.errCode) ? d(g) : h(g), r(g));

                case 14:
                case "end":
                  return _context183.stop();
              }
            }
          }, _callee182);
        }))();
      },
      doGetVcode: function doGetVcode(_ref179) {
        var _arguments40 = arguments;
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee183() {
          var t, e, _ref180, _ref180$type, i, _ref180$scene, n, a, s, _ref180$done, o, _ref180$ok, l, _ref180$fail, r, c, d, h, m, u;

          return regeneratorRuntime.wrap(function _callee183$(_context184) {
            while (1) {
              switch (_context184.prev = _context184.next) {
                case 0:
                  t = _ref179.getters, e = _ref179.rootState;
                  _ref180 = _arguments40.length > 1 && _arguments40[1] !== undefined ? _arguments40[1] : {}, _ref180$type = _ref180.type, i = _ref180$type === void 0 ? "login_by_phone" : _ref180$type, _ref180$scene = _ref180.scene, n = _ref180$scene === void 0 ? "auth" : _ref180$scene, a = _ref180.account, s = _ref180.captcha, _ref180$done = _ref180.done, o = _ref180$done === void 0 ? _.identity : _ref180$done, _ref180$ok = _ref180.ok, l = _ref180$ok === void 0 ? _.identity : _ref180$ok, _ref180$fail = _ref180.fail, r = _ref180$fail === void 0 ? _.identity : _ref180$fail;
                  console.log("getVcode", {
                    type: i,
                    scene: n,
                    account: a,
                    captcha: s
                  });
                  c = e.siteId;

                  if (c) {
                    _context184.next = 6;
                    break;
                  }

                  return _context184.abrupt("return", void Ti.Alert("Without siteId!!!"));

                case 6:
                  d = {
                    login_by_phone: "get_sms_vcode",
                    login_by_email: "get_email_vcode",
                    bind_phone: "get_sms_vcode",
                    bind_email: "get_email_vcode"
                  }[i], h = t.urls[d];

                  if (!(!d || !h)) {
                    _context184.next = 11;
                    break;
                  }

                  _context184.next = 10;
                  return Ti.Toast.Open("Invalid type: ".concat(i), "error");

                case 10:
                  return _context184.abrupt("return", _context184.sent);

                case 11:
                  m = {
                    site: c,
                    scene: n,
                    account: a,
                    captcha: s
                  };
                  _context184.next = 14;
                  return Ti.Http.get(h, {
                    params: m,
                    as: "json"
                  });

                case 14:
                  u = _context184.sent;
                  console.log(u), o(u), u.ok && u.data ? l(u.data) : r(u);

                case 16:
                case "end":
                  return _context184.stop();
              }
            }
          }, _callee183);
        }))();
      },
      doLogout: function doLogout(_ref181) {
        var _arguments41 = arguments;
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee184() {
          var t, e, i, _ref182, _ref182$done, n, _ref182$ok, a, _ref182$fail, s, o, l, r, c, d;

          return regeneratorRuntime.wrap(function _callee184$(_context185) {
            while (1) {
              switch (_context185.prev = _context185.next) {
                case 0:
                  t = _ref181.commit, e = _ref181.getters, i = _ref181.rootState;
                  _ref182 = _arguments41.length > 1 && _arguments41[1] !== undefined ? _arguments41[1] : {}, _ref182$done = _ref182.done, n = _ref182$done === void 0 ? _.identity : _ref182$done, _ref182$ok = _ref182.ok, a = _ref182$ok === void 0 ? _.identity : _ref182$ok, _ref182$fail = _ref182.fail, s = _ref182$fail === void 0 ? _.identity : _ref182$fail;
                  console.log("doLogout");
                  o = i.siteId;

                  if (o) {
                    _context185.next = 6;
                    break;
                  }

                  return _context185.abrupt("return", void Ti.Alert("Without siteId!!!"));

                case 6:
                  if (!(Ti.Storage.local.remove("www-ticket-".concat(o)), !e.hasSession)) {
                    _context185.next = 8;
                    break;
                  }

                  return _context185.abrupt("return", void s(e.sessionState));

                case 8:
                  l = e.sessionState, r = e.urls.logout, c = {
                    site: o,
                    ticket: l.ticket
                  };
                  t("setLoading", {
                    text: "i18n:logout-ing"
                  }, {
                    root: !0
                  });
                  _context185.next = 12;
                  return Ti.Http.post(r, {
                    params: c,
                    as: "json"
                  });

                case 12:
                  d = _context185.sent;
                  console.log(d), t("setTicket", null), t("setExpi", 0), t("setMe", null), t("setLoading", !1, {
                    root: !0
                  }), n(d), d.ok ? a(d.data) : s(d);

                case 14:
                case "end":
                  return _context185.stop();
              }
            }
          }, _callee184);
        }))();
      }
    }
  };
  Ti.Preload("ti/lib/www/mod/auth/www-mod-auth.mjs", t);
}(), Ti.Preload("ti/lib/www/mod/auth/_mod.json", {
  name: "www-mod-auth",
  namespaced: !0,
  state: "./www-mod-auth.json",
  mixins: "./www-mod-auth.mjs"
}), Ti.Preload("ti/lib/www/mod/page/www-mod-page.json", {
  title: null,
  path: null,
  finger: null,
  params: {},
  anchor: null,
  apis: {},
  data: {},
  layout: {
    desktop: {},
    tablet: "desktop",
    phone: "desktop"
  },
  shown: {},
  schema: {},
  actions: {}
}), function () {
  var _mutations;

  var t = {
    getters: {
      pageLink: function pageLink(_ref183) {
        var t = _ref183.path,
            e = _ref183.params,
            i = _ref183.anchor;
        var n = [t];

        if (!_.isEmpty(e)) {
          var _t153 = [];
          _.forEach(e, function (e, i) {
            Ti.Util.isNil(e) || _t153.push("".concat(i, "=").concat(encodeURIComponent(e)));
          }), _.isEmpty(_t153) || n.push("?".concat(_t153.join("&")));
        }

        return i && n.push("#".concat(i)), n.join("");
      },
      pageApis: function pageApis(t, e, i, n) {
        var a = i.apiBase || "/",
            s = i.apis || {},
            o = {};
        return _.forEach(t.apis, function (t, e) {
          var i = _.get(s, t.apiName || e),
              n = _.cloneDeep(i);

          _.defaults(n, {
            method: "GET",
            headers: {},
            params: {},
            vars: {},
            as: "json"
          }), n.path ? (_.assign(n.vars, t.vars), _.assign(n.headers, t.headers), _.forEach(n.params, function (e, i) {
            var n = _.get(t.params, i);

            _.isUndefined(n) || (e.value = n);
          }), /^(https?:\/\/|\/)/.test(n.path) ? n.url = n.path : n.url = Ti.Util.appendPath(a, n.path), _.assign(n, _.pick(t, "body", "preload", "serializer", "dataKey")), _.defaults(n, {
            bodyType: "form",
            dataKey: e
          }), o[e] = n) : console.warn("!!!API[".concat(e, "] without defined in site!!!"), n);
        }), o;
      }
    },
    mutations: (_mutations = {
      set: function set(t, e) {
        _.assign(t, e);
      },
      setTitle: function setTitle(t, e) {
        t.title = e;
      },
      setPath: function setPath(t, e) {
        t.path = e;
      }
    }, _defineProperty(_mutations, "setPath", function setPath(t, e) {
      t.path = e;
    }), _defineProperty(_mutations, "setParams", function setParams(t, e) {
      t.params = e;
    }), _defineProperty(_mutations, "mergeParams", function mergeParams(t, e) {
      !_.isEmpty(e) && _.isPlainObject(e) && (t.params = _.merge({}, t.params, e));
    }), _defineProperty(_mutations, "setData", function setData(t, e) {
      t.data = e;
    }), _defineProperty(_mutations, "updateData", function updateData(t, _ref184) {
      var e = _ref184.key,
          i = _ref184.value;
      if (!_.isUndefined(i)) if (e) {
        var n = _.set({}, e, i);

        t.data = _.assign({}, t.data, n);
      } else _.isPlainObject(i) && (t.data = _.assign({}, t.data, i));
    }), _defineProperty(_mutations, "mergeData", function mergeData(t, e) {
      !_.isEmpty(e) && _.isPlainObject(e) && (t.data = _.merge({}, t.data, e));
    }), _defineProperty(_mutations, "setLayout", function setLayout(t, e) {
      t.layout = e;
    }), _defineProperty(_mutations, "setShown", function setShown(t, e) {
      _.assign(t.shown, e);
    }), _defineProperty(_mutations, "updateFinger", function updateFinger(t) {
      var e = [t.path, t.params, t.anchor, t.data],
          i = Ti.Alg.sha1(e);
      t.finger = i;
    }), _mutations),
    actions: {
      showBlock: function showBlock(_ref185, e) {
        var t = _ref185.commit;
        t("setShown", _defineProperty({}, e, !0));
      },
      hideBlock: function hideBlock(_ref186, e) {
        var t = _ref186.commit;
        t("setShown", _defineProperty({}, e, !1));
      },
      changeData: function changeData(_ref187, e) {
        var t = _ref187.commit;
        t("mergeData", Ti.Util.merge({}, e));
      },
      changeParams: function changeParams(_ref188, e) {
        var t = _ref188.commit;
        t("mergeParams", Ti.Util.merge({}, e)), t("updateFinger");
      },
      shiftData: function shiftData(_ref189) {
        var t = _ref189.state,
            e = _ref189.commit;
        var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        if (!_.isEmpty(i) && _.isPlainObject(i)) {
          var n = {};
          Ti.Util.walk(i, {
            leaf: function leaf(e, i) {
              var a = _.get(t.data, i);

              _.isNumber(a) && _.isString(e) && /^[+-][0-9.]+$/.test(e) ? _.set(n, i, a + 1 * e) : _.set(n, i, e);
            }
          }), e("mergeData", n);
        }
      },
      assertPage: function assertPage(_ref190) {
        var t = _ref190.rootState,
            e = _ref190.dispatch;

        var _ref191 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            _ref191$checkList = _ref191.checkList,
            i = _ref191$checkList === void 0 ? [] : _ref191$checkList,
            _ref191$fail = _ref191.fail,
            n = _ref191$fail === void 0 ? {} : _ref191$fail;

        var a = !1;

        var _iterator97 = _createForOfIteratorHelper(i),
            _step97;

        try {
          for (_iterator97.s(); !(_step97 = _iterator97.n()).done;) {
            var _e61 = _step97.value;

            var _i34 = _.get(t, _e61.target);

            if (!Ti.Validate.checkBy(_e61.assert, _i34)) {
              a = !0;
              break;
            }
          }
        } catch (err) {
          _iterator97.e(err);
        } finally {
          _iterator97.f();
        }

        a && n.action && e("doAction", n, {
          root: !0
        });
      },
      reloadData: function reloadData(_ref192) {
        var _arguments42 = arguments;
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee185() {
          var t, e, i, n, a, s, o, _iterator98, _step98, _loop3;

          return regeneratorRuntime.wrap(function _callee185$(_context187) {
            while (1) {
              switch (_context187.prev = _context187.next) {
                case 0:
                  t = _ref192.state, e = _ref192.commit, i = _ref192.getters, n = _ref192.rootState;
                  a = _arguments42.length > 1 && _arguments42[1] !== undefined ? _arguments42[1] : [];
                  console.log("reloadData", a);
                  s = _.isEmpty(a), o = _.filter(i.pageApis, function (t, e) {
                    return s && t.preload > 0 || _.indexOf(a, e) >= 0;
                  });
                  o.sort(function (t, e) {
                    return t.preload - e.preload;
                  });
                  _iterator98 = _createForOfIteratorHelper(o);
                  _context187.prev = 6;
                  _loop3 = /*#__PURE__*/regeneratorRuntime.mark(function _loop3() {
                    var t, i, _e62, a, _e63, s, o, _e64;

                    return regeneratorRuntime.wrap(function _loop3$(_context186) {
                      while (1) {
                        switch (_context186.prev = _context186.next) {
                          case 0:
                            t = _step98.value;
                            i = t.url;

                            if (!_.isEmpty(t.vars)) {
                              _e62 = Ti.Util.explainObj(n, t.vars);
                              i = Ti.S.renderBy(i, _e62);
                            }

                            a = _.pick(t, ["method", "as"]);

                            if (a.headers = Ti.Util.explainObj(n, t.headers), a.params = {}, _.forEach(t.params, function (t, e) {
                              var s = Ti.Util.explainObj(n, t.value);

                              if (t.required && Ti.Util.isNil(s)) {
                                var _t156 = "".concat(i, ": lack required param: ").concat(e);

                                throw Ti.Toast.Open(_t156, "error"), _t156;
                              }

                              a.params[e] = s;
                            }), "POST" == t.method && t.body) {
                              _e63 = Ti.Util.explainObj(n, t.body);
                              "json" == t.bodyType ? a.body = JSON.stringify(_e63) : "text" == t.bodyType ? a.body = Ti.Types.toStr(_e63) : a.body = Ti.Http.encodeFormData(_e63);
                            }

                            _context186.next = 7;
                            return Ti.Http.sendAndProcess(i, a);

                          case 7:
                            s = _context186.sent;
                            o = s;

                            if (t.serializer) {
                              _e64 = Ti.Util.genInvoking(t.serializer, {
                                context: n,
                                partialRight: !0
                              });
                              _.isFunction(_e64) && (o = _e64(s));
                            }

                            e("updateData", {
                              key: t.dataKey,
                              value: o
                            });

                          case 11:
                          case "end":
                            return _context186.stop();
                        }
                      }
                    }, _loop3);
                  });

                  _iterator98.s();

                case 9:
                  if ((_step98 = _iterator98.n()).done) {
                    _context187.next = 13;
                    break;
                  }

                  return _context187.delegateYield(_loop3(), "t0", 11);

                case 11:
                  _context187.next = 9;
                  break;

                case 13:
                  _context187.next = 18;
                  break;

                case 15:
                  _context187.prev = 15;
                  _context187.t1 = _context187["catch"](6);

                  _iterator98.e(_context187.t1);

                case 18:
                  _context187.prev = 18;

                  _iterator98.f();

                  return _context187.finish(18);

                case 21:
                  e("setLoading", !0, {
                    root: !0
                  }), e("setLoading", !1, {
                    root: !0
                  }), e("updateFinger");

                case 22:
                case "end":
                  return _context187.stop();
              }
            }
          }, _callee185, null, [[6, 15, 18, 21]]);
        }))();
      },
      reload: function reload(_ref193, _ref194) {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee186() {
          var t, e, i, n, a, _ref194$params, s, o, _iterator99, _step99, _t157, l, r;

          return regeneratorRuntime.wrap(function _callee186$(_context188) {
            while (1) {
              switch (_context188.prev = _context188.next) {
                case 0:
                  t = _ref193.commit, e = _ref193.dispatch, i = _ref193.rootGetters;
                  n = _ref194.path, a = _ref194.anchor, _ref194$params = _ref194.params, s = _ref194$params === void 0 ? {} : _ref194$params;
                  console.log("page.reload", {
                    path: n,
                    params: s,
                    anchor: a
                  });
                  _iterator99 = _createForOfIteratorHelper(i.routerList);
                  _context188.prev = 4;

                  _iterator99.s();

                case 6:
                  if ((_step99 = _iterator99.n()).done) {
                    _context188.next = 12;
                    break;
                  }

                  _t157 = _step99.value;

                  if (!((o = _t157(n)) && o.path)) {
                    _context188.next = 10;
                    break;
                  }

                  return _context188.abrupt("break", 12);

                case 10:
                  _context188.next = 6;
                  break;

                case 12:
                  _context188.next = 17;
                  break;

                case 14:
                  _context188.prev = 14;
                  _context188.t0 = _context188["catch"](4);

                  _iterator99.e(_context188.t0);

                case 17:
                  _context188.prev = 17;

                  _iterator99.f();

                  return _context188.finish(17);

                case 20:
                  if (!(!o || !o.path)) {
                    _context188.next = 24;
                    break;
                  }

                  _context188.next = 23;
                  return Ti.Toast.Open("Page ${path} not found!", {
                    type: "error",
                    position: "center",
                    vars: {
                      path: n
                    }
                  });

                case 23:
                  return _context188.abrupt("return", _context188.sent);

                case 24:
                  _context188.next = 26;
                  return Ti.Load("@Site:".concat(o.path, ".json"));

                case 26:
                  l = _context188.sent;
                  a && (o.anchor = a), o.params = _.merge({}, o.params, s), o.path = n;
                  r = _.merge({
                    title: null,
                    apis: {},
                    data: {},
                    layout: {},
                    params: {},
                    shown: {},
                    schema: {},
                    actions: {}
                  }, l, o);
                  t("set", r);
                  console.log(" --\x3e", r);
                  _context188.next = 33;
                  return e("reloadData");

                case 33:
                case "end":
                  return _context188.stop();
              }
            }
          }, _callee186, null, [[4, 14, 17, 20]]);
        }))();
      }
    }
  };
  Ti.Preload("ti/lib/www/mod/page/www-mod-page.mjs", t);
}(), Ti.Preload("ti/lib/www/mod/page/_mod.json", {
  name: "www-mod-page",
  namespaced: !0,
  state: "./www-mod-page.json",
  mixins: "./www-mod-page.mjs"
}), function () {
  var t = {
    getters: {
      routerList: function routerList(t) {
        var e = [];
        return _.forEach(t.router, function () {
          var _ref195 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
              t = _ref195.match,
              _ref195$names = _ref195.names,
              i = _ref195$names === void 0 ? [] : _ref195$names,
              _ref195$page = _ref195.page,
              n = _ref195$page === void 0 ? {} : _ref195$page;

          var a = new RegExp(t);
          e.push(function (t) {
            var e = a.exec(t);

            if (e) {
              var _t158 = {};

              for (var _n27 = 0; _n27 < e.length; _n27++) {
                var _a9 = e[_n27];
                _t158[_n27] = _a9, _.nth(i, _n27) && _.set(_t158, key, _a9);
              }

              return Ti.Util.explainObj(_t158, n);
            }
          });
        }), e;
      },
      actions: function actions(t) {
        var e = _.cloneDeep(t.actions);

        e = _.mapValues(e, function (t) {
          return _.isString(t) ? {
            action: t
          } : t;
        });
        var i = t.page;
        return i && _.forEach(i.actions, function (t, i) {
          var n = t;
          _.isString(t) && (n = {
            action: t
          });
          var a = e[i];
          if (_.isArray(a)) {
            if (_.isArray(n)) {
              if (n.length > 0) if ("+" == n[0]) for (var _t159 = 1; _t159 < n.length; _t159++) {
                a.push(n[_t159]);
              } else e[i] = n;
            } else a.push(n);
          } else e[i] = n;
        }), e;
      },
      getUrl: function getUrl(t) {
        return function (e) {
          return Ti.Util.appendPath(t.base, e);
        };
      },
      getApiUrl: function getApiUrl(t) {
        return function (e) {
          return e.startsWith("/") ? e : Ti.Util.appendPath(t.apiBase, e);
        };
      }
    },
    mutations: {
      setSiteId: function setSiteId(t, e) {
        t.siteId = e;
      },
      setDomain: function setDomain(t, e) {
        t.domain = e, t.base = Ti.S.renderBy(t.base || "/www/${domain}/", {
          domain: e
        }), t.apiBase = Ti.S.renderBy(t.apiBase || "/api/${domain}/", {
          domain: e
        });
      },
      setLoading: function setLoading(t, e) {
        t.loading = e;
      },
      setPageReady: function setPageReady(t, e) {
        t.isReady = e;
      }
    },
    actions: {
      navBackward: function navBackward() {
        window.history && window.history.back();
      },
      openUrl: function openUrl(_ref196, _ref197) {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee187() {
          var t, e, _ref197$target, i, _ref197$method, n, _ref197$params, a, _ref197$delay, s;

          return regeneratorRuntime.wrap(function _callee187$(_context189) {
            while (1) {
              switch (_context189.prev = _context189.next) {
                case 0:
                  t = _ref196.state;
                  e = _ref197.url, _ref197$target = _ref197.target, i = _ref197$target === void 0 ? "_self" : _ref197$target, _ref197$method = _ref197.method, n = _ref197$method === void 0 ? "GET" : _ref197$method, _ref197$params = _ref197.params, a = _ref197$params === void 0 ? {} : _ref197$params, _ref197$delay = _ref197.delay, s = _ref197$delay === void 0 ? 0 : _ref197$delay;
                  _context189.next = 4;
                  return Ti.Be.Open(e, {
                    target: i,
                    method: n,
                    params: a,
                    delay: s
                  });

                case 4:
                case "end":
                  return _context189.stop();
              }
            }
          }, _callee187);
        }))();
      },
      navTo: function navTo(_ref198) {
        var _arguments43 = arguments;
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee188() {
          var t, e, i, _ref199, _ref199$type, n, a, s, o, l, _ref199$pushHistory, r;

          return regeneratorRuntime.wrap(function _callee188$(_context190) {
            while (1) {
              switch (_context190.prev = _context190.next) {
                case 0:
                  t = _ref198.state, e = _ref198.commit, i = _ref198.dispatch;
                  _ref199 = _arguments43.length > 1 && _arguments43[1] !== undefined ? _arguments43[1] : {}, _ref199$type = _ref199.type, n = _ref199$type === void 0 ? "page" : _ref199$type, a = _ref199.value, s = _ref199.anchor, o = _ref199.data, l = _ref199.params, _ref199$pushHistory = _ref199.pushHistory, r = _ref199$pushHistory === void 0 ? !0 : _ref199$pushHistory;
                  console.log("navToPage::", a);
                  _context190.t0 = a;

                  if (!_context190.t0) {
                    _context190.next = 18;
                    break;
                  }

                  if (!("page" == n)) {
                    _context190.next = 14;
                    break;
                  }

                  e("setPageReady", !1);
                  e("setLoading", !0);
                  _context190.next = 10;
                  return i("page/reload", {
                    path: a,
                    anchor: s,
                    params: l,
                    data: o
                  });

                case 10:
                  e("setLoading", !1);
                  e("setPageReady", !0);
                  _context190.next = 18;
                  break;

                case 14:
                  _context190.t1 = "dispatch" == n;

                  if (!_context190.t1) {
                    _context190.next = 18;
                    break;
                  }

                  _context190.next = 18;
                  return i(a, l);

                case 18:
                case "end":
                  return _context190.stop();
              }
            }
          }, _callee188);
        }))();
      },
      doAction: function doAction(_ref200) {
        var _arguments44 = arguments;
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee189() {
          var t, e, _ref201, i, n, _ref201$args, a, s, _e65;

          return regeneratorRuntime.wrap(function _callee189$(_context191) {
            while (1) {
              switch (_context191.prev = _context191.next) {
                case 0:
                  t = _ref200.state, e = _ref200.dispatch;
                  _ref201 = _arguments44.length > 1 && _arguments44[1] !== undefined ? _arguments44[1] : {}, i = _ref201.action, n = _ref201.payload, _ref201$args = _ref201.args, a = _ref201$args === void 0 ? [] : _ref201$args;

                  if (i) {
                    _context191.next = 4;
                    break;
                  }

                  return _context191.abrupt("return");

                case 4:
                  if (_.isUndefined(n) || _.isNull(n)) s = _.cloneDeep(_.nth(a, 0));else {
                    _e65 = _.assign({}, t, {
                      $args: a
                    });
                    s = Ti.Util.explainObj(_e65, n, {
                      evalFunc: !1
                    });
                  }
                  console.log("invoke->", i, s);
                  _context191.next = 8;
                  return e(i, s);

                case 8:
                case "end":
                  return _context191.stop();
              }
            }
          }, _callee189);
        }))();
      },
      reload: function reload(_ref202) {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee190() {
          var t, e, i, n, a, _t160, _iterator100, _step100, _e66, _t161, _i35, _n28, s;

          return regeneratorRuntime.wrap(function _callee190$(_context192) {
            while (1) {
              switch (_context192.prev = _context192.next) {
                case 0:
                  t = _ref202.state, e = _ref202.commit, i = _ref202.dispatch;
                  console.log("site.reload", t.entry, t.base);
                  n = {
                    path: window.location.pathname,
                    hash: window.location.hash,
                    search: window.location.search
                  };
                  n.search && n.search.startsWith("?") && (n.search = n.search.substring(1));
                  a = {};

                  if (n.search) {
                    _t160 = n.search.split("&");
                    _iterator100 = _createForOfIteratorHelper(_t160);

                    try {
                      for (_iterator100.s(); !(_step100 = _iterator100.n()).done;) {
                        _e66 = _step100.value;
                        _t161 = _e66.indexOf("=");

                        if (_t161 > 0) {
                          _i35 = _e66.substring(0, _t161), _n28 = _e66.substring(_t161 + 1);
                          a[_i35] = _n28;
                        } else a[_e66] = !0;
                      }
                    } catch (err) {
                      _iterator100.e(err);
                    } finally {
                      _iterator100.f();
                    }
                  }

                  e("auth/mergePaths", t.authPaths);
                  s = t.entry;
                  n.path.startsWith(t.base) && (s = n.path.substring(t.base.length) || s);
                  _context192.next = 11;
                  return i("navTo", {
                    type: "page",
                    value: s,
                    params: a,
                    anchor: n.hash,
                    pushHistory: !1
                  });

                case 11:
                case "end":
                  return _context192.stop();
              }
            }
          }, _callee190);
        }))();
      }
    }
  };
  Ti.Preload("ti/lib/www/mod/www-mod-site.mjs", t);
}(), Ti.Preload("/a/load/wn.manager/gui/layout.json", {
  desktop: {
    type: "rows",
    border: !0,
    blocks: [{
      name: "sky",
      size: 48,
      type: "rows",
      border: !0,
      blocks: [{
        type: "cols",
        blocks: [{
          name: "logo",
          size: "auto",
          body: "pcSkyLogo"
        }, {
          name: "title",
          size: "stretch",
          body: "pcSkyTitle"
        }, {
          name: "session",
          size: "auto",
          body: "pcSkySession"
        }, {
          name: "menu",
          size: "auto",
          body: "pcSkyMenu"
        }]
      }]
    }, {
      name: "main",
      size: "100px",
      flex: "both",
      type: "cols",
      border: !0,
      blocks: [{
        name: "sidebar",
        size: 180,
        body: "pcMainSideBar"
      }, {
        name: "arena",
        size: "stretch",
        body: "pcMainArena"
      }]
    }, {
      name: "footer",
      size: 32,
      body: "pcFooter"
    }]
  },
  tablet: "desktop",
  phone: "desktop"
}), Ti.Preload("/a/load/wn.manager/gui/schema.json", {
  pcSkyLogo: {
    comType: "ti-icon",
    comConf: {
      width: "3em",
      fontSize: "1.5em",
      value: "=Logo"
    }
  },
  pcSkyTitle: {
    comType: "ti-crumb",
    comConf: "=Crumb"
  },
  pcSkySession: {
    comType: "ti-session-badge",
    comConf: "=SessionBadge"
  },
  pcSkyMenu: {
    comType: "ti-actionbar",
    comConf: "=ActionMenu"
  },
  pcMainSideBar: {
    comType: "wn-gui-side-nav",
    comConf: {
      items: "=sidebar",
      highlightItemId: "=MetaId",
      highlightItemPath: "=MetaPath"
    }
  },
  pcMainArena: {
    comType: "=comType",
    comConf: "=Arena"
  },
  pcFooter: {
    comType: "wn-gui-footer",
    comConf: "=Footer"
  }
}), Ti.Preload("/a/load/wn.manager/gui/setup.json", {
  shown: {
    desktop: {
      logo: "==theLogo",
      menu: "==theMenu",
      sessionBadge: "==theSessionBadge"
    },
    tablet: {},
    phone: {}
  },
  canLoading: !0,
  loadingAs: !1,
  firstCrumbIndex: 1,
  logo: "<:home>"
}), function () {
  var t = {
    Logo: function Logo() {
      if ("<:home>" == this.setup.logo) {
        var _t162 = _.nth(this.CrumbData, 0);

        return _t162 ? _t162.icon : null;
      }

      return this.setup.logo;
    },
    CrumbData: function CrumbData() {
      var _this208 = this;

      return Wn.Obj.evalCrumbData({
        meta: this.meta,
        ancestors: this.ancestors,
        fromIndex: this.setup.firstCrumbIndex,
        homePath: this.setup.skyHomePath,
        self: function self(t) {
          t.asterisk = _this208.isChanged;
        }
      });
    },
    Crumb: function Crumb() {
      var t = _.cloneDeep(this.CrumbData);

      return this.Logo && !_.isEmpty(t) && (t[0].icon = null), {
        data: t
      };
    },
    SessionBadge: function SessionBadge() {
      var t = _.get(this.session, "me");

      if (t) return {
        me: t,
        avatarKey: "thumb",
        avatarSrc: null,
        loginIcon: 1 == t.sex ? "im-user-male" : "im-user-female",
        nameKeys: "nickname|nm"
      };
    },
    ActionMenu: function ActionMenu() {
      if (_.isArray(this.actions) && !_.isEmpty(this.actions)) return {
        className: "wn-".concat(this.viewportMode, "-menu"),
        items: this.actions,
        status: this.TheStatus,
        delay: 500
      };
    },
    Arena: function Arena() {
      if (this.hasView) {
        var _t163 = Ti.App(this),
            e = Ti.Util.explainObj(this, this.comConf) || {
          meta: this.meta,
          content: this.content,
          data: this.data,
          status: this.status
        };

        return e.onInit = function () {
          _t163.$vmMain(this);
        }, e;
      }
    },
    Footer: function Footer() {
      return {
        infoIcon: this.comIcon,
        infoText: this.comType,
        message: this.myMessage || this.StatusText,
        indicator: this.myIndicator
      };
    }
  };
  Ti.Preload("/a/load/wn.manager/wn-manager-computed.mjs", t);
}(), function () {
  var t = {
    reloadMain: function reloadMain() {
      var _this209 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee191() {
        var t, e, i, n, a, s, o;
        return regeneratorRuntime.wrap(function _callee191$(_context193) {
          while (1) {
            switch (_context193.prev = _context193.next) {
              case 0:
                t = _this209.meta;

                if (t) {
                  _context193.next = 5;
                  break;
                }

                _context193.next = 4;
                return Ti.Toast.Open("i18n:wn-manager-no-meta", "warn");

              case 4:
                return _context193.abrupt("return", _context193.sent);

              case 5:
                if (!_this209.isLoading) {
                  _context193.next = 10;
                  break;
                }

                console.log("!!!");
                _context193.next = 9;
                return Ti.Toast.Open("i18n:wn-manager-is-loading", "warn");

              case 9:
                return _context193.abrupt("return", _context193.sent);

              case 10:
                _this209.loading = !0, _this209.comType = "ti-loading", _this209.comConf = {};
                _context193.prev = 11;
                if (_this209.view && _this209.view.modType) try {
                  _this209.$store.unregisterModule("main");
                } catch (t) {
                  console.error("Error when unregisterModule", t);
                }
                i = /^#!(.+)$/.exec(window.location.hash), n = i ? i[1] : null;
                e = n ? "ti views -cqn -name '".concat(n, "'") : "ti views -cqn id:".concat(t.id);
                _context193.next = 17;
                return Wn.Sys.exec2(e, {
                  as: "json"
                });

              case 17:
                a = _context193.sent;
                s = Ti.App(_this209);
                _context193.next = 21;
                return s.loadView(a);

              case 21:
                o = _context193.sent;
                Ti.IsInfo("app/wn.manager") && console.log("TiView Loaded:", o);
                _context193.t0 = o && o.modType;

                if (!_context193.t0) {
                  _context193.next = 28;
                  break;
                }

                _this209.$store.registerModule("main", o.mod);

                _context193.next = 28;
                return s.dispatch("main/reload", t);

              case 28:
                _this209.comType = o.comName;
                _this209.comIcon = o.comIcon;
                _this209.comConf = o.comConf;
                _this209.view = o;
                _this209.myMessage = null;
                _this209.myIndicator = null;

                _this209.OnUpdateActions(o.actions);

              case 35:
                _context193.prev = 35;
                _this209.loading = !1;
                return _context193.finish(35);

              case 38:
              case "end":
                return _context193.stop();
            }
          }
        }, _callee191, null, [[11,, 35, 38]]);
      }))();
    },
    reloadAncestors: function reloadAncestors() {
      var _this210 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee192() {
        return regeneratorRuntime.wrap(function _callee192$(_context194) {
          while (1) {
            switch (_context194.prev = _context194.next) {
              case 0:
                _context194.t0 = _this210.hasMeta;

                if (!_context194.t0) {
                  _context194.next = 6;
                  break;
                }

                _context194.next = 4;
                return Wn.Io.loadAncestors("id:" + _this210.MetaId);

              case 4:
                _this210.ancestors = _context194.sent;
                _this210.parent = _.last(_this210.ancestors);

              case 6:
              case "end":
                return _context194.stop();
            }
          }
        }, _callee192);
      }))();
    },
    reloadSidebar: function reloadSidebar() {
      var _this211 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee193() {
        var t;
        return regeneratorRuntime.wrap(function _callee193$(_context195) {
          while (1) {
            switch (_context195.prev = _context195.next) {
              case 0:
                _context195.next = 2;
                return Wn.Sys.exec("ti sidebar -cqn", {
                  as: "json"
                });

              case 2:
                t = _context195.sent;
                _this211.sidebar = t.sidebar;

              case 4:
              case "end":
                return _context195.stop();
            }
          }
        }, _callee193);
      }))();
    },
    pushHistory: function pushHistory(t) {
      var e = window.history;

      if (e && t) {
        if (e.state && e.state.id == t.id) return;
        var i = Wn.Util.getAppLink(t.id),
            n = Wn.Util.getObjDisplayName(t);
        Ti.IsInfo("app/wn-manager") && console.log(n, "->", i), e.pushState(t, n, i), document.title = n;
      }
    }
  };
  Ti.Preload("/a/load/wn.manager/wn-manager-methods.mjs", t);
}(), Ti.Preload("/a/load/wn.manager/wn-manager.html", '<ti-gui\n  class="wn-manager"\n  :class="TopClass"\n  :layout="GuiLayout"\n  :schema="GuiSchema"\n  :shown="GuiShown"\n  :can-loading="GuiCanLoading"\n  :loading-as="GuiLoadingAs"\n  @arena::expose-hidden="OnExposeHidden"\n  @do:logout="OnLogout"\n  @item:active="OnCurrentMetaChange"\n  @arena::open="OnCurrentMetaChange"\n  @arena::change="OnCurrentDataChange"\n  @arena::actions:update="OnUpdateActions"\n  @arena::indicate="OnArenaIndicate"\n  @arena::message="OnArenaMessage"/>'), function () {
  var t = {
    provider: function provider() {
      return {
        $session: {
          ticket: this.session.ticket,
          userId: this.session.uid,
          userName: this.session.unm,
          group: this.session.grp
        }
      };
    },
    data: function data() {
      return {
        myExposeHidden: !1,
        loading: !1,
        comIcon: "zmdi-hourglass-alt",
        comType: "ti-loading",
        comConf: {},
        actions: [],
        sidebar: [],
        ancestors: [],
        parent: null,
        view: null,
        myMessage: null,
        myIndicator: null
      };
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-current-as-home": this.CurrentIsHome,
          "is-current-no-home": !this.CurrentIsHome
        }, this.appClassName);
      },
      isLoading: function isLoading() {
        return this.loading || this.isReloading;
      },
      isChanged: function isChanged() {
        var t = this.$store.state.main;
        return !!_.get(t, "status.changed") || _.get(this.status, "changed");
      },
      isSaving: function isSaving() {
        return _.get(this.status, "saving");
      },
      isReloading: function isReloading() {
        return _.get(this.status, "reloading");
      },
      hasActions: function hasActions() {
        return !_.isEmpty(this.actions);
      },
      hasView: function hasView() {
        return !!this.view;
      },
      hasMeta: function hasMeta() {
        return !!this.meta;
      },
      hasParent: function hasParent() {
        return !!this.parent;
      },
      MetaId: function MetaId() {
        return _.get(this.meta, "id");
      },
      MetaPath: function MetaPath() {
        return _.get(this.meta, "ph");
      },
      MyHome: function MyHome() {
        var t = this.meta,
            e = this.ancestors;

        if (_.isEmpty(e)) {
          if (t && "root" == t.nm) return t;
        } else {
          if (1 == e.length && "home" == e[0].nm) return t;
          if ("home" == e[0].nm) return e[1];
        }

        return null;
      },
      MyHomeId: function MyHomeId() {
        return _.get(this.MyHome, "id");
      },
      ParentIsHome: function ParentIsHome() {
        return this.hasParent && this.parent.id == this.MyHomeId;
      },
      CurrentIsHome: function CurrentIsHome() {
        return this.hasMeta && this.MetaId == this.MyHomeId;
      },
      TheStatus: function TheStatus() {
        var t = _.get(this.$store.state, "main.status"),
            e = _.get(t, "reloading") || this.status.reloading;

        return _.assign({}, t, this.status, {
          exposeHidden: this.myExposeHidden,
          changed: this.isChanged,
          reloading: e
        });
      },
      StatusText: function StatusText() {
        var t = _.assign({}, this.status);

        return t.saving ? Ti.I18n.text("i18n:saving") : t.reloading ? Ti.I18n.text("i18n:loading") : void 0;
      },
      Main: function Main() {
        return this.$store.state.main;
      },
      GuiShown: function GuiShown() {
        var t = _.get(this.setup, "shown");

        if (_.isPlainObject(t)) {
          var e = t[this.viewportMode];
          return _.isString(e) && (e = t[e]), _.isString(e) && (e = t[e]), Ti.Util.explainObj(this, e);
        }

        return {};
      },
      GuiCanLoading: function GuiCanLoading() {
        return _.get(this.setup, "canLoading");
      },
      GuiLoadingAs: function GuiLoadingAs() {
        return _.get(this.setup, "loadingAs");
      },
      GuiLayout: function GuiLayout() {
        return Ti.Util.explainObj(this, this.layout);
      },
      GuiSchema: function GuiSchema() {
        return Ti.Util.explainObj(this, this.schema);
      }
    },
    methods: {
      OnExposeHidden: function OnExposeHidden(t) {
        this.myExposeHidden = t;
      },
      OnLogout: function OnLogout() {
        this.doLogout();
      },
      OnCurrentMetaChange: function OnCurrentMetaChange() {
        var _ref203 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref203.id,
            e = _ref203.path,
            i = _ref203.value;

        this.openView(t || e || i);
      },
      OnCurrentDataChange: function OnCurrentDataChange(t) {
        Ti.App(this).dispatch("current/changeContent", t);
      },
      OnUpdateActions: function OnUpdateActions(t) {
        this.actions = _.cloneDeep(t), Ti.App(this).reWatchShortcut(t);
      },
      OnArenaIndicate: function OnArenaIndicate(t) {
        this.myIndicator = t;
      },
      OnArenaMessage: function OnArenaMessage() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
        this.myMessage = t;
      },
      openView: function openView(t) {
        var _this212 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee194() {
          var e;
          return regeneratorRuntime.wrap(function _callee194$(_context196) {
            while (1) {
              switch (_context196.prev = _context196.next) {
                case 0:
                  if (_.isString(t)) {
                    _context196.next = 2;
                    break;
                  }

                  return _context196.abrupt("return");

                case 2:
                  _context196.next = 4;
                  return Ti.Fuse.fire();

                case 4:
                  if (_context196.sent) {
                    _context196.next = 6;
                    break;
                  }

                  return _context196.abrupt("return");

                case 6:
                  e = Wn.Io.isFullObjId(t) ? "id:".concat(t) : t;
                  _context196.next = 9;
                  return Ti.App(_this212).dispatch("current/reload", e);

                case 9:
                case "end":
                  return _context196.stop();
              }
            }
          }, _callee194);
        }))();
      },
      doLogout: function doLogout() {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee195() {
          var t;
          return regeneratorRuntime.wrap(function _callee195$(_context197) {
            while (1) {
              switch (_context197.prev = _context197.next) {
                case 0:
                  t = Wn.Session.env("QUIT") || "/";
                  _context197.next = 3;
                  return Wn.Sys.exec("exit");

                case 3:
                  Ti.Be.Open(t, {
                    target: "_self",
                    delay: 0
                  });

                case 4:
                case "end":
                  return _context197.stop();
              }
            }
          }, _callee195);
        }))();
      }
    },
    watch: {
      meta: function () {
        var _meta = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee196(t, e) {
          var i, n, a;
          return regeneratorRuntime.wrap(function _callee196$(_context198) {
            while (1) {
              switch (_context198.prev = _context198.next) {
                case 0:
                  i = _.get(t, "id"), n = _.get(e, "id"), a = _.isEqual(i, n);
                  _context198.t0 = t;

                  if (!_context198.t0) {
                    _context198.next = 12;
                    break;
                  }

                  _context198.t1 = a;

                  if (_context198.t1) {
                    _context198.next = 7;
                    break;
                  }

                  _context198.next = 7;
                  return this.reloadAncestors();

                case 7:
                  _context198.t2 = a && !this.isChanged;

                  if (_context198.t2) {
                    _context198.next = 12;
                    break;
                  }

                  _context198.next = 11;
                  return this.reloadMain();

                case 11:
                  this.pushHistory(t);

                case 12:
                case "end":
                  return _context198.stop();
              }
            }
          }, _callee196, this);
        }));

        function meta(_x13, _x14) {
          return _meta.apply(this, arguments);
        }

        return meta;
      }()
    },
    mounted: function () {
      var _mounted15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee197() {
        return regeneratorRuntime.wrap(function _callee197$(_context199) {
          while (1) {
            switch (_context199.prev = _context199.next) {
              case 0:
                _context199.next = 2;
                return this.reloadSidebar();

              case 2:
              case "end":
                return _context199.stop();
            }
          }
        }, _callee197, this);
      }));

      function mounted() {
        return _mounted15.apply(this, arguments);
      }

      return mounted;
    }(),
    beforeDestroy: function beforeDestroy() {}
  };
  Ti.Preload("/a/load/wn.manager/wn-manager.mjs", t);
}(), Ti.Preload("ti/i18n/zh-cn/hmaker.i18n.json", {
  "com-form": "表单",
  "com-label": "标签",
  "com-list": "列表",
  "hm-type-Array": "数组",
  "hm-type-Boolean": "布尔",
  "hm-type-Group": "字段分组",
  "hm-type-Integer": "整数",
  "hm-type-Number": "数字",
  "hm-type-Object": "对象",
  "hm-type-String": "文本",
  "hm-type-icons": {
    Group: "zmdi-collection-bookmark",
    Object: "zmdi-toys",
    Number: "zmdi-input-svideo",
    Integer: "zmdi-n-6-square",
    Boolean: "zmdi-toll",
    String: "zmdi-translate",
    Array: "zmdi-format-list-bulleted"
  },
  "hmaker-com-conf-blank": "请选择一个控件设置其详情",
  "hmaker-com-type-blank": "选择一个控件",
  "hmaker-edit-form-del-group-all": "组以及全部字段",
  "hmaker-edit-form-del-group-confirm": "您是要删除组以及其内的全部字段，还是仅是组？",
  "hmaker-edit-form-del-group-only": "仅是组",
  "hmaker-edit-form-field-nil": "请选择一个字段编辑详情",
  "hmaker-edit-form-new-field": "新字段",
  "hmaker-edit-form-new-field-e0": "字段名不能以数字开头，内容只能为小写英文字母数字和下划线",
  "hmaker-edit-form-new-field-e1": "字段【${val}】已存在，请另选一个名称",
  "hmaker-edit-form-new-field-tip": "请输入新字段名（只能为小写英文字母数字和下划线）",
  "hmaker-edit-form-new-group": "新分组",
  "hmaker-edit-form-new-group-tip": "请输入新分组名",
  "hmaker-edit-form-nil-field": "请先选择一个字段",
  "hmaker-edit-form-not-current": "请选择一个字段或者字段组",
  "hmaker-layout-cols": "列布局",
  "hmaker-layout-rows": "行布局",
  "hmaker-layout-tabs": "标签布局",
  "hmaker-nav-blank-item": "请选择一个导航项目编辑",
  "hmaker-nav-k-display": "链接显示内容",
  "hmaker-nav-k-icon": "链接图标",
  "hmaker-nav-k-title": "链接文字",
  "hmaker-nav-k-type": "链接类型",
  "hmaker-nav-k-value": "链接目标",
  "hmaker-nav-tp-dispatch": "方法调用",
  "hmaker-nav-tp-href": "外部链接",
  "hmaker-nav-tp-page": "站点页面",
  "hmaker-site-k-apiBase": "接口路径",
  "hmaker-site-k-base": "资源路径",
  "hmaker-site-k-captcha": "验证码路径",
  "hmaker-site-k-domain": "所属域",
  "hmaker-site-k-entry": "着陆页",
  "hmaker-site-prop": "站点属性",
  "hmaker-site-state": "站点全局配置",
  "hmaker-site-state-actions": "全局动作表",
  "hmaker-site-state-apis": "接口集",
  "hmaker-site-state-blocks": "预定义布局",
  "hmaker-site-state-general": "通用配置",
  "hmaker-site-state-nav": "全局导航条",
  "hmaker-site-state-router": "页面路由",
  "hmaker-site-state-schema": "预定义控件",
  "hmaker-site-state-utils": "扩展函数",
  "hmaker-site-tree": "站点结构",
  "hmaker-site-tree-loading": "正在加载站点结构...",
  "hmk-adjustDelay": "调整延迟",
  "hmk-aspect": "外观",
  "hmk-autoI18n": "国际化",
  "hmk-behavior": "行为",
  "hmk-blankAs": "空白样式",
  "hmk-breakLine": "维持换行",
  "hmk-currentTab": "当前标签",
  "hmk-data": "数据",
  "hmk-dict": "数据字典",
  "hmk-editable": "可编辑",
  "hmk-field-checkEquals": "检查相等",
  "hmk-field-com": "编辑控件",
  "hmk-field-defaultAs": "默认值",
  "hmk-field-disabled": "失效条件",
  "hmk-field-height": "高度",
  "hmk-field-hidden": "隐藏条件",
  "hmk-field-icon": "图标",
  "hmk-field-name": "键名",
  "hmk-field-serializer": "自定义保存",
  "hmk-field-tip": "提示说明",
  "hmk-field-title": "显示名",
  "hmk-field-transformer": "自定义转换",
  "hmk-field-type": "类型",
  "hmk-field-width": "宽度",
  "hmk-fieldStatus": "字段状态",
  "hmk-fields": "字段",
  "hmk-fields-advance": "高级",
  "hmk-fields-general": "基本",
  "hmk-form-data": "数据源",
  "hmk-form-height": "表单高度",
  "hmk-form-onlyFields": "仅声明字段",
  "hmk-form-width": "表单宽度",
  "hmk-format": "格式化",
  "hmk-height": "控件高度",
  "hmk-href": "超链接",
  "hmk-icon": "表单图标",
  "hmk-measure": "尺寸",
  "hmk-mode": "显示方式",
  "hmk-mode-all": "全部",
  "hmk-mode-tab": "标签",
  "hmk-newTab": "新窗口",
  "hmk-placeholder": "占位文本",
  "hmk-prefixIcon": "前缀图标",
  "hmk-prefixText": "前缀文字",
  "hmk-spacing": "间距",
  "hmk-spacing-comfy": "舒适",
  "hmk-spacing-tiny": "紧凑",
  "hmk-suffixIcon": "后缀图标",
  "hmk-suffixText": "后缀文字",
  "hmk-tabAt": "标签位置",
  "hmk-tabAt-bottom-center": "下部居中",
  "hmk-tabAt-bottom-left": "下部居左",
  "hmk-tabAt-bottom-right": "下部居右",
  "hmk-tabAt-top-center": "上部居中",
  "hmk-tabAt-top-left": "上部居左",
  "hmk-tabAt-top-right": "上部居右",
  "hmk-title": "表单标题",
  "hmk-trimed": "修剪空白",
  "hmk-value": "输入值",
  "hmk-valueMaxWidth": "值最大宽度",
  "hmk-width": "控件宽度"
}), Ti.Preload("ti/i18n/zh-cn/ti-datetime.i18n.json", {
  Apr: "四月",
  Aug: "八月",
  Dec: "十二月",
  Feb: "二月",
  Fri: "周五",
  Friday: "星期五",
  Jan: "一月",
  Jul: "七月",
  Jun: "六月",
  Mar: "三月",
  May: "五月",
  Mon: "周一",
  Monday: "星期一",
  Nov: "十一月",
  Oct: "十月",
  Sat: "周六",
  Saturday: "星期六",
  Sep: "九月",
  Sun: "周日",
  Sunday: "星期日",
  Thu: "周四",
  Thursday: "星期四",
  Tue: "周二",
  Tuesday: "星期二",
  Wed: "周三",
  Wednesday: "星期三",
  "blank-date": "请选择日期",
  "blank-date-range": "请选择日期范围",
  "blank-datetime": "请选择日期时间",
  "blank-month": "请选择月份",
  "blank-time": "请选择时间",
  "blank-time-range": "请选择时间范围",
  cal: {
    week: ["日", "一", "二", "三", "四", "五", "六"],
    "m-range-beyond-years": "${yy0}年${MT0}至${yy1}年${MT1}",
    "m-range-beyond-months": "${yy0}年${MT0}至${MT1}",
    "d-range-beyond-years": "${yy0}年${MM0}月${dd0}日至${yy1}年${MM1}月${dd1}日",
    "d-range-beyond-months": "${yy0}年${MM0}月${dd0}日至${MM1}月${dd1}日",
    "d-range-beyond-days": "${yy0}年${MM0}月${dd0}至${dd1}日",
    "d-range-in-same-day": "${yy0}年${MM0}月${dd0}日全天",
    abbr: {
      Jan: "一月",
      Feb: "二月",
      Mar: "三月",
      Apr: "四月",
      May: "五月",
      Jun: "六月",
      Jul: "七月",
      Aug: "八月",
      Sep: "九月",
      Oct: "十月",
      Nov: "十一",
      Dec: "十二"
    }
  },
  "time-begin": "开始时间",
  "time-end": "结束时间",
  today: "今天"
}), Ti.Preload("ti/i18n/zh-cn/ti-obj-creation.i18n.json", {
  "toc-auto-type": "全部类型",
  "toc-free": "请输入对象完整名称，包括扩展名，譬如 `myfile.xml`",
  "toc-tip": "新对象名称"
}), Ti.Preload("ti/i18n/zh-cn/ti-text-editor.i18n.json", {
  "wordp-h0": "正文",
  "wordp-h1": "标题 1",
  "wordp-h2": "标题 2",
  "wordp-h3": "标题 3",
  "wordp-h4": "标题 4",
  "wordp-h5": "标题 5",
  "wordp-h6": "标题 6",
  "wordp-heading": "标题级别",
  "wordp-link": "超链接",
  "wordp-nil-sel": "请先选择一段文字"
}), Ti.Preload("ti/i18n/zh-cn/ti-text-json.i18n.json", {
  "json-Array": "数组",
  "json-Boolean": "布尔",
  "json-Float": "小数",
  "json-Integer": "整数",
  "json-Nil": "空值",
  "json-Number": "数字",
  "json-Object": "对象",
  "json-String": "字符串",
  "json-new-key": "请输入一个新键名"
}), Ti.Preload("ti/i18n/zh-cn/web.i18n.json", {
  "auth-bind": "绑定",
  "auth-bind-email-title": "绑定邮箱",
  "auth-bind-phone-title": "绑定手机",
  "auth-blank-email": "邮箱不能为空",
  "auth-blank-name": "名称不能为空",
  "auth-blank-name-passwd": "名称或者密码不能为空",
  "auth-blank-phone": "手机号不能为空",
  "auth-doing": "正在验证",
  "auth-email-tip": "邮箱地址",
  "auth-email-title": "邮件密码登录/注册",
  "auth-email-vcode": "邮件密码",
  "auth-email-vcode-get": "获取邮件密码",
  "auth-go-email": "邮件密码登录/注册",
  "auth-go-passwd": "账号密码登录",
  "auth-go-phone": "短信密码登录/注册",
  "auth-login": "登录",
  "auth-login-NoSaltedPasswd": "你还未初始化您的登录密码，请切换至【${ta?验证码}】登录，之后前往【用户中心 > 安全设置】初始化您的登录密码，谢谢",
  "auth-login-or-signup": "登录/注册",
  "auth-ok": "账号验证通过",
  "auth-passwd-getback": "找回密码",
  "auth-passwd-name-email-tip": "邮箱地址/登录名",
  "auth-passwd-name-phone-tip": "手机号/登录名",
  "auth-passwd-tip": "密码",
  "auth-passwd-title": "账号密码登录",
  "auth-phone-email-get": "获取邮箱验证码",
  "auth-phone-tip": "手机号",
  "auth-phone-title": "短信密码登录/注册",
  "auth-phone-vcode": "短信密码",
  "auth-phone-vcode-get": "获取短信密码",
  "auth-reset-by-phone": "用手机号重置密码",
  "auth-reset-by-phone-sent": "已经向您的手机 ${phone} 发送了验证码",
  "auth-reset-by-phone-tip": "请输入您的账号绑定的手机号码",
  "auth-reset-next": "下一步",
  "auth-reset-passwd": "新密码（最少6位）",
  "auth-reset-retype": "再次确认",
  "auth-reset-save": "保存",
  "auth-sending-vcode": "正在发送验证码",
  "auth-sent-ok": "${ta?验证码}已发出，请在${by}查收，${min}分钟内有效",
  "auth-ta-by-email": "邮箱里",
  "auth-ta-by-phone": "手机上",
  "auth-ta-email": "邮件密码",
  "auth-ta-phone": "手机密码",
  "auth-vcode-delay": "${sec} 秒后重新发送",
  "auth-vcode-lost": "收不到验证码？",
  "e-www-invalid-captcha": "${ta?验证码}错误",
  "e-www-login-invalid-passwd": "账号密码错误",
  "e-www-login-noexists": "账号不存在",
  "pay-by-nil": "请选择一个支付方式",
  "pay-by-wx-qrcode": "使用微信扫码支付",
  "pay-by-zfb-qrcode": "使用支付宝扫码支付",
  "pay-check-do": "已经支付完成",
  "pay-check-ing": "正在检查支付结果",
  "pay-re-fail": "支付失败",
  "pay-re-nil": "支付结果是一只薛定谔的猫",
  "pay-re-ok": "支付成功",
  "pay-re-wait": "等待支付中",
  "pay-tip-wx-qrcode": "请于15分钟内用微信扫一扫付款码",
  "pay-tip-zfb-qrcode": "请于15分钟内用支付宝扫一扫付款码",
  "pay-wx": "微信支付",
  "pay-zfb": "支付宝"
}), Ti.Preload("ti/i18n/zh-cn/wn-manager.i18n.json", {
  "ti-loading": "加载中...",
  "wn-adaptlist": "对象浏览器",
  "wn-create-fail": "创建失败",
  "wn-create-invalid": "新对象名称不能包括非法字符",
  "wn-create-ok": "创建成功",
  "wn-create-too-long": "新对象名称过长",
  "wn-del-item": '正在删除: "${name}"',
  "wn-del-no-empty-folder": '目录"${nm}"不是空的，您是否要全部删除？点击"否"跳过',
  "wn-del-none": "请选择至少一个文件进行删除!",
  "wn-del-ok": "已有 ${N} 个对象被移除",
  "wn-download-dir": '对象 "${nm}" 是一个目录，点击"继续"将跳过它并下载下一个文件，点击"终止"将结束本次操作!',
  "wn-download-none": "请选择至少一个文件进行下载!",
  "wn-download-too-many": "即将逐个下载 ${N} 个文件，继续吗？",
  "wn-expose-hidden-off": "不显示隐藏的对象",
  "wn-expose-hidden-on": "显示隐藏的对象",
  "wn-gui": "通用布局界面",
  "wn-obj-preview": "对象预览",
  "wn-obj-puretext": "纯文本编辑器",
  "wn-obj-single-com": "单控件测试套",
  "wn-publish-done": "发布成功",
  "wn-publish-to-nil": "未设置发布目标",
  "wn-publish-to-noexist": "发布目标不存在",
  "wn-rename": '重命名对象 "${name}"',
  "wn-rename-fail": "重命名失败",
  "wn-rename-invalid": "名称不能包括非法字符",
  "wn-rename-none": "请选择一个文件重命名!",
  "wn-rename-ok": "重命名成功",
  "wn-rename-suffix-changed": "您的文件后缀名发生变化，您需要自动为您补全原来的后缀吗？",
  "wn-rename-too-long": "名称过长",
  "wn-thing-manager": "数据管理器",
  "wn-view-opening": "正在加载界面..."
}), Ti.Preload("ti/i18n/zh-cn/wn-obj-preview.i18n.json", {
  "wop-fullscreen-enter": "进入全屏",
  "wop-fullscreen-quit": "退出全屏"
}), Ti.Preload("ti/i18n/zh-cn/wn-thing.i18n.json", {
  "thing-clean": "清空回收站",
  "thing-cleaning": "正在清空...",
  "thing-content": "对象内容",
  "thing-content-hide": "隐藏内容",
  "thing-content-show": "显示内容",
  "thing-create": "创建新对象",
  "thing-create-in-recyclebin": "请先退出回收站，再创建新对象",
  "thing-enter-recyclebin": "打开回收站",
  "thing-files": "对象文件表",
  "thing-files-hide": "隐藏文件表",
  "thing-files-show": "显示文件表",
  "thing-filter-kwdplhd": "请输入查询条件",
  "thing-leave-recyclebin": "退出回收站",
  "thing-meta": "对象属性",
  "thing-meta-hide": "隐藏属性",
  "thing-meta-show": "显示属性",
  "thing-recycle-bin": "回收站",
  "thing-restore": "恢复选中",
  "thing-restore-none": "请先选择要恢复的数据",
  "thing-restoring": "正在恢复..."
}), Ti.Preload("ti/i18n/zh-cn/_net.i18n.json", {
  "net-ct": "创建时间",
  "net-flt-nil": "查找视频名称",
  "net-vod-add-video": "添加视频",
  "net-vod-cate": "视频分类",
  "net-vod-du-long": "长视频",
  "net-vod-du-short": "短视频",
  "net-vod-du-tv": "剧集视频",
  "net-vod-duration": "视频时长",
  "net-vod-size": "视频大小",
  "net-vod-video-nil": "请选择一个视频查看详情"
}), Ti.Preload("ti/i18n/zh-cn/_ti.i18n.json", {
  add: "添加",
  "add-item": "添加新项",
  amount: "数量",
  attachment: "附件",
  "batch-none": "请从下面列表中选择至少一个对象进行批量更新",
  "batch-update": "批量更新...",
  blank: "空白",
  "blank-to-edit": "请选择要编辑的项目",
  buy: "购买",
  "buy-now": "立即购买",
  cancel: "取消",
  "cancel-all": "取消选中",
  candidate: "备选项",
  captcha: "验证码",
  "captcha-chagne": "换一张",
  "captcha-tip": "请输入图中的验证码",
  checked: "已选中",
  choose: "选择",
  "choose-file": "选择文件",
  "choose-obj": "选择对象",
  clean: "清理",
  clear: "清除",
  close: "关闭",
  confirm: "确认",
  console: "控制台",
  content: "内容",
  "continue": "继续",
  create: "新建",
  "create-now": "立即创建",
  creating: "正在创建...",
  debug: "调试",
  "default": "默认",
  del: "删除",
  "del-checked": "删除选中",
  "del-ing": "正在删除...",
  "del-none": "请从下面列表中选择至少一个对象进行删除",
  desktop: "桌面",
  detail: "详情",
  doing: "正在执行...",
  download: "下载",
  "download-to-local": "下载到本地",
  "drop-file-here-to-upload": "拖拽文件至此以便上传",
  "drop-here": "拖拽文件至此",
  "e-auth-home-forbidden": "账户不具备进入主目录的权限",
  "e-auth-account-noexists": "账户不存在",
  "e-auth-login-invalid-passwd": "账户密码未通过校验",
  "e-auth-login-NoPhoneOrEmail": "错误的手机号或邮箱地址",
  "e-auth-login-NoSaltedPasswd": "未设置合法的密码",
  "e-io-obj-exists": "但是对象已然存在",
  "e-io-obj-noexists": "对象其实并不存在",
  "e-io-obj-noexistsf": "对象[${nm}]其实并不存在",
  edit: "编辑",
  "edit-com": "编辑控件",
  empty: "空",
  "empty-data": "无数据",
  error: "错误",
  "export-data": "导出数据...",
  fail: "失败",
  "false": "否",
  favorites: "收藏",
  female: "女",
  filter: "过滤",
  home: "主目录",
  "i-known": "我知道了",
  icon: "图标",
  "icon-code-tip": "请输入图标代码，如 zmdi-case",
  "import-data": "导入数据...",
  info: "信息",
  input: "输入",
  "input-tags": "输入标签",
  lat: "北纬",
  lng: "东经",
  loading: "加载中...",
  login: "登录",
  logout: "退出",
  "logout-ing": "正在注销...",
  male: "男",
  me: "我",
  media: "媒体",
  meta: "元数据",
  mine: "我的",
  modal: "模式",
  more: "更多",
  msg: "消息",
  name: "名称",
  "new-item": "新项目",
  next: "下一步",
  nil: "无",
  "nil-obj": "请选择一个对象",
  no: "否",
  "no-saved": "您有未保存的数据",
  "no-selected": "未选择",
  "no-title": "无标题",
  obj: "对象",
  off: "关",
  ok: "确定",
  on: "开",
  open: "打开",
  "open-newtab": "在新标签打开",
  others: "其他",
  "paging-change-pgsz": "当前每页有${pgsz}条记录，您想修改为：",
  "paging-change-pgsz-invalid": "页大小必须是整数数字，而且必须大于0，可您... -_-!",
  "paging-change-pn": "当前第${pn}页，您想跳转到：（请输入 1 至 ${pgc} 之间的数字）",
  "paging-change-pn-invalid": "页码必须是整数数字，而且必须为 1 至 ${pgc} 之间的数字",
  "paging-first": "首页",
  "paging-last": "尾页",
  "paging-next": "后一页",
  "paging-prev": "前一页",
  "paging-sum": "共${pgc}页${sum}条记录，当前${count}/${pgsz}",
  passwd: "密码",
  "passwd-reset": "重置密码",
  path: "路径",
  phone: "手机",
  prev: "上一步",
  price: "价格",
  prompt: "询问",
  properties: "属性",
  publish: "发布",
  publishing: "正在发布...",
  refresh: "刷新",
  reloading: "重新加载数据...",
  remove: "移除",
  removing: "正在移除...",
  rename: "重命名...",
  renaming: "正在重命名...",
  revoke: "撤销",
  "revoke-change": "撤销修改",
  save: "保存",
  "save-change": "保存修改",
  "save-done": "保存成功",
  "save-now": "立即保存",
  saving: "正在保存...",
  score: "评分",
  "score-count": "打分人数",
  select: "选择",
  "select-all": "全部选中",
  settings: "设置",
  "source-code": "源代码",
  stop: "停止",
  structure: "结构",
  success: "成功",
  tablet: "平板",
  terminal: "终端",
  terminate: "终止",
  text: "文字",
  title: "标题",
  "total-count": "共 ${nb?0} ${unit?项}",
  trace: "跟踪",
  track: "消息",
  "true": "是",
  type: "类型",
  "under-construction": "正在施工中",
  unknown: "未知",
  upload: "上传",
  "upload-done": "文件上传已完成",
  "upload-file": "上传文件...",
  "upload-nofinished": "文件上传还没有完成",
  uploading: "正在上传",
  value: "值",
  view: "查看",
  "view-resource": "查看源代码",
  warn: "警告",
  yes: "是"
}), Ti.Preload("ti/i18n/zh-cn/_wn.i18n.json", {
  "wn-edit-com-nil": "默认为标签控件",
  "wn-invalid-mimes": '不支持的文件内容类型 "${current}"，仅能支持 "${supports}"',
  "wn-invalid-types": '不支持的文件扩展名 "${current}"，仅能支持 "${supports}"',
  "wn-key-c": "创建者",
  "wn-key-ct": "创建",
  "wn-key-d0": "D0",
  "wn-key-d1": "D1",
  "wn-key-data": "数据",
  "wn-key-duration": "时长",
  "wn-key-expi": "过期时间",
  "wn-key-g": "主组",
  "wn-key-grp-advance": "高级",
  "wn-key-grp-basic": "基本",
  "wn-key-grp-customized": "自定义",
  "wn-key-grp-more": "更多",
  "wn-key-grp-others": "其他",
  "wn-key-grp-privilege": "权限",
  "wn-key-grp-thumb": "缩略图",
  "wn-key-grp-timestamp": "时间戳",
  "wn-key-height": "高",
  "wn-key-icon": "图标",
  "wn-key-id": "ID",
  "wn-key-len": "大小",
  "wn-key-lm": "修改",
  "wn-key-m": "修改者",
  "wn-key-md": "基本权限",
  "wn-key-mime": "MIME",
  "wn-key-nm": "名称",
  "wn-key-ph": "路径",
  "wn-key-pid": "父对象",
  "wn-key-pvg": "定制权限",
  "wn-key-race": "族类",
  "wn-key-sha1": "SHA1",
  "wn-key-thumb": "缩略图",
  "wn-key-title": "标题",
  "wn-key-tp": "类型",
  "wn-key-width": "宽",
  "wn-obj-nosaved": "您有未保存的对象",
  "wn-race-DIR": "目录",
  "wn-race-FILE": "文件",
  "wn-th-acc-pwd-choose-none": "请选择要重置密码的账号（可多选）",
  "wn-th-acc-pwd-done": "已经为${n}名用户重置了密码",
  "wn-th-acc-pwd-invalid": "密码中不得包含单双引号星号等非法字符",
  "wn-th-acc-pwd-reset-tip": "将密码重置为",
  "wn-th-acc-pwd-too-short": "您输入的密码过短，不能少于6位，最好为数字字母以及特殊字符的组合"
});