"use strict";

function _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }

function _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError("Cannot destructure undefined"); }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _createForOfIteratorHelper(o) { if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e80) { throw _e80; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e81) { didErr = true; err = _e81; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

Ti.Preload("ti/com/hmaker/edit-com/form/edit-com-form.html", '<ti-form \n  class="hmaker-edit-com-form"\n  v-bind="FormConf"/>'), function () {
  var t = {
    props: {
      value: {
        type: Object,
        "default": void 0
      },
      keepTabIndexBy: {
        type: String,
        "default": "hMakerEditComForm"
      }
    },
    computed: {
      FormConf: function FormConf() {
        return {
          mode: "tab",
          keepTabIndexBy: this.keepTabIndexBy,
          spacing: "tiny",
          data: this.value,
          fields: [{
            type: "Group",
            title: "i18n:hmk-aspect",
            fields: [{
              name: "title",
              title: "i18n:hmk-title",
              type: "String",
              comType: "ti-input"
            }, {
              name: "icon",
              title: "i18n:hmk-icon",
              type: "String",
              comType: "ti-input-icon"
            }, {
              name: "mode",
              title: "i18n:hmk-mode",
              type: "String",
              defaultAs: "all",
              comType: "ti-switcher",
              comConf: {
                options: [{
                  value: "all",
                  text: "i18n:hmk-mode-all"
                }, {
                  value: "tab",
                  text: "i18n:hmk-mode-tab"
                }]
              }
            }, {
              name: "tabAt",
              title: "i18n:hmk-tabAt",
              type: "String",
              defaultAs: "top-center",
              width: 240,
              hidden: {
                mode: {
                  name: "isEqual",
                  args: "tab",
                  not: !0
                }
              },
              comType: "ti-droplist",
              comConf: {
                placeholder: "i18n:hmk-tabAt-top-center",
                autoI18n: !0,
                options: [{
                  value: "top-left",
                  text: "i18n:hmk-tabAt-top-left"
                }, {
                  value: "top-center",
                  text: "i18n:hmk-tabAt-top-center"
                }, {
                  value: "top-right",
                  text: "i18n:hmk-tabAt-top-right"
                }, {
                  value: "bottom-left",
                  text: "i18n:hmk-tabAt-bottom-left"
                }, {
                  value: "bottom-center",
                  text: "i18n:hmk-tabAt-bottom-center"
                }, {
                  value: "bottom-right",
                  text: "i18n:hmk-tabAt-bottom-right"
                }]
              }
            }, {
              name: "currentTab",
              title: "i18n:hmk-currentTab",
              type: "Integer",
              defaultAs: 0,
              width: 120,
              hidden: {
                mode: {
                  name: "isEqual",
                  args: "tab",
                  not: !0
                }
              },
              comType: "ti-input-num"
            }, {
              name: "spacing",
              title: "i18n:hmk-spacing",
              type: "String",
              defaultAs: "comfy",
              comType: "ti-switcher",
              comConf: {
                options: [{
                  value: "comfy",
                  text: "i18n:hmk-spacing-comfy"
                }, {
                  value: "tiny",
                  text: "i18n:hmk-spacing-tiny"
                }]
              }
            }, {
              name: "adjustDelay",
              title: "i18n:hmk-adjustDelay",
              type: "Integer",
              defaultAs: 0,
              width: 120,
              comType: "ti-input-num"
            }, {
              name: "blankAs",
              title: "i18n:hmk-blankAs",
              type: "Object",
              comType: "ti-input"
            }]
          }, {
            type: "Group",
            title: "i18n:hmk-fields",
            fields: [{
              name: "fields",
              type: "Array",
              height: "100%",
              comType: "hmaker-edit-form-fieldset",
              comConf: {
                className: "ti-fill-parent",
                keepTabIndexBy: this.keepTabIndexBy
              }
            }]
          }, {
            type: "Group",
            title: "i18n:hmk-data",
            fields: [{
              title: "i18n:hmk-form-data",
              name: "data",
              comType: "ti-input"
            }, {
              name: "fieldStatus",
              title: "i18n:hmk-fieldStatus",
              comType: "ti-input"
            }, {
              name: "onlyFields",
              title: "i18n:hmk-form-onlyFields",
              type: "Boolean",
              defaultAs: !0,
              comType: "ti-toggle"
            }]
          }, {
            title: "i18n:hmk-measure",
            fields: [{
              title: "i18n:hmk-form-width",
              name: "width",
              comType: "ti-input"
            }, {
              title: "i18n:hmk-form-height",
              name: "height",
              comType: "ti-input"
            }]
          }]
        };
      }
    },
    methods: {},
    created: function () {
      var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                Wn.Dict.hMakerComponents();

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function created() {
        return _created.apply(this, arguments);
      }

      return created;
    }()
  };
  Ti.Preload("ti/com/hmaker/edit-com/form/edit-com-form.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-com/form/field/edit-form-field.html", '<div class="hmaker-edit-form-field ti-scroll-v">\n  \x3c!--\n    Empty\n  --\x3e\n  <ti-loading \n    v-if="isEmpty"\n      icon="fas-hand-point-left"\n      text="i18n:hmaker-edit-form-field-nil"/>\n  \x3c!--\n    Editing\n  --\x3e\n  <ti-form\n    v-else\n      v-bind="TheForm"\n      :data="value"/>\n</div>'), function () {
  var t = {
    props: {
      value: {
        type: Object,
        "default": void 0
      },
      keepTabIndexBy: {
        type: String,
        "default": void 0
      }
    },
    computed: {
      isEmpty: function isEmpty() {
        return Ti.Util.isNil(this.value);
      },
      TheFormGeneralFields: function TheFormGeneralFields() {
        return [{
          hidden: this.isGroup,
          name: "type",
          title: "hmk-field-type",
          defaultAs: "String",
          comType: "ti-droplist",
          comConf: {
            placeholder: "i18n:hm-type-String",
            options: function (t) {
              return _.map(t, function (t) {
                return {
                  icon: Ti.I18n.get("hm-type-icons")[t],
                  value: t,
                  text: Ti.I18n.get("hm-type-".concat(t))
                };
              });
            }(["Object", "Number", "Integer", "Boolean", "String", "Array"]),
            dropDisplay: ["<icon>", "text", "value"]
          }
        }, {
          name: "title",
          title: "hmk-field-title",
          comType: "ti-input"
        }, {
          name: "icon",
          title: "hmk-field-icon",
          comType: "ti-input-icon"
        }, {
          hidden: this.isGroup,
          name: "name",
          title: "hmk-field-name",
          comType: "ti-input"
        }, {
          hidden: this.isGroup,
          name: "tip",
          title: "hmk-field-tip",
          comType: "ti-input"
        }, {
          hidden: this.isGroup,
          name: "width",
          title: "hmk-field-width",
          width: 120,
          comType: "ti-input"
        }, {
          hidden: this.isGroup,
          name: "height",
          title: "hmk-field-height",
          width: 120,
          comType: "ti-input"
        }, {
          hidden: this.isGroup,
          name: "defaultAs",
          title: "hmk-field-defaultAs",
          comType: "ti-input",
          comConf: {
            autoJsValue: !0
          }
        }, {
          hidden: this.isGroup,
          name: ["comType", "comConf"],
          title: "hmk-field-com",
          type: "Object",
          width: "auto",
          comType: "wn-combo-edit-com"
        }];
      },
      TheFormAdvanceFields: function TheFormAdvanceFields() {
        return [{
          name: "disabled",
          title: "hmk-field-disabled",
          comType: "ti-input",
          comConf: {
            autoJsValue: !0
          }
        }, {
          name: "hidden",
          title: "hmk-field-hidden",
          comType: "ti-input",
          comConf: {
            autoJsValue: !0
          }
        }, {
          name: "checkEquals",
          title: "hmk-field-checkEquals",
          comType: "ti-toggle"
        }, {
          name: "transformer",
          title: "hmk-field-transformer",
          comType: "ti-input-text",
          comConf: {
            autoJsValue: !0
          }
        }, {
          name: "serializer",
          title: "hmk-field-serializer",
          comType: "ti-input-text",
          comConf: {
            autoJsValue: !0
          }
        }];
      },
      TheForm: function TheForm() {
        return {
          spacing: "tiny",
          keepTabIndexBy: this.keepTabIndexBy,
          fields: [{
            type: "Group",
            title: "i18n:hmk-fields-general",
            fields: this.TheFormGeneralFields
          }, {
            type: "Group",
            title: "i18n:hmk-fields-advance",
            hidden: this.isGroup,
            fields: this.TheFormAdvanceFields
          }]
        };
      }
    },
    methods: {
      isGroup: function isGroup(t) {
        return _.isArray(t.fields) || "Group" == t.type;
      }
    }
  };
  Ti.Preload("ti/com/hmaker/edit-com/form/field/edit-form-field.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-com/form/field/_com.json", {
  name: "hmaker-edit-form-field",
  globally: !0,
  template: "./edit-form-field.html",
  mixins: ["./edit-form-field.mjs"]
}), Ti.Preload("ti/com/hmaker/edit-com/form/fieldset/edit-form-fieldset.html", '<ti-gui\n  class="hmaker-edit-form-fieldset"\n  :class="TopClass"\n  :layout="Layout"\n  :schema="Schema"\n  :can-loading="false"\n  @tree::select="OnFieldTreeSelect"\n  @detail::change="OnFieldChange"/>'), function () {
  var t = {
    data: function data() {
      return {
        myCurrentId: null
      };
    },
    props: {
      value: {
        type: Array,
        "default": void 0
      },
      keepTabIndexBy: {
        type: String,
        "default": "hMakerEditComForm"
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TheDetailCom: function TheDetailCom() {
        return {
          comType: "hmaker-edit-form-field",
          comConf: {
            value: this.CurrentField,
            keepTabIndexBy: this.keepTabIndexBy ? "".concat(this.keepTabIndexBy, "-field") : null
          }
        };
      },
      CurrentField: function CurrentField() {
        if (this.myCurrentId) {
          var _t = this.$tree.findTableRow(this.myCurrentId);

          if (_t) return _t.rawData;
        }
      },
      Layout: function Layout() {
        return {
          type: "cols",
          border: !0,
          blocks: [{
            type: "rows",
            size: "37%",
            border: !0,
            blocks: [{
              size: 40,
              body: "actions"
            }, {
              name: "tree",
              body: "tree"
            }]
          }, {
            name: "detail",
            body: "detail"
          }]
        };
      },
      Schema: function Schema() {
        var _this = this;

        return {
          actions: {
            comType: "ti-actionbar",
            comConf: {
              items: [{
                type: "action",
                icon: "im-plus",
                text: "i18n:hmaker-edit-form-new-field",
                action: function action() {
                  return _this.addNewField();
                }
              }, {
                type: "action",
                icon: "im-folder-add",
                text: "i18n:hmaker-edit-form-new-group",
                action: function action() {
                  return _this.addNewGroup();
                }
              }, {
                type: "line"
              }, {
                type: "action",
                icon: "im-trash-can",
                action: function action() {
                  return _this.removeSelectedFieldOrGroup();
                }
              }, {
                type: "line"
              }, {
                type: "action",
                icon: "im-arrow-up",
                action: function action() {
                  return _this.moveSelectedFieldsUp();
                }
              }, {
                type: "action",
                icon: "im-arrow-down",
                action: function action() {
                  return _this.moveSelectedFieldsDown();
                }
              }]
            }
          },
          tree: {
            comType: "ti-tree",
            comConf: {
              data: this.value,
              showRoot: !1,
              puppetMode: !0,
              autoOpen: !0,
              border: "row",
              defaultOpenDepth: 2,
              currentId: this.myCurrentId,
              nameBy: function nameBy(t) {
                return t.name || t.title;
              },
              childrenBy: function childrenBy(t) {
                return t.fields;
              },
              leafBy: function leafBy(t) {
                return "Group" != t.type;
              },
              display: [{
                key: "type",
                transformer: {
                  name: "toStr",
                  args: [{
                    Group: "zmdi-collection-bookmark",
                    Object: "zmdi-toys",
                    Number: "zmdi-input-svideo",
                    Integer: "zmdi-n-6-square",
                    Boolean: "zmdi-toll",
                    String: "zmdi-translate",
                    Array: "zmdi-format-list-bulleted"
                  }]
                },
                defaultAs: "im-question",
                comType: "ti-icon"
              }, {
                key: "name",
                transformer: function transformer(t) {
                  return _.isArray(t) ? t.join("+") : t;
                }
              }, "title"],
              onInit: this.OnTreeInit
            }
          },
          detail: this.TheDetailCom
        };
      }
    },
    methods: {
      OnTreeInit: function OnTreeInit(t) {
        this.$tree = t;
      },
      OnFieldTreeSelect: function OnFieldTreeSelect(_ref) {
        var t = _ref.currentId;
        this.myCurrentId = t;
      },
      OnFieldChange: function OnFieldChange(t) {
        this.updateCurrentField(t);
      },
      getMyCurrent: function getMyCurrent() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.value;
        if (!this.myCurrentId || !_.isArray(t)) return;
        var e = this.myCurrentId.split("/"),
            i = {
          path: e,
          index: [],
          group: null,
          field: null
        };

        if (e.length > 0) {
          var n = e[0];

          for (var _e = 0; _e < t.length; _e++) {
            var a = t[_e];

            if (_.isArray(a.fields) || "Group" == a.type) {
              if (n == a.title) {
                i.group = a, i.index.push(_e);
                break;
              }
            } else if (n == a.name) {
              i.field = a, i.index.push(_e);
              break;
            }
          }
        }

        if (e.length > 1 && i.group && _.isArray(i.group.fields)) {
          var _t2 = e[1];

          for (var _e2 = 0; _e2 < i.group.fields.length; _e2++) {
            var _n = i.group.fields[_e2];
            _t2 == _n.name && (i.field = _n, i.index.push(_e2));
          }
        }

        return i;
      },
      isGroup: function isGroup(t) {
        return "Group" == t.type || _.isArray(t.fields);
      },
      selectNextIdByIndex: function selectNextIdByIndex() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value;
        var i = [];

        var _iterator = _createForOfIteratorHelper(t),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var n = _step.value;
            if (!e || _.isEmpty(e)) break;

            var _t3 = _.nth(e, n);

            _t3 || (_t3 = _.nth(e, n - 1)), _t3 && (i.push(_t3.name || _t3.title), e = _t3.fields);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }

        this.myCurrentId = i.join("/") || null;
      },
      findByName: function findByName(t) {
        if (_.isArray(this.value)) for (var e = 0; e < this.value.length; e++) {
          var i = this.value[e],
              n = i.name || i.title;

          if (_.isEqual(t, n)) {
            var _t4 = {
              index: [e],
              path: [n],
              field: i
            };
            return this.isGroup(i) ? _t4.group = i : _t4.field = i, _t4;
          }

          if (this.isGroup(i)) for (var a = 0; a < i.fields.length; a++) {
            var s = i.fields[a],
                o = s.name || s.title;
            if (_.isEqual(t, o)) return {
              index: [e, a],
              path: [n, o],
              group: i,
              field: s
            };
          }
        }
      },
      existsName: function existsName(t) {
        return !!this.findByName(t);
      },
      updateCurrentField: function updateCurrentField(t) {
        var e = _.cloneDeep(this.value),
            i = this.getMyCurrent(e);

        if (console.log(i), i.group && i.field) {
          var _e3 = _.last(i.index);

          i.group.fields[_e3] = t;
        } else if (i.group) {
          var n = _.first(i.index);

          _.assign(e[n], t);
        } else {
          if (!i.field) return;
          e[_.first(i.index)] = t;
        }

        this.selectNextIdByIndex(i.index, e), this.$notify("change", e);
      },
      addFieldOrGroup: function addFieldOrGroup(t) {
        var e = _.cloneDeep(this.value) || [],
            i = this.getMyCurrent(e),
            n = [];
        i ? i.group ? this.isGroup(t) ? (Ti.Util.insertToArray(e, _.first(i.index), t), n.push(t.title)) : i.field ? (Ti.Util.insertToArray(i.group.fields, _.last(i.index) + 1, t), n.push(i.path[0], t.name)) : _.isArray(i.group.fields) ? (i.group.fields.push(t), n.push(i.path[0], t.name)) : (i.group.fields = [t], n.push(i.path[0], t.name)) : (Ti.Util.insertToArray(e, _.last(i.index) + 1, t), n.push(t.name || t.title)) : e.push(t), this.$notify("change", e), this.myCurrentId = n.join("/");
      },
      addNewField: function addNewField() {
        var _this2 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
          var t, e, _iterator2, _step2, _t5, i;

          return regeneratorRuntime.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  _context2.next = 2;
                  return Ti.Prompt("i18n:hmaker-edit-form-new-field-tip");

                case 2:
                  t = _context2.sent;

                  if (t = _.trim(t)) {
                    _context2.next = 5;
                    break;
                  }

                  return _context2.abrupt("return");

                case 5:
                  e = _.without(t.split(/[\s\W]/), "");
                  _iterator2 = _createForOfIteratorHelper(e);
                  _context2.prev = 7;

                  _iterator2.s();

                case 9:
                  if ((_step2 = _iterator2.n()).done) {
                    _context2.next = 17;
                    break;
                  }

                  _t5 = _step2.value;

                  if (/^[a-z_][\da-z_]+$/.test(_t5)) {
                    _context2.next = 15;
                    break;
                  }

                  _context2.next = 14;
                  return Ti.Toast.Open("i18n:hmaker-edit-form-new-field-e0", "error");

                case 14:
                  return _context2.abrupt("return", _context2.sent);

                case 15:
                  _context2.next = 9;
                  break;

                case 17:
                  _context2.next = 22;
                  break;

                case 19:
                  _context2.prev = 19;
                  _context2.t0 = _context2["catch"](7);

                  _iterator2.e(_context2.t0);

                case 22:
                  _context2.prev = 22;

                  _iterator2.f();

                  return _context2.finish(22);

                case 25:
                  i = 1 == e.length ? t : e;

                  if (!_this2.existsName(i)) {
                    _context2.next = 30;
                    break;
                  }

                  _context2.next = 29;
                  return Ti.Toast.Open({
                    content: "i18n:hmaker-edit-form-new-field-e1",
                    type: "error",
                    vars: {
                      val: t
                    },
                    position: "center",
                    duration: 5e3
                  });

                case 29:
                  return _context2.abrupt("return", _context2.sent);

                case 30:
                  _this2.addFieldOrGroup({
                    name: i,
                    type: _.isArray(i) ? "Object" : "String",
                    comType: "ti-input"
                  });

                case 31:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2, null, [[7, 19, 22, 25]]);
        }))();
      },
      addNewGroup: function addNewGroup() {
        var _this3 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
          var t;
          return regeneratorRuntime.wrap(function _callee3$(_context3) {
            while (1) {
              switch (_context3.prev = _context3.next) {
                case 0:
                  _context3.next = 2;
                  return Ti.Prompt("i18n:hmaker-edit-form-new-group-tip");

                case 2:
                  t = _context3.sent;

                  if (!(t = _.trim(t))) {
                    _context3.next = 12;
                    break;
                  }

                  if (!_this3.existsName(t)) {
                    _context3.next = 10;
                    break;
                  }

                  _context3.next = 7;
                  return Ti.Toast.Open({
                    content: "i18n:hmaker-edit-form-new-field-e1",
                    type: "error",
                    vars: {
                      val: t
                    },
                    position: "center",
                    duration: 5e3
                  });

                case 7:
                  _context3.t0 = _context3.sent;
                  _context3.next = 11;
                  break;

                case 10:
                  _context3.t0 = void _this3.addFieldOrGroup({
                    type: "Group",
                    title: t,
                    fields: []
                  });

                case 11:
                  return _context3.abrupt("return", _context3.t0);

                case 12:
                case "end":
                  return _context3.stop();
              }
            }
          }, _callee3);
        }))();
      },
      removeSelectedFieldOrGroup: function removeSelectedFieldOrGroup() {
        var _this4 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
          var t, e, _Ti$Util, i, n, _i, _n2, a, _i2;

          return regeneratorRuntime.wrap(function _callee4$(_context4) {
            while (1) {
              switch (_context4.prev = _context4.next) {
                case 0:
                  t = _this4.getMyCurrent();

                  if (t) {
                    _context4.next = 3;
                    break;
                  }

                  return _context4.abrupt("return", Ti.Toast.Open("i18n:hmaker-edit-form-nil-field", "warn"));

                case 3:
                  if (!(t.group && !t.field)) {
                    _context4.next = 16;
                    break;
                  }

                  i = !0;
                  _context4.t0 = _.isEmpty(t.group.fields);

                  if (_context4.t0) {
                    _context4.next = 10;
                    break;
                  }

                  _context4.next = 9;
                  return Ti.Confirm("i18n:hmaker-edit-form-del-group-confirm", {
                    closer: !0,
                    textYes: "i18n:hmaker-edit-form-del-group-all",
                    textNo: "i18n:hmaker-edit-form-del-group-only"
                  });

                case 9:
                  i = _context4.sent;

                case 10:
                  if (!_.isUndefined(i)) {
                    _context4.next = 12;
                    break;
                  }

                  return _context4.abrupt("return");

                case 12:
                  n = _.first(t.index);
                  e = _.filter(_this4.value, function (t, e) {
                    return e != n;
                  }), !1 === i && (_.isEmpty(t.group.fields) || (_Ti$Util = Ti.Util).insertToArray.apply(_Ti$Util, [e, n].concat(_toConsumableArray(t.group.fields))));
                  _context4.next = 17;
                  break;

                case 16:
                  if (t.group && t.field) {
                    e = _.cloneDeep(_this4.value);
                    _i = _.cloneDeep(t.group), _n2 = _.first(t.index), a = _.last(t.index);
                    _i.fields = _.filter(_i.fields, function (t, e) {
                      return e != a;
                    }), e[_n2] = _i;
                  } else {
                    _i2 = _.first(t.index);
                    e = _.filter(_this4.value, function (t, e) {
                      return e != _i2;
                    });
                  }

                case 17:
                  _this4.selectNextIdByIndex(t.index, e), _this4.$notify("change", e);

                case 18:
                case "end":
                  return _context4.stop();
              }
            }
          }, _callee4);
        }))();
      },
      moveSelectedFieldsUp: function moveSelectedFieldsUp() {
        var t = _.cloneDeep(this.value),
            e = this.getMyCurrent(t);

        if (!e) return Ti.Toast.Open("i18n:hmaker-edit-form-nil-field", "warn");

        var i = _.first(e.index);

        if (e.group && e.field) {
          var n = _.last(e.index);

          0 == n ? (_.remove(e.group.fields, function (t, e) {
            return e == n;
          }), Ti.Util.insertToArray(t, i, e.field), this.myCurrentId = _.last(e.path)) : (e.group.fields[n] = e.group.fields[n - 1], e.group.fields[n - 1] = e.field);
        } else if (i > 0) {
          var _n3 = t[i - 1];
          this.isGroup(_n3) && e.field && this.$tree.isOpened(_n3.title) ? (_.remove(t, function (t, e) {
            return e == i;
          }), _.isArray(_n3.fields) ? _n3.fields.push(e.field) : _n3.fields = [e.field], this.myCurrentId = [_n3.title, _.last(e.path)].join("/")) : (t[i] = t[i - 1], t[i - 1] = e.field || e.group);
        }

        this.$notify("change", t);
      },
      moveSelectedFieldsDown: function moveSelectedFieldsDown() {
        var t = _.cloneDeep(this.value),
            e = this.getMyCurrent(t);

        if (!e) return Ti.Toast.Open("i18n:hmaker-edit-form-nil-field", "warn");

        var i = _.first(e.index);

        if (e.group && e.field) {
          var n = _.last(e.index);

          n >= e.group.fields.length - 1 ? (_.remove(e.group.fields, function (t, e) {
            return e == n;
          }), Ti.Util.insertToArray(t, i + 1, e.field), this.myCurrentId = _.last(e.path)) : (e.group.fields[n] = e.group.fields[n + 1], e.group.fields[n + 1] = e.field);
        } else if (i < t.length - 1) {
          var _n4 = t[i + 1];
          this.isGroup(_n4) && e.field && this.$tree.isOpened(_n4.title) ? (_.remove(t, function (t, e) {
            return e == i;
          }), _.isArray(_n4.fields) ? Ti.Util.insertToArray(_n4.fields, 0, e.field) : _n4.fields = [e.field], this.myCurrentId = [_n4.title, _.last(e.path)].join("/")) : (t[i] = t[i + 1], t[i + 1] = e.field || e.group);
        }

        this.$notify("change", t);
      }
    },
    mounted: function mounted() {
      var t = Ti.Storage.local.getObject("vue-drop-me", null);

      if (t) {
        var e = Date.now() - t.timeInMs;
        console.log({
          du: e
        }), e < 1e3 && (this.myCurrentId = t.myCurrentId), Ti.Storage.local.remove("vue-drop-me");
      } else this.selectNextIdByIndex([0]);
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Storage.local.setObject("vue-drop-me", {
        myCurrentId: this.myCurrentId,
        timeInMs: Date.now()
      });
    }
  };
  Ti.Preload("ti/com/hmaker/edit-com/form/fieldset/edit-form-fieldset.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-com/form/fieldset/_com.json", {
  name: "hmaker-edit-form-fieldset",
  globally: !0,
  template: "./edit-form-fieldset.html",
  mixins: ["./edit-form-fieldset.mjs"],
  components: ["@com:hmaker/edit-com/form/field", "@com:hmaker/edit-com/form/group"]
}), Ti.Preload("ti/com/hmaker/edit-com/form/group/edit-form-group.html", '<div class="hmaker-edit-form-group">\n  Group: {{value}}\n</div>'), function () {
  var t = {
    props: {
      value: {
        type: Object,
        "default": void 0
      }
    },
    computed: {},
    methods: {}
  };
  Ti.Preload("ti/com/hmaker/edit-com/form/group/edit-form-group.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-com/form/group/_com.json", {
  name: "hmaker-edit-form-group",
  globally: !0,
  template: "./edit-form-group.html",
  mixins: ["./edit-form-group.mjs"]
}), Ti.Preload("ti/com/hmaker/edit-com/form/_com.json", {
  name: "hmaker-edit-com-form",
  globally: !0,
  template: "./edit-com-form.html",
  mixins: ["./edit-com-form.mjs"],
  components: ["@com:hmaker/edit-com/form/fieldset"]
}), Ti.Preload("ti/com/hmaker/edit-com/hmaker-edit-com.html", '<div class="hmaker-edit-com">\n  \x3c!--\n    Select Com Type\n  --\x3e\n  <div class="as-com-type">\n    <ti-combo-input \n      v-bind="ComTypeComboInput"\n      :value="ComType"\n      @change="OnComTypeChange"/>\n  </div>\n  \x3c!--\n    Edit Com Conf\n  --\x3e\n  <div class="as-com-conf"><div class="as-con">\n    \x3c!--\n      Show Com Editor\n    --\x3e\n    <component\n      v-if="hasEditCom"\n        class="ti-fill-parent"\n        :is="EditComType"\n        v-bind="EditComConf"\n        @change="OnComConfChange"/>\n    \x3c!--\n      Show Blank\n    --\x3e\n    <ti-loading \n      v-else\n        icon="fas-hand-pointer"\n        text="i18n:hmaker-com-conf-blank"/>\n  </div></div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myCom: null
      };
    },
    props: {
      value: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      Dict: function Dict() {
        return Wn.Dict.hMakerComponents();
      },
      ComTypeComboInput: function ComTypeComboInput() {
        return {
          options: this.Dict,
          placeholder: "i18n:hmaker-com-type-blank",
          autoI18n: !0,
          mustInList: !0,
          autoCollapse: !0,
          dropDisplay: ["<icon:im-plugin>", "title|name"]
        };
      },
      hasEditCom: function hasEditCom() {
        return !!this.myCom;
      },
      ComType: function ComType() {
        return _.get(this.value, "comType");
      },
      ComConf: function ComConf() {
        return _.get(this.value, "comConf");
      },
      EditComType: function EditComType() {
        return _.get(this.myCom, "editComType");
      },
      EditComConf: function EditComConf() {
        var t = _.get(this.myCom, "editComConf");

        return Ti.Util.explainObj(this.value, t);
      }
    },
    methods: {
      OnComTypeChange: function OnComTypeChange(t) {
        var _this5 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {
          return regeneratorRuntime.wrap(function _callee5$(_context5) {
            while (1) {
              switch (_context5.prev = _context5.next) {
                case 0:
                  _context5.next = 2;
                  return _this5.Dict.getItem(t);

                case 2:
                  _this5.myCom = _context5.sent;

                  _this5.notifyChange({
                    comType: t,
                    comConf: _this5.ComConf
                  });

                case 4:
                case "end":
                  return _context5.stop();
              }
            }
          }, _callee5);
        }))();
      },
      OnComConfChange: function OnComConfChange() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        this.notifyChange({
          comType: this.ComType,
          comConf: t
        });
      },
      notifyChange: function notifyChange() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        this.$notify("change", t);
      },
      reloadMyCom: function reloadMyCom() {
        var _this6 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {
          var _t6;

          return regeneratorRuntime.wrap(function _callee6$(_context6) {
            while (1) {
              switch (_context6.prev = _context6.next) {
                case 0:
                  if (!_.isEmpty(_this6.value)) {
                    _context6.next = 4;
                    break;
                  }

                  _this6.myCom = null;
                  _context6.next = 8;
                  break;

                case 4:
                  _t6 = _this6.value.comType;
                  _context6.next = 7;
                  return _this6.Dict.getItem(_t6);

                case 7:
                  _this6.myCom = _context6.sent;

                case 8:
                case "end":
                  return _context6.stop();
              }
            }
          }, _callee6);
        }))();
      }
    },
    watch: {
      value: {
        handler: "reloadMyCom",
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/hmaker/edit-com/hmaker-edit-com.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-com/_com.json", {
  name: "hmaker-edit-com",
  globally: !0,
  template: "./hmaker-edit-com.html",
  mixins: ["./hmaker-edit-com.mjs"],
  components: ["@com:hmaker/edit-com/form", "@com:wn/combo/edit-com"]
}), Ti.Preload("ti/com/hmaker/edit-site-actions/edit-site-actions.html", '<div class="hmaker-edit-site-actions">\n  Actions\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {};
    },
    props: {
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      theConfig: function theConfig() {}
    },
    methods: {}
  };
  Ti.Preload("ti/com/hmaker/edit-site-actions/edit-site-actions.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-site-actions/_com.json", {
  name: "hmaker-edit-site-actions",
  globally: !0,
  template: "./edit-site-actions.html",
  mixins: ["./edit-site-actions.mjs"]
}), Ti.Preload("ti/com/hmaker/edit-site-apis/edit-site-apis.html", '<div class="hmaker-edit-site-apis">\n  Apis\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {};
    },
    props: {
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      theConfig: function theConfig() {}
    },
    methods: {}
  };
  Ti.Preload("ti/com/hmaker/edit-site-apis/edit-site-apis.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-site-apis/_com.json", {
  name: "hmaker-edit-site-apis",
  globally: !0,
  template: "./edit-site-apis.html",
  mixins: ["./edit-site-apis.mjs"]
}), Ti.Preload("ti/com/hmaker/edit-site-blocks/edit-site-blocks.html", '<div class="hmaker-edit-site-blocks">\n  Blocks\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {};
    },
    props: {
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      theConfig: function theConfig() {}
    },
    methods: {}
  };
  Ti.Preload("ti/com/hmaker/edit-site-blocks/edit-site-blocks.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-site-blocks/_com.json", {
  name: "hmaker-edit-site-blocks",
  globally: !0,
  template: "./edit-site-blocks.html",
  mixins: ["./edit-site-blocks.mjs"]
}), Ti.Preload("ti/com/hmaker/edit-site-general/edit-site-general.html", '<ti-form class="hmaker-edit-site-general"\n  :fields="TheFields"\n  :data="data"/>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {};
    },
    props: {
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      TheFields: function TheFields() {
        return [{
          title: "i18n:hmaker-site-k-domain",
          name: "domain"
        }, {
          title: "i18n:hmaker-site-k-apiBase",
          name: "apiBase"
        }, {
          title: "i18n:hmaker-site-k-captcha",
          name: "captcha"
        }, {
          title: "i18n:hmaker-site-k-base",
          name: "base"
        }, {
          title: "i18n:hmaker-site-k-entry",
          name: "entry"
        }];
      }
    },
    methods: {}
  };
  Ti.Preload("ti/com/hmaker/edit-site-general/edit-site-general.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-site-general/_com.json", {
  name: "hmaker-edit-site-general",
  globally: !0,
  template: "./edit-site-general.html",
  mixins: ["./edit-site-general.mjs"]
}), Ti.Preload("ti/com/hmaker/edit-site-nav/edit-site-nav.html", '<div class="hmaker-edit-site-nav">\n  \x3c!--\n    Nav Table\n  --\x3e\n  <div class="as-table ti-fill-parent">\n    <ti-table class="ti-fill-parent"\n      :data="TableData"\n      :fields="TableFields"\n      :selectable="true"\n      :checkable="true"\n      :multi="true"\n      :current-id="myCurrentId"\n      :checked-ids="myCheckedIds"\n      @select="OnRowSelected"/>\n  </div>\n  \x3c!--\n    Nav Form\n  --\x3e\n  <div class="as-form">\n    <ti-form\n      class="ti-fill-parent"\n      :fields="FormFields"\n      :blank-as="FormBlankAs"\n      :data="FormData"\n      @change="OnFormChanged"/>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myCurrentIndex: -1,
        myCurrentId: null,
        myCheckedIds: {},
        myActionStatus: {
          remove: !1,
          moveUp: !1,
          moveDown: !1
        }
      };
    },
    props: {
      data: {
        type: Array,
        "default": function _default() {
          return [];
        }
      }
    },
    computed: {
      TableData: function TableData() {
        var t = [];
        return _.forEach(this.data, function (e, i) {
          t.push(_.assign({
            id: "N".concat(i)
          }, e));
        }), t;
      },
      TableLastIndex: function TableLastIndex() {
        return this.TableData.length - 1;
      },
      TableFields: function TableFields() {
        return [{
          title: "i18n:hmaker-nav-k-display",
          display: [{
            key: "icon",
            comType: "ti-icon"
          }, "title"],
          width: -150
        }, {
          title: "i18n:hmaker-nav-k-type",
          name: "type",
          width: -100,
          display: [{
            comType: "ti-icon",
            transformer: {
              name: "toStr",
              args: {
                page: "zmdi-file",
                href: "zmdi-link",
                dispatch: "zmdi-flash-auto"
              }
            }
          }, {
            transformer: {
              name: "toStr",
              args: {
                page: "i18n:hmaker-nav-tp-page",
                href: "i18n:hmaker-nav-tp-href",
                dispatch: "i18n:hmaker-nav-tp-dispatch"
              }
            }
          }]
        }, {
          title: "i18n:hmaker-nav-k-value",
          display: "value"
        }];
      },
      FormBlankAs: function FormBlankAs() {
        return {
          icon: "zmdi-long-arrow-return zmdi-hc-rotate-90",
          text: "i18n:hmaker-nav-blank-item"
        };
      },
      FormFields: function FormFields() {
        return [{
          title: "i18n:hmaker-nav-k-title",
          name: "title",
          comType: "ti-input"
        }, {
          title: "i18n:hmaker-nav-k-icon",
          name: "icon",
          comType: "ti-input-icon"
        }, {
          title: "i18n:hmaker-nav-k-type",
          name: "type",
          comType: "ti-switcher",
          comConf: {
            options: [{
              icon: "zmdi-file",
              text: "i18n:hmaker-nav-tp-page",
              value: "page"
            }, {
              icon: "zmdi-link",
              text: "i18n:hmaker-nav-tp-href",
              value: "href"
            }, {
              icon: "zmdi-flash-auto",
              text: "i18n:hmaker-nav-tp-dispatch",
              value: "dispatch"
            }]
          }
        }, {
          title: "i18n:hmaker-nav-k-value",
          name: "value",
          comType: "ti-input"
        }];
      },
      FormData: function FormData() {
        if (this.myCurrentIndex >= 0) return this.TableData[this.myCurrentIndex];
      }
    },
    methods: {
      OnRowSelected: function OnRowSelected(_ref2) {
        var t = _ref2.currentId,
            e = _ref2.checkedIds,
            i = _ref2.currentIndex;
        this.myCurrentIndex = i, this.myCurrentId = t, this.myCheckedIds = e, _.assign(this.myActionStatus, {
          moveUp: i > 0,
          moveDown: i >= 0 && i < this.TableLastIndex,
          remove: i >= 0
        });
      },
      OnFormChanged: function OnFormChanged() {
        var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref3.name,
            e = _ref3.value;

        if (this.myCurrentIndex >= 0) {
          var i = _.cloneDeep(this.data);

          i[this.myCurrentIndex][t] = e, this.notifyChange(i);
        }
      },
      updateParentActionMenu: function updateParentActionMenu() {
        this.$notify("actions:update", {
          data: [{
            key: "create",
            text: "i18n:add-item",
            type: "action",
            icon: "zmdi-plus",
            action: "$parent:callChild(createNewOne)"
          }, {
            type: "line"
          }, {
            key: "remove",
            type: "action",
            icon: "zmdi-delete",
            action: "$parent:callChild(removeChecked)",
            enableBy: "remove"
          }, {
            type: "line"
          }, {
            key: "moveUp",
            type: "action",
            icon: "zmdi-long-arrow-up",
            action: "$parent:callChild(moveUp)",
            enableBy: "moveUp"
          }, {
            key: "moveDown",
            type: "action",
            icon: "zmdi-long-arrow-down",
            action: "$parent:callChild(moveDown)",
            enableBy: "moveDown"
          }],
          status: this.myActionStatus
        });
      },
      notifyChange: function notifyChange() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var e = [];
        _.forEach(t, function (t) {
          e.push(_.pick(t, "icon", "title", "type", "value"));
        }), this.$notify("change", e);
      },
      __recover_selected: function __recover_selected(t, e) {
        var _this7 = this;

        var i = {};

        for (var n = 0; n < e; n++) {
          i["N".concat(t + n)] = !0;
        }

        console.log(i), this.$nextTick(function () {
          _this7.OnRowSelected({
            currentId: "N".concat(t),
            currentIndex: t,
            checkedIds: i
          });
        });
      },
      moveUp: function moveUp() {
        var _this8 = this;

        var t = _.cloneDeep(this.TableData),
            e = _.remove(t, function (_ref4) {
          var t = _ref4.id;
          return _this8.myCheckedIds[t];
        });

        if (!_.isEmpty(e)) {
          var _Ti$Util2;

          var i = 1 * _.first(e).id.substring(1),
              n = Math.max(0, i - 1);

          n >= 0 && ((_Ti$Util2 = Ti.Util).insertToArray.apply(_Ti$Util2, [t, n].concat(_toConsumableArray(e))), this.notifyChange(t), this.__recover_selected(n, e.length));
        }
      },
      moveDown: function moveDown() {
        var _this9 = this;

        var t = _.cloneDeep(this.TableData),
            e = _.remove(t, function (_ref5) {
          var t = _ref5.id;
          return _this9.myCheckedIds[t];
        });

        if (!_.isEmpty(e)) {
          var _Ti$Util3;

          var i = 1 * _.first(e).id.substring(1) + 1;
          i <= this.TableData.length - e.length && ((_Ti$Util3 = Ti.Util).insertToArray.apply(_Ti$Util3, [t, i].concat(_toConsumableArray(e))), this.notifyChange(t), this.__recover_selected(i, e.length));
        }
      },
      removeChecked: function removeChecked() {
        var _this10 = this;

        var t = _.filter(this.TableData, function (_ref6) {
          var t = _ref6.id;
          return !_this10.myCheckedIds[t];
        });

        this.notifyChange(t), this.myCurrentIndex = -1, this.myCurrentId = null, this.myCheckedIds = {};
      },
      createNewOne: function createNewOne() {
        var t = _.cloneDeep(this.TableData);

        Ti.Util.insertToArray(t, this.myCurrentIndex, {
          title: Ti.I18n.get("new-item"),
          type: "page"
        }), console.log(t), this.notifyChange(t);
      }
    },
    mounted: function mounted() {
      this.updateParentActionMenu();
    }
  };
  Ti.Preload("ti/com/hmaker/edit-site-nav/edit-site-nav.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-site-nav/_com.json", {
  name: "hmaker-edit-site-nav",
  globally: !0,
  template: "./edit-site-nav.html",
  mixins: ["./edit-site-nav.mjs"]
}), Ti.Preload("ti/com/hmaker/edit-site-router/edit-site-router.html", '<div class="hmaker-edit-site-router">\n  Routers\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {};
    },
    props: {
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      theConfig: function theConfig() {}
    },
    methods: {}
  };
  Ti.Preload("ti/com/hmaker/edit-site-router/edit-site-router.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-site-router/_com.json", {
  name: "hmaker-edit-site-router",
  globally: !0,
  template: "./edit-site-router.html",
  mixins: ["./edit-site-router.mjs"]
}), Ti.Preload("ti/com/hmaker/edit-site-schema/edit-site-schema.html", '<div class="hmaker-edit-site-schema">\n  SCHEMA\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {};
    },
    props: {
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      theConfig: function theConfig() {}
    },
    methods: {}
  };
  Ti.Preload("ti/com/hmaker/edit-site-schema/edit-site-schema.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-site-schema/_com.json", {
  name: "hmaker-edit-site-schema",
  globally: !0,
  template: "./edit-site-schema.html",
  mixins: ["./edit-site-schema.mjs"]
}), Ti.Preload("ti/com/hmaker/edit-site-utils/edit-site-utils.html", '<div class="hmaker-edit-site-utils">\n  Utils\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {};
    },
    props: {
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      theConfig: function theConfig() {}
    },
    methods: {}
  };
  Ti.Preload("ti/com/hmaker/edit-site-utils/edit-site-utils.mjs", t);
}(), Ti.Preload("ti/com/hmaker/edit-site-utils/_com.json", {
  name: "hmaker-edit-site-utils",
  globally: !0,
  template: "./edit-site-utils.html",
  mixins: ["./edit-site-utils.mjs"]
}), Ti.Preload("ti/com/hmaker/site-current-view/com/current-view-con/current-view-con.html", '<div class="current-view-con">\n  <component :is="comType"\n    class="ti-cover-parent"\n    v-bind="comConf"/>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      comType: {
        type: String,
        "default": "ti-loading"
      },
      comConf: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    }
  };
  Ti.Preload("ti/com/hmaker/site-current-view/com/current-view-con/current-view-con.mjs", t);
}(), Ti.Preload("ti/com/hmaker/site-current-view/com/current-view-con/_com.json", {
  name: "current-view-con",
  globally: !1,
  template: "./current-view-con.html",
  mixins: ["./current-view-con.mjs"]
}), Ti.Preload("ti/com/hmaker/site-current-view/site-current-view.html", '<div class="site-current-view"\n  :class="topClass">\n  \x3c!--\n    Title\n  --\x3e\n  <div class="current-view-title">\n    \x3c!-- For Site --\x3e\n    <div class="as-name">\n      <ti-icon \n        class="as-icon"\n        :value="theTitleIcon"/>\n      <span\n        class="as-text">{{theTitleText|i18n}}</span>\n    </div>\n    \x3c!-- Crumb --\x3e\n    <div class="as-crumb"></div>\n    \x3c!-- Actions --\x3e\n    <div class="as-actions">\n      <ti-menu\n        v-if="theCurrentAction"\n          :data="theCurrentAction"\n          :status="status"/>\n    </div>\n  </div>\n  \x3c!--\n    Main Area\n  --\x3e\n  <current-view-con\n    class="ti-fill-parent"\n    :com-type="theCurrentView.comType"\n    :com-conf="theCurrentView.comConf"/>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      home: {
        type: Object,
        "default": null
      },
      tree: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      currentMeta: {
        type: Object,
        "default": null
      },
      currentContent: {
        type: String,
        "default": null
      },
      currentData: {
        type: Object,
        "default": null
      },
      mapping: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      views: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return {
          "is-changed": this.status.changed
        };
      },
      theViewsMapping: function theViewsMapping() {
        return new e(this.mapping || {});
      },
      hasCurrent: function hasCurrent() {
        return this.currentMeta;
      },
      theTitleIcon: function theTitleIcon() {
        return Wn.Util.getIconObj(this.currentMeta || this.home);
      },
      theTitleText: function theTitleText() {
        return Wn.Util.getObjDisplayName(this.currentMeta || this.home);
      },
      theCurrentView: function theCurrentView() {
        var t = {
          comType: "ti-loading",
          comConf: {
            icon: "zmdi-alert-circle-o",
            text: "i18n:blank"
          }
        };

        if (this.hasCurrent) {
          var _e4 = this.home.ph,
              i = this.currentMeta.ph;
          t = this.theViewsMapping.getView({
            path: Ti.Util.getRelativePath(_e4, i),
            type: this.currentMeta.tp,
            mime: this.currentMeta.mime,
            race: this.currentMeta.race
          }, t), _.isString(t) && (t = this.views[t]);
        }

        return Ti.Util.explainObj(this, t);
      },
      theCurrentAction: function theCurrentAction() {
        return this.theCurrentView.actions;
      }
    }
  };

  var e = /*#__PURE__*/function () {
    function e(t) {
      _classCallCheck(this, e);

      this.paths = new Ti.Mapping(t.paths), this.types = new Ti.Mapping(t.types), this.mimes = new Ti.Mapping(t.mimes), this.races = new Ti.Mapping(t.races);
    }

    _createClass(e, [{
      key: "getView",
      value: function getView() {
        var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref7.path,
            e = _ref7.type,
            i = _ref7.mime,
            n = _ref7.race;

        var a = arguments.length > 1 ? arguments[1] : undefined;
        return this.paths.get(t) || this.types.get(e) || this.mimes.get(i) || this.races.get(n) || a;
      }
    }]);

    return e;
  }();

  Ti.Preload("ti/com/hmaker/site-current-view/site-current-view.mjs", t);
}(), Ti.Preload("ti/com/hmaker/site-current-view/_com.json", {
  name: "hmaker-site-current-view",
  globally: !0,
  template: "./site-current-view.html",
  mixins: ["./site-current-view.mjs"],
  components: ["./com/current-view-con", "@com:hmaker/site-state", "@com:ti/text/raw", "@com:ti/obj/json", "@com:wn/obj/preview", "@com:wn/adaptlist"]
}), Ti.Preload("ti/com/hmaker/site-manager/hm-site-manager.html", '<ti-gui\n  class="hmaker-site-manager"\n  :class="className"\n  keep-shown-to="hmaker-site-manager"\n  :layout="theLayout"\n  :schema="theSchema"\n  :can-loading="true"\n  :loading-as="status.reloading"\n  @block:event="onBlockEvent"/>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      home: {
        type: Object,
        "default": null
      },
      tree: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      current: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      config: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      theConfig: function theConfig() {
        return this.config[this.viewportMode] || {};
      },
      theLayout: function theLayout() {
        return {
          type: "cols",
          border: !0,
          blocks: [{
            title: "i18n:hmaker-site-tree",
            size: 280,
            name: "site-tree",
            body: "desktop-site-tree"
          }, {
            name: "site-current",
            body: "desktop-site-current"
          }]
        };
      },
      theSchema: function theSchema() {
        return {
          "desktop-site-tree": {
            comType: "ti-tree",
            comConf: {
              data: this.tree.root,
              display: [{
                key: "rawData",
                type: "Object",
                transformer: "getIconObj",
                comType: "ti-icon"
              }, "rawData.title", "name"],
              blankAs: {
                icon: "zmdi-settings zmdi-hc-spin",
                text: "i18n:hmaker-site-tree-loading"
              },
              currentId: this.tree.currentId,
              showRoot: !1,
              defaultOpenDepth: 1,
              extendFunctionSet: Wn.Util,
              openedNodePaths: this.tree.openedNodePaths
            }
          },
          "desktop-site-current": {
            comType: "hmaker-site-current-view",
            comConf: {
              home: this.home,
              tree: this.tree,
              currentMeta: this.current.meta,
              currentContent: this.current.content,
              currentData: this.current.data,
              mapping: this.theConfig.mapping,
              views: this.config.views,
              status: this.status
            }
          }
        };
      }
    },
    methods: {
      onBlockEvent: function onBlockEvent() {
        var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref8.block,
            e = _ref8.name,
            i = _ref8.args;

        var n = _.concat(t || [], e || []).join("."),
            a = _.first(i);

        console.log("hmaker-site-manager:onBlockEvent", n, a), _.isUndefined(a) || ("site-tree.opened" == n && Ti.App(this).dispatch("main/reloadTreeNode", {
          id: a.id
        }), "site-tree.opened-status:change" == n && Ti.App(this).dispatch("main/setTreeOpenedNodePaths", a), "site-tree.select" == n && Ti.App(this).dispatch("main/setTreeSelected", a.currentId), "site-current.open" == n && Ti.App(this).dispatch("main/reloadCurrent", a.rawData), "site-current.change" == n && Ti.App(this).dispatch("main/onCurrentChanged", a));
      },
      editCurrentObjMeta: function editCurrentObjMeta() {
        var t = this.current.meta || this.home;
        if (!t) return Ti.Toast.Open("i18n:nil-obj");
        Wn.EditObjMeta(t);
      }
    },
    mounted: function mounted() {
      var _this11 = this;

      Ti.Fuse.getOrCreate().add({
        key: "hmaker-site-manager",
        everythingOk: function everythingOk() {
          return !_this11.status.changed;
        },
        fail: function fail() {
          Ti.Toast.Open("i18n:wn-obj-nosaved", "warn");
        }
      });
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Fuse.get().remove("hmaker-site-manager");
    }
  };
  Ti.Preload("ti/com/hmaker/site-manager/hm-site-manager.mjs", t);
}(), Ti.Preload("ti/com/hmaker/site-manager/_com.json", {
  name: "hmaker-site-manager",
  globally: !0,
  i18n: "@i18n:hmaker",
  template: "./hm-site-manager.html",
  mixins: ["./hm-site-manager.mjs"],
  components: ["@com:hmaker/site-current-view"]
}), Ti.Preload("ti/com/hmaker/site-state/com/site-node-editing/site-node-editing.html", '<div class="hmaker-site-node-editing">\n  <template v-if="hasNode">\n    \x3c!--\n      Heading\n    --\x3e\n    <div class="as-head">\n      \x3c!--Title Bar--\x3e\n      <div class="at-left">\n        <ti-icon :value="node.icon"/>\n        <span>{{node.title | i18n}}</span>\n      </div>\n      \x3c!--Action Menu--\x3e\n      <div \n        v-if="hasActionMenu"\n          class="at-right">\n          <ti-menu v-bind="myActionMenu"/>\n      </div>\n    </div>\n    \x3c!--\n      Editing\n    --\x3e\n    <div class="as-edit">\n      <component class="ti-fill-parent"\n        :is="Com.comType"\n        v-bind="Com.comConf"\n        :on-init="OnChildInit"\n        @change="OnChange"\n        @actions:update="OnActionsUpdate"/>\n    </div>\n  </template>\n  \x3c!--\n    Blank\n  --\x3e\n  <template v-else>\n    <ti-loading\n      text="i18n:blank-to-edit"\n      icon="zmdi-arrow-left"/>\n  </template>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        myActionMenu: null
      };
    },
    props: {
      path: {
        type: String,
        "default": null
      },
      node: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      hasNode: function hasNode() {
        return this.path && !_.isEmpty(this.node);
      },
      hasActionMenu: function hasActionMenu() {
        return !_.isEmpty(this.myActionMenu);
      },
      Com: function Com() {
        return "general" == this.path ? {
          comType: "hmaker-edit-site-general",
          comConf: {
            data: this.node.data
          }
        } : "nav" == this.path ? {
          comType: "hmaker-edit-site-nav",
          comConf: {
            data: this.node.data
          }
        } : {
          comType: "ti-form",
          comConf: {
            fields: [{
              name: "path"
            }, {
              name: "node",
              comType: "ti-input-text",
              comConf: {
                readonly: !0,
                height: "7rem"
              }
            }],
            data: {
              path: this.path,
              node: JSON.stringify(this.node, null, "  ")
            }
          }
        };
      }
    },
    methods: {
      OnChange: function OnChange(t) {
        this.$notify("change", {
          path: this.path,
          node: this.node,
          payload: t
        });
      },
      OnActionsUpdate: function OnActionsUpdate() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        this.myActionMenu = t;
      },
      OnChildInit: function OnChildInit(t) {
        this.$myChildCom = t;
      },
      callChild: function callChild(t) {
        console.log(t), this.$myChildCom && this.$myChildCom[t]();
      }
    },
    watch: {
      path: function path() {
        this.myActionMenu = null;
      }
    }
  };
  Ti.Preload("ti/com/hmaker/site-state/com/site-node-editing/site-node-editing.mjs", t);
}(), Ti.Preload("ti/com/hmaker/site-state/com/site-node-editing/_com.json", {
  name: "hmaker-site-node-editing",
  globally: !0,
  template: "./site-node-editing.html",
  mixins: ["./site-node-editing.mjs"],
  components: ["@com:hmaker/edit-site-general", "@com:hmaker/edit-site-utils", "@com:hmaker/edit-site-apis", "@com:hmaker/edit-site-schema", "@com:hmaker/edit-site-blocks", "@com:hmaker/edit-site-nav", "@com:hmaker/edit-site-router", "@com:hmaker/edit-site-actions", "@com:ti/form"]
}), Ti.Preload("ti/com/hmaker/site-state/hm-site-state.html", '<ti-gui\n  class="hmaker-site-state ti-fill-parent"\n  keep-shown-to="hmaker-site-state"\n  :layout="theLayout"\n  :schema="theSchema"\n  @block:event="onBlockEvent"/>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        myCurrentPathId: null,
        myTreeOpenedStatus: {}
      };
    },
    props: {
      home: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      content: {
        type: String,
        "default": null
      }
    },
    computed: {
      theData: function theData() {
        var t = _.trim(this.content);

        return t ? JSON.parse(t) : {};
      },
      theTreeDisplay: function theTreeDisplay() {
        return ["<icon>", "title", "tip"];
      },
      theTreeData: function theTreeData() {
        return {
          name: "ROOT",
          children: [this._general, this._nav, this._apis, this._schema, this._blocks, this._router, this._actions, this._utils]
        };
      },
      _general: function _general() {
        return {
          icon: "fas-sliders-h",
          name: "general",
          title: "i18n:hmaker-site-state-general",
          data: _.pick(this.theData, ["domain", "apiBase", "captcha", "base", "entry"])
        };
      },
      _utils: function _utils() {
        return {
          icon: "zmdi-card-sd",
          name: "utils",
          title: "i18n:hmaker-site-state-utils",
          data: _.assign({}, this.theData.utils)
        };
      },
      _apis: function _apis() {
        var t = [];
        return _.forEach(this.theData.apis, function (e, i) {
          t.push({
            icon: "zmdi-input-power",
            name: i,
            title: e.title || i,
            tip: i,
            data: e
          });
        }), {
          icon: "zmdi-input-composite",
          name: "apis",
          title: "i18n:hmaker-site-state-apis",
          children: t
        };
      },
      _schema: function _schema() {
        var t = [];
        return _.forEach(this.theData.schema, function (e, i) {
          t.push({
            icon: "fas-puzzle-piece",
            name: i,
            title: e.title || i,
            data: e
          });
        }), {
          icon: "fas-pencil-ruler",
          name: "schema",
          title: "i18n:hmaker-site-state-schema",
          children: t
        };
      },
      _blocks: function _blocks() {
        var t = function t(e, i) {
          if (_.isString(e)) return {
            icon: "fas-external-link-alt",
            name: i,
            title: e,
            data: e
          };

          if (e.body) {
            var _t7 = _.isString(e.body) ? e.body : e.body.comType || "ti-label";

            return {
              icon: "fas-puzzle-piece",
              name: i,
              title: "".concat(_.isNumber(i) ? "[".concat(i, "]") : "\"".concat(i, "\""), ":<").concat(_t7, ">"),
              data: e
            };
          }

          {
            var n = [];

            _.forEach(e.blocks, function (e, i) {
              n.push(t(e, i));
            });

            return {
              icon: "im-layer",
              name: i,
              title: [_.isNumber(i) ? "[".concat(i, "]") : "\"".concat(i, "\""), Ti.I18n.get("hmaker-layout-".concat(e.type || "cols"))].join(":"),
              data: e,
              children: n
            };
          }
        };

        var e = [];
        return _.forEach(this.theData.blocks, function (i, n) {
          var a = [];
          _.forEach(i, function (e, i) {
            a.push(t(e, i));
          }), e.push({
            icon: {
              desktop: "zmdi-desktop-windows",
              tablet: "zmdi-tablet",
              phone: "zmdi-smartphone-iphone"
            }[n],
            name: n,
            title: "i18n:".concat(n),
            data: i,
            children: a
          });
        }), {
          icon: "far-object-group",
          name: "blocks",
          title: "i18n:hmaker-site-state-blocks",
          children: e
        };
      },
      _nav: function _nav() {
        return {
          icon: "im-sitemap",
          name: "nav",
          title: "i18n:hmaker-site-state-nav",
          data: this.theData.nav || []
        };
      },
      _router: function _router() {
        var t = [];
        return _.forEach(this.theData.router, function (e, i) {
          t.push({
            icon: "im-share",
            name: i,
            title: e.match,
            data: e
          });
        }), {
          icon: "zmdi-router",
          name: "router",
          title: "i18n:hmaker-site-state-router",
          children: t
        };
      },
      _actions: function _actions() {
        var t = [];
        return _.forEach(this.theData.actions, function (e, i) {
          t.push({
            icon: "im-flash",
            name: i,
            title: i,
            data: e
          });
        }), {
          icon: "im-rocket",
          name: "actions",
          title: "i18n:hmaker-site-state-actions",
          children: t
        };
      },
      theLayout: function theLayout() {
        return {
          type: "tabs",
          tabAt: "bottom-left",
          blocks: [{
            title: "i18n:structure",
            type: "cols",
            border: !0,
            blocks: [{
              size: .372,
              name: "tree",
              body: "desktopStructureTree"
            }, {
              name: "edit",
              body: "desktopStructureEdit"
            }]
          }, {
            title: "i18n:source-code",
            name: "source",
            body: "desktopSourceCode"
          }]
        };
      },
      theSchema: function theSchema() {
        return {
          desktopStructureTree: {
            comType: "ti-tree",
            comConf: {
              mainWidth: 300,
              border: "cell",
              multi: !1,
              data: this.theTreeData,
              display: this.theTreeDisplay,
              autoOpen: !1,
              currentId: this.myCurrentPathId,
              defaultOpenDepth: 0,
              keepOpenBy: "hm-site-state-".concat(this.home.id, "-opened"),
              keepCurrentBy: "hm-site-state-".concat(this.home.id, "-current"),
              showRoot: !1
            }
          },
          desktopStructureEdit: {
            comType: "hmaker-site-node-editing",
            comConf: {
              path: this.myCurrentPathId,
              node: this.theCurrentNode
            }
          },
          desktopSourceCode: {
            comType: "ti-text-raw",
            comConf: {
              showTitle: !1,
              content: this.content,
              ignoreKeyUp: !0
            }
          }
        };
      },
      theCurrentNode: function theCurrentNode() {
        return this.myCurrentPathId ? Ti.Trees.getNodeByPath(this.theTreeData, this.myCurrentPathId) : null;
      }
    },
    methods: {
      updateByPath: function updateByPath() {
        var _ref9 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref9.path,
            e = _ref9.payload;

        var i = _.cloneDeep(this.theData);

        _.set(i, t, e), Ti.App(this).dispatch("main/onCurrentChanged", i);
      },
      onBlockEvent: function onBlockEvent() {
        var _ref10 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref10.block,
            e = _ref10.name,
            i = _ref10.args;

        var n = _.concat(t || [], e || []).join("."),
            a = _.first(i);

        console.log("hmaker-site-state:onBlockEvent", n, a), _.isUndefined(a) || ("tree.select" == n ? this.onSelected(a) : "tree.opened-status:change" == n ? this.onOpenedStatusChanged(a) : "edit.change" == n ? this.updateByPath(a) : "source.change" == n && Ti.App(this).dispatch("main/onCurrentChanged", a));
      },
      onSelected: function onSelected() {
        var _arguments = arguments,
            _this12 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {
          var _ref11, t, e;

          return regeneratorRuntime.wrap(function _callee7$(_context7) {
            while (1) {
              switch (_context7.prev = _context7.next) {
                case 0:
                  _ref11 = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : {}, t = _ref11.currentId, e = _ref11.current;
                  _this12.myCurrentPathId = t;

                case 2:
                case "end":
                  return _context7.stop();
              }
            }
          }, _callee7);
        }))();
      },
      onOpenedStatusChanged: function onOpenedStatusChanged(t) {
        this.myTreeOpenedStatus = t;
      }
    }
  };
  Ti.Preload("ti/com/hmaker/site-state/hm-site-state.mjs", t);
}(), Ti.Preload("ti/com/hmaker/site-state/_com.json", {
  name: "hmaker-site-state",
  globally: !0,
  template: "./hm-site-state.html",
  mixins: ["./hm-site-state.mjs"],
  components: ["./com/site-node-editing"]
}), Ti.Preload("ti/com/net/aliyun/vod/manager/vod-manager.html", '<ti-gui\n  class="net-aliyun-vod-manager"\n  :class="TopClass"\n  :layout="GuiLayout"\n  :schema="GuiSchema"\n  :can-loading="true"\n  :loading-as="reloading"\n  @filter::change="OnFilterChange"\n  @sorter::change="OnSorterChange"\n  @list::select="OnListSelect"\n  @video::preview="OnVideoPreview"\n  @pager::change="OnPagerChange"/>'), function () {
  var t = {
    data: function data() {
      return {
        reloading: !1,
        list: [],
        pager: {},
        scrollToken: null,
        myCurrentId: null,
        myCurrentVideo: null,
        myFilter: {
          match: {}
        },
        mySort: {
          CreationTime: -1
        }
      };
    },
    props: {
      meta: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      fields: {
        type: String,
        "default": "Title,CoverURL,Duration,CateName,Size,Description,RegionID"
      },
      filter: {
        type: Object,
        "default": function _default() {
          return {
            comType: "ti-combo-filter",
            comConf: {
              placeholder: "i18n:net-flt-nil",
              form: {
                fields: [{
                  title: "i18n:net-ct",
                  name: "CreationTime",
                  type: "Array",
                  comType: "ti-input-daterange",
                  comConf: {
                    valueType: "ms-array"
                  }
                }, {
                  title: "i18n:net-vod-duration",
                  name: "Duration",
                  comType: "ti-switcher",
                  comConf: {
                    autoSplitValue: !1,
                    options: [{
                      value: "[0, 600]",
                      text: "i18n:net-vod-du-short"
                    }, {
                      value: "(600, 4800]",
                      text: "i18n:net-vod-du-tv"
                    }, {
                      value: "(4800, )",
                      text: "i18n:net-vod-du-long"
                    }]
                  }
                }]
              }
            }
          };
        }
      },
      sorter: {
        type: Object,
        "default": function _default() {
          return {
            comType: "ti-combo-sorter",
            comConf: {
              options: [{
                value: "CreationTime",
                text: "i18n:net-ct"
              }]
            }
          };
        }
      },
      pageSize: {
        type: Number,
        "default": 20
      },
      multi: {
        type: Boolean,
        "default": !0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      ConfName: function ConfName() {
        return _.get(this.meta, "vodConfigName");
      },
      CmdPrefix: function CmdPrefix() {
        return this.ConfName ? "aliyunvod ".concat(this.ConfName) : "aliyunvod";
      },
      ThePageNumber: function ThePageNumber() {
        return _.get(this.pager, "pn") || 1;
      },
      ThePageSize: function ThePageSize() {
        return _.get(this.pager, "pgsz") || this.pageSize;
      },
      WallItemDisplay: function WallItemDisplay() {
        return {
          key: "..",
          comType: "ti-obj-thumb",
          comConf: function comConf(t) {
            return {
              id: t.videoId,
              title: t.title,
              preview: {
                type: "image",
                value: t.coverURL
              }
            };
          }
        };
      },
      GuiLayout: function GuiLayout() {
        return {
          type: "cols",
          border: !0,
          blocks: [{
            type: "rows",
            size: "61.8%",
            border: !0,
            blocks: [{
              type: "cols",
              size: ".44rem",
              blocks: [{
                name: "filter",
                flex: "both",
                body: "pcFilter"
              }, {
                name: "sorter",
                flex: "none",
                body: "pcSorter"
              }]
            }, {
              name: "list",
              body: "pcList"
            }, {
              name: "pager",
              size: 40,
              body: "pcPager"
            }]
          }, {
            icon: "zmdi-tv-alt-play",
            title: "i18n:video",
            name: "video",
            body: "pcVideo"
          }]
        };
      },
      GuiSchema: function GuiSchema() {
        return {
          pcFilter: {
            comType: this.filter.comType,
            comConf: _.assign({
              value: this.myFilter
            }, this.filter.comConf)
          },
          pcSorter: {
            comType: this.sorter.comType,
            comConf: _.assign({
              value: this.mySort
            }, this.sorter.comConf)
          },
          pcList: {
            comType: "ti-wall",
            comConf: {
              data: this.list,
              idBy: "videoId",
              multi: this.multi,
              display: this.WallItemDisplay
            }
          },
          pcPager: {
            comType: "ti-paging-jumper",
            comConf: {
              value: this.pager
            }
          },
          pcVideo: {
            comType: "net-aliyun-vod-video-info",
            comConf: {
              value: this.myCurrentVideo
            }
          }
        };
      }
    },
    methods: {
      OnFilterChange: function OnFilterChange(t) {
        var _this13 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {
          return regeneratorRuntime.wrap(function _callee8$(_context8) {
            while (1) {
              switch (_context8.prev = _context8.next) {
                case 0:
                  _this13.myFilter = t;
                  _this13.pager = _.assign({}, _this13.pager, {
                    pn: 1
                  });
                  _context8.next = 4;
                  return _this13.reloadVideos();

                case 4:
                case "end":
                  return _context8.stop();
              }
            }
          }, _callee8);
        }))();
      },
      OnSorterChange: function OnSorterChange(t) {
        var _this14 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {
          return regeneratorRuntime.wrap(function _callee9$(_context9) {
            while (1) {
              switch (_context9.prev = _context9.next) {
                case 0:
                  _this14.mySort = t;
                  _this14.pager = _.assign({}, _this14.pager, {
                    pn: 1
                  });
                  _context9.next = 4;
                  return _this14.reloadVideos();

                case 4:
                case "end":
                  return _context9.stop();
              }
            }
          }, _callee9);
        }))();
      },
      OnPagerChange: function OnPagerChange(t) {
        var _this15 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {
          var e;
          return regeneratorRuntime.wrap(function _callee10$(_context10) {
            while (1) {
              switch (_context10.prev = _context10.next) {
                case 0:
                  if (_this15.pager = _.assign({}, _this15.pager, t), _this15.meta) {
                    e = _.get(t, "pgsz");
                    Ti.Util.isNil(e) || Ti.Storage.session.setObject(_this15.meta.id, {
                      pgsz: e
                    });
                  }

                  _context10.next = 3;
                  return _this15.reloadVideos();

                case 3:
                case "end":
                  return _context10.stop();
              }
            }
          }, _callee10);
        }))();
      },
      OnListSelect: function OnListSelect(_ref12) {
        var _this16 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {
          var t, e, i;
          return regeneratorRuntime.wrap(function _callee11$(_context11) {
            while (1) {
              switch (_context11.prev = _context11.next) {
                case 0:
                  t = _ref12.currentId, e = _ref12.checkedIds, i = _ref12.checked;
                  _this16.myCurrentId = t;

                  if (!t) {
                    _context11.next = 9;
                    break;
                  }

                  _context11.next = 5;
                  return _this16.reloadVideoInfo(t);

                case 5:
                  _this16.myCurrentVideo = _context11.sent;

                  _this16.$notify("change", {
                    currentId: _this16.myCurrentId,
                    current: _this16.myCurrentVideo,
                    checkedIds: e,
                    checked: i
                  });

                  _context11.next = 10;
                  break;

                case 9:
                  _this16.myCurrentVideo = null, _this16.$notify("change", void 0);

                case 10:
                case "end":
                  return _context11.stop();
              }
            }
          }, _callee11);
        }))();
      },
      OnVideoPreview: function OnVideoPreview() {
        var _arguments2 = arguments,
            _this17 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {
          var _ref13, t, e, i, n;

          return regeneratorRuntime.wrap(function _callee12$(_context12) {
            while (1) {
              switch (_context12.prev = _context12.next) {
                case 0:
                  _ref13 = _arguments2.length > 0 && _arguments2[0] !== undefined ? _arguments2[0] : {}, t = _ref13.title, e = _ref13.videoId, i = _ref13.coverURL;
                  _context12.next = 3;
                  return _this17.requestPlayAuth(e);

                case 3:
                  n = _context12.sent;
                  _context12.next = 6;
                  return Ti.App.Open({
                    icon: "zmdi-tv-alt-play",
                    title: "Preview: ".concat(t),
                    textOk: null,
                    textCancel: "i18n:close",
                    position: "top",
                    width: "90%",
                    height: "90%",
                    comType: "NetAliyunVodVideoPlayer",
                    comConf: {
                      videoId: e,
                      playAuth: n,
                      coverUrl: i
                    },
                    components: "@com:net/aliyun/vod/video/player"
                  });

                case 6:
                case "end":
                  return _context12.stop();
              }
            }
          }, _callee12);
        }))();
      },
      requestPlayAuth: function requestPlayAuth(t) {
        var _this18 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {
          var e, i;
          return regeneratorRuntime.wrap(function _callee13$(_context13) {
            while (1) {
              switch (_context13.prev = _context13.next) {
                case 0:
                  _this18.reloading = !0;
                  e = [_this18.CmdPrefix, "playauth", t, "-cqn"];
                  _context13.next = 4;
                  return Wn.Sys.exec2(e.join(" "), {
                    as: "json"
                  });

                case 4:
                  i = _context13.sent;
                  return _context13.abrupt("return", (_this18.reloading = !1, i.playAuth));

                case 6:
                case "end":
                  return _context13.stop();
              }
            }
          }, _callee13);
        }))();
      },
      reloadVideoInfo: function reloadVideoInfo(t) {
        var _this19 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {
          var e, i;
          return regeneratorRuntime.wrap(function _callee14$(_context14) {
            while (1) {
              switch (_context14.prev = _context14.next) {
                case 0:
                  _this19.reloading = !0;
                  e = [_this19.CmdPrefix, "video", t, "-cqn"];
                  _context14.next = 4;
                  return Wn.Sys.exec2(e.join(" "), {
                    as: "json"
                  });

                case 4:
                  i = _context14.sent;
                  return _context14.abrupt("return", (_this19.reloading = !1, i));

                case 6:
                case "end":
                  return _context14.stop();
              }
            }
          }, _callee14);
        }))();
      },
      toAliyunTime: function toAliyunTime(t) {},
      toMatchStr: function toMatchStr(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var i = [];
        return Ti.S.isBlank(t) || (/^[a-z0-9]{32}$/.test(t) ? i.push("VideoId = '".concat(t, "'")) : i.push("Title in ('".concat(t.replace(/'/g, ""), "')"))), _.forEach(e, function (t, e) {
          if (!Ti.Util.isNil(t)) if (_.isString(t) && /^[\[(].+[)\]]$/.test(t)) i.push("".concat(e, "=").concat(t));else if (/time/i.test(e)) {
            var n = "yyyy-MM-dd'T'HH:mm:ss'Z'",
                a = Ti.Types.formatDateTime(t, n);
            1 == (a = _.concat(a)).length && a.push(a[0]);
            var s = Ti.Types.toDate(a[1]).getTime() + 864e5;
            a[1] = Ti.Types.formatDateTime(s, n), i.push("".concat(e, "=['").concat(a[0], "', '").concat(a[1], "')"));
          } else if (_.isArray(t)) {
            var _n5 = _.map(t, function (t) {
              return _.isString(t) ? t.replace(/'/g, "") : t;
            });

            i.push("".concat(e, " in (").concat(_n5.join(","), ")"));
          } else _.isString(t) ? i.push("".concat(e, " in ('").concat(t.replace(/'/g, ""), "')")) : i.push("".concat(e, " = ").concat(t));
        }), i.join(" and ");
      },
      reloadVideos: function reloadVideos() {
        var _this20 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {
          var t, e, i, n, a;
          return regeneratorRuntime.wrap(function _callee15$(_context15) {
            while (1) {
              switch (_context15.prev = _context15.next) {
                case 0:
                  _this20.reloading = !0;
                  t = [_this20.CmdPrefix];
                  t.push("search", "-fields", "'".concat(_this20.fields, "'"));
                  e = _.get(_this20.myFilter, "keyword"), i = _.get(_this20.myFilter, "match");
                  if (!_.isEmpty(i) || !Ti.Util.isNil(e)) try {
                    t.push("-match", "\"".concat(_this20.toMatchStr(e, i), "\""));
                  } catch (t) {
                    console.error(t);
                  }
                  n = [];
                  _.forEach(_this20.mySort, function (t, e) {
                    n.push("".concat(e, ":").concat(t > 0 ? "ASC" : "DESC"));
                  }), _.isEmpty(n) || t.push("-sort ", "".concat(n.join(" "))), t.push("-pn", _this20.ThePageNumber), t.push("-pgsz", _this20.ThePageSize), t.push("-as page -cqn");
                  _context15.next = 9;
                  return Wn.Sys.exec2(t.join(" "), {
                    as: "json"
                  });

                case 9:
                  a = _context15.sent;
                  _this20.list = a.list, _this20.pager = a.pager, _this20.scrollToken = a.scrollToken, _this20.reloading = !1;

                case 11:
                case "end":
                  return _context15.stop();
              }
            }
          }, _callee15);
        }))();
      }
    },
    mounted: function mounted() {
      if (this.meta) {
        var _t8 = Ti.Storage.session.getObject(this.meta.id);

        if (_t8) {
          var e = _.get(_t8, "pgsz");

          this.pager.pgsz = e;
        }
      }

      this.reloadVideos();
    }
  };
  Ti.Preload("ti/com/net/aliyun/vod/manager/vod-manager.mjs", t);
}(), Ti.Preload("ti/com/net/aliyun/vod/manager/_com.json", {
  name: "net-aliyun-vod-manager",
  globally: !0,
  template: "./vod-manager.html",
  mixins: ["./vod-manager.mjs"],
  components: ["@com:ti/wall", "@com:ti/combo/filter", "@com:ti/combo/sorter", "@com:ti/paging/jumper", "@com:net/aliyun/vod/video/info"]
}), Ti.Preload("ti/com/net/aliyun/vod/video/info/vod-video-info.html", '<div class="net-aliyun-vod-video-info"\n  :class="TopClass">\n  \x3c!--\n    Blank\n  --\x3e\n  <ti-loading\n    v-if="!hasVideo"\n      class="as-big"\n      icon="fas-hand-point-left"\n      text="i18n:net-vod-video-nil"/>\n  \x3c!--\n    Show Content\n  --\x3e\n  <template v-else>\n    \x3c!--Preview--\x3e\n    <div class="as-preview">\n      <img \n        class="ti-fill-parent"\n        :src="VideoCoverURL"/>\n      <div class="as-btn" @click.left="OnClickPreview">\n        <i class="fas fa-play-circle"></i>\n      </div>\n    </div>\n    \x3c!--\n      Detail info\n    --\x3e\n    <div class="as-detail">\n      <ti-form\n        class="ti-cover-parent"\n        spacing="tiny"\n        :fields="FormFields"\n        :data="value"/>\n    </div>\n  </template>\n</div>'), function () {
  var t = {
    props: {
      value: {
        type: Object,
        "default": void 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      hasVideo: function hasVideo() {
        return !!this.value;
      },
      VideoCoverURL: function VideoCoverURL() {
        return _.get(this.value, "coverURL");
      },
      FormFields: function FormFields() {
        return [{
          title: "VideoID",
          name: "videoId"
        }, {
          title: "Title",
          name: "title"
        }, {
          title: "CateName",
          name: "cateName"
        }, {
          title: "Description",
          name: "description"
        }, {
          title: "Duration",
          name: "duration"
        }, {
          title: "RegionId",
          name: "regionId"
        }, {
          title: "Size",
          name: "size"
        }, {
          title: "Status",
          name: "status"
        }, {
          title: "Tags",
          name: "tags"
        }, {
          title: "CreateTime",
          name: "createTime"
        }, {
          title: "ModifyTime",
          name: "modifyTime"
        }];
      }
    },
    methods: {
      OnClickPreview: function OnClickPreview() {
        this.$notify("preview", this.value);
      }
    }
  };
  Ti.Preload("ti/com/net/aliyun/vod/video/info/vod-video-info.mjs", t);
}(), Ti.Preload("ti/com/net/aliyun/vod/video/info/_com.json", {
  name: "NetAliyunVodVideoInfo",
  globally: !0,
  template: "./vod-video-info.html",
  mixins: ["./vod-video-info.mjs"],
  components: ["@com:ti/form"]
}), Ti.Preload("ti/com/net/aliyun/vod/video/player/vod-video-player.html", '<div class="net-vod-video-player"\n  :class="TopClass">\n  <div :id="PlayerID"></div>\n</div>'), function () {
  var t = {
    props: {
      autoplay: {
        type: Boolean,
        "default": !1
      },
      videoId: {
        type: String,
        "default": void 0
      },
      coverUrl: {
        type: String,
        "default": void 0
      },
      playAuth: {
        type: String,
        "default": void 0
      },
      encryptType: {
        type: Number,
        "default": void 0
      },
      lang: {
        type: String,
        "default": void 0
      },
      format: {
        type: String,
        "default": "m3u8"
      },
      definition: {
        type: String,
        "default": "FD,LD,SD,HD,OD,2K,4K"
      },
      defaultDefinition: {
        type: String,
        "default": "FD"
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      PlayerID: function PlayerID() {
        return "ALIPLAYER_".concat(parseInt(1e5 * Math.random()));
      }
    },
    methods: {
      initPlayer: function initPlayer() {
        if (!this.$player && this.playAuth && this.videoId && this.coverUrl) {
          var _t9 = this.lang || Ti.Config.lang();

          this.$player = new Aliplayer({
            id: this.PlayerID,
            width: "100%",
            height: "100%",
            autoplay: this.autoplay,
            useH5Prism: !0,
            format: this.format,
            definition: this.definition,
            defaultDefinition: this.defaultDefinition,
            language: _t9,
            vid: this.videoId,
            cover: this.coverUrl,
            encryptType: this.encryptType,
            playauth: this.playAuth
          });
        }
      }
    },
    watch: {},
    mounted: function mounted() {
      this.initPlayer();
    },
    beforeDestroy: function beforeDestroy() {
      this.$player && this.$player.dispose();
    }
  };
  Ti.Preload("ti/com/net/aliyun/vod/video/player/vod-video-player.mjs", t);
}(), Ti.Preload("ti/com/net/aliyun/vod/video/player/_com.json", {
  name: "NetAliyunVodVideoPlayer",
  globally: !0,
  template: "./vod-video-player.html",
  mixins: ["./vod-video-player.mjs"],
  components: []
}), Ti.Preload("ti/com/ti/actionbar/com/bar-item-action/bar-item-action.html", '<div class="bar-item-action">\n  <bar-item-info\n    v-bind="this"\n    @fire="OnFired"/>\n</div>'), function () {
  var t = {
    inject: ["$bar"],
    props: {
      name: {
        type: String,
        "default": void 0
      },
      icon: {
        type: String,
        "default": void 0
      },
      hideIcon: {
        type: Boolean,
        "default": !1
      },
      text: {
        type: String,
        "default": void 0
      },
      tip: {
        type: String,
        "default": void 0
      },
      altDisplay: {
        type: [Object, Array],
        "default": function _default() {
          return [];
        }
      },
      enabled: {
        type: [String, Array, Object],
        "default": void 0
      },
      disabled: {
        type: [String, Array, Object],
        "default": void 0
      },
      highlight: {
        type: [String, Array, Object],
        "default": void 0
      },
      value: {
        type: [Boolean, String, Number, Array],
        "default": !0
      },
      depth: {
        type: Number,
        "default": 0
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      action: {
        type: [String, Object, Function],
        "default": void 0
      },
      notify: {
        type: [Boolean, String],
        "default": !1
      },
      wait: {
        type: Number,
        "default": 0
      },
      shortcut: {
        type: String,
        "default": void 0
      }
    },
    computed: {
      notifyName: function notifyName() {
        if (this.notify) return _.isString(this.notify) ? this.notify : this.name;
      },
      TheAction: function TheAction() {
        return _.isFunction(this.action) && this.wait > 0 ? _.debounce(this.action, this.wait, {
          leading: !0
        }) : this.action;
      }
    },
    methods: {
      OnFired: function OnFired(t) {
        if (this.action) {
          var _t10 = Ti.App(this);

          Ti.Shortcut.genActionInvoking(this.TheAction, {
            $com: this.$bar.$parent,
            argContext: _t10.$state()
          })();
        }

        this.notifyName && this.$bar.notifyChange({
          name: this.notifyName,
          value: t
        });
      }
    },
    mounted: function mounted() {
      var _this21 = this;

      this.shortcut && Ti.App(this).guardShortcut(this, this.shortcut, function () {
        return _this21.isEnabled;
      });
    },
    destroyed: function destroyed() {
      this.shortcut && Ti.App(this).pulloutShortcut(this);
    }
  };
  Ti.Preload("ti/com/ti/actionbar/com/bar-item-action/bar-item-action.mjs", t);
}(), Ti.Preload("ti/com/ti/actionbar/com/bar-item-action/_com.json", {
  name: "bar-item-action",
  template: "./bar-item-action.html",
  mixins: ["./bar-item-action.mjs"]
}), Ti.Preload("ti/com/ti/actionbar/com/bar-item-group/bar-item-group.html", '<div class="bar-item-group"\n  :class="TopClass"\n  @mouseenter.stop="OnMouseEnter"\n  @mouseleave.stop="OnMouseLeave">\n  \x3c!--\n    Info\n  --\x3e\n  <bar-item-info\n    v-if="hasInfo"\n      v-bind="this"\n      :value="collapse"\n      :status="status"\n      :suffix-icon="ItemSuffixIcon"\n      @fire="OnFired"/>\n  \x3c!--\n    Group Children\n  --\x3e\n  <template v-if="showChildren">\n    <div v-if="isDepth1"\n      class="as-mask"\n      @click="doCollapse"></div>\n    <div ref="children"\n      v-if="showChildren"\n        class="as-children"\n        :style="ChildrenStyle"\n        @click.left="doCollapse">\n          <component \n            v-for="bi in items"\n              :key="bi.key"\n              :is="bi.comType"\n              v-bind="bi.comConf"\n              :depth="depth+1"\n              :items="bi.items"\n              :hide-icon="isChildrenWithoutIcon"\n              :status="status"/>\n    </div>\n  </template>\n</div>'), function () {
  var t = {
    inject: ["$bar"],
    provide: function provide() {
      return {
        depth: this.depth + 1
      };
    },
    data: function data() {
      return {
        collapse: !0,
        isDocked: !1,
        barItems: []
      };
    },
    props: {
      name: {
        type: String,
        "default": void 0
      },
      icon: {
        type: String,
        "default": void 0
      },
      hideIcon: {
        type: Boolean,
        "default": !1
      },
      text: {
        type: String,
        "default": void 0
      },
      tip: {
        type: String,
        "default": void 0
      },
      altDisplay: {
        type: [Object, Array],
        "default": function _default() {
          return [];
        }
      },
      enabled: {
        type: [String, Array, Object],
        "default": void 0
      },
      disabled: {
        type: [String, Array, Object],
        "default": void 0
      },
      highlight: {
        type: [String, Array, Object],
        "default": void 0
      },
      depth: {
        type: Number,
        "default": 0
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      items: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      autoExtend: {
        type: Boolean,
        "default": !1
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-collapse": this.collapse,
          "is-extended": !this.collapse,
          "is-depth-x": this.isDepthX
        }, "is-depth-".concat(this.depth));
      },
      isDepth0: function isDepth0() {
        return 0 == this.depth;
      },
      isDepth1: function isDepth1() {
        return 1 == this.depth;
      },
      isDepthX: function isDepthX() {
        return this.depth > 1;
      },
      hasInfo: function hasInfo() {
        return this.icon || this.text;
      },
      isChildrenWithoutIcon: function isChildrenWithoutIcon() {
        var _iterator3 = _createForOfIteratorHelper(this.items),
            _step3;

        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
            var _t11 = _step3.value;
            if (_t11.comConf && _t11.comConf.icon) return !1;
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }

        return !0;
      },
      showChildren: function showChildren() {
        return this.isDepth0 || !this.collapse;
      },
      ItemSuffixIcon: function ItemSuffixIcon() {
        if (this.isDepthX) return "im-angle-right";
      },
      ChildrenStyle: function ChildrenStyle() {
        if (!this.isDepth0 && !this.isDocked) return {
          visibility: "hidden"
        };
      }
    },
    methods: {
      OnMouseEnter: function OnMouseEnter() {
        this.isDepthX && this.doExtend();
      },
      OnMouseLeave: function OnMouseLeave() {
        this.isDepthX && this.doCollapse();
      },
      OnFired: function OnFired(t) {
        t ? this.doExtend() : this.doCollapse();
      },
      doExtend: function doExtend() {
        this.collapse = !1;
      },
      doCollapse: function doCollapse() {
        this.collapse = !0, this.isDocked = !1;
      },
      doDockChildren: function doDockChildren() {
        var _this22 = this;

        this.$nextTick(function () {
          _this22.$refs.children && _this22.depth > 0 && (Ti.Dom.dockTo(_this22.$refs.children, _this22.$el, {
            mode: _this22.isDepthX ? "V" : "H",
            position: "fixed",
            space: _this22.isDepthX ? {
              x: -1
            } : {
              y: 3
            }
          }), _.delay(function () {
            _this22.isDocked = !0;
          }, 5));
        });
      }
    },
    watch: {
      collapse: "doDockChildren"
    },
    mounted: function mounted() {
      this.doDockChildren(), this.$bar.allocGroup(this);
    },
    beforeDestroy: function beforeDestroy() {
      this.$bar.freeGroup(this);
    }
  };
  Ti.Preload("ti/com/ti/actionbar/com/bar-item-group/bar-item-group.mjs", t);
}(), Ti.Preload("ti/com/ti/actionbar/com/bar-item-group/_com.json", {
  name: "bar-item-group",
  template: "./bar-item-group.html",
  mixins: ["./bar-item-group.mjs"]
}), Ti.Preload("ti/com/ti/actionbar/com/bar-item-info/bar-item-info.html", '<div class="bar-item-info"\n  :class="TopClass"\n  @click.left="OnClickTop">\n  \x3c!--\n    Icon\n  --\x3e\n  <span\n    v-if="isShowIcon"\n      class="as-icon">\n      <ti-icon\n        v-if="hasIcon" \n          :value="CurrentDisplay.icon"/>\n  </span>\n  \x3c!--\n    Text\n  --\x3e\n  <span\n    v-if="CurrentDisplay.text"\n      class="as-text"\n        >{{CurrentDisplay.text|i18n}}</span>\n  \x3c!--\n    Suffix Icon\n  --\x3e\n  <span\n    v-if="suffixIcon"\n      class="as-suffix-icon"><ti-icon :value="suffixIcon"/></span>\n  \x3c!--\n    Shortcut\n  --\x3e\n  <span\n    v-else-if="isShowShortcut"\n      class="as-shortcut">{{shortcut}}</span>\n</div>'), function () {
  var t = {
    inject: ["$bar"],
    props: {
      name: {
        type: String,
        "default": void 0
      },
      icon: {
        type: String,
        "default": void 0
      },
      hideIcon: {
        type: Boolean,
        "default": !1
      },
      text: {
        type: String,
        "default": void 0
      },
      tip: {
        type: String,
        "default": void 0
      },
      shortcut: {
        type: String,
        "default": void 0
      },
      suffixIcon: {
        type: String,
        "default": void 0
      },
      altDisplay: {
        type: [Object, Array],
        "default": function _default() {
          return [];
        }
      },
      enabled: {
        type: [Boolean, String, Array, Object],
        "default": void 0
      },
      disabled: {
        type: [Boolean, String, Array, Object],
        "default": void 0
      },
      highlight: {
        type: [Boolean, String, Array, Object],
        "default": void 0
      },
      value: {
        type: [Boolean, String, Number, Array],
        "default": void 0
      },
      depth: {
        type: Number,
        "default": 0
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-enabled": this.isEnabled,
          "is-disabled": this.isDisabled,
          "is-highlight": this.isHighlight,
          "is-top": 1 == this.depth,
          "is-sub": this.depth > 1,
          "has-icon": !!this.icon,
          "no-icon": !this.icon,
          "show-icon": this.isShowIcon,
          "hide-icon": !this.isShowIcon
        }, "is-depth-".concat(this.depth));
      },
      AltDisplay: function AltDisplay() {
        return _.isArray(this.altDisplay) ? this.altDisplay : this.altDisplay ? [this.altDisplay] : [];
      },
      isEnabled: function isEnabled() {
        return Ti.Util.isNil(this.enabled) ? !(!Ti.Util.isNil(this.disabled) && this.isMatchStatus(this.disabled)) : this.isMatchStatus(this.enabled);
      },
      isDisabled: function isDisabled() {
        return !this.isEnabled;
      },
      isHighlight: function isHighlight() {
        return !Ti.Util.isNil(this.highlight) && this.isMatchStatus(this.highlight);
      },
      isShowShortcut: function isShowShortcut() {
        return this.shortcut && this.depth > 1;
      },
      isShowIcon: function isShowIcon() {
        return !this.hideIcon || this.hasIcon;
      },
      hasIcon: function hasIcon() {
        return !!this.CurrentDisplay.icon;
      },
      CurrentDisplay: function CurrentDisplay() {
        var t = {
          icon: this.icon,
          text: this.text,
          tip: this.tip,
          value: this.value
        };

        if (!_.isEmpty(this.AltDisplay)) {
          var _iterator4 = _createForOfIteratorHelper(this.AltDisplay),
              _step4;

          try {
            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
              var e = _step4.value;
              var i = e.match || this.name;

              if (this.isMatchStatus(i)) {
                _.assign(t, _.pick(e, ["icon", "text", "tip", "value"]));

                break;
              }
            }
          } catch (err) {
            _iterator4.e(err);
          } finally {
            _iterator4.f();
          }
        }

        return t;
      },
      TheValues: function TheValues() {
        var t = this.CurrentDisplay.value;
        return _.isBoolean(t) ? [t, !t] : _.isArray(t) ? t : [t];
      }
    },
    methods: {
      OnClickTop: function OnClickTop() {
        if (!this.isDisabled) {
          var _t12 = this.isHighlight ? _.last(this.TheValues) : _.first(this.TheValues);

          this.$emit("fire", _t12);
        }
      },
      isMatchStatus: function isMatchStatus(t) {
        if (_.isBoolean(t)) return t;
        if (_.isString(t)) return !!_.get(this.status, t);

        if (_.isArray(t)) {
          var _iterator5 = _createForOfIteratorHelper(t),
              _step5;

          try {
            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
              var e = _step5.value;
              if (!_.get(this.status, e)) return !1;
            }
          } catch (err) {
            _iterator5.e(err);
          } finally {
            _iterator5.f();
          }

          return !0;
        }

        return !!_.isPlainObject(t) && (t.validate ? Ti.Validate.match(this.status, t.validate) : _.isMatch(this.status, t));
      }
    }
  };
  Ti.Preload("ti/com/ti/actionbar/com/bar-item-info/bar-item-info.mjs", t);
}(), Ti.Preload("ti/com/ti/actionbar/com/bar-item-info/_com.json", {
  name: "bar-item-info",
  template: "./bar-item-info.html",
  mixins: ["./bar-item-info.mjs"]
}), Ti.Preload("ti/com/ti/actionbar/com/bar-item-line/bar-item-line.html", '<div class="bar-item-line"\n  :class="TopClass"></div>'), function () {
  var t = {
    inject: ["$bar"],
    props: {
      depth: {
        type: Number,
        "default": 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-top": 1 == this.depth,
          "is-sub": this.depth > 1
        });
      }
    }
  };
  Ti.Preload("ti/com/ti/actionbar/com/bar-item-line/bar-item-line.mjs", t);
}(), Ti.Preload("ti/com/ti/actionbar/com/bar-item-line/_com.json", {
  name: "bar-item-line",
  template: "./bar-item-line.html",
  mixins: ["./bar-item-line.mjs"]
}), Ti.Preload("ti/com/ti/actionbar/ti-actionbar.html", '<div class="ti-actionbar"\n  :class="TopClass"\n  v-ti-activable>\n  <bar-item-group \n    name="Ti_ActionBar_Root_Group"\n    :items="BarItems"\n    :status="status"/>\n</div>'), function () {
  var t = {
    provide: function provide() {
      return {
        $bar: this,
        depth: 0
      };
    },
    data: function data() {
      return {
        mySeq: 0,
        myGroups: {}
      };
    },
    props: {
      items: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      align: {
        type: String,
        "default": "left",
        validator: function validator(t) {
          return /^(left|right|center)$/.test(t);
        }
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass("align-".concat(this.align));
      },
      BarItems: function BarItems() {
        var _this23 = this;

        var t = [];
        return _.forEach(this.items, function (e) {
          var i = _this23.evalBarItem(e);

          i && t.push(i);
        }), t;
      }
    },
    methods: {
      allocGroup: function allocGroup(t) {
        this.myGroups[t.name] = t;
      },
      freeGroup: function freeGroup(t) {
        delete this.myGroups[t.name];
      },
      notifyChange: function notifyChange() {
        var _ref14 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref14.name,
            e = _ref14.value;

        t && this.$notify("change", {
          name: t,
          value: e
        });
      },
      evalBarItem: function evalBarItem(t) {
        var e = this.getItemType(t),
            i = this.getItemKey(e),
            n = {
          type: e,
          key: i,
          comType: "bar-item-".concat(e),
          comConf: _.defaults(_.omit(t, "items"), {
            name: i
          })
        };

        if ("group" == e && _.isArray(t.items)) {
          n.items = [];

          var _iterator6 = _createForOfIteratorHelper(t.items),
              _step6;

          try {
            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
              var _e5 = _step6.value;

              var _t13 = this.evalBarItem(_e5);

              n.items.push(_t13);
            }
          } catch (err) {
            _iterator6.e(err);
          } finally {
            _iterator6.f();
          }
        }

        return n;
      },
      getItemType: function getItemType(t) {
        return t.type ? _.toLower(t.type) : _.isEmpty(t) ? "line" : _.isArray(t.items) ? "group" : "action";
      },
      getItemKey: function getItemKey() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "BarItem";
        return "".concat(t, "-").concat(this.mySeq++);
      },
      collapseAllGroup: function collapseAllGroup() {
        _.forEach(this.myGroups, function (t) {
          t.doCollapse();
        });
      },
      __ti_shortcut: function __ti_shortcut(t) {
        var _this24 = this;

        Ti.InvokeBy({
          ESCAPE: function ESCAPE() {
            return _this24.collapseAllGroup();
          }
        }, t);
      }
    },
    mounted: function mounted() {
      var _this25 = this;

      Ti.Viewport.watch(this, {
        resize: function resize() {
          return _this25.collapseAllGroup();
        }
      });
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Viewport.unwatch(this);
    }
  };
  Ti.Preload("ti/com/ti/actionbar/ti-actionbar.mjs", t);
}(), Ti.Preload("ti/com/ti/actionbar/_com.json", {
  name: "ti-actionbar",
  globally: !0,
  template: "./ti-actionbar.html",
  mixins: ["./ti-actionbar.mjs"],
  components: ["./com/bar-item-action", "./com/bar-item-group", "./com/bar-item-line", "./com/bar-item-info"]
}), Ti.Preload("ti/com/ti/button/ti-button.html", '<div class="ti-button"\n  :class="topClass">\n  <ul>\n    <li v-for="it in items"\n      :key="it.name"\n      :class="it.buttonClass"\n      @click="OnClickItem(it)">\n      \x3c!--\n        Icon\n      --\x3e\n      <ti-icon v-if="it.icon"\n        :value="it.icon"/>\n      \x3c!--\n        Text\n      --\x3e\n      <span v-if="it.text"\n        class="it-text">{{it.text|i18n}}</span>\n    </li>\n  </ul>\n</div>'), function () {
  var t = {
    props: {
      size: {
        type: String,
        "default": "normal",
        validator: function validator(t) {
          return /^(big|normal|small|tiny)$/.test(t);
        }
      },
      align: {
        type: String,
        "default": "center"
      },
      setup: {
        type: [Array, Object],
        "default": function _default() {
          return [];
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName(["is-".concat(this.size), "at-".concat(this.align)], this.className);
      },
      items: function items() {
        var t = [].concat(this.setup),
            e = [];
        return _.forEach(t, function (t, i) {
          var _n$buttonClass;

          var n = {};
          n.name = t.name || "item-".concat(i), n.eventName = t.eventName || n.name, n.payload = t.payload, n.icon = t.icon, n.text = t.text, n.disabled = t.disabled, n.handler = t.handler, n.buttonClass = (_n$buttonClass = {}, _defineProperty(_n$buttonClass, "as-do-".concat(n.name), !0), _defineProperty(_n$buttonClass, "is-enabled", !t.disabled), _defineProperty(_n$buttonClass, "is-disabled", !!t.disabled), _defineProperty(_n$buttonClass, "is-invert-icon", !!t.invertIcon), _n$buttonClass), e.push(n);
        }), e;
      }
    },
    methods: {
      OnClickItem: function OnClickItem(t) {
        t.disabled || (_.isFunction(t.handler) && t.handler(), _.isString(t.eventName) && this.$notify(t.eventName, t.payload));
      }
    }
  };
  Ti.Preload("ti/com/ti/button/ti-button.mjs", t);
}(), Ti.Preload("ti/com/ti/button/_com.json", {
  name: "ti-button",
  globally: !0,
  template: "./ti-button.html",
  mixins: ["./ti-button.mjs"],
  components: []
}), Ti.Preload("ti/com/ti/calendar/ti-calendar.html", '<div class="ti-calendar">\n  \x3c!--\n    Heading\n  --\x3e\n  <div class="as-head">\n    \x3c!--\n      Switcher\n    --\x3e\n    <div class="as-switcher" :class="switcherClass">\n      <div class="as-title">\n        <ti-input-month\n          width="100%"\n          height=".36rem"\n          icon="far-calendar-alt"\n          :hide-border="true"\n          :value="theViewDate"\n          :text="theViewRangeText"\n          :editable="monthEditable"\n          :begin-year="beginYear"\n          :end-year="endYear"\n          @change="onMonthChanged"/>\n      </div>\n      <div class="go-btn to-prev-block" @click="gotoMatrix(-1)">\n        <ti-icon value="zmdi-chevron-left"/>\n      </div>\n      <div class="go-btn go-today" @click="gotoToday">\n        <span>{{\'today\'|i18n}}</span>\n      </div>\n      <div class="go-btn to-next-block" @click="gotoMatrix(1)">\n        <ti-icon value="zmdi-chevron-right"/>\n      </div>\n    </div>\n    \x3c!--\n      Change Mode\n      TODO maybe should support mode changing here\n    --\x3e\n    \n  </div>\n  \x3c!--\n    Day cells\n  --\x3e\n  <div class="as-matrix-table">\n    <div v-for="matrix in dateMatrixList"\n      class="as-matrix">\n      <table>\n        <thead>\n          <th v-for="wt in weekTitles">{{wt.title}}</th>\n        </thead>\n        <tbody>\n          <tr v-for="row in matrix">\n            <td v-for="cell in row" :class="cell.type">\n              <slot name="cell">\n                <span class="as-date-item"\n                  @click="onClickCell(cell)">{{cell.text}}</span>\n              </slot>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        view_date: null
      };
    },
    props: {
      value: {
        type: [String, Number, Date, Array],
        "default": null
      },
      range: {
        type: Boolean,
        "default": !1
      },
      firstDayInWeek: {
        type: [Number, String],
        "default": 0
      },
      matrixMode: {
        type: String,
        "default": "monthly"
      },
      matrixCount: {
        type: Number,
        "default": 1
      },
      monthEditable: {
        type: Boolean,
        "default": !0
      },
      monthFormat: {
        type: String,
        "default": "yyyy-MM-dd"
      },
      beginYear: {
        type: [Number, String],
        "default": 1970
      },
      endYear: {
        type: [Number, String],
        "default": new Date().getFullYear() + 1
      }
    },
    watch: {
      value: function value(t, e) {
        if (!_.isEmpty(t) && !_.isEqual(t, e)) {
          var _ref15;

          var _concat = [].concat(t),
              _concat2 = _slicedToArray(_concat, 1),
              _e6 = _concat2[0],
              i = Ti.Types.toDate(_e6).getTime();

          (_ref15 = _).inRange.apply(_ref15, [i].concat(_toConsumableArray(this.theMatrixRangeInMs))) || (this.view_date = null);
        }
      }
    },
    computed: {
      switcherClass: function switcherClass() {
        if (this.isMonthly && this.matrixCount > 1) return "sz-double";
      },
      isMonthly: function isMonthly() {
        return "monthly" == this.matrixMode;
      },
      isWeekly: function isWeekly() {
        return "weekly" == this.matrixMode;
      },
      today: function today() {
        return new Date();
      },
      todayName: function todayName() {
        return Ti.Types.formatDate(this.today, "yyyy-MM-dd");
      },
      theDate: function theDate() {
        return _.isArray(this.value) ? this.value.length > 0 ? Ti.Types.toDate(this.value[0]) : null : Ti.Types.toDate(this.value, null);
      },
      theRangeInMs: function theRangeInMs() {
        var t,
            e = new Date(this.theDate);
        t = _.isArray(this.value) && this.value.length > 1 ? Ti.Types.toDate(this.value[1]) : new Date(e);
        var i = [e.getTime(), t.getTime()].sort();
        return e = Ti.DateTime.setTime(new Date(i[0])), t = Ti.DateTime.setDayLastTime(new Date(i[1])), [e.getTime(), t.getTime()];
      },
      theRangeInText: function theRangeInText() {
        return Ti.Types.formatDate(this.theRangeInMs, "yyyy-MM-dd");
      },
      theRangeBeginDate: function theRangeBeginDate() {
        return new Date(this.theRangeInMs[0]);
      },
      theRangeEndDate: function theRangeEndDate() {
        return new Date(this.theRangeInMs[1]);
      },
      theMatrixRangeInMs: function theMatrixRangeInMs() {
        var t = this.dateMatrixList[0][0][0],
            e = this.dateMatrixList.length - 1,
            i = this.dateMatrixList[e].length - 1,
            n = this.dateMatrixList[e][i].length - 1,
            a = this.dateMatrixList[e][i][n],
            s = new Date(t.raw),
            o = new Date(a.raw);
        return Ti.DateTime.setTime(s), Ti.DateTime.setDayLastTime(o), [s.getTime(), o.getTime()];
      },
      theMatrixRange: function theMatrixRange() {
        return [new Date(this.theMatrixRangeInMs[0]), new Date(this.theMatrixRangeInMs[1])];
      },
      theViewRange: function theViewRange() {
        var t = this.dateMatrixList.length - 1,
            e = this.dateMatrixList[t].length - 1,
            i = this.dateMatrixList[t][e].length - 1,
            n = this.dateMatrixList[t][e][i];

        for (; "in-month" != n.type && i > 0;) {
          n = this.dateMatrixList[t][e][--i];
        }

        var a = new Date(this.theViewDate),
            s = new Date(n.raw);
        return Ti.DateTime.setTime(a), Ti.DateTime.setDayLastTime(s), [a, s];
      },
      theViewRangeText: function theViewRangeText() {
        var t = this.theViewRange[0];

        if (this.isMonthly && this.matrixCount > 1) {
          var e = this.theViewRange[1],
              i = t.getFullYear(),
              n = t.getMonth(),
              a = e.getFullYear(),
              s = e.getMonth(),
              o = Ti.DateTime.getMonthAbbr(n),
              l = Ti.DateTime.getMonthAbbr(s),
              r = {
            yy0: i,
            yy1: a,
            MM0: ++n,
            MM1: ++s,
            MT0: Ti.I18n.get("cal.abbr.".concat(o)),
            MT1: Ti.I18n.get("cal.abbr.".concat(l))
          };
          if (i != a) return Ti.I18n.getf("cal.m-range-beyond-years", r);
          if (n != s) return Ti.I18n.getf("cal.m-range-beyond-months", r);
        }

        return Ti.Types.formatDate(t, this.monthFormat);
      },
      theDateName: function theDateName() {
        return Ti.Types.formatDate(this.theDate, "yyyy-MM-dd");
      },
      theViewDate: function theViewDate() {
        return this.view_date || this.theDate || new Date();
      },
      theViewYear: function theViewYear() {
        return this.theViewDate.getFullYear();
      },
      theViewMonth: function theViewMonth() {
        return this.theViewDate.getMonth();
      },
      theViewMonthAbbr: function theViewMonthAbbr() {
        return Ti.DateTime.getMonthAbbr(this.theViewMonth);
      },
      weekTitles: function weekTitles() {
        var t = this.firstDayInWeek;
        if (_.isNumber(t)) t = _.clamp(t, 0, 6);else if (_.isString(t)) {
          var _e7 = _.lowerCase(t);

          t = Ti.DateTime.getWeekDayValue(_e7, 0);
        }
        var e = [];

        for (var i = 0; i < 7; i++) {
          e.push({
            day: t,
            title: Ti.I18n.get(["cal", "week", t])
          }), ++t >= 7 && (t = 0);
        }

        return e;
      },
      weekFirstDayValue: function weekFirstDayValue() {
        return _.isString(this.firstDayInWeek) ? Ti.DateTime.getWeekDayValue(this.firstDayInWeek, 0) : _.clamp(this.firstDayInWeek, 0, 6);
      },
      dateMatrixList: function dateMatrixList() {
        var t = new Date(this.theViewDate),
            e = [],
            i = this.theViewYear,
            n = this.theViewMonth;
        if (this.isMonthly) for (var a = 0; a < this.matrixCount; a++) {
          var _this$createMatrix = this.createMatrix(t, i, n),
              _a = _this$createMatrix.matrix,
              s = _this$createMatrix.lastDate;

          e.push(_a), t = Ti.DateTime.moveDate(new Date(s), 1), ++n >= 12 && (n = 0, i++);
        } else {
          var _this$createMatrix2 = this.createMatrix(t),
              _i3 = _this$createMatrix2.matrix;

          e.push(_i3);
        }
        return e;
      }
    },
    methods: {
      createMatrix: function createMatrix(t, e, i) {
        this.isMonthly && t.setDate(1);
        var n = this.weekFirstDayValue;

        for (; t.getDay() > n;) {
          Ti.DateTime.moveDate(t, -1);
        }

        for (; t.getDay() < n;) {
          Ti.DateTime.moveDate(t, 1);
        }

        var a = 0,
            s = [],
            o = null;

        for (;;) {
          var _n6 = [];

          for (var _e8 = 0; _e8 < 7; _e8++) {
            var _ref16;

            var _s2 = 7 * a + _e8,
                l = (o = Ti.DateTime.createDate(t, _s2)).getMonth(),
                r = o.getDate(),
                d = Ti.Types.formatDate(o, "yyyy-MM-dd"),
                c = !1;

            c = this.range ? (_ref16 = _).inRange.apply(_ref16, [o.getTime()].concat(_toConsumableArray(this.theRangeInMs))) : d == this.theDateName;
            var h = {
              "is-prev": l < i,
              "is-next": l > i,
              "in-month": l == i,
              "is-today": this.todayName == d,
              "is-selected": c
            },
                m = "" + r;

            if (1 == r && (this.isMonthly && this.matrixCount > 1 || this.isWeekly)) {
              var _t14 = Ti.DateTime.getMonthAbbr(l);

              m = Ti.I18n.get("cal.abbr.".concat(_t14));
            }

            _n6.push({
              x: _e8,
              y: a,
              index: _s2,
              type: h,
              name: d,
              text: m,
              year: o.getFullYear(),
              month: l,
              day: o.getDay(),
              date: o.getDate(),
              raw: o
            });
          }

          if (a++, this.isWeekly) {
            if (a > _.clamp(this.matrixCount, 1, 100)) break;
          } else {
            if (!this.isMonthly) break;
            if (_n6[0].year == e && _n6[0].month > i || _n6[0].year > e) break;
          }

          s.push(_n6);
        }

        return {
          matrix: s,
          lastDate: o
        };
      },
      gotoToday: function gotoToday() {
        this.view_date = new Date();
      },
      gotoMatrix: function gotoMatrix() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        var e = this.theViewDate,
            i = new Date(e.getFullYear(), e.getMonth(), e.getDate());
        if (this.isMonthly) Ti.DateTime.moveMonth(i, t);else {
          if (!this.isWeekly) return;
          Ti.DateTime.moveDate(i, 7 * t * this.matrixCount);
        }
        this.view_date = i;
      },
      onMonthChanged: function onMonthChanged(t) {
        var e = Ti.Types.toDate(t);
        this.view_date = e;
      },
      onClickCell: function onClickCell(t) {
        if (this.range) {
          if (_.isArray(this.value)) {
            if (1 == this.value.length) {
              var e = [t.raw.getTime(), this.theDate.getTime()].sort(),
                  i = Ti.Types.toDate(e[0]),
                  n = Ti.Types.toDate(e[1]);
              this.$notify("change", [i, n]);
            } else this.$notify("change", [t.raw]);
          } else this.$notify("change", [t.raw]);
        } else this.$notify("change", t.raw);
      }
    },
    mounted: function mounted() {
      this.view_date = this.theDate || new Date();
    }
  };
  Ti.Preload("ti/com/ti/calendar/ti-calendar.mjs", t);
}(), Ti.Preload("ti/com/ti/calendar/_com.json", {
  name: "ti-calendar",
  globally: !0,
  template: "./ti-calendar.html",
  mixins: ["./ti-calendar.mjs"],
  components: ["@com:ti/input/month"]
}), Ti.Preload("ti/com/ti/chart/combo/ti-chart-combo.html", '<div class="ti-chart-combo"\n  :class="TopClass">\n  \x3c!--\n    头部\n  --\x3e\n  <div class="as-head">\n    \x3c!--\n      标题: 选择\n    --\x3e\n    <TiDroplist\n      v-if="hasMultiChartNames"\n        v-bind="ChartNameListOptions"\n        :auto-i18n="true"\n        :options="nameList"\n        :value="name"\n        @change="OnChartNameChange"/>\n    <div\n      v-else\n        class="as-title">{{ChartTitle | i18n}}</div>\n    \x3c!--\n      图表类型选择\n    --\x3e\n    <TiSwitcher\n      v-if="hasMultiChartTypes"\n        :options="ChartTypeList"\n        :value="ChartType"\n        :allow-empty="false"\n        @change="OnChartTypeChange"/>\n    \x3c!--\n      时间选择\n    --\x3e\n    <div class="as-date-range">\n      <span>{{DateRangeText}}</span>\n      <a @click.left="OnPickDateRange">{{\'modify\'|i18n}}</a>\n    </div>\n    \x3c!--\n      操作部分\n    --\x3e\n    <TiActionbar align="right"\n      :items="HeadActionBarItems"\n      :status="myActionStatus"/>\n  </div>\n  \x3c!---\n    图表\n  --\x3e\n  <div class="as-chart">\n    \x3c!--\n      Show chart\n    --\x3e\n    <component\n      v-if="hasChartCom"\n        class="ti-fill-parent"\n        :is="myChartCom.comType"\n        v-bind="myChartCom.comConf"\n        :data="ChartData"/>\n    \x3c!--\n      Show loading\n    --\x3e\n    <ti-loading\n      v-else\n        class="as-mid-tip"/>\n  </div>\n</div>'), function () {
  var t = {
    pie: {
      icon: "im-pie-chart",
      tip: "i18n:chart-pie",
      comPath: "@com:ti/chart/raw/pie",
      comType: "TiChartRawPie",
      comConf: {}
    },
    bar: {
      icon: "im-bar-chart",
      tip: "i18n:chart-bar",
      comPath: "@com:ti/chart/raw/bar",
      comType: "TiChartRawBar",
      comConf: {}
    },
    line: {
      icon: "im-line-chart-up",
      tip: "i18n:chart-line",
      comPath: "@com:ti/chart/raw/line",
      comType: "TiChartRawLine",
      comConf: {}
    },
    rank: {
      icon: "zmdi-sort-amount-desc",
      tip: "i18n:chart-rank",
      comPath: "@com:ti/chart/raw/rank",
      comType: "TiChartRawRank",
      comConf: {}
    }
  };
  var e = {
    data: function data() {
      return {
        myActionStatus: {
          reloading: !1,
          force: !1
        },
        myChartCom: void 0
      };
    },
    props: {
      nameList: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      name: {
        type: String,
        "default": void 0
      },
      date: {
        type: [Number, String, Date],
        "default": void 0
      },
      maxDate: {
        type: [Number, String, Date],
        "default": void 0
      },
      span: {
        type: String,
        "default": "7d"
      },
      spanOptions: {
        type: Array,
        "default": function _default() {
          return [{
            text: "7",
            value: "7d"
          }, {
            text: "30",
            value: "30d"
          }, {
            text: "60",
            value: "60d"
          }, {
            text: "90",
            value: "90d"
          }];
        }
      },
      chartDefines: {
        type: Object,
        "default": void 0
      },
      chartTypes: {
        type: [Array, String],
        "default": "pie,bar,line"
      },
      type: {
        type: String,
        "default": void 0
      },
      chartOptions: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      data: {
        type: Array,
        "default": function _default() {
          return [];
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      hasChartCom: function hasChartCom() {
        return !(!this.myChartCom || !this.myChartCom.comType);
      },
      hasMultiChartNames: function hasMultiChartNames() {
        return !_.isEmpty(this.nameList) && this.nameList.length > 1;
      },
      ChartNameListOptions: function ChartNameListOptions() {
        return {
          prefixIconForClean: !1,
          keepWidthWhenDrop: !0,
          hover: "suffixIcon",
          valueBy: "name",
          textBy: "title",
          dropDisplay: "title"
        };
      },
      ChartTitle: function ChartTitle() {
        if (!_.isEmpty(this.nameList)) {
          var _iterator7 = _createForOfIteratorHelper(this.nameList),
              _step7;

          try {
            for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
              var _t15 = _step7.value;
              if (_t15.name == this.name) return _t15.title;
            }
          } catch (err) {
            _iterator7.e(err);
          } finally {
            _iterator7.f();
          }
        }

        return this.name;
      },
      HeadActionBarItems: function HeadActionBarItems() {
        var _this26 = this;

        return [{
          name: "reloading",
          type: "action",
          icon: "zmdi-refresh",
          text: "i18n:refresh",
          altDisplay: {
            icon: "zmdi-refresh zmdi-hc-spin",
            text: "i18n:loading"
          },
          action: function action() {
            return _this26.reloadData(!1);
          }
        }, {
          type: "group",
          icon: "im-menu-dot-v",
          items: [{
            name: "forceReloading",
            type: "action",
            icon: "im-reset",
            text: "i18n:refresh-hard",
            altDisplay: {
              icon: "zmdi-refresh zmdi-hc-spin",
              text: "i18n:loading",
              match: {
                reloading: !0,
                force: !0
              }
            },
            action: function action() {
              return _this26.reloadData(!0);
            }
          }, {
            name: "forceClearReloading",
            type: "action",
            icon: "im-reset",
            text: "i18n:refresh-hard-clear",
            altDisplay: {
              icon: "zmdi-refresh zmdi-hc-spin",
              text: "i18n:loading",
              match: {
                reloading: !0,
                force: !0
              }
            },
            action: function action() {
              return _this26.reloadData(!0, !0);
            }
          }]
        }];
      },
      TheDate: function TheDate() {
        var t = Ti.DateTime.moveDate(new Date(), -1);
        return this.date && (t = Ti.DateTime.parse(this.date)), Ti.DateTime.format(t, "yyyy-MM-dd");
      },
      TheMaxDate: function TheMaxDate() {
        var t = Ti.DateTime.moveDate(new Date(), -1);
        return this.maxDate && (t = Ti.DateTime.parse(this.maxDate)), t;
      },
      TheSpan: function TheSpan() {
        return this.span || "7d";
      },
      DateRangeText: function DateRangeText() {
        var t = [],
            e = this.TheDate;
        t.push(Ti.DateTime.format(e, "yyyy-MM-dd"));
        var i = /^(\d+)([smhdw])?$/.exec(this.TheSpan);

        if (i) {
          var _e9 = parseInt(i[1]),
              n = {
            w: "dt-u-week",
            d: "dt-u-day",
            h: "dt-u-hour",
            m: "dt-u-min",
            s: "dt-u-sec",
            ms: "dt-u-ms"
          }[i[2] || "ms"],
              a = "".concat(_e9).concat(Ti.I18n.get(n));

          t.push(Ti.I18n.getf("dt-in", {
            val: a
          }));
        }

        return t.join(" ");
      },
      hasMultiChartTypes: function hasMultiChartTypes() {
        return !_.isEmpty(this.chartTypes) && this.chartTypes.length > 0;
      },
      ChartTypeList: function ChartTypeList() {
        var t = this.chartTypes;
        _.isString(t) && (t = Ti.S.toArray(t));
        var e = [];

        var _iterator8 = _createForOfIteratorHelper(t),
            _step8;

        try {
          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
            var i = _step8.value;

            var _t16 = this.loadChartDefine(i);

            _t16 && (_t16.value = i, e.push(_t16));
          }
        } catch (err) {
          _iterator8.e(err);
        } finally {
          _iterator8.f();
        }

        return e;
      },
      ChartType: function ChartType() {
        return this.type ? this.type : _.isEmpty(this.chartTypes) ? void 0 : _.first(this.ChartTypeList).value;
      },
      ChartData: function ChartData() {
        return this.data || [];
      }
    },
    methods: {
      OnChartNameChange: function OnChartNameChange(t) {
        this.$notify("change:chart:name", t);
      },
      OnChartTypeChange: function OnChartTypeChange(t) {
        this.$notify("change:chart:type", t);
      },
      OnPickDateRange: function OnPickDateRange() {
        var _this27 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {
          var t;
          return regeneratorRuntime.wrap(function _callee16$(_context16) {
            while (1) {
              switch (_context16.prev = _context16.next) {
                case 0:
                  _context16.next = 2;
                  return Ti.App.Open({
                    title: "i18n:edit",
                    width: "5rem",
                    height: "5rem",
                    result: {
                      date: _this27.TheDate,
                      span: _this27.TheSpan
                    },
                    model: {
                      prop: "data",
                      event: "change"
                    },
                    comType: "TiForm",
                    comConf: [{
                      fields: [{
                        title: "i18n:stat-date-at",
                        name: "date",
                        comType: "TiInputDate",
                        comConf: {}
                      }, {
                        title: "i18n:stat-date-span",
                        name: "span",
                        tip: "i18n:dt-u-day",
                        width: "auto",
                        comType: "TiSwitcher",
                        comConf: {
                          options: _this27.spanOptions
                        }
                      }]
                    }]
                  });

                case 2:
                  t = _context16.sent;

                  if (!(!t || !t.date)) {
                    _context16.next = 5;
                    break;
                  }

                  return _context16.abrupt("return");

                case 5:
                  if (!(Ti.DateTime.parse(t.date).getTime() > _this27.TheMaxDate.getTime())) {
                    _context16.next = 9;
                    break;
                  }

                  _context16.next = 8;
                  return Ti.Toast.Open("i18n:stat-date-at-oor", "warn");

                case 8:
                  return _context16.abrupt("return", _context16.sent);

                case 9:
                  _this27.$notify("change:chart:datespan", {
                    date: t.date,
                    span: t.span
                  });

                case 10:
                case "end":
                  return _context16.stop();
              }
            }
          }, _callee16);
        }))();
      },
      loadChartDefine: function loadChartDefine(e) {
        var i = _.get(this.chartDefines, e);

        if (i || (i = _.get(t, e)), i) return _.cloneDeep(i);
      },
      reloadData: function reloadData() {
        var _this28 = this;

        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
        this.myActionStatus = {
          reloading: !0,
          force: t
        }, this.$notify("reload:data", {
          force: t,
          cleanCache: e,
          done: function done() {
            _this28.myActionStatus = {};
          }
        });
      },
      reloadChartCom: function reloadChartCom() {
        var _arguments3 = arguments,
            _this29 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {
          var t, e, i, n;
          return regeneratorRuntime.wrap(function _callee17$(_context17) {
            while (1) {
              switch (_context17.prev = _context17.next) {
                case 0:
                  t = _arguments3.length > 0 && _arguments3[0] !== undefined ? _arguments3[0] : _this29.type;
                  e = _this29.loadChartDefine(t);

                  if (e) {
                    _context17.next = 4;
                    break;
                  }

                  return _context17.abrupt("return", void console.warn("Fail to reloadChartCom by type : \"".concat(t, "\"")));

                case 4:
                  _context17.next = 6;
                  return Ti.App(_this29).loadView({
                    comType: e.comPath
                  });

                case 6:
                  console.log({
                    type: t,
                    chart: e
                  });
                  i = e.comType, n = _.assign({}, e.comConf, _.get(_this29.chartOptions, _this29.type));
                  _this29.myChartCom = {
                    comType: i,
                    comConf: n
                  };

                case 9:
                case "end":
                  return _context17.stop();
              }
            }
          }, _callee17);
        }))();
      }
    },
    watch: {
      type: {
        handler: "reloadChartCom",
        immediate: !0
      },
      name: function name() {
        this.reloadChartCom();
      }
    }
  };
  Ti.Preload("ti/com/ti/chart/combo/ti-chart-combo.mjs", e);
}(), Ti.Preload("ti/com/ti/chart/combo/_com.json", {
  name: "ti-chart-combo",
  globally: !0,
  template: "./ti-chart-combo.html",
  mixins: ["./ti-chart-combo.mjs"],
  components: ["@com:ti/actionbar", "@com:ti/form", "@com:ti/droplist", "@com:ti/switcher", "@com:ti/input/date", "@com:ti/chart/g2"]
}), Ti.Preload("ti/com/ti/chart/g2/ti-chart-g2.html", '<div class="ti-chart ti-chart-g2"\n  :class="TopClass"\n  :style="TopStyle">\n  <div ref="chart"\n    class="chart-main ti-fill-parent"></div>\n</div>'), function () {
  var t = {
    props: {
      data: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      width: {
        type: [Number, String],
        "default": void 0
      },
      height: {
        type: [Number, String],
        "default": void 0
      },
      padding: {
        type: [Number, Array, String],
        "default": "auto"
      },
      appendPadding: {
        type: [Number, Array, String],
        "default": void 0
      },
      setup: {
        type: Function,
        "default": _.identity
      },
      autoSource: {
        type: Boolean,
        "default": !0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TopStyle: function TopStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      hasData: function hasData() {
        return !_.isEmpty(this.data);
      }
    },
    methods: {
      draw_chart: function draw_chart() {
        var t = this.$refs.chart,
            e = new G2.Chart({
          container: t,
          padding: this.padding,
          appendPadding: this.appendPadding,
          autoFit: !0
        });
        return this.autoSource && this.hasData && e.data(this.data), _.isFunction(this.setup) && this.setup(e, this.data), e.render(), e;
      },
      redrawChart: function redrawChart() {
        if (_.isElement(this.$refs.chart)) {
          if (this.$G2Chart) {
            try {
              this.$G2Chart.destroy();
            } catch (t) {}

            $(this.$refs.chart).empty();
          }

          this.$G2Chart = this.draw_chart(this);
        }
      },
      drawAll: function drawAll() {
        var _this30 = this;

        this.$nextTick(function () {
          _this30.redrawChart();
        });
      }
    },
    watch: {
      data: "drawAll"
    },
    mounted: function mounted() {
      this.drawAll(), Ti.Viewport.watch(this, {
        resize: function resize() {
          var t = this.$G2Chart;
          t && (this.$notify("before_resize"), t.forceFit());
        }
      });
    },
    beforeDestroy: function beforeDestroy() {
      this.$G2Chart && this.$G2Chart.destroy(), Ti.Viewport.unwatch(this);
    }
  };
  Ti.Preload("ti/com/ti/chart/g2/ti-chart-g2.mjs", t);
}(), Ti.Preload("ti/com/ti/chart/g2/_com.json", {
  name: "ti-chart-g2",
  globally: !0,
  template: "./ti-chart-g2.html",
  mixins: ["./ti-chart-g2.mjs"],
  components: [],
  deps: ["@/gu/rs/ti/deps/antv/v4/g2/g2.min.js"]
}), Ti.Preload("ti/com/ti/chart/raw/bar/ti-chart-raw-bar.html", '<TiChartG2\n  class="as-bar"\n  :class-name="className"\n  :data="data"\n  :width="width"\n  :height="height"\n  :padding="padding"\n  :append-padding="appendPadding"\n  :auto-source="false"\n  :setup="ChartSetup"/>'), function () {
  var t = {
    props: {
      scaleX: {
        type: Object,
        "default": function _default() {
          return {
            range: [.1, .9]
          };
        }
      }
    },
    computed: {
      ChartSetup: function ChartSetup() {
        var _this31 = this;

        return function (t, e) {
          var _this31$evalXYData = _this31.evalXYData(e),
              i = _this31$evalXYData.list;

          if (_.isEmpty(i)) return;
          t.data(i), _this31.applyChartSetup(t);
          var n = t.interval().position(_this31.ChartPosition);

          _this31.applyViewOptions(n, _this31.view);
        };
      }
    },
    methods: {}
  };
  Ti.Preload("ti/com/ti/chart/raw/bar/ti-chart-raw-bar.mjs", t);
}(), Ti.Preload("ti/com/ti/chart/raw/bar/_com.json", {
  name: "ti-chart-raw-bar",
  globally: !0,
  template: "./ti-chart-raw-bar.html",
  mixins: ["@com:ti/chart/raw/ti-chart-raw.mjs", "./ti-chart-raw-bar.mjs"],
  components: ["@com:ti/chart/g2"]
}), Ti.Preload("ti/com/ti/chart/raw/line/ti-chart-raw-line.html", '<TiChartG2\n  class="as-line"\n  :class-name="className"\n  :data="data"\n  :width="width"\n  :height="height"\n  :padding="padding"\n  :append-padding="appendPadding"\n  :auto-source="false"\n  :setup="ChartSetup"/>'), function () {
  var t = {
    props: {
      areaView: {
        type: [Object, Boolean],
        "default": !1
      },
      pointView: {
        type: [Object, Boolean],
        "default": !0
      }
    },
    computed: {
      ChartSetup: function ChartSetup() {
        var _this32 = this;

        return function (t, e) {
          var _this32$evalXYData = _this32.evalXYData(e),
              i = _this32$evalXYData.list;

          if (_.isEmpty(i)) return;
          t.data(i), _this32.applyChartSetup(t);
          var n = t.line().position(_this32.ChartPosition);
          _this32.applyViewOptions(n, _this32.view), _this32.areaView && (n = t.area().position(_this32.ChartPosition), _this32.applyViewOptions(n, _this32.areaView)), _this32.pointView && (n = t.point().position(_this32.ChartPosition), _this32.applyViewOptions(n, {
            size: 4,
            shape: "circle",
            style: {
              stroke: "#FFF",
              lineWidth: 1
            }
          }, _this32.pointView));
        };
      }
    },
    methods: {}
  };
  Ti.Preload("ti/com/ti/chart/raw/line/ti-chart-raw-line.mjs", t);
}(), Ti.Preload("ti/com/ti/chart/raw/line/_com.json", {
  name: "ti-chart-raw-line",
  globally: !0,
  template: "./ti-chart-raw-line.html",
  mixins: ["@com:ti/chart/raw/ti-chart-raw.mjs", "./ti-chart-raw-line.mjs"],
  components: ["@com:ti/chart/g2"]
}), Ti.Preload("ti/com/ti/chart/raw/pie/ti-chart-raw-pie.html", '<TiChartG2\n  class="as-pie"\n  :class-name="className"\n  :data="data"\n  :width="width"\n  :height="height"\n  :padding="padding"\n  :append-padding="appendPadding"\n  :auto-source="false"\n  :setup="ChartSetup"/>'), function () {
  var t = {
    props: {
      percentKey: {
        type: String,
        "default": "percent"
      },
      precise: {
        type: Number,
        "default": 2
      },
      labelX: {
        type: [Boolean, Object, String, Function],
        "default": "${i18n:name} : ${percent}% : ${value}"
      },
      tooltip: {
        type: [Boolean, Object],
        "default": function _default() {
          return {
            showTitle: !1,
            showMarkers: !1,
            showCrosshairs: !1,
            itemTpl: '<li class="g2-tooltip-list-item">{name} : {percent}% : {value}</li>'
          };
        }
      },
      view: {
        type: Object,
        "default": function _default() {
          return {
            tooltip: ["name*percent*value", function (t, e, i) {
              return {
                name: t,
                percent: e,
                value: i
              };
            }]
          };
        }
      }
    },
    computed: {
      ChartSetup: function ChartSetup() {
        var _this33 = this;

        return function (t, e) {
          var _this33$evalXYData = _this33.evalXYData(e),
              i = _this33$evalXYData.list,
              n = _this33$evalXYData.sum;

          if (_.isEmpty(i)) return;

          var _iterator9 = _createForOfIteratorHelper(i),
              _step9;

          try {
            for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
              var _t17 = _step9.value;
              var _e10 = _t17[_this33.positionY];
              _t17[_this33.percentKey] = Ti.Num.precise(100 * _e10 / n, _this33.precise);
            }
          } catch (err) {
            _iterator9.e(err);
          } finally {
            _iterator9.f();
          }

          t.data(i), _this33.applyChartSetup(t), t.coordinate("theta", {
            radius: .75
          });
          var a = t.interval().adjust("stack");
          a.position(_this33.percentKey).color(_this33.positionX), _this33.applyViewLabel(a), _this33.applyViewOptions(a, {
            style: {
              opacity: .4
            },
            state: {
              active: {
                style: function style(t) {
                  var e = t.shape;
                  return {
                    matrix: G2.Util.zoom(e, 1.5)
                  };
                }
              }
            }
          }, _this33.view), t.interaction("element-single-selected");
        };
      }
    },
    methods: {}
  };
  Ti.Preload("ti/com/ti/chart/raw/pie/ti-chart-raw-pie.mjs", t);
}(), Ti.Preload("ti/com/ti/chart/raw/pie/_com.json", {
  name: "ti-chart-raw-pie",
  globally: !0,
  template: "./ti-chart-raw-pie.html",
  mixins: ["@com:ti/chart/raw/ti-chart-raw.mjs", "./ti-chart-raw-pie.mjs"],
  components: ["@com:ti/chart/g2"]
}), Ti.Preload("ti/com/ti/chart/raw/rank/ti-chart-raw-rank.html", '<TiChartG2\n  class="as-bar"\n  :class-name="className"\n  :data="data"\n  :width="width"\n  :height="height"\n  :padding="padding"\n  :append-padding="appendPadding"\n  :auto-source="false"\n  :setup="ChartSetup"/>'), function () {
  var t = {
    props: {},
    computed: {
      ChartSetup: function ChartSetup() {
        var _this34 = this;

        return function (t, e) {
          var _this34$evalXYData = _this34.evalXYData(e),
              i = _this34$evalXYData.list;

          if (_.isEmpty(i)) return;
          t.data(i), _this34.applyChartSetup(t), t.coordinate().transpose();
          var n = t.interval().position(_this34.ChartPosition);
          _this34.applyViewOptions(n, _this34.view), t.interaction("element-active");
        };
      }
    },
    methods: {}
  };
  Ti.Preload("ti/com/ti/chart/raw/rank/ti-chart-raw-rank.mjs", t);
}(), Ti.Preload("ti/com/ti/chart/raw/rank/_com.json", {
  name: "ti-chart-raw-rank",
  globally: !0,
  template: "./ti-chart-raw-rank.html",
  mixins: ["@com:ti/chart/raw/ti-chart-raw.mjs", "./ti-chart-raw-rank.mjs"],
  components: ["@com:ti/chart/g2"]
}), function () {
  var t = {
    data: function data() {
      return {
        minDataValue: void 0,
        maxDataValue: void 0
      };
    },
    props: {
      data: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      xKey: {
        type: String,
        "default": "name"
      },
      yKey: {
        type: String,
        "default": "value"
      },
      positionX: {
        type: String,
        "default": "name"
      },
      positionY: {
        type: String,
        "default": "value"
      },
      scaleX: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      scaleY: {
        type: Object,
        "default": function _default() {
          return {
            nice: !0,
            tickCount: 10
          };
        }
      },
      axisX: {
        type: Object,
        "default": void 0
      },
      axisY: {
        type: Object,
        "default": void 0
      },
      labelX: {
        type: [Boolean, Object, String, Function],
        "default": void 0
      },
      labelY: {
        type: [Boolean, Object, String, Function],
        "default": void 0
      },
      tooltip: {
        type: [Boolean, Object],
        "default": function _default() {
          return {
            showCrosshairs: !0
          };
        }
      },
      legend: {
        type: [Boolean, Object],
        "default": function _default() {
          return {
            flipPage: !1
          };
        }
      },
      view: {
        type: Object,
        "default": void 0
      },
      padding: {
        type: [Number, Array, String],
        "default": "auto"
      },
      appendPadding: {
        type: [Number, Array, String],
        "default": void 0
      },
      width: {
        type: [Number, String],
        "default": void 0
      },
      height: {
        type: [Number, String],
        "default": void 0
      }
    },
    computed: {
      ChartPosition: function ChartPosition() {
        return "".concat(this.positionX, "*").concat(this.positionY);
      }
    },
    methods: {
      evalXYData: function evalXYData(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _.identity;
        var i,
            n,
            a = [],
            s = 0,
            o = 0;

        var _iterator10 = _createForOfIteratorHelper(t),
            _step10;

        try {
          for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
            var _e11;

            var l = _step10.value;

            var _t18 = 1 * l[this.yKey] || 0,
                r = e((_e11 = {}, _defineProperty(_e11, this.positionX, Ti.I18n.text(l[this.xKey])), _defineProperty(_e11, this.positionY, _t18), _e11));

            a.push(r), s += _t18, o++ > 0 ? (n = Math.min(_t18, n), i = Math.max(_t18, i)) : (n = _t18, i = _t18);
          }
        } catch (err) {
          _iterator10.e(err);
        } finally {
          _iterator10.f();
        }

        return this.maxDataValue = i, this.minDataValue = n, {
          list: a,
          max: i,
          min: n,
          sum: s
        };
      },
      getChartScaleX: function getChartScaleX() {
        return _.assign({}, this.scaleX);
      },
      getChartScaleY: function getChartScaleY() {
        var t = _.cloneDeep(this.scaleY) || {};
        return "auto" != t.min && !0 !== t.min || (t.min = this.minDataValue), "auto" != t.max && !0 !== t.max || (t.max = this.maxDataValue), t;
      },
      applyChartScale: function applyChartScale(t) {
        this.__apply_scale(t, this.positionX, this.getChartScaleX()), this.__apply_scale(t, this.positionY, this.getChartScaleY());
      },
      __apply_scale: function __apply_scale(t, e, i) {
        _.isEmpty(i) || (i.tickUnit > 0 && (i.min = Ti.Num.floorUnit(i.min, i.tickUnit), i.max = Ti.Num.ceilUnit(i.max, i.tickUnit)), t.scale(e, i));
      },
      applyChartAxis: function applyChartAxis(t) {
        _.isEmpty(this.axisX) || t.axis(this.positionX, this.axisX), _.isEmpty(this.axisY) || t.axis(this.positionY, this.axisY);
      },
      applyChartTooltip: function applyChartTooltip(t) {
        _.isEmpty(this.tooltip) || t.tooltip(this.tooltip);
      },
      applyChartSetup: function applyChartSetup(t) {
        this.applyChartAxis(t), this.applyChartScale(t), this.applyChartTooltip(t), _.isUndefined(this.legend) || t.legend(this.legend);
      },
      applyViewLabel: function applyViewLabel(t) {
        this.__apply_view_label(t, this.positionX, this.labelX), this.__apply_view_label(t, this.positionY, this.labelY);
      },
      __apply_view_label: function __apply_view_label(t, e, i) {
        if (!Ti.Util.isNil(i)) {
          var n = _.cloneDeep(i);

          if (_.isString(n) && (n = {
            content: n
          }), _.isString(n.content)) {
            var _t19 = n.content;

            n.content = function (e) {
              return Ti.S.renderBy(_t19, e);
            };
          }

          t.label(e, n);
        }
      },
      applyViewOptions: function applyViewOptions(t) {
        var _ref17;

        for (var _len = arguments.length, e = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          e[_key - 1] = arguments[_key];
        }

        var i = (_ref17 = _).merge.apply(_ref17, [{}].concat(e));

        _.forEach(i, function (e, i) {
          if (Ti.Util.isNil(e)) return;

          var n = _.concat(e);

          t[i].apply(t, n);
        });
      }
    }
  };
  Ti.Preload("ti/com/ti/chart/raw/ti-chart-raw.mjs", t);
}(), Ti.Preload("ti/com/ti/chart/simple/ti-chart-simple.html", '<div class="ti-chart ti-chart-simple">\n  <header \n    v-if="title" \n    @click="drawAll">{{title}}</header>\n  <aside v-if="aside"\n    :class="asideClass">\n    <slot name="aside">\n      <span v-if="unit">{{unit}}</span>\n    </slot>\n  </aside>\n  <section class="chart-main" ref="chart"></section>\n  <div v-if="hasSlider"\n    ref="slider"\n    class="chart-slider">\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      title: {
        type: String,
        "default": null
      },
      data: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      type: {
        type: String,
        "default": "interval"
      },
      axisX: {
        type: Object,
        "default": function _default() {
          return {
            name: "name",
            title: "name"
          };
        }
      },
      axisY: {
        type: Object,
        "default": function _default() {
          return {
            name: "value",
            title: "value"
          };
        }
      },
      aside: {
        type: String,
        "default": "left"
      },
      unit: {
        type: String,
        "default": null
      },
      padding: {
        type: Array,
        "default": function _default() {
          return [20, 20, 50, 50];
        }
      },
      minValue: {
        type: Number,
        "default": 0
      },
      maxValue: {
        type: Number,
        "default": void 0
      },
      color: {
        type: String,
        "default": null
      },
      animate: {
        type: Object,
        "default": function _default() {
          return {
            delay: 500,
            duration: 1e3
          };
        }
      },
      valueInterval: {
        type: Number,
        "default": 100
      },
      coord: {
        type: [String, Object],
        "default": null
      }
    },
    watch: {
      data: function data() {
        this.debounceRedrawChart();
      }
    },
    computed: {
      asideClass: function asideClass() {
        return "at-".concat(this.aside || "none");
      },
      hasSlider: function hasSlider() {
        return !1;
      }
    },
    methods: {
      redrawChart: function redrawChart() {
        this.__g2_chart && (this.__g2_chart.destroy(), $(this.$refs.chart).empty()), this.__g2_chart = function () {
          var _ref18 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
              t = _ref18.$refs,
              _ref18$type = _ref18.type,
              e = _ref18$type === void 0 ? "interval" : _ref18$type,
              i = _ref18.unit,
              _ref18$data = _ref18.data,
              n = _ref18$data === void 0 ? [] : _ref18$data,
              a = _ref18.axisX,
              s = _ref18.axisY,
              o = _ref18.color,
              l = _ref18.animate,
              r = _ref18.padding,
              d = _ref18.minValue,
              c = _ref18.maxValue,
              h = _ref18.valueInterval,
              m = _ref18.coord;

          var p = t.chart,
              u = G2.DomUtil.getWidth(p),
              y = G2.DomUtil.getHeight(p);

          if (_.isUndefined(c)) {
            c = 0;
            var _t20 = s.name;

            var _iterator11 = _createForOfIteratorHelper(n),
                _step11;

            try {
              for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
                var _e12 = _step11.value;
                c = Math.max(c, _e12[_t20]);
              }
            } catch (err) {
              _iterator11.e(err);
            } finally {
              _iterator11.f();
            }
          }

          var f = new G2.Chart({
            container: p,
            padding: r,
            width: u,
            height: y
          });
          f.source(n), f.legend(!1);
          var g = {
            label: {
              textStyle: {
                fill: a.color || "#888"
              }
            }
          };
          f.axis(a.name, g);
          var v = {
            label: {
              autoRotate: !1,
              textStyle: {
                fill: s.color || "#888"
              }
            },
            grid: {
              type: "line",
              lineStyle: {
                stroke: "rgba(255,255,255,0.4)",
                lineWidth: .5,
                lineDash: !1
              }
            }
          };
          f.axis(s.name, v), m && "transpose" == m && f.coord().transpose();
          var b = s.title || s.name;
          f.scale(s.name, {
            alias: b,
            type: "linear",
            min: d,
            max: c,
            tickInterval: h
          });
          var w = {
            line: function line() {
              var t = f.line().position(T);
              return f.point().position(T).size(4).shape("circle").style({
                stroke: "#fff",
                lineWidth: 1
              }), t;
            },
            interval: function interval() {
              return f.interval().position(T);
            },
            intervalDodge: function intervalDodge() {
              return f.interval().position(T).adjust([{
                type: "dodge",
                marginRatio: 1 / 32
              }]);
            },
            intervalStack: function intervalStack(t) {
              return f.intervalStack().position(t);
            }
          }[e];

          w = w || function (t) {
            return f.interval().position(t);
          };

          var T = "".concat(a.name, "*").concat(s.name),
              x = w(T);
          return o && x.color(o), l && x.animate(l), f.render(), f;
        }(this);
      },
      drawAll: function drawAll() {
        var _this35 = this;

        this.$nextTick(function () {
          _this35.redrawChart();
        });
      }
    },
    mounted: function mounted() {
      var _this36 = this;

      this.drawAll(), this.debounceRedrawChart = _.debounce(function () {
        _this36.redrawChart();
      }, 500), this.debounceRedrawAll = _.debounce(function () {
        _this36.drawAll();
      }, 500);
    },
    beforeDestroy: function beforeDestroy() {
      this.__g2_chart && this.__g2_chart.destroy();
    }
  };
  Ti.Preload("ti/com/ti/chart/simple/ti-chart-simple.mjs", t);
}(), Ti.Preload("ti/com/ti/chart/simple/_com.json", {
  name: "ti-chart-simple",
  globally: !0,
  template: "./ti-chart-simple.html",
  mixins: ["./ti-chart-simple.mjs"],
  components: [],
  deps: []
}), Ti.Preload("ti/com/ti/color/ti-color.html", '<div class="ti-color" >\n  \x3c!--\n    Color Matrix Table\n  --\x3e\n  <div class="as-table">\n    <table>\n      <thead>\n        <tr>\n          <th v-for="color in colorGrays">\n            <span \n              :style="colorItemStyle(color)" \n              @click="onColorClicked(color)"></span>\n          </th>\n        </tr>\n        <tr>\n            <th v-for="color in colorMajors">\n              <span \n                :style="colorItemStyle(color)" \n                @click="onColorClicked(color)"></span>\n            </th>\n          </tr>\n      </thead>\n      \x3c!--Matrix--\x3e\n      <tbody>\n        <tr v-for="row in colorMatrix"\n          class="as-row">\n          <td v-for="color in row">\n            <span \n              :style="colorItemStyle(color)" \n              @click="onColorClicked(color)"></span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div> \x3c!-- End Matrix--\x3e\n  \x3c!--\n    Color Input\n  --\x3e\n  <div class="as-input">\n    <div class="as-hex">\n        <input class="as-value" \n          spellcheck="false"\n          :value="theHex"\n          @change="onHexChanged"/>\n    </div>\n    <div class="as-alpha">\n      <ti-input-num \n        :value="theAlpha"\n        :max-value="100"\n        :min-value="0"\n        :step="10"\n        @change="onAlphaChanged"/>\n    </div>\n  </div>\n  \x3c!--\n    Color Preview\n  --\x3e\n  <div class="as-preview">\n    <span>{{theColorValue}}</span>\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      value: {
        type: [String, Number],
        "default": null
      },
      majorColors: {
        type: Array,
        "default": function _default() {
          return ["#980000", "#ff0000", "#ff9900", "#ffff00", "#00ff00", "#00ffff", "#4a86e8", "#0000ff", "#9900ff", "#ff00ff"];
        }
      },
      topColors: {
        type: Array,
        "default": function _default() {
          return ["#e6b8af", "#f4cccc", "#fce5cd", "#fff2cc", "#d9ead3", "#d0e0e3", "#c9daf8", "#cfe2f3", "#d9d2e9", "#ead1dc"];
        }
      },
      bottomColors: {
        type: Array,
        "default": function _default() {
          return ["#5b0f00", "#660000", "#783f04", "#7f6000", "#274e13", "#0c343d", "#1c4587", "#073763", "#20124d", "#4c1130"];
        }
      },
      middleDegree: {
        type: Number,
        "default": 5
      }
    },
    computed: {
      theColor: function theColor() {
        return Ti.Types.toColor(this.value, null);
      },
      theHex: function theHex() {
        if (this.theColor) return this.theColor.hex;
      },
      theAlpha: function theAlpha() {
        if (this.theColor) return Math.round(100 * this.theColor.alpha);
      },
      theColorValue: function theColorValue() {
        return this.theColor ? this.theColor.rgba : Ti.I18n.get("empty");
      },
      colCount: function colCount() {
        return this.topColors.length;
      },
      colorGrays: function colorGrays() {
        var t = [],
            e = 255 / this.colCount;

        for (var i = 0; i < this.colCount; i++) {
          var n = Math.round((i + 1) * e);
          t.push(Ti.Types.toColor(n));
        }

        return t;
      },
      colorMajors: function colorMajors() {
        var t = [];

        var _iterator12 = _createForOfIteratorHelper(this.majorColors),
            _step12;

        try {
          for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {
            var e = _step12.value;
            t.push(Ti.Types.toColor(e));
          }
        } catch (err) {
          _iterator12.e(err);
        } finally {
          _iterator12.f();
        }

        return t;
      },
      colorMatrix: function colorMatrix() {
        var t = [];

        var _iterator13 = _createForOfIteratorHelper(this.topColors),
            _step13;

        try {
          for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {
            var _e13 = _step13.value;
            t.push(Ti.Types.toColor(_e13));
          }
        } catch (err) {
          _iterator13.e(err);
        } finally {
          _iterator13.f();
        }

        var e = [];

        var _iterator14 = _createForOfIteratorHelper(this.bottomColors),
            _step14;

        try {
          for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {
            var _t21 = _step14.value;
            e.push(Ti.Types.toColor(_t21));
          }
        } catch (err) {
          _iterator14.e(err);
        } finally {
          _iterator14.f();
        }

        var i = [t];

        for (var n = 0; n < this.middleDegree - 1; n++) {
          var a = [];

          for (var _i4 = 0; _i4 < this.colCount; _i4++) {
            var s = t[_i4],
                o = e[_i4],
                l = (n + 1) / this.middleDegree,
                r = s.between(o, l);
            r.adjustByHSL({
              s: .5
            }), a.push(r);
          }

          i.push(a);
        }

        return i.push(e), i;
      }
    },
    methods: {
      colorItemStyle: function colorItemStyle(t) {
        return {
          "background-color": t.rgb
        };
      },
      onHexChanged: function onHexChanged(t) {
        var e = _.trim(t.target.value);

        /^[0-9a-f]{3,6}$/i.test(e) && (e = "#" + e);
        var i = Ti.Types.toColor(e);
        this.$notify("change", i);
      },
      onAlphaChanged: function onAlphaChanged(t) {
        var e = this.theColor ? this.theColor.clone() : Ti.Types.toColor("black");
        e.alpha = t / 100, this.$notify("change", e);
      },
      onColorClicked: function onColorClicked(t) {
        var e = t.clone();
        _.isNumber(this.theAlpha) && (e.alpha = this.theAlpha / 100), this.$notify("change", e);
      }
    }
  };
  Ti.Preload("ti/com/ti/color/ti-color.mjs", t);
}(), Ti.Preload("ti/com/ti/color/_com.json", {
  name: "ti-color",
  globally: !0,
  template: "./ti-color.html",
  mixins: ["./ti-color.mjs"]
}), Ti.Preload("ti/com/ti/combo/box/ti-combo-box.html", '<div class="ti-combo-box" \n  :class="topClass"\n  :style="topStyle">\n  \x3c!--\n    Box: Component\n  --\x3e\n  <div class="as-box" ref="box" :style="theBoxStyle">\n    <slot name="box"><div>ComboBox</div></slot>\n  </div>\n  \x3c!--\n    Mask & Drop\n  --\x3e\n  <template v-if="\'extended\'==status">\n    \x3c!--Mask--\x3e\n    <div class="as-mask" @click.left="notifyCollapse()"></div>\n    \x3c!--Drop--\x3e\n    <div class="as-drop" ref="drop" :style="theDropStyle">\n      <slot name="drop"><div>ComboBox Dropdown</div></slot>\n    </div>\n  </template>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        box: {
          position: null,
          width: null,
          height: null,
          top: null,
          left: null
        },
        myDropDockReady: !1
      };
    },
    props: {
      keepWidthWhenDrop: {
        type: Boolean,
        "default": !0
      },
      width: {
        type: [Number, String],
        "default": null
      },
      height: {
        type: [Number, String],
        "default": null
      },
      dropFloat: {
        type: Boolean,
        "default": !0
      },
      dropWidth: {
        type: [Number, String],
        "default": "box"
      },
      dropHeight: {
        type: [Number, String],
        "default": null
      },
      dropOverflow: {
        type: [String, Array],
        "default": "auto",
        validator: function validator(t) {
          if (Ti.Util.isNil(t)) return !0;

          if (_.isString(t) && (t = t.split(" ")), _.isArray(t)) {
            if (t.length > 2 || 0 == t.length) return !1;

            var _iterator15 = _createForOfIteratorHelper(t),
                _step15;

            try {
              for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {
                var e = _step15.value;
                if (!/^(auto|hidden|visible|scroll)$/.test(e)) return !1;
              }
            } catch (err) {
              _iterator15.e(err);
            } finally {
              _iterator15.f();
            }

            return !0;
          }

          return !1;
        }
      },
      status: {
        type: String,
        "default": "collapse",
        validator: function validator(t) {
          return /^(collapse|extended)$/.test(t);
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return this.getTopClass("is-".concat(this.status));
      },
      topStyle: function topStyle() {
        var t;
        this.keepWidthWhenDrop && (t = this.box.width);
        var e = this.box.height;
        return Ti.Css.toStyle({
          width: t,
          height: e
        });
      },
      theBoxStyle: function theBoxStyle() {
        if (this.dropFloat) return Ti.Css.toStyle(this.box);
      },
      theDropStyle: function theDropStyle() {
        return Ti.Css.toStyle({
          overflow: this.dropOverflow,
          visibility: this.myDropDockReady ? "visible" : "hidden"
        });
      }
    },
    methods: {
      notifyCollapse: function notifyCollapse() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
        this.$notify("collapse", {
          escaped: t
        });
      },
      dockDrop: function dockDrop() {
        var _this37 = this;

        var t = this.$refs.drop,
            e = this.$refs.box;
        _.isElement(t) && _.isElement(e) && "extended" == this.status && _.delay(function () {
          var i = Ti.Rects.createBy(e),
              n = Ti.Rects.createBy(t);
          _this37.box = _.assign({
            position: "fixed"
          }, i.raw());
          var a = {};
          "box" == _this37.dropWidth ? a.width = Math.max(i.width, n.width) : Ti.Util.isNil(_this37.dropWidth) || (_this37.dropWidth < 0 ? a.width = Math.max(i.width, Math.abs(_this37.dropWidth)) : a.width = _this37.dropWidth), Ti.Util.isNil(_this37.dropHeight) || (a.height = _this37.dropHeight), Ti.Dom.setStyle(t, Ti.Css.toStyle(a)), Ti.Dom.dockTo(t, e, {
            space: {
              y: 2
            }
          }), _.delay(function () {
            _this37.myDropDockReady = !0;
          }, 1);
        }, 1);
      },
      reDockDrop: function reDockDrop() {
        var _this38 = this;

        this.resetBoxStyle(), this.$nextTick(function () {
          _this38.dockDrop();
        });
      },
      resetBoxStyle: function resetBoxStyle() {
        this.box = {}, this.myDropDockReady = !1;
      },
      __ti_shortcut: function __ti_shortcut(t) {
        "ESCAPE" == t && this.notifyCollapse(!0);
      }
    },
    watch: {
      status: function status(t) {
        var _this39 = this;

        this.$nextTick(function () {
          "collapse" == t ? _this39.resetBoxStyle() : _this39.dockDrop();
        });
      }
    },
    mounted: function mounted() {
      var _this40 = this;

      this.dropOpened = this.autoOpenDrop, this.box.width = this.width, this.box.height = this.height, this.dockDrop(), Ti.Viewport.watch(this, {
        scroll: function scroll() {
          return _this40.notifyCollapse();
        },
        resize: function resize() {
          return _this40.notifyCollapse();
        }
      });
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Viewport.unwatch(this);
    }
  };
  Ti.Preload("ti/com/ti/combo/box/ti-combo-box.mjs", t);
}(), Ti.Preload("ti/com/ti/combo/box/_com.json", {
  name: "ti-combo-box",
  globally: !0,
  template: "./ti-combo-box.html",
  mixins: ["./ti-combo-box.mjs"]
}), function () {
  var t = {
    form: {
      type: Object,
      "default": null
    },
    autoCollapse: {
      type: Boolean,
      "default": !1
    },
    statusIcons: {
      type: Object,
      "default": function _default() {
        return {
          collapse: "zmdi-chevron-down",
          extended: "zmdi-chevron-up"
        };
      }
    },
    autoFocusExtended: {
      type: Boolean,
      "default": !0
    },
    spacing: {
      type: String,
      "default": "tiny",
      validator: function validator(t) {
        return /^(none|comfy|tiny)$/.test(t);
      }
    },
    dropWidth: {
      type: [Number, String],
      "default": "box"
    },
    dropHeight: {
      type: [Number, String],
      "default": null
    }
  };
  Ti.Preload("ti/com/ti/combo/filter/ti-combo-filter-props.mjs", t);
}(), Ti.Preload("ti/com/ti/combo/filter/ti-combo-filter.html", '<div class="ti-combo-filter"\n  :class="TopClass">\n  \x3c!--\n    Marjor type\n  --\x3e\n\n  \x3c!--\n    Filter input box\n  --\x3e\n  <ti-combo-box\n    class="as-filter"\n    :drop-width="dropWidth"\n    :drop-height="dropHeight"\n    :status="myDropStatus"\n    @collapse="OnCollapse"\n    v-ti-activable>\n    \x3c!--\n      Box\n    --\x3e\n    <template v-slot:box>\n      <ti-input \n        v-bind="TheInputProps"\n\n        :value="InputValue"\n        :prefix-icon="ThePrefixIcon"\n        :suffix-icon="TheSuffixIcon"\n\n        @change="OnInputChanged"\n        @input:focus="OnInputFocused"\n        @prefix:icon="$notify(\'prefix:icon\')"\n        @suffix:icon="OnClickStatusIcon"/>\n    </template>\n    \x3c!--\n      Drop\n    --\x3e\n    <template v-slot:drop="slotProps">\n      <ti-form\n        v-bind="form"\n        :data="myFormData"\n        @change="OnFormChange"/>\n    </template>\n  </ti-combo-box>\n  \x3c!--\n    Sorter\n  --\x3e\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myDropStatus: "collapse",
        myFreeValue: null,
        myFormData: {}
      };
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-enabled": this.isFilterEnabled
        }, "as-spacing-".concat(this.spacing));
      },
      isCollapse: function isCollapse() {
        return "collapse" == this.myDropStatus;
      },
      isExtended: function isExtended() {
        return "extended" == this.myDropStatus;
      },
      hasForm: function hasForm() {
        return !_.isEmpty(this.form);
      },
      isFilterEnabled: function isFilterEnabled() {
        return !_.isEmpty(this.myFreeValue) || !_.isEmpty(this.myFormData);
      },
      TheInputProps: function TheInputProps() {
        return _.assign({}, this, {
          autoI18n: this.autoI18n,
          placeholder: this.placeholder
        });
      },
      InputValue: function InputValue() {
        return this.myFreeValue;
      },
      ThePrefixIcon: function ThePrefixIcon() {
        return this.prefixIcon || "im-filter";
      },
      TheSuffixIcon: function TheSuffixIcon() {
        if (this.hasForm) return this.statusIcons[this.myDropStatus];
      }
    },
    methods: {
      OnCollapse: function OnCollapse() {
        this.doCollapse();
      },
      OnInputChanged: function OnInputChanged(t) {
        this.myFreeValue = t, this.myDropStatus = "collapse", Ti.Util.isNil(t) && (this.myFormData = {}), this.tryNotifyChanged();
      },
      OnInputFocused: function OnInputFocused() {
        this.autoFocusExtended && !this.isExtended && this.doExtend();
      },
      OnClickStatusIcon: function OnClickStatusIcon() {
        this.isExtended ? this.doCollapse() : this.doExtend();
      },
      OnFormChange: function OnFormChange(t) {
        this.myFormData = t;
      },
      doExtend: function doExtend() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !0;
        this.hasForm && !this.isExtended && (this.myDropStatus = "extended");
      },
      doCollapse: function doCollapse() {
        var _ref19 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref19$escaped = _ref19.escaped,
            t = _ref19$escaped === void 0 ? !1 : _ref19$escaped;

        this.isCollapse || (t || this.tryNotifyChanged(), this.myDropStatus = "collapse");
      },
      tryNotifyChanged: function tryNotifyChanged() {
        var t = this.genValue();
        _.isEqual(t, this.value) || this.$notify("change", t);
      },
      genValue: function genValue() {
        return {
          keyword: this.myFreeValue,
          match: this.myFormData
        };
      },
      evalMyValue: function evalMyValue() {
        var t = _.assign({}, this.value);

        this.myFreeValue = t.keyword, this.myFormData = t.match;
      },
      __ti_shortcut: function __ti_shortcut(t) {
        if ("ESCAPE" == t) return this.doCollapse({
          escaped: !0
        }), {
          prevent: !0,
          stop: !0,
          quit: !0
        };
        "ARROWDOWN" != t ? "ARROWUP" != t || this.doCollapse() : this.doExtend();
      }
    },
    watch: {
      value: {
        handler: "evalMyValue",
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/ti/combo/filter/ti-combo-filter.mjs", t);
}(), Ti.Preload("ti/com/ti/combo/filter/_com.json", {
  name: "ti-combo-filter",
  globally: !0,
  template: "./ti-combo-filter.html",
  props: ["@com:ti/input/ti-input-props.mjs", "@com:ti/combo/filter/ti-combo-filter-props.mjs"],
  mixins: "./ti-combo-filter.mjs",
  components: ["@com:ti/form", "@com:ti/combo/sorter"]
}), function () {
  var t = {
    options: {
      type: [String, Array, Function, Ti.Dict],
      "default": function _default() {
        return [];
      }
    },
    valueBy: {
      type: [String, Function],
      "default": void 0
    },
    textBy: {
      type: [String, Function],
      "default": void 0
    },
    iconeBy: {
      type: [String, Function],
      "default": void 0
    },
    childrenBy: {
      type: [String, Function],
      "default": void 0
    },
    dropComType: {
      type: String,
      "default": void 0
    },
    dropComConf: {
      type: Object,
      "default": void 0
    },
    mustInList: {
      type: Boolean,
      "default": !1
    },
    autoFocusExtended: {
      type: Boolean,
      "default": !0
    },
    filter: {
      type: Boolean,
      "default": !0
    },
    delay: {
      type: Number,
      "default": 800
    },
    statusIcons: {
      type: Object,
      "default": function _default() {
        return {
          collapse: "zmdi-chevron-down",
          extended: "zmdi-chevron-up"
        };
      }
    },
    dropDisplay: {
      type: [Object, String, Array],
      "default": void 0
    },
    dropItemBorder: {
      type: Boolean,
      "default": !0
    },
    keepWidthWhenDrop: {
      type: Boolean,
      "default": void 0
    },
    dropWidth: {
      type: [Number, String],
      "default": "box"
    },
    dropHeight: {
      type: [Number, String],
      "default": null
    }
  };
  Ti.Preload("ti/com/ti/combo/input/ti-combo-input-props.mjs", t);
}(), Ti.Preload("ti/com/ti/combo/input/ti-combo-input.html", '<ti-combo-box \n  class="ti-combo-input full-field"\n  :class="TopClass"\n  :keep-width-when-drop="keepWidthWhenDrop"\n  :drop-width="dropWidth"\n  :drop-height="dropHeight"\n  :status="myDropStatus"\n  @collapse="OnCollapse"\n  v-ti-activable>\n  \x3c!--\n    Box\n  --\x3e\n  <template v-slot:box>\n    <ti-input \n      v-bind="TheInputProps"\n\n      :value="InputValue"\n      :prefix-icon="ThePrefixIcon"\n      :suffix-icon="TheSuffixIcon"\n\n      @change="OnInputChanged"\n      @inputing="OnInputInputing"\n      @input:focus="OnInputFocused"\n      @prefix:icon="$notify(\'prefix:icon\')"\n      @suffix:icon="OnClickStatusIcon"/>\n  </template>\n  \x3c!--\n    Drop\n  --\x3e\n  <template v-slot:drop="slotProps">\n    <component \n      :is="DropComType"\n      class="ti-fill-parent"\n      blank-class="as-mid-tip"\n      v-bind="DropComConf"\n      :on-init="OnDropListInit"\n      @select="OnDropListSelected"/>\n  </template>\n</ti-combo-box>'), function () {
  var t = {
    data: function data() {
      return {
        myDropStatus: "collapse",
        myItem: null,
        myFreeValue: null,
        myFilterValue: null,
        myOptionsData: null,
        myCurrentId: null,
        myCheckedIds: {},
        myOldValue: void 0,
        myDict: void 0,
        loading: !1
      };
    },
    props: {
      canInput: {
        type: Boolean,
        "default": !0
      },
      autoCollapse: {
        type: Boolean,
        "default": !1
      }
    },
    computed: {
      isCollapse: function isCollapse() {
        return "collapse" == this.myDropStatus;
      },
      isExtended: function isExtended() {
        return "extended" == this.myDropStatus;
      },
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TheInputProps: function TheInputProps() {
        return _.assign({}, this, {
          readonly: !this.canInput || this.readonly,
          autoI18n: this.autoI18n,
          placeholder: this.placeholder,
          hover: this.hover,
          prefixIconForClean: this.prefixIconForClean
        });
      },
      InputValue: function InputValue() {
        return Ti.Util.isNil(this.myFilterValue) ? this.myItem ? this.Dict.getText(this.myItem) || this.Dict.getValue(this.myItem) : this.myFreeValue : this.myFilterValue;
      },
      GetValueBy: function GetValueBy() {
        var _this41 = this;

        return function (t) {
          return _this41.Dict.getValue(t);
        };
      },
      ThePrefixIcon: function ThePrefixIcon() {
        if (this.loading) return "zmdi-settings zmdi-hc-spin";
        var t = this.prefixIcon;
        return this.myItem && (t = this.Dict.getIcon(this.myItem) || t), t || "zmdi-minus";
      },
      TheSuffixIcon: function TheSuffixIcon() {
        return this.statusIcons[this.myDropStatus];
      },
      DropComType: function DropComType() {
        return this.dropComType || "ti-list";
      },
      DropComConf: function DropComConf() {
        return _.assign({
          display: this.dropDisplay || "text",
          border: this.dropItemBorder
        }, this.dropComConf, {
          data: this.myOptionsData,
          currentId: this.myCurrentId,
          checkedIds: this.myCheckedIds,
          idBy: this.GetValueBy,
          multi: !1,
          hoverable: !0,
          checkable: !1,
          autoCheckCurrent: !0
        });
      },
      Dict: function Dict() {
        return this.myDict || (this.myDict = this.createDict()), this.myDict;
      }
    },
    methods: {
      OnDropListInit: function OnDropListInit(t) {
        this.$dropList = t;
      },
      OnCollapse: function OnCollapse() {
        this.doCollapse();
      },
      OnInputInputing: function OnInputInputing(t) {
        this.filter && (this.myFilterValue = t, this.autoFocusExtended && (this.isExtended || this.doExtend(!1)), this.isExtended && this.debReload());
      },
      OnInputChanged: function OnInputChanged(t, e) {
        var _this42 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {
          var _e14;

          return regeneratorRuntime.wrap(function _callee18$(_context18) {
            while (1) {
              switch (_context18.prev = _context18.next) {
                case 0:
                  if (!(_this42.myFilterValue = null, t)) {
                    _context18.next = 7;
                    break;
                  }

                  _context18.next = 3;
                  return _this42.Dict.getItem(t);

                case 3:
                  _e14 = _context18.sent;
                  _e14 ? (_this42.myItem = _e14, _this42.myFreeValue = null) : _this42.mustInList || (_this42.myItem = null, _this42.myFreeValue = t);
                  _context18.next = 8;
                  break;

                case 7:
                  _this42.myItem = null, _this42.myFreeValue = null, _this42.myCheckedIds = {}, _this42.myCurrentId = null;

                case 8:
                  e || _this42.tryNotifyChanged();

                case 9:
                case "end":
                  return _context18.stop();
              }
            }
          }, _callee18);
        }))();
      },
      OnInputFocused: function OnInputFocused() {
        var _this43 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {
          return regeneratorRuntime.wrap(function _callee19$(_context19) {
            while (1) {
              switch (_context19.prev = _context19.next) {
                case 0:
                  _context19.t0 = _this43.autoFocusExtended && !_this43.isExtended;

                  if (!_context19.t0) {
                    _context19.next = 4;
                    break;
                  }

                  _context19.next = 4;
                  return _this43.doExtend();

                case 4:
                case "end":
                  return _context19.stop();
              }
            }
          }, _callee19);
        }))();
      },
      OnClickStatusIcon: function OnClickStatusIcon() {
        var _this44 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {
          return regeneratorRuntime.wrap(function _callee20$(_context20) {
            while (1) {
              switch (_context20.prev = _context20.next) {
                case 0:
                  if (!_this44.isExtended) {
                    _context20.next = 5;
                    break;
                  }

                  _context20.next = 3;
                  return _this44.doCollapse();

                case 3:
                  _context20.next = 7;
                  break;

                case 5:
                  _context20.next = 7;
                  return _this44.doExtend();

                case 7:
                case "end":
                  return _context20.stop();
              }
            }
          }, _callee20);
        }))();
      },
      OnDropListSelected: function OnDropListSelected() {
        var _arguments4 = arguments,
            _this45 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {
          var _ref20, t, e;

          return regeneratorRuntime.wrap(function _callee21$(_context21) {
            while (1) {
              switch (_context21.prev = _context21.next) {
                case 0:
                  _ref20 = _arguments4.length > 0 && _arguments4[0] !== undefined ? _arguments4[0] : {}, t = _ref20.currentId, e = _ref20.byKeyboardArrow;
                  _this45.myCurrentId = t;
                  _context21.next = 4;
                  return _this45.OnInputChanged(t, e);

                case 4:
                  _context21.t0 = _this45.autoCollapse && !e;

                  if (!_context21.t0) {
                    _context21.next = 8;
                    break;
                  }

                  _context21.next = 8;
                  return _this45.doCollapse({
                    escaped: !0
                  });

                case 8:
                case "end":
                  return _context21.stop();
              }
            }
          }, _callee21);
        }))();
      },
      doExtend: function doExtend() {
        var _arguments5 = arguments,
            _this46 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {
          var t;
          return regeneratorRuntime.wrap(function _callee22$(_context22) {
            while (1) {
              switch (_context22.prev = _context22.next) {
                case 0:
                  t = _arguments5.length > 0 && _arguments5[0] !== undefined ? _arguments5[0] : !0;
                  _this46.myOldValue = _this46.evalMyValue();
                  _context22.t0 = t && _.isEmpty(_this46.myOptionsData);

                  if (!_context22.t0) {
                    _context22.next = 6;
                    break;
                  }

                  _context22.next = 6;
                  return _this46.reloadMyOptionData(!0);

                case 6:
                  _this46.$nextTick(function () {
                    _this46.myDropStatus = "extended";
                  });

                case 7:
                case "end":
                  return _context22.stop();
              }
            }
          }, _callee22);
        }))();
      },
      doCollapse: function doCollapse() {
        var _arguments6 = arguments,
            _this47 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {
          var _ref21, _ref21$escaped, t;

          return regeneratorRuntime.wrap(function _callee23$(_context23) {
            while (1) {
              switch (_context23.prev = _context23.next) {
                case 0:
                  _ref21 = _arguments6.length > 0 && _arguments6[0] !== undefined ? _arguments6[0] : {}, _ref21$escaped = _ref21.escaped, t = _ref21$escaped === void 0 ? !1 : _ref21$escaped;
                  t ? _this47.evalMyItem(_this47.myOldValue) : _this47.tryNotifyChanged(), _this47.myDropStatus = "collapse", _this47.myOldValue = void 0;

                case 2:
                case "end":
                  return _context23.stop();
              }
            }
          }, _callee23);
        }))();
      },
      tryNotifyChanged: function tryNotifyChanged() {
        var t = this.evalMyValue();
        _.isEqual(t, this.value) || this.$notify("change", t);
      },
      evalMyValue: function evalMyValue() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.myItem;
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.myFreeValue;
        return t ? this.Dict.getValue(t) : this.mustInList ? null : e;
      },
      evalMyItem: function evalMyItem() {
        var _arguments7 = arguments,
            _this48 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24() {
          var t, e, _t22;

          return regeneratorRuntime.wrap(function _callee24$(_context24) {
            while (1) {
              switch (_context24.prev = _context24.next) {
                case 0:
                  t = _arguments7.length > 0 && _arguments7[0] !== undefined ? _arguments7[0] : _this48.value;
                  _context24.next = 3;
                  return _this48.Dict.getItem(t);

                case 3:
                  e = _context24.sent;

                  if (_.isArray(e) && (console.error("!!!!!!! kao ~~~~~~~"), e = null), e) {
                    _t22 = _this48.Dict.getValue(e);
                    _this48.myItem = e, _this48.myFreeValue = null, _this48.myCurrentId = _t22, _this48.myCheckedIds = _defineProperty({}, _t22, !0);
                  } else _this48.myItem = null, _this48.myFreeValue = _this48.mustInList ? null : t, _this48.myCurrentId = null, _this48.myCheckedIds = {};

                case 5:
                case "end":
                  return _context24.stop();
              }
            }
          }, _callee24);
        }))();
      },
      createDict: function createDict() {
        var _this49 = this;

        if (this.options instanceof Ti.Dict) return this.options;

        if (_.isString(this.options)) {
          var _t23 = Ti.DictFactory.DictReferName(this.options);

          if (_t23) return Ti.DictFactory.CheckDict(_t23, function (_ref22) {
            var t = _ref22.loading;
            _this49.loading = t;
          });
        }

        return Ti.DictFactory.CreateDict({
          data: this.options,
          getValue: Ti.Util.genGetter(this.valueBy || "value"),
          getText: Ti.Util.genGetter(this.textBy || "text|name"),
          getIcon: Ti.Util.genGetter(this.iconBy || "icon")
        });
      },
      reloadMyOptionData: function reloadMyOptionData() {
        var _arguments8 = arguments,
            _this50 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25() {
          var t, _t24;

          return regeneratorRuntime.wrap(function _callee25$(_context25) {
            while (1) {
              switch (_context25.prev = _context25.next) {
                case 0:
                  t = _arguments8.length > 0 && _arguments8[0] !== undefined ? _arguments8[0] : !1;

                  if (!(t || _this50.isExtended)) {
                    _context25.next = 8;
                    break;
                  }

                  _context25.next = 4;
                  return _this50.Dict.queryData(_this50.myFilterValue);

                case 4:
                  _t24 = _context25.sent;
                  _this50.myOptionsData = _t24;
                  _context25.next = 9;
                  break;

                case 8:
                  _this50.myOptionsData = [];

                case 9:
                case "end":
                  return _context25.stop();
              }
            }
          }, _callee25);
        }))();
      },
      __ti_shortcut: function __ti_shortcut(t) {
        return "ESCAPE" == t ? (this.doCollapse({
          escaped: !0
        }), {
          prevent: !0,
          stop: !0,
          quit: !0
        }) : "ENTER" == t ? (this.doCollapse(), {
          stop: !0,
          quit: !1
        }) : "ARROWUP" == t ? (this.$dropList && this.$dropList.selectPrevRow({
          payload: {
            byKeyboardArrow: !0
          }
        }), {
          prevent: !0,
          stop: !0,
          quit: !0
        }) : "ARROWDOWN" == t ? (this.$dropList && this.isExtended ? this.$dropList.selectNextRow({
          payload: {
            byKeyboardArrow: !0
          }
        }) : this.doExtend(), {
          prevent: !0,
          stop: !0,
          quit: !0
        }) : void 0;
      }
    },
    watch: {
      value: {
        handler: function handler() {
          var _this51 = this;

          this.$nextTick(function () {
            _this51.evalMyItem();
          });
        },
        immediate: !0
      },
      options: function options(t, e) {
        var _this52 = this;

        _.isEqual(t, e) || (this.myDict = this.createDict(), this.myOptionsData = [], this.isExtended && this.$nextTick(function () {
          _this52.reloadMyOptionData(!0);
        }));
      }
    },
    created: function created() {
      var _this53 = this;

      this.debReload = _.debounce(function (t) {
        _this53.reloadMyOptionData();
      }, this.delay);
    }
  };
  Ti.Preload("ti/com/ti/combo/input/ti-combo-input.mjs", t);
}(), Ti.Preload("ti/com/ti/combo/input/_com.json", {
  name: "ti-combo-input",
  globally: !0,
  template: "./ti-combo-input.html",
  props: ["@com:ti/input/ti-input-props.mjs", "./ti-combo-input-props.mjs"],
  mixins: "./ti-combo-input.mjs",
  components: ["@com:ti/combo/box"]
}), Ti.Preload("ti/com/ti/combo/multi-input/ti-combo-multi-input.html", '<ti-combo-box \n  class="ti-combo-multi-input full-field"\n  :class="TopClass"\n  :drop-width="dropWidth"\n  :drop-height="dropHeight"\n  :status="myDropStatus"\n  @collapse="OnCollapse"\n  v-ti-activable>\n  \x3c!--\n    Box\n  --\x3e\n  <template v-slot:box>\n    <ti-input-tags\n      :input-value="myFilterValue"\n      :value="InputTagValues"\n      :value-case="valueCase"\n      :trimed="trimed"\n        :max-value-len="maxValueLen"\n        :value-unique="valueUnique"\n        :tag-options="tagOptions"\n        :tag-mapping="tagMapping"\n\n      :readonly="readonly"\n      :focused="focused"\n      :hover="hover"\n      :auto-select="autoSelect"\n        :can-input="canInput"\n        :cancel-tag-bubble="cancelTagBubble"\n\n      :placeholder="placeholder"\n      :hide-border="hideBorder"\n      :prefix-icon="prefixIcon"\n      :prefix-hover-icon="prefixHoverIcon"\n      :prefix-icon-for-clean="prefixIconForClean"\n      :prefix-text="prefixText"\n      :suffix-icon="TheSuffixIcon"\n      :suffix-text="suffixText"\n        :tag-item-icon-by="tagItemIconBy"\n        :tag-item-default-icon="tagItemDefaultIcon"\n        :tag-option-default-icon="tagOptionDefaultIcon"\n      \n      :width="width"\n      :height="height"\n\n      :input-change="OnInputChanged"\n\n      @inputing="OnInputInputing"\n      @input:focus="OnInputFocused"\n      @change="OnTagListChanged"\n      @prefix:icon="$notify(\'prefix:icon\')"\n      @suffix:icon="OnClickStatusIcon"/>\n  </template>\n  \x3c!--\n    Drop\n  --\x3e\n  <template v-slot:drop>\n    <component class="ti-fill-parent"\n      :is="DropComType"\n      blank-class="as-mid-tip"\n      v-bind="DropComConf"\n      :on-init="OnDropListInit"\n      @select="OnDropListSelected"/>\n  </template>\n</ti-combo-box>'), function () {
  var t = {
    data: function data() {
      return {
        myDropStatus: "collapse",
        myTags: [],
        myFreeValues: [],
        myFilterValue: null,
        myOptionsData: [],
        myCurrentId: null,
        myCheckedIds: {},
        myOldValue: void 0,
        myDict: void 0,
        loading: !1
      };
    },
    computed: {
      isCollapse: function isCollapse() {
        return "collapse" == this.myDropStatus;
      },
      isExtended: function isExtended() {
        return "extended" == this.myDropStatus;
      },
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      Values: function Values() {
        return Ti.S.toArray(this.value);
      },
      InputTagValues: function InputTagValues() {
        return _.concat(this.myTags, this.myFreeValues);
      },
      GetValueBy: function GetValueBy() {
        var _this54 = this;

        return function (t) {
          return _this54.Dict.getValue(t);
        };
      },
      TheSuffixIcon: function TheSuffixIcon() {
        return this.statusIcons[this.myDropStatus];
      },
      DropComType: function DropComType() {
        return this.dropComType || "ti-list";
      },
      DropComConf: function DropComConf() {
        return _.assign({
          display: this.dropDisplay || "text",
          border: this.dropItemBorder
        }, this.dropComConf, {
          data: this.myOptionsData,
          currentId: this.myCurrentId,
          checkedIds: this.myCheckedIds,
          idBy: this.GetValueBy,
          multi: !0,
          hoverable: !0,
          checkable: !0,
          autoCheckCurrent: !1
        });
      },
      Dict: function Dict() {
        return this.myDict || (this.myDict = this.createDict()), this.myDict;
      }
    },
    methods: {
      OnDropListInit: function OnDropListInit(t) {
        this.$dropList = t;
      },
      OnCollapse: function OnCollapse() {
        var _this55 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26() {
          return regeneratorRuntime.wrap(function _callee26$(_context26) {
            while (1) {
              switch (_context26.prev = _context26.next) {
                case 0:
                  _this55.doCollapse();

                case 1:
                case "end":
                  return _context26.stop();
              }
            }
          }, _callee26);
        }))();
      },
      OnInputInputing: function OnInputInputing(t) {
        this.filter && (this.myFilterValue = t, this.debReload());
      },
      OnInputChanged: function OnInputChanged(t) {
        var _this56 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee27() {
          var _iterator16, _step16, _e15, e;

          return regeneratorRuntime.wrap(function _callee27$(_context27) {
            while (1) {
              switch (_context27.prev = _context27.next) {
                case 0:
                  if (!(_this56.myFilterValue = null, _this56.valueUnique)) {
                    _context27.next = 20;
                    break;
                  }

                  if (!(_.indexOf(_this56.myFreeValues, t) >= 0)) {
                    _context27.next = 3;
                    break;
                  }

                  return _context27.abrupt("return");

                case 3:
                  _iterator16 = _createForOfIteratorHelper(_this56.myTags);
                  _context27.prev = 4;

                  _iterator16.s();

                case 6:
                  if ((_step16 = _iterator16.n()).done) {
                    _context27.next = 12;
                    break;
                  }

                  _e15 = _step16.value;

                  if (!(_this56.Dict.getValue(_e15) == t)) {
                    _context27.next = 10;
                    break;
                  }

                  return _context27.abrupt("return");

                case 10:
                  _context27.next = 6;
                  break;

                case 12:
                  _context27.next = 17;
                  break;

                case 14:
                  _context27.prev = 14;
                  _context27.t0 = _context27["catch"](4);

                  _iterator16.e(_context27.t0);

                case 17:
                  _context27.prev = 17;

                  _iterator16.f();

                  return _context27.finish(17);

                case 20:
                  _context27.next = 22;
                  return _this56.Dict.getItem(t);

                case 22:
                  e = _context27.sent;
                  e ? _this56.myTags.push(e) : t && !_this56.mustInList && _this56.myFreeValues.push(t), _this56.tryNotifyChanged();

                case 24:
                case "end":
                  return _context27.stop();
              }
            }
          }, _callee27, null, [[4, 14, 17, 20]]);
        }))();
      },
      OnInputFocused: function OnInputFocused() {
        var _this57 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee28() {
          return regeneratorRuntime.wrap(function _callee28$(_context28) {
            while (1) {
              switch (_context28.prev = _context28.next) {
                case 0:
                  _context28.t0 = _this57.autoFocusExtended && !_this57.isExtended;

                  if (!_context28.t0) {
                    _context28.next = 4;
                    break;
                  }

                  _context28.next = 4;
                  return _this57.doExtend();

                case 4:
                case "end":
                  return _context28.stop();
              }
            }
          }, _callee28);
        }))();
      },
      OnTagListChanged: function OnTagListChanged() {
        var _arguments9 = arguments,
            _this58 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee29() {
          var t;
          return regeneratorRuntime.wrap(function _callee29$(_context29) {
            while (1) {
              switch (_context29.prev = _context29.next) {
                case 0:
                  t = _arguments9.length > 0 && _arguments9[0] !== undefined ? _arguments9[0] : [];
                  _context29.next = 3;
                  return _this58.evalMyTags(t);

                case 3:
                  _this58.tryNotifyChanged();

                case 4:
                case "end":
                  return _context29.stop();
              }
            }
          }, _callee29);
        }))();
      },
      OnClickStatusIcon: function OnClickStatusIcon() {
        var _this59 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee30() {
          return regeneratorRuntime.wrap(function _callee30$(_context30) {
            while (1) {
              switch (_context30.prev = _context30.next) {
                case 0:
                  if (!_this59.isExtended) {
                    _context30.next = 4;
                    break;
                  }

                  _this59.doCollapse();

                  _context30.next = 6;
                  break;

                case 4:
                  _context30.next = 6;
                  return _this59.doExtend();

                case 6:
                case "end":
                  return _context30.stop();
              }
            }
          }, _callee30);
        }))();
      },
      OnDropListSelected: function OnDropListSelected() {
        var _arguments10 = arguments,
            _this60 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee31() {
          var _ref23, t, e, i;

          return regeneratorRuntime.wrap(function _callee31$(_context31) {
            while (1) {
              switch (_context31.prev = _context31.next) {
                case 0:
                  _ref23 = _arguments10.length > 0 && _arguments10[0] !== undefined ? _arguments10[0] : {}, t = _ref23.currentId, e = _ref23.checkedIds;
                  _this60.myCurrentId = t, _this60.myCheckedIds = e;
                  i = Ti.Util.truthyKeys(e);
                  _context31.next = 5;
                  return _this60.evalMyTags(_.concat(i, _this60.myFreeValues));

                case 5:
                  _this60.tryNotifyChanged();

                case 6:
                case "end":
                  return _context31.stop();
              }
            }
          }, _callee31);
        }))();
      },
      doExtend: function doExtend() {
        var _this61 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee32() {
          return regeneratorRuntime.wrap(function _callee32$(_context32) {
            while (1) {
              switch (_context32.prev = _context32.next) {
                case 0:
                  _this61.myOldValue = _this61.evalMyValues();
                  _context32.t0 = _.isEmpty(_this61.myOptionsData);

                  if (!_context32.t0) {
                    _context32.next = 5;
                    break;
                  }

                  _context32.next = 5;
                  return _this61.reloadMyOptionData(!0);

                case 5:
                  _this61.$nextTick(function () {
                    _this61.myDropStatus = "extended";
                  });

                case 6:
                case "end":
                  return _context32.stop();
              }
            }
          }, _callee32);
        }))();
      },
      doCollapse: function doCollapse() {
        var _ref24 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref24$escaped = _ref24.escaped,
            t = _ref24$escaped === void 0 ? !1 : _ref24$escaped;

        t && this.$notify("change", this.myOldValue), this.myDropStatus = "collapse", this.myOldValue = void 0;
      },
      tryNotifyChanged: function tryNotifyChanged() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;
        var e = this.evalMyValues();
        t || _.isEqual(e, this.Values) || this.$notify("change", e);
      },
      evalMyValues: function evalMyValues() {
        var _this62 = this;

        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.myTags;
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.myFreeValues;
        var i = [];
        return _.forEach(t, function (t) {
          var e = _this62.Dict.getValue(t);

          Ti.Util.isNil(e) ? _this62.mustInList || i.push(t) : i.push(e);
        }), this.mustInList || _.isEmpty(e) ? i : _.concat(i, e);
      },
      evalMyTags: function evalMyTags() {
        var _arguments11 = arguments,
            _this63 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee33() {
          var t, e, i, n, _iterator17, _step17, a, _t25;

          return regeneratorRuntime.wrap(function _callee33$(_context33) {
            while (1) {
              switch (_context33.prev = _context33.next) {
                case 0:
                  t = _arguments11.length > 0 && _arguments11[0] !== undefined ? _arguments11[0] : _this63.value;
                  t = Ti.S.toArray(t);
                  e = [], i = {}, n = [];
                  _iterator17 = _createForOfIteratorHelper(t);
                  _context33.prev = 4;

                  _iterator17.s();

                case 6:
                  if ((_step17 = _iterator17.n()).done) {
                    _context33.next = 14;
                    break;
                  }

                  a = _step17.value;
                  _context33.next = 10;
                  return _this63.Dict.getItem(a);

                case 10:
                  _t25 = _context33.sent;
                  _t25 ? (e.push(_t25), i[a] = !0) : n.push(a);

                case 12:
                  _context33.next = 6;
                  break;

                case 14:
                  _context33.next = 19;
                  break;

                case 16:
                  _context33.prev = 16;
                  _context33.t0 = _context33["catch"](4);

                  _iterator17.e(_context33.t0);

                case 19:
                  _context33.prev = 19;

                  _iterator17.f();

                  return _context33.finish(19);

                case 22:
                  _this63.myTags = e, _this63.myFreeValues = n, _this63.myCheckedIds = i;

                case 23:
                case "end":
                  return _context33.stop();
              }
            }
          }, _callee33, null, [[4, 16, 19, 22]]);
        }))();
      },
      createDict: function createDict() {
        var _this64 = this;

        if (this.options instanceof Ti.Dict) return this.options;

        if (_.isString(this.options)) {
          var _t26 = Ti.DictFactory.DictReferName(this.options);

          if (_t26) return Ti.DictFactory.CheckDict(_t26, function (_ref25) {
            var t = _ref25.loading;
            _this64.loading = t;
          });
        }

        return Ti.DictFactory.CreateDict({
          data: this.options,
          getValue: Ti.Util.genGetter(this.valueBy || "value"),
          getText: Ti.Util.genGetter(this.textBy || "text|name"),
          getIcon: Ti.Util.genGetter(this.iconBy || "icon")
        });
      },
      reloadMyOptionData: function reloadMyOptionData() {
        var _arguments12 = arguments,
            _this65 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee34() {
          var t;
          return regeneratorRuntime.wrap(function _callee34$(_context34) {
            while (1) {
              switch (_context34.prev = _context34.next) {
                case 0:
                  t = _arguments12.length > 0 && _arguments12[0] !== undefined ? _arguments12[0] : !1;

                  if (!(t || _this65.isExtended)) {
                    _context34.next = 7;
                    break;
                  }

                  _context34.next = 4;
                  return _this65.Dict.queryData(_this65.myFilterValue);

                case 4:
                  _this65.myOptionsData = _context34.sent;
                  _context34.next = 8;
                  break;

                case 7:
                  _this65.myOptionsData = [];

                case 8:
                case "end":
                  return _context34.stop();
              }
            }
          }, _callee34);
        }))();
      },
      __ti_shortcut: function __ti_shortcut(t) {
        return "ESCAPE" == t ? (this.doCollapse({
          escaped: !0
        }), {
          prevent: !0,
          stop: !0,
          quit: !0
        }) : "ENTER" == t && this.$dropList && this.$dropList.isActived ? (this.doCollapse(), {
          stop: !0,
          quit: !0
        }) : "ARROWUP" == t ? (this.$dropList && this.$dropList.selectPrevRow({
          payload: {
            byKeyboardArrow: !0
          }
        }), {
          prevent: !0,
          stop: !0,
          quit: !0
        }) : "ARROWDOWN" == t ? (this.$dropList && this.isExtended ? this.$dropList.selectNextRow({
          payload: {
            byKeyboardArrow: !0
          }
        }) : this.doExtend(), {
          prevent: !0,
          stop: !0,
          quit: !0
        }) : void 0;
      }
    },
    watch: {
      value: {
        handler: "evalMyTags",
        immediate: !0
      },
      options: function options(t, e) {
        var _this66 = this;

        _.isEqual(t, e) || (this.myDict = this.createDict(), this.myOptionsData = [], this.isExtended && this.$nextTick(function () {
          _this66.reloadMyOptionData(!0);
        }));
      }
    },
    created: function created() {
      var _this67 = this;

      this.debReload = _.debounce(function (t) {
        _this67.reloadMyOptionData();
      }, this.delay);
    }
  };
  Ti.Preload("ti/com/ti/combo/multi-input/ti-combo-multi-input.mjs", t);
}(), Ti.Preload("ti/com/ti/combo/multi-input/_com.json", {
  name: "ti-combo-multi-input",
  globally: !0,
  template: "./ti-combo-multi-input.html",
  props: ["@com:ti/input/ti-input-props.mjs", "@com:ti/input/tags/ti-input-tags-props.mjs", "@com:ti/combo/input/ti-combo-input-props.mjs"],
  mixins: ["./ti-combo-multi-input.mjs"],
  components: ["@com:ti/combo/box"]
}), function () {
  var t = {
    value: {
      type: Object,
      "default": void 0
    },
    group: {
      type: Boolean,
      "default": !0
    },
    fields: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },
    onlyFields: {
      type: Boolean,
      "default": !0
    },
    fixed: {
      type: Object,
      "default": void 0
    },
    defaultComType: {
      type: String,
      "default": "ti-input"
    },
    spacing: {
      type: String,
      "default": void 0
    },
    width: {
      type: [Number, String],
      "default": void 0
    },
    height: {
      type: [Number, String],
      "default": void 0
    }
  };
  Ti.Preload("ti/com/ti/combo/pair-auto/ti-combo-pair-auto-props.mjs", t);
}(), Ti.Preload("ti/com/ti/combo/pair-auto/ti-combo-pair-auto.html", '<ti-form\n  class="full-field"\n  :class="TopClass"\n  :data="value"\n  :fields="FormFields"\n  :only-fields="onlyFields"\n  :fixed="fixed"\n  :default-com-type="defaultComType"\n  :spacing="spacing"\n  :width="width"\n  :height="height"/>'), function () {
  var t = {
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      FormFields: function FormFields() {
        return this.group ? this.genFormFieldsByGroup() : this.genFormFields(this.value);
      }
    },
    methods: {
      genFormFieldsByGroup: function genFormFieldsByGroup() {
        var _this68 = this;

        console.log("haha");
        var t = [];
        return _.forEach(this.value, function (e, i) {
          var n = _.defaults(_this68.getFieldDefine(i), {
            title: i,
            name: i,
            fields: _this68.genFormFields(e, i)
          });

          t.push(n);
        }), t;
      },
      genFormFields: function genFormFields() {
        var _this69 = this;

        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var e = arguments.length > 1 ? arguments[1] : undefined;
        var i = [],
            n = e ? [e] : [];
        return _.forEach(t, function (t, a) {
          var s = _.defaults(_this69.getFieldDefine(a, e), {
            title: a,
            name: _.concat(n, a).join(".")
          });

          i.push(s);
        }), i;
      },
      getFieldDefine: function getFieldDefine(t, e) {
        var _Ti$Util4;

        var i = [];
        e && i.push("".concat(e, ".").concat(t)), i.push(t), i.push("@default");

        var n = (_Ti$Util4 = Ti.Util).getFallbackNil.apply(_Ti$Util4, [this.fields].concat(i));

        return n && n.title && ((n = _.cloneDeep(n)).title = Ti.S.renderBy(n.title, {
          name: t,
          group: e
        })), n;
      }
    }
  };
  Ti.Preload("ti/com/ti/combo/pair-auto/ti-combo-pair-auto.mjs", t);
}(), Ti.Preload("ti/com/ti/combo/pair-auto/_com.json", {
  name: "ti-combo-pair-auto",
  globally: !0,
  template: "./ti-combo-pair-auto.html",
  props: ["./ti-combo-pair-auto-props.mjs"],
  mixins: "./ti-combo-pair-auto.mjs"
}), function () {
  var t = {
    value: void 0,
    fields: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    keepShownTo: {
      type: String,
      "default": void 0
    },
    tabAt: {
      type: String,
      "default": void 0
    }
  };
  Ti.Preload("ti/com/ti/combo/pair-group/ti-combo-pair-group-props.mjs", t);
}(), Ti.Preload("ti/com/ti/combo/pair-group/ti-combo-pair-group.html", '<ti-gui\n  class="ti-fill-parent full-field"\n  :class="TopClass"\n  :layout="TheLayout"\n  :shown="TheShown"\n  :keep-shown-to="keepShownTo"\n  @block:shown="OnShownUpdate"/>'), function () {
  var t = {
    data: function data() {
      return {
        myFieldNames: [],
        myFieldMap: {},
        myCurrentTabName: null
      };
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      ValueObj: function ValueObj() {
        if (Ti.Util.isNil(this.value) || _.isEmpty(this.value)) return {};

        if (_.isString(this.value)) {
          return _.trim(this.value) ? JSON.parse(this.value) : {};
        }

        if (_.isPlainObject(this.value)) return this.value;
        console.warn("Unsupported value object:", this.value);
      },
      TheBlocks: function TheBlocks() {
        var t = _.cloneDeep(this.myFieldNames);

        _.forEach(this.ValueObj, function (e, i) {
          _.indexOf(t, i) < 0 && t.push(i);
        }), this.myFieldNames = t;
        var e = [];

        var _iterator18 = _createForOfIteratorHelper(t),
            _step18;

        try {
          for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {
            var i = _step18.value;

            var _t27 = _.get(this.ValueObj, i),
                n = _.get(this.myFieldMap, i) || {},
                a = Ti.Util.explainObj(_t27, _objectSpread({
              title: i,
              name: i
            }, _.pick(n, "title", "name", "icon"), {
              body: {
                comType: n.comType || "ti-input-text",
                comConf: n.comConf || {
                  value: "=.."
                }
              }
            }));

            e.push(a);
          }
        } catch (err) {
          _iterator18.e(err);
        } finally {
          _iterator18.f();
        }

        return e;
      },
      TheLayout: function TheLayout() {
        return {
          type: "tabs",
          tabAt: this.tabAt,
          blocks: this.TheBlocks
        };
      },
      TheShown: function TheShown() {
        var _this70 = this;

        if (this.keepShownTo) return;
        var t = {};
        return _.forEach(this.myFieldNames, function (e) {
          t[e] = e == _this70.myCurrentTabName;
        }), t;
      }
    },
    methods: {
      __on_events: function __on_events(t, e) {
        var _this71 = this;

        var _t$split = t.split("::"),
            _t$split2 = _slicedToArray(_t$split, 2),
            i = _t$split2[0],
            n = _t$split2[1];

        return "change" == n && this.$parent ? function () {
          var t = _.cloneDeep(_this71.ValueObj);

          return _.set(t, i, e), _this71.$parent.$notify("change", t), !0;
        } : function () {
          return !0;
        };
      },
      OnShownUpdate: function OnShownUpdate(t) {
        var e = Ti.Util.truthyKeys(t);
        this.myCurrentTabName = _.first(e);
      },
      evalBlocks: function evalBlocks() {
        var t = {},
            e = [];
        _.forEach(this.fields, function (i) {
          t[i.name] = i, e.push(i.name);
        }), this.myFieldNames = e, this.myFieldMap = t;
      }
    },
    watch: {
      blocks: {
        handler: "evalBlocks",
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/ti/combo/pair-group/ti-combo-pair-group.mjs", t);
}(), Ti.Preload("ti/com/ti/combo/pair-group/_com.json", {
  name: "ti-combo-pair-group",
  globally: !0,
  template: "./ti-combo-pair-group.html",
  props: ["./ti-combo-pair-group-props.mjs"],
  mixins: "./ti-combo-pair-group.mjs"
}), function () {
  var t = {
    value: {
      type: Object,
      "default": void 0
    },
    options: {
      type: [String, Array, Function, Ti.Dict],
      "default": function _default() {
        return [];
      }
    },
    valueBy: {
      type: [String, Function],
      "default": void 0
    },
    textBy: {
      type: [String, Function],
      "default": void 0
    },
    iconeBy: {
      type: [String, Function],
      "default": void 0
    },
    trimed: {
      type: Boolean,
      "default": !0
    },
    readonly: {
      type: Boolean,
      "default": !1
    },
    placeholder: {
      type: String,
      "default": void 0
    },
    textWidth: {
      type: [Number, String],
      "default": void 0
    },
    textHeight: {
      type: [Number, String],
      "default": void 0
    }
  };
  Ti.Preload("ti/com/ti/combo/pair-text/ti-combo-pair-text-props.mjs", t);
}(), Ti.Preload("ti/com/ti/combo/pair-text/ti-combo-pair-text.html", '<div class="ti-combo-pair-text full-field">\n  <div\n    v-for="it in Items"\n      class="as-pair">\n      \x3c!--title--\x3e\n      <div class="as-title">\n        \x3c!--Icon--\x3e\n        <ti-icon\n          v-if="it.icon" \n            :value="it.icon"/>\n        \x3c!--Text--\x3e\n        <div\n          v-if="it.text" \n            class="as-text">{{it.text}}</div>\n      </div>\n      \x3c!--Textarea--\x3e\n      <div\n        class="as-textarea">\n          <textarea \n            spellcheck="false"\n            :style="TextStyle"\n            :placeholder="it.placeholder"\n            :value="it.value"\n            :readonly="readonly"\n            @change="OnTextChange(it.key, $event)"></textarea></div>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myOptionsData: null,
        myDict: void 0,
        myValue: {}
      };
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      Items: function Items() {
        var _this72 = this;

        var t = [];
        return _.forEach(this.myOptionsData, function (e) {
          var i = _this72.Dict.getText(e),
              n = _this72.Dict.getValue(e),
              a = _this72.Dict.getIcon(e),
              s = _.get(_this72.myValue, n),
              o = e.placeholder || _this72.placeholder;

          t.push({
            value: s,
            text: i,
            icon: a,
            key: n,
            placeholder: o
          });
        }), t;
      },
      TextStyle: function TextStyle() {
        return Ti.Css.toStyleRem100({
          width: this.textWidth,
          height: this.textHeight
        });
      },
      Dict: function Dict() {
        return this.myDict || (this.myDict = this.createDict()), this.myDict;
      }
    },
    methods: {
      OnTextChange: function OnTextChange(t, e) {
        var i = e.srcElement.value;
        this.trimed && (i = _.trim(i)), this.updateValue(_defineProperty({}, t, i));
      },
      updateValue: function updateValue(t) {
        this.myValue = _.assign({}, this.myValue, t);
      },
      createDict: function createDict() {
        var _this73 = this;

        if (this.options instanceof Ti.Dict) return this.options;

        if (_.isString(this.options)) {
          var _t28 = Ti.DictFactory.DictReferName(this.options);

          if (_t28) return Ti.DictFactory.CheckDict(_t28, function (_ref26) {
            var t = _ref26.loading;
            _this73.loading = t;
          });
        }

        return Ti.DictFactory.CreateDict({
          data: this.options || [],
          getValue: Ti.Util.genGetter(this.valueBy || "value"),
          getText: Ti.Util.genGetter(this.textBy || "text|name"),
          getIcon: Ti.Util.genGetter(this.iconBy || "icon")
        });
      },
      reloadMyOptionData: function reloadMyOptionData() {
        var _this74 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee35() {
          return regeneratorRuntime.wrap(function _callee35$(_context35) {
            while (1) {
              switch (_context35.prev = _context35.next) {
                case 0:
                  _context35.next = 2;
                  return _this74.Dict.getData();

                case 2:
                  _this74.myOptionsData = _context35.sent;

                case 3:
                case "end":
                  return _context35.stop();
              }
            }
          }, _callee35);
        }))();
      }
    },
    watch: {
      value: {
        handler: function handler(t, e) {
          _.isEqual(t, e) || (this.myValue = _.cloneDeep(t));
        },
        immediate: !0
      },
      options: function () {
        var _options = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee36(t, e) {
          return regeneratorRuntime.wrap(function _callee36$(_context36) {
            while (1) {
              switch (_context36.prev = _context36.next) {
                case 0:
                  _context36.t0 = _.isEqual(t, e);

                  if (_context36.t0) {
                    _context36.next = 5;
                    break;
                  }

                  this.myDict = this.createDict();
                  _context36.next = 5;
                  return this.reloadMyOptionData();

                case 5:
                case "end":
                  return _context36.stop();
              }
            }
          }, _callee36, this);
        }));

        function options(_x, _x2) {
          return _options.apply(this, arguments);
        }

        return options;
      }(),
      myValue: function myValue(t, e) {
        _.isEqual(t, e) || this.$notify("change", this.myValue);
      }
    },
    mounted: function () {
      var _mounted = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee37() {
        return regeneratorRuntime.wrap(function _callee37$(_context37) {
          while (1) {
            switch (_context37.prev = _context37.next) {
              case 0:
                _context37.next = 2;
                return this.reloadMyOptionData();

              case 2:
              case "end":
                return _context37.stop();
            }
          }
        }, _callee37, this);
      }));

      function mounted() {
        return _mounted.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/ti/combo/pair-text/ti-combo-pair-text.mjs", t);
}(), Ti.Preload("ti/com/ti/combo/pair-text/_com.json", {
  name: "ti-combo-pair-text",
  globally: !0,
  template: "./ti-combo-pair-text.html",
  props: ["./ti-combo-pair-text-props.mjs"],
  mixins: "./ti-combo-pair-text.mjs"
}), function () {
  var t = {
    placeholder: {
      type: String,
      "default": "i18n:no-title"
    },
    options: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    value: {
      type: Object,
      "default": null
    },
    width: {
      type: [Number, String],
      "default": void 0
    },
    height: {
      type: [Number, String],
      "default": void 0
    },
    dropWidth: {
      type: [Number, String],
      "default": "box"
    },
    dropHeight: {
      type: [Number, String],
      "default": null
    },
    sortIcons: {
      type: Object,
      "default": function _default() {
        return {
          asc: "im-arrow-up",
          desc: "im-arrow-down"
        };
      }
    },
    suffixIcon: {
      type: String,
      "default": "im-menu-list"
    }
  };
  Ti.Preload("ti/com/ti/combo/sorter/ti-combo-sorter-props.mjs", t);
}(), Ti.Preload("ti/com/ti/combo/sorter/ti-combo-sorter.html", '<div class="ti-combo-sorter"\n  :class="TopClass"\n  :style="TopStyle">\n  \x3c!--\n    sorter box\n  --\x3e\n  <ti-combo-box\n    class="as-sorter"\n    :drop-width="dropWidth"\n    :drop-height="dropHeight"\n    :drop-float="false"\n    :status="myDropStatus"\n    @collapse="OnCollapse"\n    v-ti-activable>\n    \x3c!--\n      Box\n    --\x3e\n    <template v-slot:box>\n      \x3c!--\n        Current Sort Box\n      --\x3e\n      <div class="as-sort-box"\n        @click.left="OnClickBox">\n        \x3c!--Sort Icon--\x3e\n        <ti-icon\n          v-if="TheSortIcon"\n          class="as-sort-icon"\n            :value="TheSortIcon"/>\n        \x3c!--Preifx Icon--\x3e\n        <ti-icon \n          v-if="ThePrefixIcon"\n            class="at-prefix"\n            :value="ThePrefixIcon"/>\n        \x3c!--Title--\x3e\n        <div class="as-title">{{SortTitle|i18n}}</div>\n      </div>\n      \x3c!--Status Icon--\x3e\n      <div  \n        v-if="TheSuffixIcon"\n          class="as-sort-btn"\n          @click.left="OnClickSuffixIcon">\n            <ti-icon :value="TheSuffixIcon"/>\n      </div>\n    </template>\n    \x3c!--\n      Drop\n    --\x3e\n    <template v-slot:drop="slotProps">\n      <ti-list\n        id-by="value"\n        :data="myListData"\n        :display="[\'<icon>\', \'text\']"\n        :hoverable="true"\n        :current-id="SortBy"\n        @select="OnDropListSelected"/>\n    </template>\n  </ti-combo-box>\n  \x3c!--\n    Sorter\n  --\x3e\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myDropStatus: "collapse",
        myItem: null,
        isASC: !0,
        myListData: []
      };
    },
    computed: {
      isCollapse: function isCollapse() {
        return "collapse" == this.myDropStatus;
      },
      isExtended: function isExtended() {
        return "extended" == this.myDropStatus;
      },
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TopStyle: function TopStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      SortTitle: function SortTitle() {
        return Ti.Util.getOrPick(this.myItem, "text|value", this.placeholder);
      },
      SortBy: function SortBy() {
        return _.first(_.keys(this.value));
      },
      SortAs: function SortAs() {
        return _.get(this.value, this.SortBy) || 1;
      },
      ThePrefixIcon: function ThePrefixIcon() {
        return _.get(this.myItem, "icon");
      },
      TheSortIcon: function TheSortIcon() {
        return this.isASC ? this.sortIcons.asc : this.sortIcons.desc;
      },
      TheSuffixIcon: function TheSuffixIcon() {
        if (!_.isEmpty(this.myListData) && this.myListData.length > 1) return this.suffixIcon;
      },
      Dict: function Dict() {
        var _this75 = this;

        if (this.options instanceof Ti.Dict) return this.options;

        if (_.isString(this.options)) {
          var _t29 = Ti.DictFactory.DictReferName(this.options);

          if (_t29) return Ti.DictFactory.CheckDict(_t29, function (_ref27) {
            var t = _ref27.loading;
            _this75.loading = t;
          });
        }

        return Ti.DictFactory.CreateDict({
          data: this.options,
          getValue: Ti.Util.genGetter(this.valueBy || "value"),
          getText: Ti.Util.genGetter(this.textBy || "text|name"),
          getIcon: Ti.Util.genGetter(this.iconBy || "icon")
        });
      }
    },
    methods: {
      OnCollapse: function OnCollapse() {
        this.doCollapse();
      },
      OnClickBox: function OnClickBox() {
        this.isASC = !this.isASC, this.tryNotifyChanged();
      },
      OnClickSuffixIcon: function OnClickSuffixIcon() {
        this.isExtended ? this.doCollapse() : this.doExtend();
      },
      OnDropListSelected: function OnDropListSelected() {
        var _ref28 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref28.current;

        this.myItem = t, this.doCollapse();
      },
      doExtend: function doExtend() {
        this.myDropStatus = "extended";
      },
      doCollapse: function doCollapse() {
        var _ref29 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref29$escaped = _ref29.escaped,
            t = _ref29$escaped === void 0 ? !1 : _ref29$escaped;

        this.myDropStatus = "collapse", t || this.tryNotifyChanged();
      },
      tryNotifyChanged: function tryNotifyChanged() {
        var t = this.genValue();
        _.isEqual(t, this.value) || this.$notify("change", t);
      },
      genValue: function genValue() {
        return _defineProperty({}, _.get(this.myItem, "value"), this.isASC ? 1 : -1);
      },
      evalMyValue: function evalMyValue() {
        var _this76 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee38() {
          var t, _e16, e;

          return regeneratorRuntime.wrap(function _callee38$(_context38) {
            while (1) {
              switch (_context38.prev = _context38.next) {
                case 0:
                  t = {
                    by: null,
                    as: 1
                  };

                  if (_.isString(_this76.value)) {
                    _e16 = _this76.value.split(":");
                    t.by = _.nth(_e16, 0), t.as = "1" == _.nth(_e16, 1) ? 1 : -1;
                  } else _.isArray(_this76.value) ? (t.by = _.nth(_this76.value, 0), t.as = _.nth(_this76.value, 1) > 0 ? 1 : -1) : (t.by = _this76.SortBy, t.as = _this76.SortAs);

                  _context38.next = 4;
                  return _this76.Dict.getItem(t.by);

                case 4:
                  e = _context38.sent;
                  _this76.myItem = e || {
                    text: _this76.text || t.by,
                    value: t.by
                  }, _this76.isASC = 1 == t.as;

                case 6:
                case "end":
                  return _context38.stop();
              }
            }
          }, _callee38);
        }))();
      },
      __ti_shortcut: function __ti_shortcut(t) {
        if ("ESCAPE" == t) return this.doCollapse({
          escaped: !0
        }), {
          prevent: !0,
          stop: !0,
          quit: !0
        };
      }
    },
    watch: {
      value: {
        handler: "evalMyValue",
        immediate: !0
      }
    },
    mounted: function () {
      var _mounted2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee39() {
        return regeneratorRuntime.wrap(function _callee39$(_context39) {
          while (1) {
            switch (_context39.prev = _context39.next) {
              case 0:
                _context39.next = 2;
                return this.Dict.getData();

              case 2:
                this.myListData = _context39.sent;

              case 3:
              case "end":
                return _context39.stop();
            }
          }
        }, _callee39, this);
      }));

      function mounted() {
        return _mounted2.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/ti/combo/sorter/ti-combo-sorter.mjs", t);
}(), Ti.Preload("ti/com/ti/combo/sorter/_com.json", {
  name: "ti-combo-sorter",
  globally: !0,
  template: "./ti-combo-sorter.html",
  props: "@com:ti/combo/sorter/ti-combo-sorter-props.mjs",
  mixins: "./ti-combo-sorter.mjs",
  components: ["@com:ti/combo/box"]
}), Ti.Preload("ti/com/ti/crumb/com/crumb-item/crumb-item.html", '<div class="ti-crumb-item" \n  :class="TopClass"\n  @click.left="OnClickTop">\n  \x3c!--\n    Icon\n  --\x3e\n  <ti-icon v-if="icon" \n    class="as-icon"\n    :value="icon"/>\n  \x3c!--\n    Text\n  --\x3e\n  <template v-if="text">\n    <a v-if="href"\n      class="as-text"\n      @click.prevent\n      :href="href"\n      :class="TextClass">{{TheText}}</a>\n    <span v-else\n      class="as-text"\n      :class="TextClass">{{TheText}}</span>\n  </template>\n  \x3c!--\n    Asterisk\n  --\x3e\n  <span v-if="asterisk"\n    class="as-asterisk"\n    ></span>\n  \x3c!--\n    Path Icon\n  --\x3e\n  <ti-icon v-if="!atLast"\n    class="as-path-icon"\n    :value="pathIcon"/>\n</div>'), function () {
  var t = {
    props: {
      index: {
        type: Number,
        "default": -1
      },
      atLast: {
        type: Boolean,
        "default": !1
      },
      icon: {
        type: [String, Object],
        "default": null
      },
      text: {
        type: String,
        "default": null
      },
      href: {
        type: String,
        "default": null
      },
      value: {
        type: [String, Number, Boolean, Object],
        "default": null
      },
      pathIcon: {
        type: String,
        "default": null
      },
      asterisk: {
        type: Boolean,
        "default": !1
      },
      cancelBubble: {
        type: Boolean,
        "default": !0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return Ti.Css.mergeClassName({
          "at-tail": this.atLast,
          "at-path": !this.atLast,
          "is-asterisk": this.asterisk
        }, this.className);
      },
      TextClass: function TextClass() {
        return {
          "without-icon": !this.hasIcon && !this.removeIcon
        };
      },
      hasIcon: function hasIcon() {
        return !!this.icon;
      },
      TheText: function TheText() {
        return Ti.I18n.text(this.text);
      },
      TheData: function TheData() {
        return {
          index: this.index,
          icon: this.icon,
          text: this.text,
          value: this.value,
          href: this.href,
          atLast: this.atLast,
          asterisk: this.asterisk
        };
      }
    },
    methods: {
      OnClickTop: function OnClickTop(t) {
        this.hasOptions ? (t.stopPropagation(), this.openDrop()) : this.cancelBubble && t.stopPropagation(), this.href && this.$notify("item:active", this.TheData);
      }
    }
  };
  Ti.Preload("ti/com/ti/crumb/com/crumb-item/crumb-item.mjs", t);
}(), Ti.Preload("ti/com/ti/crumb/com/crumb-item/_com.json", {
  name: "crumb-item",
  globally: !1,
  template: "./crumb-item.html",
  mixins: ["./crumb-item.mjs"]
}), Ti.Preload("ti/com/ti/crumb/ti-crumb.html", '<div class="ti-crumb"\n  :class="topClass">\n  \x3c!--\n    Loop items\n  --\x3e\n  <crumb-item v-for="it in theData"\n    :key="it.index"\n    :path-icon="pathIcon"\n    :cancel-bubble="cancelItemBubble"\n    v-bind="it"/>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      data: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      itemIcon: {
        type: String,
        "default": null
      },
      pathIcon: {
        type: String,
        "default": "zmdi-chevron-right"
      },
      cancelItemBubble: {
        type: Boolean,
        "default": !0
      }
    },
    computed: {
      topClass: function topClass() {
        if (this.className) return this.className;
      },
      theData: function theData() {
        var _this77 = this;

        var t = [];
        return _.isArray(this.data) && _.forEach(this.data, function (e, i) {
          t.push(_.assign({
            icon: _this77.itemIcon
          }, e, {
            index: i,
            atLast: i == _this77.data.length - 1
          }));
        }), t;
      },
      theDataValues: function theDataValues() {
        var t = [];

        var _iterator19 = _createForOfIteratorHelper(this.theData),
            _step19;

        try {
          for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {
            var e = _step19.value;
            t.push(Ti.Util.fallback(e.value, null));
          }
        } catch (err) {
          _iterator19.e(err);
        } finally {
          _iterator19.f();
        }

        return t;
      }
    }
  };
  Ti.Preload("ti/com/ti/crumb/ti-crumb.mjs", t);
}(), Ti.Preload("ti/com/ti/crumb/_com.json", {
  name: "ti-crumb",
  globally: !0,
  template: "./ti-crumb.html",
  mixins: ["./ti-crumb.mjs"],
  components: ["./com/crumb-item"]
}), Ti.Preload("ti/com/ti/datetime/ti-datetime.html", '<div class="ti-datetime">\n  \x3c!--Date--\x3e\n  <ti-calendar class="is-date"\n    :value="theDate"\n    :month-format="monthFormat"\n    :begin-year="beginYear"\n    :end-year="endYear"\n    @change="onDateChanged"/>\n  \x3c!--Time--\x3e\n  <div class="is-time">\n    <div class="as-time-text">{{theTimeText}}</div>\n    <div class="as-time-cols">\n      <ti-time\n        :value="theTime"\n        :mode="timeMode"\n        width="100%"\n        height="none"\n        @change="onTimeChanged"/>\n    </div>\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      value: {
        type: [String, Number, Date],
        "default": null
      },
      timeMode: {
        type: String,
        "default": "sec",
        validator: function validator(t) {
          return /^(sec|min|auto)$/.test(t);
        }
      },
      monthFormat: {
        type: String,
        "default": "yyyy-MM"
      },
      beginYear: {
        type: [Number, String],
        "default": 1970
      },
      endYear: {
        type: [Number, String],
        "default": new Date().getFullYear() + 1
      }
    },
    computed: {
      topClass: function topClass() {
        return this.className;
      },
      theDate: function theDate() {
        return Ti.Types.toDate(this.value, null);
      },
      theTime: function theTime() {
        return Ti.Types.toTime(this.theDate);
      },
      theTimeFormat: function theTimeFormat() {
        return {
          sec: "HH:mm:ss",
          min: "HH:mm",
          auto: "auto"
        }[this.timeMode];
      },
      theTimeText: function theTimeText() {
        return this.getTimeText(this.theTime);
      }
    },
    methods: {
      onDateChanged: function onDateChanged(t) {
        this.theDate || new Date();
        var e = Ti.Types.toTime(this.theTime || 0);
        (t = new Date(t)).setHours(e.hours), t.setMinutes(e.minutes), t.setSeconds(e.seconds), t.setMilliseconds(e.milliseconds), this.$notify("change", t);
      },
      onTimeChanged: function onTimeChanged(t) {
        var e = this.theDate || new Date(),
            i = new Date(e);
        i.setHours(t.hours), i.setMinutes(t.minutes), i.setSeconds(t.seconds), i.setMilliseconds(t.milliseconds), this.$notify("change", i);
      },
      getTimeText: function getTimeText(t) {
        if (t instanceof Ti.Types.Time) return t.toString(this.theTimeFormat);
      }
    }
  };
  Ti.Preload("ti/com/ti/datetime/ti-datetime.mjs", t);
}(), Ti.Preload("ti/com/ti/datetime/_com.json", {
  name: "ti-datetime",
  globally: !0,
  template: "./ti-datetime.html",
  mixins: ["./ti-datetime.mjs"],
  components: ["@com:ti/time", "@com:ti/calendar"]
}), Ti.Preload("ti/com/ti/droplist/ti-droplist.html", '<component \n  :is="ComType"\n  v-bind="this"\n  :can-input="false"\n  :must-in-list="true"\n  :auto-collapse="true"\n  @change="$notify(\'change\', $event)"/>'), function () {
  var t = {
    props: {
      multi: {
        type: Boolean,
        "default": !1
      }
    },
    computed: {
      ComType: function ComType() {
        return this.multi ? "ti-combo-multi-input" : "ti-combo-input";
      }
    }
  };
  Ti.Preload("ti/com/ti/droplist/ti-droplist.mjs", t);
}(), Ti.Preload("ti/com/ti/droplist/_com.json", {
  name: "ti-droplist",
  globally: !0,
  template: "./ti-droplist.html",
  props: ["@com:ti/input/ti-input-props.mjs", "@com:ti/input/tags/ti-input-tags-props.mjs", "@com:ti/combo/input/ti-combo-input-props.mjs"],
  mixins: ["./ti-droplist.mjs"],
  components: ["@com:ti/combo/input", "@com:ti/combo/multi-input"]
}), function () {
  var t = {
    type: {
      type: String,
      "default": "String"
    },
    disabled: {
      type: Boolean,
      "default": !1
    },
    uniqKey: {
      type: String,
      "default": null
    },
    name: {
      type: [String, Array],
      "default": null
    },
    icon: {
      type: String,
      "default": null
    },
    fieldStatus: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },
    message: {
      type: String,
      "default": null
    },
    title: {
      type: String,
      "default": null
    },
    tip: {
      type: String,
      "default": null
    },
    width: {
      type: [String, Number],
      "default": "stretch"
    },
    height: {
      type: [String, Number],
      "default": void 0
    },
    checkEquals: {
      type: Boolean,
      "default": !0
    },
    undefinedAs: {
      "default": void 0
    },
    nullAs: {
      "default": void 0
    },
    nanAs: {
      type: Number,
      "default": void 0
    },
    emptyAs: {
      type: String,
      "default": void 0
    },
    defaultAs: {
      "default": void 0
    },
    display: {
      type: [String, Object, Boolean],
      "default": !1
    },
    comType: {
      type: String,
      "default": "ti-label"
    },
    comConf: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },
    autoValue: {
      type: String,
      "default": "value"
    },
    serializer: {
      type: Function,
      "default": _.identity
    },
    transformer: {
      type: Function,
      "default": _.identity
    },
    data: {
      type: Object,
      "default": null
    },
    statusIcons: {
      type: Object,
      "default": function _default() {
        return {
          spinning: "fas-spinner fa-spin",
          error: "zmdi-alert-polygon",
          warn: "zmdi-alert-triangle",
          ok: "zmdi-check-circle"
        };
      }
    }
  };
  Ti.Preload("ti/com/ti/form/com/form-field/form-field-props.mjs", t);
}(), Ti.Preload("ti/com/ti/form/com/form-field/form-field.html", '<div class="form-field"\n  :class="TopClass"\n  :style="ConStyle"\n  v-ti-activable>\n  \x3c!--========================================\n    Field Name\n  --\x3e\n  <div \n    v-if="isShowTitle"\n      class="field-name"\n      :title="StatusText">\n        \x3c!--Status Icon--\x3e\n        <span \n          v-if="StatusIcon"\n            class="name-status">\n            <ti-icon :value="StatusIcon"/>\n        </span>\n        \x3c!--Title Text--\x3e\n        <span class="name-title">{{TheTitle|i18n}}</span>\n        \x3c!--Field Icon--\x3e\n        <span \n          v-if="isShowIcon" \n            class="name-icon">\n            <ti-icon :value="icon"/>\n        </span>\n  </div>\n  \x3c!--========================================\n    Field Value\n  --\x3e\n  <div class="field-value"\n    :style="ConStyle">\n    \x3c!--\n      UI Component\n    --\x3e\n    <div v-if="isComReady"\n      class="field-component"\n      :class="ComClass"\n      :style="ComStyle">\n      <component \n        :is="myComType"\n          v-bind="myComConf"\n          @change="OnChange"/>\n    </div>\n    \x3c!--\n      Tips\n    --\x3e\n    <div \n      v-if="isShowTip"\n        class="field-tip">{{tip|i18n}}</div>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        isComReady: !1,
        myComType: null,
        myComConf: null
      };
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "no-status-icons": !this.hasStatusIcons,
          "has-status-icons": this.hasStatusIcons,
          "is-disabled": this.disabled
        }, "as-".concat(this.viewportMode), this.StatusType ? "is-".concat(this.StatusType) : null);
      },
      isShowTitle: function isShowTitle() {
        return !Ti.Util.isNil(this.title);
      },
      isShowIcon: function isShowIcon() {
        return !Ti.Util.isNil(this.icon);
      },
      isShowTip: function isShowTip() {
        return !Ti.Util.isNil(this.tip);
      },
      hasStatusIcons: function hasStatusIcons() {
        return !_.isEmpty(this.statusIcons);
      },
      isNumberType: function isNumberType() {
        return /^(Number|Integer|Float)$/.test(this.type);
      },
      UniqName: function UniqName() {
        return _.isArray(this.name) ? this.name.join("-") : this.name;
      },
      TheTitle: function TheTitle() {
        return this.title || this.UniqName;
      },
      ComClass: function ComClass() {
        var t = "auto" == this.width,
            e = "full" == this.width,
            i = "stretch" == this.width;
        return {
          "is-size-auto": t,
          "is-size-full": e,
          "is-size-stretch": i,
          "is-size-fixed": !(t || e || i || Ti.Util.isNil(this.width))
        };
      },
      ConStyle: function ConStyle() {
        return Ti.Css.toStyle({
          height: this.height
        });
      },
      ComStyle: function ComStyle() {
        var t = {
          height: this.height
        };
        return this.width && !/^(auto|stretch)$/.test(this.width) && (t.width = Ti.Css.toSize(this.width)), Ti.Css.toStyle(t);
      },
      TheDisplay: function TheDisplay() {
        if (this.display) return !_.isBoolean(this.display) && this.display ? this.evalFieldDisplayItem(this.display, {
          defaultKey: this.name
        }) : {
          comType: "ti-label",
          comConf: {}
        };
      },
      CurrentDisplayItem: function CurrentDisplayItem() {
        var t = this.TheDisplay || {};
        return !this.isActived && this.display || (t = {
          defaultAs: this.defaultAs,
          comType: this.comType,
          comConf: this.comConf
        }), _.defaults(_.cloneDeep(t), {
          comType: "ti-label",
          key: this.name,
          type: this.type,
          dict: this.dict,
          transformer: this.transformer
        });
      },
      Status: function Status() {
        return _.get(this.fieldStatus, this.uniqKey);
      },
      StatusType: function StatusType() {
        return _.get(this.Status, "type");
      },
      StatusText: function StatusText() {
        return _.get(this.Status, "text");
      },
      StatusIcon: function StatusIcon() {
        if (this.Status && this.hasStatusIcons) return this.statusIcons[this.Status.type];
      }
    },
    methods: {
      __before_bubble: function __before_bubble(_ref31) {
        var t = _ref31.name,
            e = _ref31.args;
        if (this.name) return {
          name: "".concat(this.UniqName, "::").concat(t),
          args: e
        };
      },
      OnChange: function OnChange(t) {
        var e = t;

        try {
          e = this.serializer(t);
        } catch (e) {
          return void this.$notify("invalid", {
            errMessage: "" + e,
            name: this.name,
            value: t
          });
        }

        e = this.evalInputValue(e), this.checkEquals && _.isEqual(e, this.fieldValue) || this.$notify("change", {
          name: this.name,
          value: e
        });
      },
      evalTheCom: function evalTheCom() {
        var _this78 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee40() {
          var t;
          return regeneratorRuntime.wrap(function _callee40$(_context40) {
            while (1) {
              switch (_context40.prev = _context40.next) {
                case 0:
                  _context40.next = 2;
                  return _this78.evalDataForFieldDisplayItem({
                    itemData: _this78.data,
                    displayItem: _this78.CurrentDisplayItem,
                    vars: {
                      isActived: _this78.isActived,
                      disabled: _this78.disabled
                    },
                    autoIgnoreNil: !1,
                    autoIgnoreBlank: !1,
                    autoValue: _this78.autoValue
                  });

                case 2:
                  t = _context40.sent;

                  if (t) {
                    _context40.next = 5;
                    break;
                  }

                  return _context40.abrupt("return", (_this78.myComType = void 0, _this78.myComConf = void 0, void (_this78.isComReady = !1)));

                case 5:
                  _this78.myComType = t.comType, _this78.myComConf = t.comConf, _this78.isComReady = !0;

                case 6:
                case "end":
                  return _context40.stop();
              }
            }
          }, _callee40);
        }))();
      },
      evalInputValue: function evalInputValue(t) {
        return _.isUndefined(t) ? _.cloneDeep(Ti.Util.fallback(this.undefinedAs, this.defaultAs)) : _.isNull(t) ? _.cloneDeep(Ti.Util.fallback(this.nullAs, this.defaultAs, null)) : this.isNumberType && isNaN(t) ? _.cloneDeep(Ti.Util.fallback(this.nanAs, this.defaultAs, NaN)) : _.isEmpty(t) && _.isString(t) ? _.cloneDeep(Ti.Util.fallback(this.emptyAs, this.defaultAs, "")) : t;
      }
    },
    watch: {
      CurrentDisplayItem: "evalTheCom",
      data: {
        handler: "evalTheCom",
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/ti/form/com/form-field/form-field.mjs", t);
}(), Ti.Preload("ti/com/ti/form/com/form-field/_com.json", {
  name: "ti-form-field",
  globally: !0,
  template: "./form-field.html",
  methods: "@com:ti/support/field_display.mjs",
  props: "./form-field-props.mjs",
  mixins: ["./form-field.mjs"]
}), function () {
  var t = {
    type: {
      type: String,
      "default": "Group"
    },
    icon: {
      type: String,
      "default": null
    },
    title: {
      type: String,
      "default": null
    },
    fields: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    data: {
      type: Object,
      "default": null
    },
    fieldStatus: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },
    statusIcons: {
      spinning: "fas-spinner fa-spin",
      error: "zmdi-alert-polygon",
      warn: "zmdi-alert-triangle",
      ok: "zmdi-check-circle"
    }
  };
  Ti.Preload("ti/com/ti/form/com/form-group/form-group-props.mjs", t);
}(), Ti.Preload("ti/com/ti/form/com/form-group/form-group.html", '<div class="form-group"\n  :class="topClass">\n  <div class="group-title">\n    <ti-icon\n      v-if="show.icon" \n      :value="icon"/>\n    <span\n      v-if="show.title"\n      class="name-title">{{title|i18n}}</span>\n  </div>\n  <div class="group-fields">\n      <ti-form-field v-for="fld in fields"\n        :key="fld.key"\n        v-bind="fld"\n        :data="data"\n        :field-status="fieldStatus"\n        :status-icons="statusIcons"/>\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    computed: {
      topClass: function topClass() {
        var t = ["as-".concat(this.viewportMode)];
        return this.className && t.push(this.className), t;
      },
      show: function show() {
        return {
          title: !!this.title,
          icon: !!this.icon
        };
      }
    }
  };
  Ti.Preload("ti/com/ti/form/com/form-group/form-group.mjs", t);
}(), Ti.Preload("ti/com/ti/form/com/form-group/_com.json", {
  name: "form-group",
  globally: !1,
  template: "./form-group.html",
  props: "./form-group-props.mjs",
  mixins: ["./form-group.mjs"]
}), function () {
  var t = {
    data: {
      type: Object,
      "default": void 0
    },
    fields: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    fieldStatus: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },
    onlyFields: {
      type: Boolean,
      "default": !0
    },
    fixed: {
      type: Object,
      "default": void 0
    },
    keepTabIndexBy: {
      type: String,
      "default": void 0
    },
    defaultComType: {
      type: String,
      "default": "ti-label"
    },
    autoShowBlank: {
      type: Boolean,
      "default": void 0
    },
    currentTab: {
      type: Number,
      "default": 0
    },
    adjustDelay: {
      type: Number,
      "default": 0
    },
    mode: {
      type: String,
      "default": "all",
      validator: function validator(t) {
        return /^(all|tab)$/.test(t);
      }
    },
    tabAt: {
      type: String,
      "default": "top-center",
      validator: function validator(t) {
        return /^(top|bottom)-(left|center|right)$/.test(t);
      }
    },
    blankAs: {
      type: Object,
      "default": function _default() {
        return {
          icon: "fas-dna",
          "default": void 0
        };
      }
    },
    icon: {
      type: String,
      "default": void 0
    },
    title: {
      type: String,
      "default": void 0
    },
    statusIcons: {
      type: Object,
      "default": function _default() {
        return {
          spinning: "fas-spinner fa-spin",
          error: "zmdi-alert-polygon",
          warn: "zmdi-alert-triangle",
          ok: "zmdi-check-circle"
        };
      }
    },
    spacing: {
      type: String,
      "default": "comfy",
      validator: function validator(t) {
        return /^(comfy|tiny)$/.test(t);
      }
    },
    width: {
      type: [Number, String],
      "default": void 0
    },
    height: {
      type: [Number, String],
      "default": void 0
    }
  };
  Ti.Preload("ti/com/ti/form/ti-form-props.mjs", t);
}(), Ti.Preload("ti/com/ti/form/ti-form.html", '<div class="ti-form"\n  :class="TopClass"\n  :style="TopStyle"\n  v-ti-activable>\n  <template v-if="hasData || !isAutoShowBlank">\n    \x3c!--\n      Form Header\n    --\x3e\n    <header class="form-header" v-if="hasHeader">\n      <span v-if="icon"\n        class="it-icon"><ti-icon :value="icon"/></span>\n      <span v-if="title"\n        class="it-text">{{title|i18n}}</span>\n    </header>\n    \x3c!--\n      Tabs for display:"tab"\n    --\x3e\n    <div class="form-tab" v-if="isTabMode">\n      <ul>\n        <li v-for="tab in TabItems" \n          :class="tab.className"\n          @click.left="OnClickTab(tab)">\n          <ti-icon \n            class="tab-icon" v-if="tab.icon" :value="tab.icon"/>\n          <span \n            class="tab-text" v-if="tab.title">{{tab.title|i18n}}</span>\n        </li>\n      </ul>\n    </div>\n    \x3c!--\n      Form Fields\n    --\x3e\n    <div class="form-body" :class="FormBodyClass">\n      <template v-for="fld in FieldsInCurrentTab">\n        \x3c!--\n          For Group\n        --\x3e\n        <form-group v-if="\'Group\' == fld.type"\n          v-bind="fld"\n          :data="data"\n          :field-status="fieldStatus"\n          :status-icons="statusIcons"\n          @change="OnFieldChange"/>\n        \x3c!--\n          For field\n        --\x3e\n        <ti-form-field v-else\n          :key="fld.key"\n          v-bind="fld"\n          :data="data"\n          :field-status="fieldStatus"\n          :status-icons="statusIcons"\n          @change="OnFieldChange"/>\n      </template>\n    </div>\n  </template>\n  \x3c!--\n    Show Blank\n  --\x3e\n  <ti-loading \n    v-else\n      class="nil-data as-big-mask"\n      v-bind="blankAs"/>\n</div>'), function () {
  var t = {
    model: {
      prop: "data",
      event: "change"
    },
    data: function data() {
      return {
        myKeysInFields: [],
        currentTabIndex: 0
      };
    },
    computed: {
      TopClass: function TopClass() {
        var _this$getTopClass;

        return this.getTopClass((_this$getTopClass = {
          "is-tab-mode": this.isTabMode,
          "is-all-mode": this.isAllMode
        }, _defineProperty(_this$getTopClass, "tab-at-".concat(this.tabAt), this.isTabMode), _defineProperty(_this$getTopClass, "tab-at-".concat(this.TheTabAtX), this.isTabMode), _defineProperty(_this$getTopClass, "tab-at-".concat(this.TheTabAtY), this.isTabMode), _this$getTopClass), "as-".concat(this.viewportMode), "as-spacing-".concat(this.spacing || "comfy"));
      },
      TopStyle: function TopStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      hasHeader: function hasHeader() {
        return !(!this.title && !this.icon);
      },
      hasData: function hasData() {
        return !Ti.Util.isNil(this.data);
      },
      isTabMode: function isTabMode() {
        return "tab" == this.mode;
      },
      isAllMode: function isAllMode() {
        return "all" == (this.mode || "all");
      },
      isAutoShowBlank: function isAutoShowBlank() {
        return Ti.Util.fallback(this.autoShowBlank, !1);
      },
      TheTabAt: function TheTabAt() {
        return this.tabAt.split("-");
      },
      TheTabAtX: function TheTabAtX() {
        return this.TheTabAt[1];
      },
      TheTabAtY: function TheTabAtY() {
        return this.TheTabAt[0];
      },
      TheFields: function TheFields() {
        var _this79 = this;

        var t = [],
            e = [];
        return _.forEach(this.fields, function (i, n) {
          var a = _this79.evalFormField(i, [n]);

          a && (t.push(a), a.disabled || ("Group" == a.type ? _.forEach(a.fields, function (_ref32) {
            var t = _ref32.disabled,
                i = _ref32.name;
            t || e.push(i);
          }) : e.push(a.name)));
        }), this.myKeysInFields = _.flattenDeep(e), t;
      },
      TabList: function TabList() {
        var t = [],
            e = [];

        if (this.isTabMode) {
          var _iterator20 = _createForOfIteratorHelper(this.TheFields),
              _step20;

          try {
            for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {
              var i = _step20.value;
              "Group" == i.type ? t.push(i) : e.push(i);
            }
          } catch (err) {
            _iterator20.e(err);
          } finally {
            _iterator20.f();
          }

          _.isEmpty(e) || t.push({
            type: "Group",
            title: "i18n:others",
            fields: e
          });
        }

        return t;
      },
      TabItems: function TabItems() {
        var _this80 = this;

        var t = [];
        return _.forEach(this.TabList, function (e, i) {
          var n = i == _this80.currentTabIndex;
          t.push(_.assign({}, e, {
            index: i,
            isCurrent: n,
            className: {
              "is-current": n
            }
          }));
        }), t;
      },
      CurrentTab: function CurrentTab() {
        var _iterator21 = _createForOfIteratorHelper(this.TabItems),
            _step21;

        try {
          for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {
            var _t30 = _step21.value;
            if (_t30.isCurrent) return _t30;
          }
        } catch (err) {
          _iterator21.e(err);
        } finally {
          _iterator21.f();
        }
      },
      FormBodyClass: function FormBodyClass() {
        if (this.CurrentTab) return "tab-body-".concat(this.CurrentTab.index);
      },
      FieldsInCurrentTab: function FieldsInCurrentTab() {
        return this.isTabMode ? this.CurrentTab ? this.CurrentTab.fields || [] : [] : this.TheFields;
      },
      TheData: function TheData() {
        return this.data ? this.onlyFields ? _.pick(this.data, this.myKeysInFields) : this.data : {};
      }
    },
    methods: {
      OnClickTab: function OnClickTab(t) {
        this.currentTabIndex = t.index, this.$notify("tab:change", t);
      },
      OnFieldChange: function OnFieldChange() {
        var _this81 = this;

        var _ref33 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref33.name,
            e = _ref33.value;

        this.$notify("field:change", {
          name: t,
          value: e
        }), this.$nextTick(function () {
          var i = _this81.getData({
            name: t,
            value: e
          });

          _this81.$notify("change", i);
        });
      },
      getData: function getData() {
        var _ref34 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref34.name,
            e = _ref34.value;

        var i = _.cloneDeep(this.TheData);

        if (t && _.isString(t)) {
          if (".." == t) _.assign(i, e);else {
            if (/^'[^']+'$/.test(t)) return;

            _.set(i, t, e);
          }
        } else if (_.isArray(t)) {
          var n = {};

          var _iterator22 = _createForOfIteratorHelper(t),
              _step22;

          try {
            for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {
              var _i5 = _step22.value;
              n[_i5] = _.get(e, _i5);
            }
          } catch (err) {
            _iterator22.e(err);
          } finally {
            _iterator22.f();
          }

          _.assign(i, n);
        }
        return this.fixed && _.assign(i, fixed), i;
      },
      isGroup: function isGroup(t) {
        return "Group" == t.type || _.isArray(t.fields);
      },
      evalFormField: function evalFormField() {
        var _this82 = this;

        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        if (t.hidden && Ti.Validate.match(this.data, t.hidden)) return;
        var i = !1;
        t.disabled && (i = Ti.Validate.match(this.data, t.disabled));
        var n = Ti.Util.anyKey(t.name || e, "ti-fld");

        if (this.isGroup(t)) {
          var a = {
            disabled: i,
            type: "Group",
            key: n,
            className: t.className,
            icon: t.icon,
            title: t.title,
            fields: []
          };
          return _.forEach(t.fields, function (t, i) {
            var n = _this82.evalFormField(t, [].concat(_toConsumableArray(e), [i]));

            n && a.fields.push(n);
          }), _.isEmpty(a.fields) ? null : a;
        }

        if (t.name) {
          var _e17 = _.defaults(_.omit(t, "disabled"), {
            type: "String",
            comType: this.defaultComType,
            disabled: i
          });

          if (_e17.uniqKey = _.concat(_e17.name).join("-"), !_e17.serializer) {
            var _t31 = Ti.Types.getFuncByType(_e17.type || "String", "serializer");

            _e17.serializer = "Ti.Types.".concat(_t31);
          }

          if (!_e17.transformer) {
            var _t32 = Ti.Types.getFuncByType(_e17.type || "String", "transformer");

            _e17.transformer = "Ti.Types.".concat(_t32);
          }

          var _n7 = {
            context: this,
            partial: "right"
          };
          return _e17.serializer = Ti.Util.genInvoking(_e17.serializer, _n7), _e17.transformer = Ti.Util.genInvoking(_e17.transformer, _n7), _e17;
        }
      },
      __adjust_fields_width: function __adjust_fields_width() {
        if (!_.isElement(this.$el)) return;
        var t = Ti.Dom.findAll(".form-field > .field-name", this.$el);

        var _iterator23 = _createForOfIteratorHelper(t),
            _step23;

        try {
          for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {
            var _e18 = _step23.value;
            Ti.Dom.setStyle(_e18, {
              width: ""
            });
          }
        } catch (err) {
          _iterator23.e(err);
        } finally {
          _iterator23.f();
        }

        var e = 0;

        var _iterator24 = _createForOfIteratorHelper(t),
            _step24;

        try {
          for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {
            var i = _step24.value;

            var _t33 = Ti.Rects.createBy(i);

            e = Math.ceil(Math.max(_t33.width, e));
          }
        } catch (err) {
          _iterator24.e(err);
        } finally {
          _iterator24.f();
        }

        var _iterator25 = _createForOfIteratorHelper(t),
            _step25;

        try {
          for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {
            var _i6 = _step25.value;
            Ti.Dom.setStyle(_i6, {
              width: e
            });
          }
        } catch (err) {
          _iterator25.e(err);
        } finally {
          _iterator25.f();
        }
      },
      adjustFieldsWidth: function adjustFieldsWidth() {
        var _this83 = this;

        this.adjustDelay > 0 ? _.delay(function () {
          _this83.__adjust_fields_width();
        }, this.adjustDelay) : this.$nextTick(function () {
          _this83.__adjust_fields_width();
        });
      },
      __ti_shortcut: function __ti_shortcut(t) {
        var _this84 = this;

        "ENTER" == t && _.delay(function () {
          _this84.$notify("submit");
        }, 100);
      }
    },
    watch: {
      TheFields: function TheFields() {
        this.adjustFieldsWidth();
      },
      currentTab: function currentTab(t) {
        this.currentTabIndex = t;
      },
      currentTabIndex: function currentTabIndex(t) {
        this.keepTabIndexBy && Ti.Storage.session.set(this.keepTabIndexBy, t), this.adjustFieldsWidth();
      }
    },
    created: function created() {
      var _this85 = this;

      this.__debounce_adjust_fields_width = _.debounce(function () {
        _this85.__adjust_fields_width();
      }, 500);
    },
    mounted: function mounted() {
      var _this86 = this;

      this.currentTabIndex = Ti.Storage.session.getInt(this.keepTabIndexBy, this.currentTab), Ti.Viewport.watch(this, {
        resize: function resize() {
          _this86.__debounce_adjust_fields_width();
        }
      }), this.adjustFieldsWidth();
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Viewport.unwatch(this);
    }
  };
  Ti.Preload("ti/com/ti/form/ti-form.mjs", t);
}(), Ti.Preload("ti/com/ti/form/_com.json", {
  name: "ti-form",
  globally: !0,
  template: "./ti-form.html",
  methods: "@com:ti/support/field_display.mjs",
  props: "./ti-form-props.mjs",
  mixins: ["./ti-form.mjs"],
  components: ["./com/form-group", "./com/form-field", "@com:ti/input", "@com:ti/input/num", "@com:ti/input/tags", "@com:ti/input/color", "@com:ti/input/icon", "@com:ti/input/date", "@com:ti/input/time", "@com:ti/input/timerange", "@com:ti/input/month", "@com:ti/input/datetime", "@com:ti/input/daterange", "@com:ti/input/text", "@com:ti/combo/input", "@com:ti/combo/multi-input", "@com:ti/label", "@com:ti/toggle", "@com:ti/switcher", "@com:ti/droplist"]
}), Ti.Preload("ti/com/ti/form/_hmaker.json", {
  icon: "im-task-o",
  title: "i18n:com-form",
  scenes: ["desktop", "tablet"],
  editComType: "hmaker-edit-com-form",
  editComConf: {
    value: "=comConf"
  }
}), Ti.Preload("ti/com/ti/gui/block/ti-gui-block.html", '<div class="ti-gui-block" \n  :class="TopClass"\n  :style="TopStyle">\n  \x3c!--\n    Header\n  --\x3e\n  <div class="block-head" v-if="isShowHeader">\n    \x3c!--Icon--\x3e\n    <div class="as-icon" v-if="icon">\n      <ti-icon :value="icon"/>\n    </div>\n    \x3c!--Title--\x3e\n    <div class="as-title">\n      <span v-if="title">{{title|i18n}}</span>\n    </div>\n    \x3c!--Actions--\x3e\n    <div class="as-actions" v-if="hasActions">\n      <ti-actionbar \n        :items="actions"\n        :status="actionStatus"/>\n    </div>\n  </div>\n  \x3c!--\n    Content\n  --\x3e\n  <div class="block-main" v-if="TheCom">\n    <div class="block-main-con"\n      :class="MainConClass">\n      <component \n        :class="MainComponentClass"\n        :is="TheCom.comType"\n        v-bind="TheCom.comConf"/>\n    </div>\n  </div>\n  \x3c!--Blank--\x3e\n  </div>'), function () {
  var t = {
    inject: ["$gui"],
    props: {
      type: {
        type: String,
        "default": null,
        validator: function validator(t) {
          return Ti.Util.isNil(t) || /^(cols|rows|tabs)$/.test(t);
        }
      },
      title: {
        type: String,
        "default": null
      },
      icon: {
        type: [String, Object],
        "default": null
      },
      hideTitle: {
        type: Boolean,
        "default": !1
      },
      actions: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      actionStatus: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      name: {
        type: String,
        "default": null
      },
      blocks: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      comClass: {
        type: String,
        "default": void 0
      },
      body: {
        type: [String, Object],
        "default": null
      },
      embedIn: {
        type: String,
        "default": null,
        validator: function validator(t) {
          return /^(panel|rows|cols|tabs)$/.test(t);
        }
      },
      size: {
        type: [String, Number],
        "default": null
      },
      overflow: {
        type: String,
        "default": void 0,
        validator: function validator(t) {
          return _.isUndefined(t) || /^(auto|none|fill|cover)$/.test(t);
        }
      },
      flex: {
        type: String,
        "default": void 0,
        validator: function validator(t) {
          return _.isUndefined(t) || /^(nil|auto|grow|shrink|both|none)$/.test(t);
        }
      },
      schema: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      shown: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      captureEvents: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      tabAt: void 0,
      adjustable: void 0,
      border: void 0
    },
    computed: {
      TopClass: function TopClass() {
        var _this$getTopClass2;

        return this.getTopClass((_this$getTopClass2 = {}, _defineProperty(_this$getTopClass2, "gui-block-".concat(this.name), !!this.name), _defineProperty(_this$getTopClass2, "is-show-header", this.isShowHeader), _defineProperty(_this$getTopClass2, "is-hide-header", !this.isShowHeader), _defineProperty(_this$getTopClass2, "ti-fill-parent", /^(tabs|panel)$/.test(this.embedIn)), _this$getTopClass2), "is-flex-".concat(this.FlexName));
      },
      TopStyle: function TopStyle() {
        var _this87 = this;

        return Ti.Css.toStyle({
          rows: function rows() {
            return {
              height: _this87.BlockSize
            };
          },
          cols: function cols() {
            return {
              width: _this87.BlockSize
            };
          },
          tabs: function tabs() {
            return {};
          },
          panel: function panel() {
            return {};
          }
        }[this.embedIn]());
      },
      MainConClass: function MainConClass() {
        if (!this.isFlexNil) return {
          "fill-parent": "fill" == this.TheOverflow,
          "cover-parent": "cover" == this.TheOverflow
        };
      },
      MainComponentClass: function MainComponentClass() {
        return Ti.Css.mergeClassName(this.$gui.defaultComClass, this.comClass);
      },
      TheOverflow: function TheOverflow() {
        var t = this.overflow || this.$gui.defaultOverflow || "auto";

        if ("auto" == t) {
          if (this.isFlexNone) return "fill";
          if (/^(both|shrink)$/.test(this.FlexName)) return "cover";
        }

        return t;
      },
      BlockSize: function BlockSize() {
        var t = this.size;
        return /^(auto|stretch)$/.test(t) ? null : t;
      },
      FlexName: function FlexName() {
        var t = this.flex || this.$gui.defaultFlex || "auto";
        return "auto" == t ? "stretch" == this.size || Ti.Util.isNil(this.size) ? "both" : "none" : t || "both";
      },
      isFlexNil: function isFlexNil() {
        return "nil" == this.FlexName;
      },
      isFlexNone: function isFlexNone() {
        return "none" == this.FlexName;
      },
      isShowHeader: function isShowHeader() {
        return !this.hideTitle && "tabs" != this.embedIn && !(!this.title && !this.hasActions);
      },
      hasActions: function hasActions() {
        return !_.isEmpty(this.actions);
      },
      TheCom: function TheCom() {
        if (this.body) {
          var _t34 = _.isString(this.body) ? this.schema[this.body] : this.body;

          if (_t34) {
            var e = this.schema[_t34["extends"]],
                i = _.omit(_t34, "extends");

            return _t34 = _.merge({}, e, i), _.defaults(_t34, {
              comType: "ti-label",
              comConf: {}
            });
          }
        }

        if (!_.isEmpty(this.blocks)) {
          return {
            comType: "ti-gui-".concat(this.type || "cols"),
            comConf: {
              tabAt: this.tabAt,
              border: this.border,
              adjustable: this.adjustable,
              blocks: this.blocks,
              schema: this.schema,
              actionStatus: this.actionStatus,
              shown: this.shown,
              defaultFlex: this.defaultFlex
            }
          };
        }
      }
    },
    methods: {
      __before_bubble: function __before_bubble(_ref35) {
        var t = _ref35.name,
            e = _ref35.args;
        if (this.name) return {
          name: "".concat(this.name, "::").concat(t),
          args: e
        };
      }
    }
  };
  Ti.Preload("ti/com/ti/gui/block/ti-gui-block.mjs", t);
}(), Ti.Preload("ti/com/ti/gui/block/_com.json", {
  name: "ti-gui-block",
  globally: !0,
  template: "./ti-gui-block.html",
  mixins: ["./ti-gui-block.mjs"]
}), Ti.Preload("ti/com/ti/gui/cols/ti-gui-cols.html", '<div class="ti-gui-cols" :class="topClass">\n  <template v-if="hasBlocks">\n    <template v-for="(block, index) in blocks">\n      <ti-gui-block v-if="!block.hide"\n        :key="index"\n        embed-in="cols"\n        v-bind="block"\n        :schema="schema"\n        :action-status="actionStatus"\n        :shown="shown"/>\n      </template>\n  </template>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      blocks: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      adjustable: {
        type: Boolean,
        "default": !0
      },
      border: {
        type: Boolean,
        "default": !1
      },
      schema: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      actionStatus: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      shown: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName({
          "is-adjustable": this.adjustable,
          "show-border": this.border
        }, this.className);
      },
      hasBlocks: function hasBlocks() {
        return !_.isEmpty(this.blocks);
      }
    },
    methods: {}
  };
  Ti.Preload("ti/com/ti/gui/cols/ti-gui-cols.mjs", t);
}(), Ti.Preload("ti/com/ti/gui/cols/_com.json", {
  name: "ti-gui-cols",
  globally: !0,
  template: "./ti-gui-cols.html",
  mixins: ["./ti-gui-cols.mjs"],
  components: ["@com:ti/gui/block"]
}), Ti.Preload("ti/com/ti/gui/panel/ti-gui-panel.html", '<div class="ti-gui-panel"\n  :class="TopClass"\n  @click.left="OnClickMask">\n  <div class="panel-con"\n    :style="ConStyle"\n    @click.left.stop>\n    \x3c!--\n      Block\n    --\x3e\n    <ti-gui-block\n      embed-in="panel"\n      flex="none"\n      :type="type"\n      :title="title"\n      :icon="icon"\n      :hide-title="hideTitle"\n      :actions="actions"\n      :action-status="actionStatus"\n      :name="name"\n      :blocks="blocks"\n      :body="body"\n      :overflow="overflow"\n      :schema="schema"\n      :shown="shown"\n      :capture-events="captureEvents"/>\n    \x3c!--\n      Closer\n    --\x3e\n    <div\n      v-if="hasCloser"\n        class="panel-closer"\n        :class="CloserClass">\n        <ti-icon\n          value="zmdi-close"\n          @click.native="OnClose"/>\n    </div>\n  </div>\n</div>'), function () {
  var t = {
    inject: ["$gui"],
    props: {
      captureEvents: void 0,
      title: {
        type: String,
        "default": null
      },
      icon: {
        type: [String, Object],
        "default": null
      },
      hideTitle: {
        type: Boolean,
        "default": !1
      },
      actions: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      actionStatus: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      name: {
        type: String,
        "default": null
      },
      type: {
        type: String,
        "default": null,
        validator: function validator(t) {
          return Ti.Util.isNil(t) || /^(cols|rows|tabs)$/.test(t);
        }
      },
      blocks: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      body: {
        type: [String, Object],
        "default": null
      },
      adjustable: {
        type: [Boolean, String],
        "default": !0,
        validator: function validator(t) {
          return _.isBoolean(t) || /^(x|y)$/.test(t);
        }
      },
      overflow: {
        type: String,
        "default": void 0
      },
      width: {
        type: [String, Number],
        "default": -1
      },
      height: {
        type: [String, Number],
        "default": -1
      },
      viewportWidth: {
        type: [String, Number],
        "default": 0
      },
      viewportHeight: {
        type: [String, Number],
        "default": 0
      },
      position: {
        type: String,
        "default": "center",
        validator: function validator(t) {
          return /^(left|right|top|bottom|center)$/.test(t) || /^((left|right)-top|bottom-(left|right))$/.test(t);
        }
      },
      fixed: {
        type: Boolean,
        "default": !1
      },
      closer: {
        type: String,
        "default": "default",
        validator: function validator(t) {
          return _.isNull(t) || /^(default|bottom|top|left|right)$/.test(t);
        }
      },
      mask: {
        type: Boolean,
        "default": !1
      },
      transparent: {
        type: Boolean,
        "default": !1
      },
      clickMaskToClose: {
        type: Boolean,
        "default": !1
      },
      schema: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      shown: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "show-mask": this.mask,
          "no-mask": !this.mask,
          "is-bg-transparent": this.transparent,
          "is-bg-opaque": !this.transparent,
          "is-closer-default": this.isCloserDefault,
          "is-fixed": this.fixed
        }, "at-".concat(this.position));
      },
      ConStyle: function ConStyle() {
        var t = Ti.Css.toPixel(this.width, this.viewportWidth, this.width),
            e = Ti.Css.toPixel(this.height, this.viewportHeight, this.height);
        return Ti.Css.toStyle({
          width: t,
          height: e
        });
      },
      hasCloser: function hasCloser() {
        return !!this.closer;
      },
      isCloserDefault: function isCloserDefault() {
        return !0 === this.closer || "default" == this.closer;
      },
      CloserClass: function CloserClass() {
        return Ti.Css.mergeClassName(_defineProperty({
          "as-lamp-cord": !this.isCloserDefault,
          "as-default": this.isCloserDefault
        }, "at-".concat(this.closer), !this.isCloserDefault));
      }
    },
    methods: {
      OnClose: function OnClose() {
        this.$gui.OnBlockHide(this.name);
      },
      OnClickMask: function OnClickMask() {
        this.clickMaskToClose && this.$gui.OnBlockHide(this.name);
      }
    }
  };
  Ti.Preload("ti/com/ti/gui/panel/ti-gui-panel.mjs", t);
}(), Ti.Preload("ti/com/ti/gui/panel/_com.json", {
  name: "ti-gui-panel",
  globally: !0,
  template: "./ti-gui-panel.html",
  mixins: ["./ti-gui-panel.mjs"],
  components: ["@com:ti/gui/block"]
}), Ti.Preload("ti/com/ti/gui/rows/ti-gui-rows.html", '<div class="ti-gui-rows" :class="topClass">\n  <template v-if="hasBlocks">\n    <template v-for="(block, index) in blocks">\n      <ti-gui-block v-if="!block.hide"\n        :key="index"\n        embed-in="rows"\n        v-bind="block"\n        :schema="schema"\n        :action-status="actionStatus"\n        :shown="shown"/>\n    </template>\n  </template>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      blocks: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      adjustable: {
        type: Boolean,
        "default": !0
      },
      border: {
        type: Boolean,
        "default": !1
      },
      schema: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      actionStatus: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      shown: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName({
          "is-adjustable": this.adjustable,
          "show-border": this.border
        }, this.className);
      },
      hasBlocks: function hasBlocks() {
        return !_.isEmpty(this.blocks);
      }
    },
    methods: {}
  };
  Ti.Preload("ti/com/ti/gui/rows/ti-gui-rows.mjs", t);
}(), Ti.Preload("ti/com/ti/gui/rows/_com.json", {
  name: "ti-gui-rows",
  globally: !0,
  template: "./ti-gui-rows.html",
  mixins: ["./ti-gui-rows.mjs"],
  components: ["@com:ti/gui/block"]
}), Ti.Preload("ti/com/ti/gui/tabs/ti-gui-tabs.html", '<div class="ti-gui-tabs" :class="TopClass">\n  \x3c!--\n    Tab title bar\n  --\x3e\n  <header :class="TabClass">\n    <ul>\n      <li v-for="it in TabItems"\n        :key="it.key"\n        :class="it.className"\n        @click="OnSetCurrentTabItem(it)">\n        \x3c!--Icon--\x3e\n        <ti-icon\n          v-if="it.icon"\n            class="it-icon"\n            :value="it.icon"/>\n        \x3c!--Text--\x3e\n        <span class="it-text">{{it.title|i18n}}</span>\n      </li>\n    </ul>\n  </header>\n  \x3c!--\n    Current Block\n  --\x3e\n  <section v-if="CurrentBlock">\n    <ti-gui-block \n      embed-in="tabs"\n      v-bind="CurrentBlock"\n      :action-status="actionStatus"\n      :schema="schema"\n      :shown="shown"/>\n  </section>\n</div>'), function () {
  var t = {
    inject: ["$gui"],
    data: function data() {
      return {
        myCurrentTab: 0
      };
    },
    props: {
      tabAt: {
        type: String,
        "default": "top-left",
        validator: function validator(t) {
          return /^(top|bottom)-(left|center|right)$/.test(t);
        }
      },
      blocks: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      schema: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      actionStatus: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      shown: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass("at-".concat(this.TheTabAt[0]));
      },
      TheTabAt: function TheTabAt() {
        return this.tabAt.split("-");
      },
      TabClass: function TabClass() {
        return "as-".concat(this.TheTabAt[1]);
      },
      BlockWrapList: function BlockWrapList() {
        var t = [];

        for (var e = 0; e < this.blocks.length; e++) {
          var i = this.blocks[e],
              n = i.name || "tab-".concat(e);
          t.push({
            index: e,
            key: n,
            block: i
          });
        }

        return t;
      },
      TabItems: function TabItems() {
        var t = [];

        var _iterator26 = _createForOfIteratorHelper(this.BlockWrapList),
            _step26;

        try {
          for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {
            var e = _step26.value;
            var i = this.myCurrentTab == e.key,
                n = {
              current: i,
              key: e.key,
              index: e.index,
              name: e.block.name,
              icon: e.block.icon,
              title: e.block.title,
              className: {
                "is-current": i
              }
            };
            n.icon || n.title || (n.title = Ti.Util.fallback(n.name, n.key)), t.push(n);
          }
        } catch (err) {
          _iterator26.e(err);
        } finally {
          _iterator26.f();
        }

        return t;
      },
      CurrentTabItem: function CurrentTabItem() {
        var _iterator27 = _createForOfIteratorHelper(this.TabItems),
            _step27;

        try {
          for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {
            var _t35 = _step27.value;
            if (_t35.current) return _t35;
          }
        } catch (err) {
          _iterator27.e(err);
        } finally {
          _iterator27.f();
        }
      },
      CurrentBlock: function CurrentBlock() {
        var _iterator28 = _createForOfIteratorHelper(this.BlockWrapList),
            _step28;

        try {
          for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {
            var _t36 = _step28.value;
            if (this.myCurrentTab == _t36.key) return _t36.block;
          }
        } catch (err) {
          _iterator28.e(err);
        } finally {
          _iterator28.f();
        }
      }
    },
    methods: {
      OnSetCurrentTabItem: function OnSetCurrentTabItem(t) {
        var _this$$gui$OnBlockSho;

        this.$gui.OnBlockShownUpdate((_this$$gui$OnBlockSho = {}, _defineProperty(_this$$gui$OnBlockSho, t.key, !0), _defineProperty(_this$$gui$OnBlockSho, this.CurrentTabItem.key, !1), _this$$gui$OnBlockSho));
      },
      syncCurrentTabFromShown: function syncCurrentTabFromShown() {
        var _iterator29 = _createForOfIteratorHelper(this.BlockWrapList),
            _step29;

        try {
          for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {
            var _t37 = _step29.value;
            if (this.shown[_t37.key]) return void (this.myCurrentTab = _t37.key);
          }
        } catch (err) {
          _iterator29.e(err);
        } finally {
          _iterator29.f();
        }

        this.BlockWrapList.length > 0 && (this.myCurrentTab = this.BlockWrapList[0].key);
      }
    },
    watch: {
      shown: function shown() {
        this.syncCurrentTabFromShown();
      },
      blocks: function blocks() {
        this.syncCurrentTabFromShown();
      }
    },
    mounted: function mounted() {
      this.syncCurrentTabFromShown();
    }
  };
  Ti.Preload("ti/com/ti/gui/tabs/ti-gui-tabs.mjs", t);
}(), Ti.Preload("ti/com/ti/gui/tabs/_com.json", {
  name: "ti-gui-tabs",
  globally: !0,
  template: "./ti-gui-tabs.html",
  mixins: ["./ti-gui-tabs.mjs"],
  components: ["@com:ti/gui/block"]
}), function () {
  var t = {
    formatGuiBlock: function formatGuiBlock() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
      var n = ["at-".concat(t.position || "center")],
          a = e[t.name];
      _.isUndefined(a) && (a = !i), t.mask ? n.push("show-mask") : n.push("no-mask");
      var s = t.position ? "gui-panel-".concat(t.position) : null,
          o = ["className", "actionDisplayMode", "flex", "icon", "title", "actions", "name", "adjustable", "closer", "position", "overflow", "status"],
          l = {};
      !i || t.mask ? (o.push("width"), o.push("height")) : /^(left|right)$/.test(t.position) ? (o.push("height"), l.width = t.width) : /^(top|bottom)$/.test(t.position) ? (o.push("width"), l.height = t.height) : "center" == t.position ? (o.push("width"), o.push("height")) : (l.width = t.width, l.height = t.height);

      var r = _.pick(t, o);

      t.size && "stretch" != t.size && ("cols" == this.type ? r.width = t.size : "rows" == this.type && (r.height = t.size));
      var d, c;

      if (t.body) {
        var _e19 = t.body || {};

        if (_.isString(_e19)) {
          var _t38 = this.schema[_e19];

          if (_.isPlainObject(_t38)) {
            if ((_e19 = _t38)["extends"]) {
              var _t39 = this.schema[_e19["extends"]],
                  _i7 = _.omit(_e19, ["extends"]);

              _e19 = _.merge({}, _t39, _i7);
            }
          } else _e19 = {
            comType: _e19,
            comConf: {}
          };
        }

        d = _e19.comType || "ti-label", c = _e19.comConf || {
          value: t.name || "GUI"
        };
      } else _.isEmpty(t.blocks) || (d = "ti-gui", c = _.pick(t, ["type", "blocks", "adjustable", "border"]), _.defaults(c, {
        type: "cols",
        schema: this.schema,
        shown: this.shown
      }));

      return {
        className: n.join(" "),
        panelStyle: Ti.Css.toStyle(l),
        name: t.name,
        isShown: a,
        transName: s,
        info: r,
        comType: d,
        comConf: c
      };
    },
    getFormedBlockList: function getFormedBlockList() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
      var n = [];

      if (_.isArray(t)) {
        var _iterator30 = _createForOfIteratorHelper(t),
            _step30;

        try {
          for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {
            var a = _step30.value;

            var _t40 = this.formatGuiBlock(a, e, i);

            n.push(_t40);
          }
        } catch (err) {
          _iterator30.e(err);
        } finally {
          _iterator30.f();
        }
      }

      return n;
    },
    createGuiBlockShown: function createGuiBlockShown() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var e = arguments.length > 1 ? arguments[1] : undefined;
      var i = arguments.length > 2 ? arguments[2] : undefined;

      var n = _objectSpread({}, t);

      if (_.isString(e)) n[e] = i;else if (_.isArray(e)) {
        var _iterator31 = _createForOfIteratorHelper(e),
            _step31;

        try {
          for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {
            var _t41 = _step31.value;
            n[_t41] = i;
          }
        } catch (err) {
          _iterator31.e(err);
        } finally {
          _iterator31.f();
        }
      } else _.isPlainObject(e) && _.assign(n, e);
      return n;
    }
  };
  Ti.Preload("ti/com/ti/gui/ti-gui-methods.mjs", t);
}(), Ti.Preload("ti/com/ti/gui/ti-gui.html", '<div class="ti-gui" :class="TopClass">\n  \x3c!--===========================================\n    All normal layout\n  --\x3e\n  <div class="gui-con">\n    \x3c!--\n      Layout as rows\n    --\x3e\n    <ti-gui-rows v-if="isRowsLayout"\n      class="ti-fill-parent"\n      v-bind="TheLayout"\n      :schema="schema"\n      :shown="TheShown"\n      :default-flex="defaultFlex"\n      :action-status="actionStatus"/>\n    \x3c!--\n      Layout as cols\n    --\x3e\n    <ti-gui-cols v-else-if="isColsLayout"\n      class="ti-fill-parent"\n      v-bind="TheLayout"\n      :schema="schema"\n      :shown="TheShown"\n      :default-flex="defaultFlex"\n      :action-status="actionStatus"/>\n    \x3c!--\n      Layout as tabs\n    --\x3e\n    <ti-gui-tabs v-else-if="isTabsLayout"\n      class="ti-fill-parent"\n      v-bind="TheLayout"\n      :schema="schema"\n      :shown="TheShown"\n      :default-flex="defaultFlex"\n      :action-status="actionStatus"/>\n  </div>\n  \x3c!--===========================================\n    All float panels\n  --\x3e\n  <template v-for="pan in ThePanels">\n    <transition :name="pan.transName">\n      <ti-gui-panel\n        v-if="pan.visible"\n          :key="pan.key"\n          v-bind="pan.panel"\n          :viewport-width="myViewportWidth"\n          :viewport-height="myViewportHeight"\n          :schema="schema"\n          :shown="TheShown"\n          :default-flex="defaultFlex"\n          :action-status="actionStatus"/>\n    </transition>\n  </template>\n  \x3c!--===========================================\n    Loading\n  --\x3e\n  <div v-if="isLoading"\n    class="ti-mask-loading">\n    <ti-loading v-bind="TheLoading"/>\n  </div>\n</div>'), function () {
  var t = {
    provide: function provide() {
      return {
        $gui: this
      };
    },
    data: function data() {
      return {
        myShown: {},
        myViewportWidth: 0,
        myViewportHeight: 0
      };
    },
    props: {
      defaultFlex: {
        type: String,
        "default": void 0,
        validator: function validator(t) {
          return _.isUndefined(t) || /^(nil|auto|grow|shrink|both|none)$/.test(t);
        }
      },
      defaultOverflow: {
        type: String,
        "default": void 0,
        validator: function validator(t) {
          return _.isUndefined(t) || /^(auto|none|fill|cover)$/.test(t);
        }
      },
      defaultComClass: {
        type: String,
        "default": "ti-fill-parent"
      },
      layout: {
        type: Object,
        "default": function _default() {
          return {
            desktop: {},
            tablet: "desktop",
            phone: "desktop"
          };
        }
      },
      schema: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      keepShownTo: {
        type: String,
        "default": void 0
      },
      actionStatus: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      shown: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      canLoading: {
        type: Boolean,
        "default": !1
      },
      loadingAs: {
        type: [Boolean, Object],
        "default": void 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-loading": this.isLoading
        });
      },
      TheLayout: function TheLayout() {
        if (_.isEmpty(this.layout)) return {};
        if (/^(rows|cols|tabs)$/.test(this.layout.type)) return this.layout;
        var t = this.layout[this.viewportMode];
        return _.isString(t) && (t = this.layout[t]), _.isString(t) && (t = this.layout[t]), t || {};
      },
      isRowsLayout: function isRowsLayout() {
        return "rows" == this.TheLayout.type;
      },
      isColsLayout: function isColsLayout() {
        return "cols" == this.TheLayout.type;
      },
      isTabsLayout: function isTabsLayout() {
        return "tabs" == this.TheLayout.type;
      },
      ThePanels: function ThePanels() {
        var t = [];
        return this.joinThePanels(t, this.layout.panels, "G"), this.layout != this.TheLayout && this.joinThePanels(t, this.TheLayout.panels, this.viewportMode), t;
      },
      TheShown: function TheShown() {
        return this.keepShownTo ? this.myShown : this.shown;
      },
      isLoading: function isLoading() {
        return !(!this.canLoading || !this.loadingAs);
      },
      TheLoading: function TheLoading() {
        return _.isPlainObject(this.loadingAs) ? this.loadingAs : {};
      }
    },
    methods: {
      isShown: function isShown() {
        for (var _len2 = arguments.length, t = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          t[_key2] = arguments[_key2];
        }

        for (var _i8 = 0, _t42 = t; _i8 < _t42.length; _i8++) {
          var e = _t42[_i8];
          if (this.TheShown[e]) return !0;
        }

        return !1;
      },
      joinThePanels: function joinThePanels() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";
        if (_.isArray(e) && e.length > 0) for (var n = 0; n < e.length; n++) {
          var a = e[n],
              s = Ti.Util.fallback(a.position, "center"),
              o = t.length;
          t.push({
            index: o,
            visible: this.isShown(a.name),
            key: a.name || "panel-".concat(i, "-").concat(o),
            transName: "ti-gui-panel-".concat(s),
            panel: a
          });
        }
      },
      updateShown: function updateShown(t) {
        this.syncMyShown(t), this.persistMyStatus();
      },
      OnBlockShow: function OnBlockShow(t) {
        this.keepShownTo ? this.updateShown(_defineProperty({}, t, !0)) : this.$notify("block:show", t);
      },
      OnBlockHide: function OnBlockHide(t) {
        this.keepShownTo ? this.updateShown(_defineProperty({}, t, !1)) : this.$notify("block:hide", t);
      },
      OnBlockShownUpdate: function OnBlockShownUpdate(t) {
        this.keepShownTo ? this.updateShown(t) : this.$notify("block:shown", t);
      },
      syncMyShown: function syncMyShown() {
        var _ref36;

        for (var _len3 = arguments.length, t = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
          t[_key3] = arguments[_key3];
        }

        this.keepShownTo && (this.myShown = (_ref36 = _).assign.apply(_ref36, [{}, this.myShown].concat(t)));
      },
      persistMyStatus: function persistMyStatus() {
        if (this.keepShownTo) {
          var _t43 = _.omitBy(this.myShown, function (t) {
            return !t;
          });

          Ti.Storage.session.setObject(this.keepShownTo, _t43);
        }
      },
      loadMyStatus: function loadMyStatus() {
        if (this.keepShownTo) {
          var _t44 = Ti.Storage.session.getObject(this.keepShownTo);

          this.syncMyShown(this.shown, _t44);
        }
      },
      syncViewportMeasure: function syncViewportMeasure() {
        var t = Ti.Rects.createBy(this.$el);
        this.myViewportWidth = t.width, this.myViewportHeight = t.height;
      }
    },
    watch: {
      shown: function shown(t) {
        this.syncMyShown(t);
      }
    },
    mounted: function mounted() {
      var _this88 = this;

      Ti.Viewport.watch(this, {
        resize: _.debounce(function () {
          return _this88.syncViewportMeasure();
        }, 100)
      }), this.syncViewportMeasure(), this.loadMyStatus();
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Viewport.unwatch(this);
    }
  };
  Ti.Preload("ti/com/ti/gui/ti-gui.mjs", t);
}(), Ti.Preload("ti/com/ti/gui/_com.json", {
  name: "ti-gui",
  globally: !0,
  template: "./ti-gui.html",
  methods: "./ti-gui-methods.mjs",
  mixins: ["./ti-gui.mjs"],
  components: ["@com:ti/gui/cols", "@com:ti/gui/rows", "@com:ti/gui/tabs", "@com:ti/gui/panel"]
}), Ti.Preload("ti/com/ti/icon/text/ti-icon-text.html", '<div class="ti-icon-text" \n  :class="className">\n  \x3c!--Icon--\x3e\n  <ti-icon v-if="icon" class="as-icon" :value="icon"/>\n  \x3c!--Text--\x3e\n  <div v-if="text" class="as-text">{{text|i18n}}</div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      icon: {
        type: [String, Object],
        "default": ""
      },
      text: {
        type: String,
        "default": null
      }
    }
  };
  Ti.Preload("ti/com/ti/icon/text/ti-icon-text.mjs", t);
}(), Ti.Preload("ti/com/ti/icon/text/_com.json", {
  name: "ti-icon-text",
  globally: !0,
  template: "./ti-icon-text.html",
  mixins: ["./ti-icon-text.mjs"]
}), Ti.Preload("ti/com/ti/icon/ti-icon.html", '<div \n  class="ti-icon" \n  :class="TopClass"\n  @click.left="OnClickTop">\n  <div class="icon-icon"\n    :style="Icon.outerStyle">\n    \x3c!--Font icon--\x3e\n    <i v-if="\'font\'==Icon.type"\n      :class="Icon.className"\n      :style="Icon.innerStyle">\n      \x3c!--ligature font --\x3e\n      <template v-if="Icon.text">{{Icon.text}}</template>\n    </i>\n    \x3c!--Svg/Image--\x3e\n    <img v-else-if="\'svg\'==Icon.type || \'image\'==Icon.type"\n        :src="Icon.value"\n        :style="Icon.innerStyle"/>\n    \x3c!--\n      Default output the value\n    --\x3e\n    <em v-else>{{value}}</em>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myValue: null
      };
    },
    props: {
      base: {
        type: String,
        "default": null
      },
      value: {
        type: [String, Object, Number],
        "default": null
      },
      dict: {
        type: [String, Ti.Dict],
        "default": null
      },
      defaultValue: {
        type: [String, Object],
        "default": null
      },
      fontSize: {
        type: [Number, String],
        "default": null
      },
      width: {
        type: [Number, String],
        "default": null
      },
      height: {
        type: [Number, String],
        "default": null
      },
      color: {
        type: String,
        "default": ""
      },
      opacity: {
        type: Number,
        "default": -1
      },
      notifyName: {
        type: String,
        "default": void 0
      },
      notifyConf: {
        type: [Object, String, Number, Boolean, Array],
        "default": void 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "can-click": !!this.notifyName
        }, "is-".concat(this.Icon.type));
      },
      Dict: function Dict() {
        if (this.dict) {
          if (this.dict instanceof Ti.Dict) return this.dict;

          var _Ti$DictFactory$expla = Ti.DictFactory.explainDictName(this.dict),
              _t45 = _Ti$DictFactory$expla.name;

          return Ti.DictFactory.CheckDict(_t45);
        }
      },
      Icon: function Icon() {
        var t;

        if (_.isPlainObject(this.myValue) ? t = this.myValue.type && this.myValue.value ? this.myValue : {
          type: "font",
          value: Ti.Icons.get(this.myValue)
        } : (t = {
          type: "font",
          value: this.myValue
        }, _.isString(this.myValue) && (t.type = Ti.Util.getSuffixName(this.myValue) || "font"), /^(jpe?g|gif|png)$/i.test(t.type) && (t.type = "image")), "font" == t.type) {
          var e = Ti.Icons.getByName(t.value, t.value);

          _.assign(t, Ti.Icons.parseFontIcon(e));
        } else "image" == t.type && (Ti.Util.isBlank(this.base) || (t.value = Ti.Util.appendPath(this.base, t.value)));

        return t.outerStyle = Ti.Css.toStyle({
          width: this.width,
          height: this.height,
          color: this.color,
          opacity: this.opacity >= 0 ? this.opacity : void 0
        }), "image" == t.type ? t.innerStyle = {
          width: this.width ? "100%" : void 0,
          height: this.height ? "100%" : void 0
        } : "font" == t.type && (t.innerStyle = {
          "font-size": this.fontSize ? Ti.Css.toSize(this.fontSize) : void 0
        }), t;
      }
    },
    methods: {
      OnClickTop: function OnClickTop() {
        this.notifyName && this.$notify(this.notifyName, this.notifyConf);
      },
      evalMyValue: function evalMyValue() {
        var _this89 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee41() {
          var t;
          return regeneratorRuntime.wrap(function _callee41$(_context41) {
            while (1) {
              switch (_context41.prev = _context41.next) {
                case 0:
                  t = Ti.Util.fallbackNil(_this89.value, _this89.defaultValue);

                  if (!_this89.Dict) {
                    _context41.next = 7;
                    break;
                  }

                  _context41.next = 4;
                  return _this89.Dict.getItemIcon(t);

                case 4:
                  _this89.myValue = _context41.sent;
                  _context41.next = 8;
                  break;

                case 7:
                  _this89.myValue = t;

                case 8:
                case "end":
                  return _context41.stop();
              }
            }
          }, _callee41);
        }))();
      }
    },
    watch: {
      value: {
        handler: "evalMyValue",
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/ti/icon/ti-icon.mjs", t);
}(), Ti.Preload("ti/com/ti/icon/_com.json", {
  name: "ti-icon",
  globally: !0,
  template: "./ti-icon.html",
  mixins: ["./ti-icon.mjs"]
}), Ti.Preload("ti/com/ti/imgfile/ti-imgfile.html", '<div class="ti-imgfile"\n  :class="TopClass">\n  \x3c!--\n    Hidden input file to choose files\n  --\x3e\n  <input \n    type="file" \n    ref="file" \n    class="ti-hide"\n    @change.stop.seft="OnSelectLocalFilesToUpload">\n  \x3c!--\n    Major preview zone\n  --\x3e\n  <div class="thumb-con"\n    :style="ThumbStyle"\n    @click="OnClickToEdit"\n    v-drop-files.mask="OnDropFiles">\n    \x3c!--\n      Preview\n    --\x3e\n    <ti-obj-thumb \n      :preview="PreviewThumb"\n      :progress="progress"\n      :footer="false"/>\n  </div>\n  \x3c!--\n    Remove\n  --\x3e\n  <div v-if="isShowRemoveIcon"\n    class="thumb-actions">\n    \x3c!--remove--\x3e\n    <div class="thumb-opt as-del"\n      @click="OnRemove">\n      <ti-icon value="zmdi-delete"/>\n      <span class="it-text">{{\'clear\'|i18n}}</span>\n    </div>\n    \x3c!--open--\x3e\n    <div class="thumb-opt as-open"\n      @click="OnOpen">\n      <ti-icon value="zmdi-open-in-new"/>\n      <span class="it-text">{{\'open\'|i18n}}</span>\n    </div>\n    \x3c!--//////--\x3e\n  </div>\n</div>'), function () {
  var t = {
    props: {
      src: {
        type: String,
        "default": null
      },
      uploadFile: {
        type: File,
        "default": null
      },
      progress: {
        type: Number,
        "default": -1
      },
      width: {
        type: [String, Number],
        "default": 100
      },
      height: {
        type: [String, Number],
        "default": 100
      },
      removable: {
        type: Boolean,
        "default": !0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      ThumbStyle: function ThumbStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      isShowRemoveIcon: function isShowRemoveIcon() {
        return !(this.uploadFile || !this.src);
      },
      PreviewThumb: function PreviewThumb() {
        return this.uploadFile ? {
          type: "localFile",
          value: this.uploadFile
        } : this.src ? {
          type: "image",
          value: this.src
        } : {
          type: "font",
          value: "zmdi-plus"
        };
      }
    },
    methods: {
      OnClickToEdit: function OnClickToEdit() {
        this.$refs.file.click();
      },
      OnDropFiles: function OnDropFiles(t) {
        var _this90 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee42() {
          var e;
          return regeneratorRuntime.wrap(function _callee42$(_context42) {
            while (1) {
              switch (_context42.prev = _context42.next) {
                case 0:
                  e = _.get(t, 0);
                  e && _this90.$notify("upload", e);

                case 2:
                case "end":
                  return _context42.stop();
              }
            }
          }, _callee42);
        }))();
      },
      OnSelectLocalFilesToUpload: function OnSelectLocalFilesToUpload(t) {
        var _this91 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee43() {
          return regeneratorRuntime.wrap(function _callee43$(_context43) {
            while (1) {
              switch (_context43.prev = _context43.next) {
                case 0:
                  _context43.next = 2;
                  return _this91.OnDropFiles(t.target.files);

                case 2:
                  _this91.$refs.file.value = "";

                case 3:
                case "end":
                  return _context43.stop();
              }
            }
          }, _callee43);
        }))();
      },
      OnRemove: function OnRemove() {
        this.$notify("remove");
      },
      OnOpen: function OnOpen() {
        this.$notify("open");
      }
    }
  };
  Ti.Preload("ti/com/ti/imgfile/ti-imgfile.mjs", t);
}(), Ti.Preload("ti/com/ti/imgfile/_com.json", {
  name: "ti-imgfile",
  globally: !0,
  template: "./ti-imgfile.html",
  mixins: ["./ti-imgfile.mjs"],
  components: ["@com:ti/obj/thumb"]
}), Ti.Preload("ti/com/ti/input/color/ti-input-color.html", '<ti-combo-box class="ti-input-color"\n  :class="topClass"\n  :drop-width="null"\n  :status="status"\n  @collapse="doCollapse">\n  \x3c!--\n    Box\n  --\x3e\n  <template v-slot:box>\n    <span class="as-color"\n      @click.left="onToggleDrop">\n        <u class="as-bg"></u>\n        <u class="as-fr" :style="colorStyle"></u>\n    </span>\n    <span class="as-clear" @click="onClearColor">\n      <ti-icon value="zmdi-close"/>\n    </span>\n  </template>\n  \x3c!--\n    Drop\n  --\x3e\n  <template v-slot:drop>\n    <ti-color \n      :value="value"\n      @change="onColorChanged"/>\n  </template>\n</ti-combo-box>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        hideBorder: !1,
        status: "collapse"
      };
    },
    props: {
      value: {
        type: [String, Number],
        "default": null
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName({
          "is-empty": !this.hasValue,
          "is-valued": this.hasValue,
          "show-border": !this.hideBorder,
          "hide-border": this.hideBorder
        }, this.className);
      },
      colorStyle: function colorStyle() {
        var t = Ti.Types.toColor(this.value, null);
        if (t) return {
          background: t.rgba
        };
      },
      isCollapse: function isCollapse() {
        return "collapse" == this.status;
      },
      isExtended: function isExtended() {
        return "extended" == this.status;
      },
      hasValue: function hasValue() {
        return !Ti.Util.isNil(this.value);
      }
    },
    methods: {
      onToggleDrop: function onToggleDrop() {
        this.status = {
          collapse: "extended",
          extended: "collapse"
        }[this.status];
      },
      onClearColor: function onClearColor() {
        this.$notify("change", null);
      },
      onColorChanged: function onColorChanged(t) {
        var e = Ti.Types.toColor(t);
        this.$notify("change", e ? e.toString() : null);
      },
      doCollapse: function doCollapse() {
        this.status = "collapse";
      }
    }
  };
  Ti.Preload("ti/com/ti/input/color/ti-input-color.mjs", t);
}(), Ti.Preload("ti/com/ti/input/color/_com.json", {
  name: "ti-input-color",
  globally: !0,
  template: "./ti-input-color.html",
  mixins: ["./ti-input-color.mjs"],
  components: ["@com:ti/color"]
}), Ti.Preload("ti/com/ti/input/date/ti-input-date.html", '<ti-combo-box class="as-date"\n  :class="topClass"\n  :width="width"\n  :drop-width="null"\n  :status="status"\n  @collapse="doCollapse">\n  \x3c!--\n    Box\n  --\x3e\n  <template v-slot:box>\n    <ti-input \n      :readonly="!canInput"\n      :hide-border="hideBorder"\n      :placeholder="placeholder|i18n"\n      :prefix-icon="icon"\n      :suffix-icon="theStatusIcon"\n      :value="theInputValue"\n      :height="height"\n      :focus="isExtended"\n      @change="onChanged"\n      @input:focus="onInputFocused"\n      @suffix:icon="onClickStatusIcon"/>\n  </template>\n  \x3c!--\n    Drop\n  --\x3e\n  <template v-slot:drop>\n    <ti-calendar\n      :value="theDropDate"\n      :month-format="monthFormat"\n      :begin-year="beginYear"\n      :end-year="endYear"\n      @change="onDateChanged"/>\n  </template>\n</ti-combo-box>'), function () {
  var t = {
    data: function data() {
      return {
        runtime: null,
        status: "collapse"
      };
    },
    props: {
      canInput: {
        type: Boolean,
        "default": !0
      },
      value: {
        type: [String, Number, Date],
        "default": null
      },
      icon: {
        type: String,
        "default": "far-calendar-alt"
      },
      format: {
        type: String,
        "default": "yyyy-MM-dd"
      },
      placeholder: {
        type: [String, Number],
        "default": "i18n:blank-date"
      },
      hideBorder: {
        type: Boolean,
        "default": !1
      },
      autoCollapse: {
        type: Boolean,
        "default": !0
      },
      width: {
        type: [Number, String],
        "default": "2rem"
      },
      height: {
        type: [Number, String],
        "default": void 0
      },
      monthFormat: {
        type: String,
        "default": "yyyy-MM"
      },
      beginYear: {
        type: [Number, String],
        "default": 1970
      },
      endYear: {
        type: [Number, String],
        "default": new Date().getFullYear() + 1
      },
      statusIcons: {
        type: Object,
        "default": function _default() {
          return {
            collapse: "zmdi-chevron-down",
            extended: "zmdi-chevron-up"
          };
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName(this.className);
      },
      isCollapse: function isCollapse() {
        return "collapse" == this.status;
      },
      isExtended: function isExtended() {
        return "extended" == this.status;
      },
      theDate: function theDate() {
        return Ti.Types.toDate(this.value, null);
      },
      theDropDate: function theDropDate() {
        return this.runtime || this.theDate;
      },
      theInputValue: function theInputValue() {
        return this.isExtended ? this.getDateText(this.theDropDate) : this.getDateText(this.theDropDate, this.format);
      },
      theStatusIcon: function theStatusIcon() {
        return this.statusIcons[this.status];
      }
    },
    methods: {
      applyRuntime: function applyRuntime() {
        if (this.runtime) {
          var _t46 = this.runtime;
          this.runtime = null;
          var e = this.getDateText(_t46);
          this.$notify("change", e);
        }
      },
      doExtend: function doExtend() {
        this.status = "extended";
      },
      doCollapse: function doCollapse() {
        var _ref37 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref37$escaped = _ref37.escaped,
            t = _ref37$escaped === void 0 ? !1 : _ref37$escaped;

        this.status = "collapse", t ? this.runtime = null : this.applyRuntime();
      },
      onInputFocused: function onInputFocused() {
        this.doExtend();
      },
      onChanged: function onChanged(t) {
        if (_.isEmpty(t)) this.$notify("change", null);else {
          var e = Ti.Types.toDate(t),
              i = this.getDateText(e);
          this.$notify("change", i);
        }
      },
      onClickStatusIcon: function onClickStatusIcon() {
        this.isExtended ? this.doCollapse() : this.doExtend();
      },
      onDateChanged: function onDateChanged(t) {
        this.runtime = t, this.autoCollapse && this.doCollapse();
      },
      getDateText: function getDateText(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "yyyy-MM-dd";
        var i = Ti.Types.toDate(t, null);
        return Ti.Types.formatDate(i, e);
      }
    }
  };
  Ti.Preload("ti/com/ti/input/date/ti-input-date.mjs", t);
}(), Ti.Preload("ti/com/ti/input/date/_com.json", {
  name: "ti-input-date",
  globally: !0,
  template: "./ti-input-date.html",
  mixins: ["./ti-input-date.mjs"],
  components: ["@com:ti/combo/input", "@com:ti/calendar"]
}), Ti.Preload("ti/com/ti/input/daterange/ti-input-daterange.html", '<ti-combo-box class="as-daterange"\n  :class="topClass"\n  :drop-width="null"\n  :status="status"\n  @collapse="doCollapse">\n  \x3c!--\n    Box\n  --\x3e\n  <template v-slot:box>\n    <ti-input \n      :readonly="!canInput"\n      :hide-border="hideBorder"\n      :placeholder="placeholder|i18n"\n      :prefix-icon="icon"\n      :suffix-icon="theStatusIcon"\n      :value="theInputValue"\n      :width="width"\n      :height="height"\n      :focus="isExtended"\n      @change="onChanged"\n      @input:focus="onInputFocused"\n      @suffix:icon="onClickStatusIcon"/>\n  </template>\n  \x3c!--\n    Drop\n  --\x3e\n  <template v-slot:drop>\n    <ti-calendar\n      :value="theDropRange"\n      :range="true"\n      :matrix-count="matrixCount"\n      :month-format="monthFormat"\n      :begin-year="beginYear"\n      :end-year="endYear"\n      @change="onDateRangeChanged"/>\n  </template>\n</ti-combo-box>'), function () {
  var t = {
    data: function data() {
      return {
        runtime: null,
        status: "collapse"
      };
    },
    props: {
      canInput: {
        type: Boolean,
        "default": !0
      },
      value: {
        type: [String, Number, Date, Array],
        "default": null
      },
      icon: {
        type: String,
        "default": "fas-calendar-alt"
      },
      format: {
        type: String,
        "default": "yyyy-MM-dd HH:mm:ss"
      },
      valueType: {
        type: String,
        "default": "ms-range",
        validator: function validator(t) {
          return /^(ms-(array|range)|ds-(array|range)|date-array)$/.test(t);
        }
      },
      placeholder: {
        type: String,
        "default": "i18n:blank-date-range"
      },
      hideBorder: {
        type: Boolean,
        "default": !1
      },
      width: {
        type: [Number, String],
        "default": "3rem"
      },
      height: {
        type: [Number, String],
        "default": void 0
      },
      matrixCount: {
        type: Number,
        "default": 2
      },
      monthFormat: {
        type: String,
        "default": "yyyy-MM-dd"
      },
      beginYear: {
        type: [Number, String],
        "default": 1970
      },
      endYear: {
        type: [Number, String],
        "default": new Date().getFullYear() + 1
      },
      statusIcons: {
        type: Object,
        "default": function _default() {
          return {
            collapse: "zmdi-chevron-down",
            extended: "zmdi-chevron-up"
          };
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName(this.className);
      },
      isCollapse: function isCollapse() {
        return "collapse" == this.status;
      },
      isExtended: function isExtended() {
        return "extended" == this.status;
      },
      theValue: function theValue() {
        if (_.isEmpty(this.value)) return null;

        if (_.isString(this.value)) {
          var _t47 = _.trim(this.value),
              e = /^[[(](.+)[\])]$/.exec(_t47);

          e && (_t47 = _.trim(e[1]));
          var i = Ti.S.toArray(_t47, {
            sep: ","
          });
          return i.length > 0 ? Ti.Types.toDate(i) : Ti.Types.toDate(_t47);
        }

        return Ti.Types.toDate(this.value);
      },
      theDate: function theDate() {
        return _.isArray(this.theValue) && !_.isEmpty(this.theValue) ? Ti.Types.toDate(this.theValue[0]) : this.theValue ? Ti.Types.toDate(this.theValue) : void 0;
      },
      theRangeInMs: function theRangeInMs() {
        if (!this.theDate) return [];
        var t,
            e = new Date(this.theDate);
        t = _.isArray(this.theValue) && this.theValue.length > 1 ? Ti.Types.toDate(this.theValue[1]) : new Date(e);
        var i = [e.getTime(), t.getTime()].sort();
        return e = Ti.DateTime.setTime(new Date(i[0])), t = Ti.DateTime.setDayLastTime(new Date(i[1])), [e.getTime(), t.getTime()];
      },
      theRange: function theRange() {
        return _.isEmpty(this.theRangeInMs) ? [] : [new Date(this.theRangeInMs[0]), new Date(this.theRangeInMs[1])];
      },
      theDropRange: function theDropRange() {
        return this.runtime || this.theRange;
      },
      theRangeValue: function theRangeValue() {
        return this.formatRangeValue(this.theRange, {
          valueType: "ds-array",
          format: "yyyy-MM-dd",
          collapse: !0
        }).join(", ");
      },
      theRangeText: function theRangeText() {
        if (!_.isEmpty(this.theRange)) {
          var _t48 = this.theRange[0],
              e = this.theRange[1],
              i = _t48.getFullYear(),
              n = _t48.getMonth(),
              a = _t48.getDate(),
              s = e.getFullYear(),
              o = e.getMonth(),
              l = e.getDate(),
              r = Ti.DateTime.getMonthAbbr(n),
              d = Ti.DateTime.getMonthAbbr(o),
              c = {
            yy0: i,
            yy1: s,
            MM0: ++n,
            MM1: ++o,
            dd0: a,
            dd1: l,
            MA0: r,
            MA1: d,
            MT0: Ti.I18n.get(r),
            MT1: Ti.I18n.get(d)
          };

          return i != s ? Ti.I18n.getf("cal.d-range-beyond-years", c) : n != o ? Ti.I18n.getf("cal.d-range-beyond-months", c) : a != l ? Ti.I18n.getf("cal.d-range-beyond-days", c) : Ti.I18n.getf("cal.d-range-in-same-day", c);
        }
      },
      theInputValue: function theInputValue() {
        return this.isExtended ? this.theRangeValue : this.theRangeText;
      },
      theStatusIcon: function theStatusIcon() {
        return this.statusIcons[this.status];
      }
    },
    methods: {
      applyRuntime: function applyRuntime() {
        if (this.runtime) {
          var _t49 = this.runtime;
          this.runtime = null;
          var e = this.formatRangeValue(_t49);
          this.$notify("change", e);
        }
      },
      doExtend: function doExtend() {
        this.status = "extended";
      },
      doCollapse: function doCollapse() {
        var _ref38 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref38$escaped = _ref38.escaped,
            t = _ref38$escaped === void 0 ? !1 : _ref38$escaped;

        this.status = "collapse", t ? this.runtime = null : this.applyRuntime();
      },
      onInputFocused: function onInputFocused() {
        this.doExtend();
      },
      onChanged: function onChanged(t) {
        var e = this.parseDateRange(t);
        if (_.isEmpty(e)) this.$notify("change", null);else {
          var _t50 = this.formatRangeValue(e);

          this.$notify("change", _t50);
        }
      },
      onClickStatusIcon: function onClickStatusIcon() {
        this.isExtended ? this.doCollapse() : this.doExtend();
      },
      onDateRangeChanged: function onDateRangeChanged(t) {
        this.runtime = t;
      },
      parseDateRange: function parseDateRange(t) {
        if (_.isEmpty(t)) return [];
        var e = t.split(",");
        if (_.isEmpty(e)) return [];

        if (1 == e.length) {
          var _t51 = Ti.Types.toDate(e[0]);

          Ti.DateTime.setTime(_t51);

          var _i9 = new Date(_t51.getTime());

          return Ti.DateTime.setDayLastTime(_i9), [_t51, _i9];
        }

        var i = Ti.Types.toDate(e[0]);
        Ti.DateTime.setTime(i);
        var n = Ti.Types.toDate(e[1]);
        return Ti.DateTime.setDayLastTime(n), [i, n].sort(function (t, e) {
          return t.getTime() - e.getTime();
        });
      },
      formatRangeValue: function formatRangeValue(t) {
        var _ref39 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            e = _ref39.valueType,
            i = _ref39.format,
            _ref39$collapse = _ref39.collapse,
            n = _ref39$collapse === void 0 ? !1 : _ref39$collapse;

        var _ref40 = t || [],
            _ref41 = _slicedToArray(_ref40, 2),
            a = _ref41[0],
            s = _ref41[1];

        if (!a) return [];
        s || (s = new Date(a), Ti.DateTime.setDayLastTime(s)), e = e || this.valueType, i = i || this.format;
        var o = (0, {
          "ms-range": function msRange() {
            return "[".concat(a.getTime(), ",").concat(s.getTime(), "]");
          },
          "ms-array": function msArray() {
            return [a.getTime(), s.getTime()];
          },
          "ds-range": function dsRange() {
            return "[" + [Ti.Types.formatDate(a, i), Ti.Types.formatDate(s, i)].join(",") + "]";
          },
          "ds-array": function dsArray() {
            return [Ti.Types.formatDate(a, i), Ti.Types.formatDate(s, i)];
          },
          "date-array": function dateArray() {
            return [a, s];
          }
        }[e])();
        return n && o[0] == o[1] ? [o[0]] : o;
      }
    }
  };
  Ti.Preload("ti/com/ti/input/daterange/ti-input-daterange.mjs", t);
}(), Ti.Preload("ti/com/ti/input/daterange/_com.json", {
  name: "ti-input-daterange",
  globally: !0,
  template: "./ti-input-daterange.html",
  mixins: ["./ti-input-daterange.mjs"],
  components: ["@com:ti/combo/input", "@com:ti/calendar"]
}), Ti.Preload("ti/com/ti/input/datetime/ti-input-datetime.html", '<ti-combo-box class="as-datetime"\n  :class="topClass"\n  :width="width"\n  :drop-width="\'box\'"\n  :drop-overflow="\'hidden\'"\n  :status="status"\n  @collapse="doCollapse">\n  \x3c!--\n    Box\n  --\x3e\n  <template v-slot:box>\n    <ti-input \n      :readonly="!canInput"\n      :hide-border="hideBorder"\n      :placeholder="placeholder|i18n"\n      :prefix-icon="icon"\n      :suffix-icon="theStatusIcon"\n      :value="theInputValue"\n      :height="height"\n      :focus="isExtended"\n      @change="onChanged"\n      @input:focus="onInputFocused"\n      @suffix:icon="onClickStatusIcon"/>\n  </template>\n  \x3c!--\n    Drop\n  --\x3e\n  <template v-slot:drop>\n    <ti-datetime\n      :value="theDropDate"\n      :month-format="monthFormat"\n      :begin-year="beginYear"\n      :end-year="endYear"\n      @change="onDateChanged"/>\n  </template>\n</ti-combo-box>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        runtime: null,
        status: "collapse"
      };
    },
    props: {
      canInput: {
        type: Boolean,
        "default": !0
      },
      value: {
        type: [String, Number, Date],
        "default": null
      },
      icon: {
        type: String,
        "default": "fas-clock"
      },
      format: {
        type: String,
        "default": "yyyy-MM-dd HH:mm:ss"
      },
      placeholder: {
        type: [String, Number],
        "default": "i18n:blank-datetime"
      },
      hideBorder: {
        type: Boolean,
        "default": !1
      },
      autoCollapse: {
        type: Boolean,
        "default": !1
      },
      width: {
        type: [Number, String],
        "default": "2.4rem"
      },
      height: {
        type: [Number, String],
        "default": void 0
      },
      monthFormat: {
        type: String,
        "default": "yyyy-MM"
      },
      beginYear: {
        type: [Number, String],
        "default": 1970
      },
      endYear: {
        type: [Number, String],
        "default": new Date().getFullYear() + 1
      },
      statusIcons: {
        type: Object,
        "default": function _default() {
          return {
            collapse: "zmdi-chevron-down",
            extended: "zmdi-chevron-up"
          };
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName(this.className);
      },
      isCollapse: function isCollapse() {
        return "collapse" == this.status;
      },
      isExtended: function isExtended() {
        return "extended" == this.status;
      },
      theDate: function theDate() {
        return Ti.Types.toDate(this.value, null);
      },
      theDropDate: function theDropDate() {
        return this.runtime || this.theDate;
      },
      theInputValue: function theInputValue() {
        return this.isExtended ? this.getDateText(this.theDropDate) : this.getDateText(this.theDropDate, this.format);
      },
      theStatusIcon: function theStatusIcon() {
        return this.statusIcons[this.status];
      }
    },
    methods: {
      applyRuntime: function applyRuntime() {
        if (this.runtime) {
          var _t52 = this.runtime;
          this.runtime = null;
          var e = this.getDateText(_t52);
          this.$notify("change", e);
        }
      },
      doExtend: function doExtend() {
        this.status = "extended";
      },
      doCollapse: function doCollapse() {
        var _ref42 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref42$escaped = _ref42.escaped,
            t = _ref42$escaped === void 0 ? !1 : _ref42$escaped;

        this.status = "collapse", t ? this.runtime = null : this.applyRuntime();
      },
      onInputFocused: function onInputFocused() {
        this.doExtend();
      },
      onChanged: function onChanged(t) {
        if (_.isEmpty(t)) this.$notify("change", null);else {
          var e = Ti.Types.toDate(t),
              i = this.getDateText(e);
          this.$notify("change", i);
        }
      },
      onClickStatusIcon: function onClickStatusIcon() {
        this.isExtended ? this.doCollapse() : this.doExtend();
      },
      onDateChanged: function onDateChanged(t) {
        this.runtime = t, this.autoCollapse && this.doCollapse();
      },
      getDateText: function getDateText(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "yyyy-MM-dd HH:mm:ss";
        var i = Ti.Types.toDate(t, null);
        return Ti.Types.formatDate(i, e);
      }
    }
  };
  Ti.Preload("ti/com/ti/input/datetime/ti-input-datetime.mjs", t);
}(), Ti.Preload("ti/com/ti/input/datetime/_com.json", {
  name: "ti-input-datetime",
  globally: !0,
  template: "./ti-input-datetime.html",
  mixins: ["./ti-input-datetime.mjs"],
  components: ["@com:ti/combo/input", "@com:ti/datetime"]
}), function () {
  var t = {
    options: {
      type: Array,
      "default": function _default() {
        return ["im-spotify", "im-newsletter", "im-award", "im-headphones", "im-megaphone", "im-barcode", "im-google-play", "im-facebook-messenger", "im-wechat", "im-line", "im-git", "im-first-aid", "im-ribbon", "im-plane", "im-idea", "im-data", "im-data-delete", "im-data-validate", "im-folder-add", "im-radar", "im-pizza", "im-truck", "im-support", "im-reset", "im-import", "im-export", "im-color-fan", "im-cookie", "im-gift-card", "im-factory", "im-pulse", "im-accessibility", "im-apartment", "im-plugin", "im-layer", "im-direction", "im-dribbble", "im-radio", "im-bank", "im-battery-empty", "im-battery", "im-battery-full", "im-x-mark-circle-o", "im-timer", "im-hashtag", "im-server", "im-flask", "im-anchor", "im-umbrella", "im-cc-amex", "im-cc-visa", "im-cc-mastercard", "im-cc-paypal", "im-cc-amazon", "im-cc-bitcoin", "im-car", "im-paintbrush", "im-cube", "im-cubes", "im-language", "im-calculator", "im-user-settings", "im-trophy", "im-pointer", "im-edit", "im-warning-circle", "im-check-mark-circle-o", "im-date-o", "im-newspaper-o", "im-wrench", "im-binoculars", "im-gamepad", "im-history", "im-bell-active", "im-coffee", "im-leaf", "im-gift", "im-flip-chart-o", "im-clock", "im-line-chart-up", "im-laptop-o", "im-monitor-o", "im-cursor", "im-keyboard", "im-pin", "im-store", "im-graduation-hat", "im-certificate-o", "im-sun", "im-diamond-o", "im-drop", "im-paperplane", "im-fingerprint", "im-lifebuoy", "im-power", "im-target", "im-navigation", "im-bug", "im-network", "im-pie-chart", "im-note-o", "im-id-card", "im-tags", "im-floppy-disk", "im-dashboard", "im-tools", "im-users", "im-trash-can", "im-x-mark-circle", "im-x-mark", "im-shield", "im-mobile", "im-inbox", "im-crown", "im-check-square", "im-check-square-o", "im-check-mark-circle", "im-check-mark", "im-redo", "im-undo", "im-map-o", "im-task-o", "im-menu-dot-v", "im-edit-off", "im-facebook", "im-sitemap", "im-save", "im-volume-off", "im-volume", "im-sign-out", "im-sign-in", "im-shopping-cart", "im-rocket", "im-banknote", "im-fullscreen", "im-minimize", "im-maximize", "im-light-bulb", "im-filter", "im-picture-o", "im-eye-off", "im-eye", "im-external-link", "im-random", "im-loop", "im-next", "im-previous", "im-eject", "im-stop", "im-pause", "im-play", "im-credit-card", "im-bookmark", "im-upload", "im-download", "im-video-camera", "im-photo-camera", "im-care-up", "im-care-down", "im-care-left", "im-arrow-up-circle", "im-arrow-down-circle", "im-arrow-left-circle", "im-arrow-right-circle", "im-arrow-up", "im-arrow-down", "im-arrow-left", "im-arrow-right", "im-angle-up-circle", "im-angle-down-circle", "im-angle-left-circle", "im-angle-right-circle", "im-angle-up", "im-angle-down", "im-angle-left", "im-angle-right", "im-twitch", "im-reddit", "im-edge", "im-whatsapp", "im-amazon", "im-snapchat", "im-instagram", "im-fire", "im-sync", "im-toggle", "im-control-panel", "im-archive", "im-bell", "im-bell-off", "im-youtube", "im-spinner", "im-smiley-o", "im-frown-o", "im-code", "im-android-os", "im-linux-os", "im-apple-os", "im-menu", "im-menu-list", "im-menu-dot-h", "im-windows-os", "im-square-o", "im-check-square-i", "im-radio-button-circle", "im-radio-button-circle-o", "im-flag", "im-opera", "im-thumb-up", "im-thumb-down", "im-safari", "im-paper-clip", "im-firefox", "im-copy", "im-chrome", "im-quote-left", "im-quote-right", "im-ie", "im-briefcase", "im-forbidden", "im-vk", "im-wizard", "im-location", "im-paypal", "im-coin", "im-key", "im-lock", "im-lock-open", "im-share", "im-flash", "im-cloud", "im-database", "im-wifi", "im-book", "im-audio", "im-video", "im-microphone", "im-printer", "im-computer", "im-phone", "im-user-male", "im-user-female", "im-user-circle", "im-clock-o", "im-calendar", "im-pencil", "im-question", "im-bar-chart", "im-info", "im-folder", "im-folder-open", "im-file", "im-file-o", "im-files-o", "im-warning", "im-link", "im-unlink", "im-tag", "im-heart", "im-cloud-upload", "im-cloud-download", "im-speech-bubble", "im-speech-bubble-comment", "im-speech-bubble-comments", "im-mail", "im-globe", "im-home", "im-window-o", "im-table", "im-windows-o", "im-gear", "im-twitter", "im-magnifier", "im-magnifier-plus", "im-magnifier-minus", "im-minus", "im-minus-circle", "im-plus", "im-plus-circle", "im-care-right", "im-star", "im-star-half", "im-star-o", "im-circle-o", "im-xing", "im-vimeo", "im-tumblr", "im-stumbleupon", "im-stackoverflow", "im-soundcloud", "im-skype", "im-pinterest", "im-linkedin", "im-google-plus", "im-github", "im-flickr", "im-facebook-like", "im-blogger", "im-behance"];
      }
    }
  };
  Ti.Preload("ti/com/ti/input/icon/ti-input-icon-props.mjs", t);
}(), Ti.Preload("ti/com/ti/input/icon/ti-input-icon.html", '<ti-combo-box class="ti-input-icon"\n  :class="TopClass"\n  :drop-width="dropWidth"\n  :drop-height="dropHeight"\n  :status="status"\n  @collapse="doCollapse">\n  \x3c!--\n    Box\n  --\x3e\n  <template v-slot:box>\n    <span class="as-value"\n      :style="ValueStyle"\n      @click.left="OnToggleDrop">\n      \x3c!--Show Icon--\x3e\n      <ti-icon \n        v-if="hasValue"\n          :value="value"/>\n      \x3c!--No Icon--\x3e\n      <span \n        v-else\n          class="no-icon"><i class="zmdi zmdi-cake"></i></span>\n    </span>\n    <span class="as-clear" @click="OnClearIcon">\n      <ti-icon value="zmdi-close"/>\n    </span>\n  </template>\n  \x3c!--\n    Drop\n  --\x3e\n  <template v-slot:drop>\n    <div class="icon-input">\n      <input ref="input"\n        :placeholder="\'i18n:icon-code-tip\'|i18n"\n        @change="OnChangedIcon">\n    </div>\n    <div class="icon-options">\n      <ul>\n        <li v-for="li of OptionIcons"\n          @click.left="OnSelectIcon(li)"\n          @dblclick.left="OnSelectIconAndCollapse(li)"\n          @mouseenter="OnHoverIcon(li)"\n          @mouseleave="OnLeaveIcon(li)">\n          <ti-icon :value="li.value"/>\n        </li>\n      </ul>\n    </div>\n    <div class="icon-tip">\n      <template v-if="TipIcon">\n        <ti-icon :value="TipIcon"/>\n        <span>{{TipIcon}}</span>\n      </template>\n      <template v-else>\n        <span>...</span>\n      </template>\n    </div>\n  </template>\n</ti-combo-box>'), function () {
  var t = {
    data: function data() {
      return {
        hideBorder: !1,
        myHoverIcon: null,
        status: "collapse"
      };
    },
    props: {
      value: {
        type: [String, Object],
        "default": null
      },
      iconSize: {
        type: [Number, String],
        "default": null
      },
      dropWidth: {
        type: [Number, String],
        "default": "4rem"
      },
      dropHeight: {
        type: [Number, String],
        "default": "4rem"
      }
    },
    computed: {
      TopClass: function TopClass() {
        return Ti.Css.mergeClassName({
          "show-border": !this.hideBorder,
          "hide-border": this.hideBorder
        }, this.className);
      },
      ValueStyle: function ValueStyle() {
        return {
          "font-size": Ti.Css.toSize(this.iconSize)
        };
      },
      isCollapse: function isCollapse() {
        return "collapse" == this.status;
      },
      isExtended: function isExtended() {
        return "extended" == this.status;
      },
      hasValue: function hasValue() {
        return !Ti.Util.isNil(this.value);
      },
      TipIcon: function TipIcon() {
        return this.myHoverIcon || this.value;
      },
      OptionIcons: function OptionIcons() {
        var t = [];
        return _.forEach(this.options, function (e, i) {
          var n = /^([a-z]+)-(.+)$/.exec(e);
          t.push({
            value: e,
            index: i,
            type: n[1],
            name: n[2]
          });
        }), t;
      }
    },
    methods: {
      OnToggleDrop: function OnToggleDrop() {
        this.status = {
          collapse: "extended",
          extended: "collapse"
        }[this.status];
      },
      OnSelectIcon: function OnSelectIcon() {
        var _ref43 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref43.value;

        this.$notify("change", t);
      },
      OnSelectIconAndCollapse: function OnSelectIconAndCollapse() {
        var _ref44 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref44.value;

        this.$notify("change", t), this.status = "collapse";
      },
      OnChangedIcon: function OnChangedIcon() {
        var t = _.trim(this.$refs.input.value);

        console.log("haha", t), this.$notify("change", t);
      },
      OnHoverIcon: function OnHoverIcon() {
        var _ref45 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref45.value;

        this.myHoverIcon = t;
      },
      OnLeaveIcon: function OnLeaveIcon() {
        this.myHoverIcon = null;
      },
      OnClearIcon: function OnClearIcon() {
        this.$notify("change", null);
      },
      doCollapse: function doCollapse() {
        this.status = "collapse";
      }
    }
  };
  Ti.Preload("ti/com/ti/input/icon/ti-input-icon.mjs", t);
}(), Ti.Preload("ti/com/ti/input/icon/_com.json", {
  name: "ti-input-icon",
  globally: !0,
  template: "./ti-input-icon.html",
  props: "./ti-input-icon-props.mjs",
  mixins: ["./ti-input-icon.mjs"]
}), Ti.Preload("ti/com/ti/input/month/ti-input-month.html", '<ti-combo-box class="as-month"\n  :class="topClass"\n  :width="width"\n  :drop-width="dropWidth"\n  :drop-height="dropHeight"\n  :drop-overflow="\'hidden\'"\n  :status="status"\n  @collapse="doCollapse">\n  \x3c!--\n    Box\n  --\x3e\n  <template v-slot:box>\n    <ti-input \n      :readonly="!canInput"\n      :hide-border="hideBorder"\n      :placeholder="placeholder|i18n"\n      :prefix-icon="icon"\n      :suffix-icon="theStatusIcon"\n      :value="theInputValue"\n      :height="height"\n      :focus="isExtended"\n      @change="onChanged"\n      @input:focus="onInputFocused"\n      @suffix:icon="onClickStatusIcon"/>\n  </template>\n  \x3c!--\n    Drop\n  --\x3e\n  <template v-slot:drop>\n    <ti-month\n      :value="theDropDate"\n      :height="dropHeight"\n      :begin-year="beginYear"\n      :end-year="endYear"\n      @change="onMonthChanged"/>\n  </template>\n</ti-combo-box>'), function () {
  var t = {
    data: function data() {
      return {
        runtime: null,
        status: "collapse"
      };
    },
    props: {
      canInput: {
        type: Boolean,
        "default": !0
      },
      value: {
        type: [String, Number, Date],
        "default": void 0
      },
      text: {
        type: String,
        "default": void 0
      },
      icon: {
        type: String,
        "default": "far-calendar"
      },
      format: {
        type: String,
        "default": "yyyy-MM"
      },
      placeholder: {
        type: [String, Number],
        "default": "i18n:blank-month"
      },
      hideBorder: {
        type: Boolean,
        "default": !1
      },
      width: {
        type: [Number, String],
        "default": "1.6rem"
      },
      height: {
        type: [Number, String],
        "default": void 0
      },
      dropWidth: {
        type: [Number, String],
        "default": "box"
      },
      dropHeight: {
        type: [Number, String],
        "default": 200
      },
      beginYear: {
        type: [Number, String],
        "default": 1970
      },
      endYear: {
        type: [Number, String],
        "default": new Date().getFullYear() + 1
      },
      statusIcons: {
        type: Object,
        "default": function _default() {
          return {
            collapse: "zmdi-chevron-down",
            extended: "zmdi-chevron-up"
          };
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName(this.className);
      },
      isCollapse: function isCollapse() {
        return "collapse" == this.status;
      },
      isExtended: function isExtended() {
        return "extended" == this.status;
      },
      theDate: function theDate() {
        return Ti.Types.toDate(this.value, null);
      },
      theDropDate: function theDropDate() {
        return this.runtime || this.theDate;
      },
      theInputValue: function theInputValue() {
        return this.isExtended ? this.getDateText(this.theDropDate, this.format) : this.text || this.getDateText(this.theDropDate, this.format);
      },
      theStatusIcon: function theStatusIcon() {
        return this.statusIcons[this.status];
      }
    },
    methods: {
      applyRuntime: function applyRuntime() {
        if (this.runtime) {
          var _t53 = this.runtime;
          this.runtime = null;
          var e = this.getDateText(_t53);
          this.$notify("change", e);
        }
      },
      doExtend: function doExtend() {
        this.status = "extended";
      },
      doCollapse: function doCollapse() {
        var _ref46 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref46$escaped = _ref46.escaped,
            t = _ref46$escaped === void 0 ? !1 : _ref46$escaped;

        this.status = "collapse", t ? this.runtime = null : this.applyRuntime();
      },
      onInputFocused: function onInputFocused() {
        this.doExtend();
      },
      onChanged: function onChanged(t) {
        if (_.isEmpty(t)) this.$notify("change", null);else {
          var e = Ti.Types.toDate(t),
              i = this.getDateText(e);
          this.$notify("change", i);
        }
      },
      onClickStatusIcon: function onClickStatusIcon() {
        this.isExtended ? this.doCollapse() : this.doExtend();
      },
      onMonthChanged: function onMonthChanged(t) {
        this.runtime = t;
      },
      getDateText: function getDateText(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "yyyy-MM";
        var i = Ti.Types.toDate(t, null);
        return Ti.Types.formatDate(i, e);
      }
    }
  };
  Ti.Preload("ti/com/ti/input/month/ti-input-month.mjs", t);
}(), Ti.Preload("ti/com/ti/input/month/_com.json", {
  name: "ti-input-month",
  globally: !0,
  template: "./ti-input-month.html",
  mixins: ["./ti-input-month.mjs"],
  components: ["@com:ti/combo/input", "@com:ti/month"]
}), Ti.Preload("ti/com/ti/input/num/ti-input-num.html", '<div\n  class="ti-input-num ti-fill-parent"\n  :class="TopClass"\n  :style="TopStyle">\n  \x3c!--\n    Button: -\n  --\x3e\n  <div class="as-btn is-decrease"\n    :class="DesreaseClass"\n    @click="changeByStep(-1)">\n    <ti-icon value="zmdi-minus"/>\n  </div>\n  \x3c!--\n    Input\n  --\x3e\n  <div class="as-input">\n    <input \n      spellcheck="false" \n      :value="TheValue"\n      @change="onChanged">\n  </div>\n  \x3c!--\n    Button: +\n  --\x3e\n  <div class="as-btn is-increase"\n    :class="IncreaseClass"\n    @click="changeByStep(1)">\n    <ti-icon value="zmdi-plus"/>\n  </div>\n</div>'), function () {
  var t = {
    props: {
      value: null,
      defaultValue: {
        type: Number,
        "default": 0
      },
      maxValue: {
        type: Number,
        "default": void 0
      },
      minValue: {
        type: Number,
        "default": void 0
      },
      step: {
        type: Number,
        "default": 1
      },
      width: {
        type: [Number, String],
        "default": 200
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TopStyle: function TopStyle() {
        return Ti.Css.toStyleRem100({
          width: this.width
        });
      },
      DesreaseClass: function DesreaseClass() {
        return !_.isUndefined(this.minValue) && this.value <= this.minValue ? "is-disabled" : "is-enabled";
      },
      IncreaseClass: function IncreaseClass() {
        return !_.isUndefined(this.maxValue) && this.value >= this.maxValue ? "is-disabled" : "is-enabled";
      },
      TheValue: function TheValue() {
        if (!isNaN(this.value) && _.isNumber(this.value)) return this.getValue(this.value);
      }
    },
    methods: {
      getValue: function getValue(t) {
        return isNaN(t) || !_.isNumber(t) ? this.defaultValue : !_.isUndefined(this.minValue) && t < this.minValue ? this.minValue : !_.isUndefined(this.maxValue) && t > this.maxValue ? this.maxValue : t;
      },
      changeByStep: function changeByStep() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        var e = this.TheValue;
        _.isUndefined(e) ? e = this.defaultValue : e += t * this.step, (e = this.getValue(e)) != this.value && this.$notify("change", e);
      },
      onChanged: function onChanged(t) {
        var e = t.target;

        if (_.isElement(e)) {
          var _t54 = _.trim(e.value);

          if (_.isEmpty(_t54)) this.$notify("change", null);else {
            var _e20 = _t54 ? 1 * _t54 : this.defaultValue;

            isNaN(_e20) || this.$notify("change", _e20);
          }
        }
      }
    }
  };
  Ti.Preload("ti/com/ti/input/num/ti-input-num.mjs", t);
}(), Ti.Preload("ti/com/ti/input/num/_com.json", {
  name: "ti-input-num",
  globally: !0,
  template: "./ti-input-num.html",
  mixins: ["./ti-input-num.mjs"]
}), function () {
  var t = {
    dict: {
      type: [String, Ti.Dict],
      "default": null
    },
    inputValue: null,
    maxValueLen: {
      type: Number,
      "default": 0
    },
    valueUnique: {
      type: Boolean,
      "default": !0
    },
    tagOptions: {
      type: [Array, Function],
      "default": function _default() {
        return [];
      }
    },
    tagMapping: {
      type: Object,
      "default": void 0
    },
    canInput: {
      type: Boolean,
      "default": !0
    },
    cancelTagBubble: {
      type: Boolean,
      "default": !1
    },
    tagItemIconBy: {
      type: [String, Function],
      "default": void 0
    },
    tagItemDefaultIcon: {
      type: String,
      "default": void 0
    },
    tagOptionDefaultIcon: {
      type: String,
      "default": void 0
    }
  };
  Ti.Preload("ti/com/ti/input/tags/ti-input-tags-props.mjs", t);
}(), Ti.Preload("ti/com/ti/input/tags/ti-input-tags.html", '<ti-input\n  class="ti-input-tags"\n  :class-name="className"\n  :value="inputValue"\n  :value-case="valueCase"\n  :trimed="trimed"\n\n  :readonly="!canInput || readonly"\n  :focused="focused"\n  :hover="hover"\n  :auto-select="autoSelect"\n\n  :placeholder="thePlaceholder"\n  :auto-i18n="autoI18n"\n  :hide-border="hideBorder"\n  :prefix-icon="prefixIcon"\n  :prefix-hover-icon="prefixHoverIcon"\n  :prefix-icon-for-clean="prefixIconForClean"\n  :prefix-text="prefixText"\n  :suffix-icon="suffixIcon"\n  :suffix-text="suffixText"\n  \n  :width="width"\n  :height="height"\n\n  :on-init="onInputInit"\n  \n  @inputing="onInputInputing"\n  @change="onInputChanged"\n  @input:focus="$notify(\'input:focus\')"\n  @prefix:icon="$notify(\'prefix:icon\')"\n  @input:blur="$notify(\'input:blur\')"\n  @suffix:icon="$notify(\'suffix:icon\')">\n  \x3c!--\n    Tag List\n  --\x3e\n  <div v-if="hasTags"\n    class="as-tags">\n    <ti-tags\n      :value="theTags"\n      :dict="dict"\n      :removable="true"\n      :item-options="tagOptions"\n      :item-icon-by="tagItemIconBy"\n      :item-default-icon="tagItemDefaultIcon"\n      :option-default-icon="tagOptionDefaultIcon"\n      :mapping="tagMapping"\n      :cancel-item-bubble="cancelTagBubble"\n      @change="$notify(\'change\', $event)"/>\n  </div>\n</ti-input>'), function () {
  var t = {
    data: function data() {
      return {};
    },
    props: {
      inputChange: {
        type: Function,
        "default": void 0
      }
    },
    computed: {
      theTags: function theTags() {
        return this.evalTagList(this.value);
      },
      hasTags: function hasTags() {
        return !_.isEmpty(this.theTags);
      },
      thePlaceholder: function thePlaceholder() {
        return this.placeholder ? this.placeholder : this.readonly || !this.canInput ? "" : "i18n:input-tags";
      }
    },
    methods: {
      onInputInit: function onInputInit(t) {
        this.$input = t;
      },
      evalTagList: function evalTagList() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var e = arguments.length > 1 ? arguments[1] : undefined;

        var i = _.filter(_.concat(t), function (t) {
          return !Ti.Util.isNil(t);
        });

        if (Ti.Util.isNil(e) || i.push(e), this.valueUnique && (i = _.uniq(i)), this.maxValueLen > 0) i = _.slice(i, 0, this.maxValueLen);else if (this.maxValueLen < 0) {
          var _t55 = Math.max(0, i.length + this.maxValueLen);

          i = _.slice(i, _t55);
        }
        var n = [];

        var _iterator32 = _createForOfIteratorHelper(i),
            _step32;

        try {
          for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {
            var _t56 = _step32.value;
            _.isPlainObject(_t56) ? n.push(_.assign({
              icon: this.tagIcon,
              options: this.tagOptions
            }, _t56)) : n.push(_t56);
          }
        } catch (err) {
          _iterator32.e(err);
        } finally {
          _iterator32.f();
        }

        return n;
      },
      getTagValues: function getTagValues() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var e = [];

        var _iterator33 = _createForOfIteratorHelper(t),
            _step33;

        try {
          for (_iterator33.s(); !(_step33 = _iterator33.n()).done;) {
            var i = _step33.value;

            var _t57 = _.isPlainObject(i) ? i.value : i;

            Ti.Util.isNil(_t57) || e.push(_t57);
          }
        } catch (err) {
          _iterator33.e(err);
        } finally {
          _iterator33.f();
        }

        return e;
      },
      onInputInputing: function onInputInputing(t) {
        this.$notify("inputing", t);
      },
      onInputChanged: function onInputChanged(t) {
        if (_.isNull(t)) this.$notify("change", []);else if (_.isFunction(this.inputChange)) this.inputChange(t);else if (t) {
          var e = this.evalTagList(this.value, t),
              i = this.getTagValues(e);
          this.$notify("change", i);
        }
      }
    }
  };
  Ti.Preload("ti/com/ti/input/tags/ti-input-tags.mjs", t);
}(), Ti.Preload("ti/com/ti/input/tags/_com.json", {
  name: "ti-input-tags",
  globally: !0,
  template: "./ti-input-tags.html",
  props: ["@com:ti/input/ti-input-props.mjs", "./ti-input-tags-props.mjs"],
  mixins: ["./ti-input-tags.mjs"],
  components: ["@com:ti/tags"]
}), Ti.Preload("ti/com/ti/input/text/ti-input-text.html", '<div class="ti-input-text full-field" \n  :class="topClass" \n  :style="topStyle"\n  v-ti-activable>\n  \x3c!--\n    Prefix\n  --\x3e\n  <div class="as-bar is-prefix">\n    \x3c!--prefix:icon--\x3e\n    <div v-if="prefixIcon"\n      class="as-icon at-prefix"\n      :class="getHoverClass(\'prefixIcon\')"\n      @click.left.stop="onClickPrefixIcon"\n      @mouseenter="pointerHover=\'prefixIcon\'"\n      @mouseleave="pointerHover=null">\n      <ti-icon :value="thePrefixIcon"/>\n    </div>\n    \x3c!--prefix:text--\x3e\n    <div v-if="prefixText" \n      class="as-text at-prefix"\n      :class="getHoverClass(\'prefixText\')"\n      @click.left.stop="onClickPrefixText"\n      @mouseenter="pointerHover=\'prefixText\'"\n      @mouseleave="pointerHover=null">\n      <span>{{prefixText|i18n}}</span>\n    </div>\n  </div>\n  \x3c!--input--\x3e\n  <textarea ref="input"\n    spellcheck="false" \n    :readonly="readonly"\n    :value="theValue"\n    :placeholder="placeholder | i18n"\n    @compositionstart="onInputCompositionStart"\n    @compositionend="onInputCompositionEnd"\n    @input="onInputing"\n    @keydown="onInputKeyDown"\n    @change="onInputChanged"\n    @focus="onInputFocus"\n    @blur="onInputBlur"></textarea>\n  \x3c!--\n    Suffox\n  --\x3e\n  <div class="as-bar is-suffix">\n    \x3c!--suffix:text--\x3e\n    <div v-if="suffixText"\n      class="as-text at-suffix"\n      :class="getHoverClass(\'suffixText\')"\n      @click.left.stop="onClickSuffixIcon"\n      @mouseenter="pointerHover=\'suffixText\'"\n      @mouseleave="pointerHover=null">\n      <span>{{suffixText|i18n}}</span>\n    </div>\n    \x3c!--suffix:icon--\x3e\n    <div v-if="suffixIcon"\n      class="as-icon at-suffix"\n      :class="getHoverClass(\'suffixIcon\')"\n      @click.left.stop="onClickSuffixIcon"\n      @mouseenter="pointerHover=\'suffixIcon\'"\n      @mouseleave="pointerHover=null">\n      <ti-icon :value="suffixIcon"/>\n    </div>\n  </div>\n</div>'), function () {
  var _t58;

  var t = (_t58 = {
    data: function data() {
      return {
        inputCompositionstart: !1,
        isFocused: !1,
        pointerHover: null
      };
    },
    watch: {
      focus: function focus(t) {
        this.isFocused = t;
      }
    },
    props: {
      value: null,
      format: {
        type: [String, Array, Object],
        "default": void 0
      },
      readonly: {
        type: Boolean,
        "default": !1
      },
      valueCase: {
        type: String,
        "default": null,
        validator: function validator(t) {
          return Ti.Util.isNil(t) || Ti.S.isValidCase(t);
        }
      },
      placeholder: {
        type: [String, Number],
        "default": null
      },
      trimed: {
        type: Boolean,
        "default": !0
      },
      autoJsValue: {
        type: Boolean,
        "default": !1
      },
      hideBorder: {
        type: Boolean,
        "default": !1
      },
      width: {
        type: [Number, String],
        "default": null
      },
      height: {
        type: [Number, String],
        "default": null
      },
      prefixHoverIcon: {
        type: String,
        "default": "zmdi-close-circle"
      },
      prefixIconForClean: {
        type: Boolean,
        "default": !0
      },
      prefixIcon: {
        type: String,
        "default": null
      },
      prefixText: {
        type: String,
        "default": null
      },
      suffixText: {
        type: String,
        "default": null
      },
      suffixIcon: {
        type: String,
        "default": null
      },
      focus: {
        type: Boolean,
        "default": !1
      },
      hover: {
        type: [Array, String],
        "default": function _default() {
          return ["prefixIcon", "suffixIcon"];
        }
      },
      autoSelect: {
        type: Boolean,
        "default": !1
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName(this.className, {
          "is-self-actived": this.isSelfActived,
          "is-actived": this.isActived,
          "is-focused": this.isFocused,
          "is-blurred": !this.isFocused,
          "is-readonly": this.readonly,
          "show-border": !this.hideBorder,
          "hide-border": this.hideBorder,
          "has-prefix-icon": this.thePrefixIcon,
          "has-prefix-text": this.prefixText,
          "has-suffix-icon": this.suffixIcon,
          "has-suffix-text": this.suffixText
        });
      },
      topStyle: function topStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      theValue: function theValue() {
        return Ti.Types.toStr(this.value, this.format);
      },
      thePrefixIcon: function thePrefixIcon() {
        return "prefixIcon" == this.pointerHover && this.isCanHover("prefixIcon") ? this.prefixHoverIcon || this.prefixIcon : this.prefixIcon;
      },
      theHover: function theHover() {
        var t = {},
            e = _.concat(this.hover);

        var _iterator34 = _createForOfIteratorHelper(e),
            _step34;

        try {
          for (_iterator34.s(); !(_step34 = _iterator34.n()).done;) {
            var i = _step34.value;
            i && (t[i] = !0);
          }
        } catch (err) {
          _iterator34.e(err);
        } finally {
          _iterator34.f();
        }

        return t;
      }
    },
    methods: {
      isCanHover: function isCanHover(t) {
        return !!this.theHover[t];
      },
      getHoverClass: function getHoverClass(t) {
        var e = this.isCanHover(t);
        return {
          "can-hover": e,
          "for-look": !e
        };
      },
      onInputCompositionStart: function onInputCompositionStart() {
        this.inputCompositionstart = !0;
      },
      onInputCompositionEnd: function onInputCompositionEnd() {
        this.inputCompositionstart = !1, this.doWhenInput();
      },
      onInputing: function onInputing(t) {
        this.inputCompositionstart || this.doWhenInput();
      },
      doWhenInput: function doWhenInput() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "inputing";
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;

        if (_.isElement(this.$refs.input)) {
          var i = this.$refs.input.value;
          e ? i = Ti.S.toJsValue(i, {
            autoNil: !0,
            autoDate: !1,
            trimed: this.trimed
          }) : this.trimed && (i = _.trim(i)), i = Ti.S.toCase(i, this.valueCase), this.$notify(t, i);
        }
      },
      onInputKeyDown: function onInputKeyDown(t) {
        var e = _.pick(t, "code", "key", "keyCode", "altKey", "ctrlKey", "metaKey", "shiftKey");

        e.uniqueKey = Ti.Shortcut.getUniqueKey(e), e.$event = t, this.$notify("keypress", e);
      },
      onInputChanged: function onInputChanged() {
        this.doWhenInput("change", this.autoJsValue);
      },
      onInputFocus: function onInputFocus() {
        this.readonly || (this.autoSelect ? this.$refs.input.select() : this.$refs.input.focus()), this.isFocused = !0, this.$notify("input:focus"), this.isActived || this.setActived();
      },
      onInputBlur: function onInputBlur() {
        this.isFocused = !1, this.$notify("input:blur");
      },
      onClickPrefixIcon: function onClickPrefixIcon() {
        this.prefixIconForClean && this.$notify("change", null), this.$notify("prefix:icon");
      },
      onClickPrefixText: function onClickPrefixText() {
        this.$notify("prefix:text");
      },
      onClickSuffixIcon: function onClickSuffixIcon() {
        this.$notify("suffix:icon");
      },
      onClickSuffixText: function onClickSuffixText() {
        this.$notify("suffix:text");
      },
      doAutoFocus: function doAutoFocus() {
        this.focus && !this.isFocused && this.onInputFocus();
      }
    }
  }, _defineProperty(_t58, "watch", {
    focus: function focus() {
      this.doAutoFocus();
    }
  }), _defineProperty(_t58, "mounted", function mounted() {
    this.doAutoFocus();
  }), _t58);
  Ti.Preload("ti/com/ti/input/text/ti-input-text.mjs", t);
}(), Ti.Preload("ti/com/ti/input/text/_com.json", {
  name: "ti-input-text",
  globally: !0,
  template: "./ti-input-text.html",
  mixins: ["./ti-input-text.mjs"],
  components: []
}), function () {
  var t = {
    value: void 0,
    format: void 0,
    valueCase: {
      type: String,
      "default": void 0,
      validator: function validator(t) {
        return Ti.Util.isNil(t) || Ti.S.isValidCase(t);
      }
    },
    trimed: {
      type: Boolean,
      "default": !0
    },
    autoJsValue: {
      type: Boolean,
      "default": !1
    },
    readonly: {
      type: Boolean,
      "default": !1
    },
    focused: {
      type: Boolean,
      "default": !1
    },
    hover: {
      type: [Array, String],
      "default": function _default() {
        return ["prefixIcon", "suffixIcon"];
      }
    },
    autoSelect: {
      type: Boolean,
      "default": !1
    },
    placeholder: {
      type: [String, Number],
      "default": void 0
    },
    autoI18n: {
      type: Boolean,
      "default": !1
    },
    hideBorder: {
      type: Boolean,
      "default": !1
    },
    prefixIcon: {
      type: [String, Object],
      "default": void 0
    },
    prefixHoverIcon: {
      type: String,
      "default": "zmdi-close-circle"
    },
    prefixIconForClean: {
      type: Boolean,
      "default": !0
    },
    prefixText: {
      type: String,
      "default": void 0
    },
    suffixIcon: {
      type: [String, Object],
      "default": void 0
    },
    suffixText: {
      type: String,
      "default": void 0
    },
    width: {
      type: [Number, String],
      "default": void 0
    },
    height: {
      type: [Number, String],
      "default": void 0
    }
  };
  Ti.Preload("ti/com/ti/input/ti-input-props.mjs", t);
}(), Ti.Preload("ti/com/ti/input/ti-input.html", '<div class="ti-input full-field" \n  :class="TopClass" \n  :style="TopStyle"\n  v-ti-activable>\n  \x3c!--prefix:icon--\x3e\n  <div v-if="prefixIcon"\n    class="as-input-icon at-prefix"\n    :class="getHoverClass(\'prefixIcon\')"\n    @click.left="OnClickPrefixIcon"\n    @mouseenter="pointerHover=\'prefixIcon\'"\n    @mouseleave="pointerHover=null">\n    <ti-icon :value="ThePrefixIcon"/>\n  </div>\n  \x3c!--prefix:text--\x3e\n  <div v-if="prefixText" \n    class="as-input-text at-prefix"\n    :class="getHoverClass(\'prefixText\')"\n    @click.left="OnClickPrefixText"\n    @mouseenter="pointerHover=\'prefixText\'"\n    @mouseleave="pointerHover=null">\n    <span>{{prefixText|i18n}}</span>\n  </div>\n  \x3c!--PreSlot--\x3e\n  <slot></slot>\n  \x3c!--\n    Input Box\n  --\x3e\n  <div class="as-input">\n    <input ref="input"\n      spellcheck="false" \n      :readonly="readonly"\n      :value="TheValue"\n      :placeholder="placeholder|i18n"\n      @compositionstart="OnInputCompositionStart"\n      @compositionend="OnInputCompositionEnd"\n      @input="OnInputing"\n      @change="OnInputChanged"\n      @focus="OnInputFocus"\n      @blur="OnInputBlur">\n    \x3c!--suffix:text--\x3e\n    <div v-if="suffixText"\n      class="as-input-text at-suffix"\n      :class="getHoverClass(\'suffixText\')"\n      @click.left="OnClickSuffixIcon"\n      @mouseenter="pointerHover=\'suffixText\'"\n      @mouseleave="pointerHover=null">\n      <span>{{suffixText|i18n}}</span>\n    </div>\n    \x3c!--suffix:icon--\x3e\n    <div v-if="suffixIcon"\n      class="as-input-icon at-suffix"\n      :class="getHoverClass(\'suffixIcon\')"\n      @click.left="OnClickSuffixIcon"\n      @mouseenter="pointerHover=\'suffixIcon\'"\n      @mouseleave="pointerHover=null">\n      <ti-icon :value="suffixIcon"/>\n    </div>\n  </div>\n</div>'), function () {
  var t = {
    model: {
      prop: "value",
      event: "change"
    },
    data: function data() {
      return {
        inputCompositionstart: !1,
        isFocused: !1,
        pointerHover: null
      };
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-focused": this.isFocused,
          "is-blurred": !this.isFocused,
          "is-readonly": this.readonly,
          "show-border": !this.hideBorder,
          "hide-border": this.hideBorder,
          "has-prefix-icon": this.prefixIcon,
          "has-prefix-text": this.prefixText,
          "has-suffix-icon": this.suffixIcon,
          "has-suffix-text": this.suffixText
        });
      },
      TopStyle: function TopStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      TheValue: function TheValue() {
        var t = Ti.Types.toStr(this.value, this.format);
        return this.autoI18n ? Ti.I18n.text(t) : t;
      },
      ThePrefixIcon: function ThePrefixIcon() {
        return "prefixIcon" == this.pointerHover && this.isCanHover("prefixIcon") ? this.prefixHoverIcon || this.prefixIcon : this.prefixIcon;
      },
      TheHover: function TheHover() {
        var t = {},
            e = _.concat(this.hover);

        var _iterator35 = _createForOfIteratorHelper(e),
            _step35;

        try {
          for (_iterator35.s(); !(_step35 = _iterator35.n()).done;) {
            var i = _step35.value;
            i && (t[i] = !0);
          }
        } catch (err) {
          _iterator35.e(err);
        } finally {
          _iterator35.f();
        }

        return t;
      }
    },
    methods: {
      isCanHover: function isCanHover(t) {
        return !!this.TheHover[t];
      },
      getHoverClass: function getHoverClass(t) {
        var e = this.isCanHover(t);
        return {
          "can-hover": e,
          "for-look": !e,
          "is-prefix-icon-hover": "prefixIcon" == t
        };
      },
      OnInputCompositionStart: function OnInputCompositionStart() {
        this.inputCompositionstart = !0;
      },
      OnInputCompositionEnd: function OnInputCompositionEnd() {
        this.inputCompositionstart = !1, this.doWhenInput();
      },
      OnInputing: function OnInputing(t) {
        this.inputCompositionstart || this.doWhenInput();
      },
      doWhenInput: function doWhenInput() {
        var t = this.getInputValue(!1);
        Ti.Util.isNil(t) || this.$notify("inputing", t);
      },
      OnInputChanged: function OnInputChanged() {
        var t = this.getInputValue(this.autoJsValue);
        this.$notify("change", t);
      },
      OnInputFocus: function OnInputFocus() {
        this.readonly || (this.autoSelect ? this.$refs.input.select() : this.$refs.input.focus()), this.isFocused = !0, this.$notify("input:focus"), this.isActived || this.setActived();
      },
      OnInputBlur: function OnInputBlur() {
        this.isFocused = !1, this.$notify("input:blur");
      },
      OnClickPrefixIcon: function OnClickPrefixIcon() {
        this.prefixIconForClean && this.$notify("change", null), this.$notify("prefix:icon");
      },
      OnClickPrefixText: function OnClickPrefixText() {
        this.$notify("prefix:text");
      },
      OnClickSuffixIcon: function OnClickSuffixIcon() {
        this.$notify("suffix:icon");
      },
      OnClickSuffixText: function OnClickSuffixText() {
        this.$notify("suffix:text");
      },
      getInputValue: function getInputValue() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !1;

        if (_.isElement(this.$refs.input)) {
          var e = this.$refs.input.value;
          return t ? e = Ti.S.toJsValue(e, {
            autoNil: !0,
            autoDate: !1,
            trimed: this.trimed
          }) : this.trimed && (e = _.trim(e)), e = Ti.S.toCase(e, this.valueCase);
        }
      },
      doAutoFocus: function doAutoFocus() {
        this.focused && !this.isFocused && this.OnInputFocus();
      }
    },
    watch: {
      focused: "doAutoFocus"
    },
    mounted: function mounted() {
      this.doAutoFocus();
    }
  };
  Ti.Preload("ti/com/ti/input/ti-input.mjs", t);
}(), Ti.Preload("ti/com/ti/input/time/ti-input-time.html", '<ti-combo-box class="as-time"\n  :class="topClass"\n  :width="width"\n  :drop-width="dropWidth"\n  :drop-height="dropHeight"\n  :drop-overflow="\'hidden\'"\n  :status="status"\n  @collapse="doCollapse">\n  \x3c!--\n    Box\n  --\x3e\n  <template v-slot:box>\n    <ti-input \n      :readonly="!canInput"\n      :hide-border="hideBorder"\n      :placeholder="placeholder|i18n"\n      :prefix-icon="icon"\n      :suffix-icon="theStatusIcon"\n      :value="theTimeText"\n      :height="height"\n      :focus="isExtended"\n      @change="onChanged"\n      @input:focus="onInputFocused"\n      @suffix:icon="onClickStatusIcon"/>\n  </template>\n  \x3c!--\n    Drop\n  --\x3e\n  <template v-slot:drop>\n    <ti-time\n      :value="theDropTime"\n      :height="dropHeight"\n      :mode="mode"\n      @change="onTimeChanged"/>\n  </template>\n</ti-combo-box>'), function () {
  var t = {
    data: function data() {
      return {
        runtime: null,
        status: "collapse"
      };
    },
    props: {
      canInput: {
        type: Boolean,
        "default": !0
      },
      value: {
        type: [String, Number, Ti.Types.Time],
        "default": null
      },
      icon: {
        type: String,
        "default": "far-clock"
      },
      valueUnit: {
        type: String,
        "default": "s",
        validator: function validator(t) {
          return /^(ms|s|min|hr)$/.test(t);
        }
      },
      mode: {
        type: String,
        "default": "auto",
        validator: function validator(t) {
          return /^(sec|min|auto)$/.test(t);
        }
      },
      placeholder: {
        type: [String, Number],
        "default": "i18n:blank-time"
      },
      hideBorder: {
        type: Boolean,
        "default": !1
      },
      width: {
        type: [Number, String],
        "default": "1.6rem"
      },
      height: {
        type: [Number, String],
        "default": void 0
      },
      dropWidth: {
        type: [Number, String],
        "default": "box"
      },
      dropHeight: {
        type: [Number, String],
        "default": 400
      },
      statusIcons: {
        type: Object,
        "default": function _default() {
          return {
            collapse: "zmdi-chevron-down",
            extended: "zmdi-chevron-up"
          };
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName(this.className);
      },
      isCollapse: function isCollapse() {
        return "collapse" == this.status;
      },
      isExtended: function isExtended() {
        return "extended" == this.status;
      },
      theTime: function theTime() {
        return Ti.Types.toTime(this.value, this.valueUnit);
      },
      theDropTime: function theDropTime() {
        return this.runtime || this.theTime;
      },
      theTimeFormat: function theTimeFormat() {
        return {
          sec: "HH:mm:ss",
          min: "HH:mm",
          auto: "auto"
        }[this.mode];
      },
      theTimeText: function theTimeText() {
        return this.getTimeText(this.theDropTime);
      },
      theStatusIcon: function theStatusIcon() {
        return this.statusIcons[this.status];
      }
    },
    methods: {
      applyRuntime: function applyRuntime() {
        if (this.runtime) {
          var _t59 = this.runtime;
          this.runtime = null;
          var e = this.getTimeText(_t59);
          this.$notify("change", e);
        }
      },
      doExtend: function doExtend() {
        this.status = "extended";
      },
      doCollapse: function doCollapse() {
        var _ref47 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref47$escaped = _ref47.escaped,
            t = _ref47$escaped === void 0 ? !1 : _ref47$escaped;

        this.status = "collapse", t ? this.runtime = null : this.applyRuntime();
      },
      onInputFocused: function onInputFocused() {
        this.doExtend();
      },
      onChanged: function onChanged(t) {
        if (_.isEmpty(t)) this.$notify("change", null);else {
          var e = Ti.Types.toTime(t),
              i = this.getTimeText(e);
          this.$notify("change", i);
        }
      },
      onClickStatusIcon: function onClickStatusIcon() {
        this.isExtended ? this.doCollapse() : this.doExtend();
      },
      onTimeChanged: function onTimeChanged(t) {
        this.runtime = t;
      },
      getTimeText: function getTimeText(t) {
        if (t instanceof Ti.Types.Time) return t.toString(this.theTimeFormat);
      }
    }
  };
  Ti.Preload("ti/com/ti/input/time/ti-input-time.mjs", t);
}(), Ti.Preload("ti/com/ti/input/time/_com.json", {
  name: "ti-input-time",
  globally: !0,
  template: "./ti-input-time.html",
  mixins: ["./ti-input-time.mjs"],
  components: ["@com:ti/combo/input", "@com:ti/time"]
}), Ti.Preload("ti/com/ti/input/timerange/ti-input-timerange.html", '<ti-combo-box class="as-timerange"\n  :class="topClass"\n  :width="width"\n  :drop-width="null"\n  :status="status"\n  @collapse="doCollapse">\n  \x3c!--\n    Box\n  --\x3e\n  <template v-slot:box>\n    <ti-input \n      :readonly="!canInput"\n      :hide-border="hideBorder"\n      :placeholder="placeholder|i18n"\n      :prefix-icon="icon"\n      :suffix-icon="theStatusIcon"\n      :value="theRangeText"\n      :height="height"\n      :focus="isExtended"\n      @change="onChanged"\n      @input:focus="onInputFocused"\n      @suffix:icon="onClickStatusIcon"/>\n  </template>\n  \x3c!--\n    Drop\n  --\x3e\n  <template v-slot:drop>\n    <ti-form\n      :data="theDropRange"\n      v-bind="theFormConfig"\n      @change="onFormChanged"/>\n  </template>\n</ti-combo-box>'), function () {
  var t = {
    data: function data() {
      return {
        runtime: null,
        status: "collapse"
      };
    },
    props: {
      canInput: {
        type: Boolean,
        "default": !0
      },
      value: {
        type: [String, Object, Number, Array],
        "default": null
      },
      rangeKeys: {
        type: Array,
        "default": function _default() {
          return ["beginTime", "endTime"];
        }
      },
      valueType: {
        type: String,
        "default": "str-array",
        validator: function validator(t) {
          return /^((str|ms|sec)-(array|obj))$/.test(t);
        }
      },
      dftValue: {
        type: Array,
        "default": function _default() {
          return ["09:00", "17:00"];
        }
      },
      icon: {
        type: String,
        "default": "zmdi-time-interval"
      },
      unit: {
        type: String,
        "default": "ms"
      },
      format: {
        type: String,
        "default": "HH:mm"
      },
      placeholder: {
        type: String,
        "default": "i18n:blank-time-range"
      },
      hideBorder: {
        type: Boolean,
        "default": !1
      },
      width: {
        type: [Number, String],
        "default": "2rem"
      },
      height: {
        type: [Number, String],
        "default": void 0
      },
      statusIcons: {
        type: Object,
        "default": function _default() {
          return {
            collapse: "zmdi-chevron-down",
            extended: "zmdi-chevron-up"
          };
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName(this.className);
      },
      isCollapse: function isCollapse() {
        return "collapse" == this.status;
      },
      isExtended: function isExtended() {
        return "extended" == this.status;
      },
      theFormConfig: function theFormConfig() {
        var _this$rangeKeys = _slicedToArray(this.rangeKeys, 2),
            t = _this$rangeKeys[0],
            e = _this$rangeKeys[1];

        return {
          fields: [{
            name: t,
            type: "Time",
            title: "i18n:time-begin",
            comType: "ti-input-time"
          }, {
            name: e,
            type: "Time",
            title: "i18n:time-end",
            comType: "ti-input-time"
          }],
          spacing: "tiny",
          statusIcons: null
        };
      },
      theRange: function theRange() {
        return this.parseTimeRange(this.value);
      },
      theRangeText: function theRangeText() {
        var _this92 = this;

        var _this$rangeKeys2 = _slicedToArray(this.rangeKeys, 2),
            t = _this$rangeKeys2[0],
            e = _this$rangeKeys2[1],
            i = [];

        return _.forEach(this.theRange, function (t) {
          t ? i.push(t.toString(_this92.format)) : i.push(Ti.Types.formatTime(0, _this92.unit, _this92.format));
        }), i.join(" ~ ");
      },
      theRangeValue: function theRangeValue() {
        return this.formatRangeValue(this.theRange);
      },
      theDropRange: function theDropRange() {
        return this.runtime || this.theRangeValue;
      },
      theStatusIcon: function theStatusIcon() {
        return this.statusIcons[this.status];
      }
    },
    methods: {
      applyRuntime: function applyRuntime() {
        if (this.runtime) {
          console.log("hah");

          var _t60 = this.parseTimeRange(this.runtime);

          this.runtime = null;
          var e = this.formatRangeValue(_t60),
              i = this.formatEmitRangeValue(e);
          this.$notify("change", i);
        }
      },
      doExtend: function doExtend() {
        this.status = "extended";
      },
      doCollapse: function doCollapse() {
        var _ref48 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref48$escaped = _ref48.escaped,
            t = _ref48$escaped === void 0 ? !1 : _ref48$escaped;

        this.status = "collapse", t ? this.runtime = null : this.applyRuntime();
      },
      onInputFocused: function onInputFocused() {
        this.doExtend();
      },
      onChanged: function onChanged(t) {
        var e = this.parseTimeRange(t);
        if (_.isEmpty(e)) this.$notify("change", null);else {
          var _t61 = this.formatRangeValue(e),
              i = this.formatEmitRangeValue(_t61);

          this.$notify("change", i);
        }
      },
      onClickStatusIcon: function onClickStatusIcon() {
        this.isExtended ? this.doCollapse() : this.doExtend();
      },
      formatEmitRangeValue: function formatEmitRangeValue(t) {
        var _this$rangeKeys3 = _slicedToArray(this.rangeKeys, 2),
            e = _this$rangeKeys3[0],
            i = _this$rangeKeys3[1];

        if (t && "Array" == this.valueType) {
          var n = [t[e], t[i]];
          return _.filter(n, function (t) {
            return t && _.isString(t);
          });
        }

        return t;
      },
      onFormChanged: function onFormChanged(t) {
        this.runtime = _.cloneDeep(t);
      },
      parseTimeRange: function parseTimeRange(t) {
        var _n10;

        var _this$rangeKeys4 = _slicedToArray(this.rangeKeys, 2),
            e = _this$rangeKeys4[0],
            i = _this$rangeKeys4[1];

        t = Ti.Util.fallback(t, this.dftValue, {});
        var n = {};

        if (_.isNumber(t)) {
          n = _defineProperty({}, e, Ti.Types.toTime(t));
        } else if (_.isString(t)) {
          var _n9;

          var a = _.trim(t),
              s = _.split(a, /[\t ,\/~-]+/);

          n = (_n9 = {}, _defineProperty(_n9, e, Ti.Types.toTime(s[0])), _defineProperty(_n9, i, Ti.Types.toTime(s[1])), _n9);
        } else _.isArray(t) ? n = (_n10 = {}, _defineProperty(_n10, e, Ti.Types.toTime(t[0])), _defineProperty(_n10, i, Ti.Types.toTime(t[1])), _n10) : _.isPlainObject(t) && (n = _.pick(t, this.rangeKeys));

        return this.normalizeRange(n);
      },
      normalizeRange: function normalizeRange(t) {
        var _this$rangeKeys5 = _slicedToArray(this.rangeKeys, 2),
            e = _this$rangeKeys5[0],
            i = _this$rangeKeys5[1];

        if (t && (t[e] || t[i])) {
          if (!t[e]) {
            var _i10 = Ti.Types.toTime(0);

            t[e] = _i10.toString();
          }

          if (!t[i]) {
            var _e21 = Ti.Types.toTime(864e5 - 1);

            t[i] = _e21.toString();
          }

          var n = Ti.Types.toTime(t[e]),
              a = Ti.Types.toTime(t[i]);

          if (n.valueInMilliseconds > a.valueInMilliseconds) {
            t[e];
            t[e] = a, t[i] = n;
          }
        }

        return t;
      },
      formatRangeValue: function formatRangeValue(t) {
        var e = _.assign({}, t);

        return _.forEach(e, function (t, i) {
          e[i] = t ? t.toString() : Ti.Types.formatTime(0);
        }), e;
      }
    }
  };
  Ti.Preload("ti/com/ti/input/timerange/ti-input-timerange.mjs", t);
}(), Ti.Preload("ti/com/ti/input/timerange/_com.json", {
  name: "ti-input-timerange",
  globally: !0,
  template: "./ti-input-timerange.html",
  mixins: ["./ti-input-timerange.mjs"],
  components: ["@com:ti/combo/input"]
}), Ti.Preload("ti/com/ti/input/_com.json", {
  name: "ti-input",
  globally: !0,
  template: "./ti-input.html",
  props: "./ti-input-props.mjs",
  mixins: ["./ti-input.mjs"],
  components: []
}), function () {
  var t = {
    value: null,
    dict: {
      type: [String, Ti.Dict],
      "default": void 0
    },
    trimed: {
      type: Boolean,
      "default": !0
    },
    format: void 0,
    href: {
      type: String,
      "default": void 0
    },
    newTab: {
      type: Boolean,
      "default": !1
    },
    editable: {
      type: Boolean,
      "default": !1
    },
    hover: {
      type: [Array, String],
      "default": function _default() {
        return ["suffixIcon"];
      }
    },
    placeholder: {
      type: String,
      "default": "i18n:nil"
    },
    autoI18n: {
      type: Boolean,
      "default": !0
    },
    prefixIcon: {
      type: String,
      "default": void 0
    },
    prefixText: {
      type: String,
      "default": void 0
    },
    suffixText: {
      type: String,
      "default": void 0
    },
    suffixIcon: {
      type: String,
      "default": void 0
    },
    width: {
      type: [Number, String],
      "default": void 0
    },
    height: {
      type: [Number, String],
      "default": void 0
    },
    valueMaxWidth: {
      type: [Number, String],
      "default": void 0
    }
  };
  Ti.Preload("ti/com/ti/label/ti-label-props.mjs", t);
}(), Ti.Preload("ti/com/ti/label/ti-label.html", '<div class="ti-label"\n  :class="TopClass"\n  :style="TopStyle"\n  @dblclick.left="OnDblClick"\n  :title="myDisplayText">\n  \x3c!--prefix:icon--\x3e\n  <div v-if="ThePrefixIcon"\n    class="as-icon at-prefix"\n    :class="getHoverClass(\'prefixIcon\')"\n    @click.left="OnClickPrefixIcon">\n    <ti-icon :value="ThePrefixIcon"/>\n  </div>\n  \x3c!--prefix:text--\x3e\n  <div v-if="prefixText" \n    class="as-text at-prefix"\n    :class="getHoverClass(\'prefixText\')"\n    @click.left="OnClickPrefixText">\n    <span>{{prefixText|i18n}}</span>\n  </div>\n  \x3c!--Text--\x3e\n  <div class="as-value"\n    :style="ValueStyle"\n    @click.left="OnClickValue">\n    \x3c!--Link--\x3e\n    <a v-if="href || valueClickable"\n        :href="href"\n        :taget="newTab ? \'_blank\' : undefined"\n        @click.left.prevent>{{myDisplayText}}</a>\n    \x3c!--Normal Text--\x3e\n    <span v-else>{{myDisplayText}}</span>\n  </div>\n  \x3c!--suffix:text--\x3e\n  <div v-if="suffixText"\n    class="as-text at-suffix"\n    :class="getHoverClass(\'suffixText\')"\n    @click.left="OnClickSuffixIcon">\n    <span>{{suffixText|i18n}}</span>\n  </div>\n  \x3c!--suffix:icon--\x3e\n  <div v-if="suffixIcon"\n    class="as-icon at-suffix"\n    :class="getHoverClass(\'suffixIcon\')"\n    @click.left="OnClickSuffixIcon">\n    <ti-icon :value="suffixIcon"/>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myDisplayIcon: void 0,
        myDisplayText: void 0,
        myDictValKey: void 0
      };
    },
    props: {
      autoLoadDictIcon: {
        type: Boolean,
        "default": !0
      },
      valueClickable: {
        type: Boolean,
        "default": !1
      },
      fullField: {
        type: Boolean,
        "default": !0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-blank": !_.isNumber(this.TheValue) && _.isEmpty(this.TheValue),
          "is-nowrap": this.valueMaxWidth > 0,
          "full-field": this.fullField
        });
      },
      TopStyle: function TopStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      ValueStyle: function ValueStyle() {
        return Ti.Css.toStyle({
          maxWidth: this.valueMaxWidth
        });
      },
      ThePrefixIcon: function ThePrefixIcon() {
        return null === this.prefixIcon ? null : this.myDisplayIcon || this.prefixIcon;
      },
      TheHover: function TheHover() {
        var t = {},
            e = _.concat(this.hover);

        var _iterator36 = _createForOfIteratorHelper(e),
            _step36;

        try {
          for (_iterator36.s(); !(_step36 = _iterator36.n()).done;) {
            var i = _step36.value;
            i && (t[i] = !0);
          }
        } catch (err) {
          _iterator36.e(err);
        } finally {
          _iterator36.f();
        }

        return t;
      },
      TheValue: function TheValue() {
        var t = this.value;
        return this.trim && _.isString(t) ? _.trim(t) : t;
      },
      Dict: function Dict() {
        if (this.dict) {
          if (this.dict instanceof Ti.Dict) return this.myDictValKey = ".text", this.dict;

          var _Ti$DictFactory$expla2 = Ti.DictFactory.explainDictName(this.dict),
              _t62 = _Ti$DictFactory$expla2.name,
              e = _Ti$DictFactory$expla2.vKey;

          return this.myDictValKey = e || ".text", Ti.DictFactory.CheckDict(_t62);
        }
      }
    },
    methods: {
      isCanHover: function isCanHover(t) {
        return !!this.TheHover[t];
      },
      getHoverClass: function getHoverClass(t) {
        var e = this.isCanHover(t);
        return {
          "can-hover": e,
          "for-look": !e,
          "is-prefix-icon-hover": "prefixIcon" == t
        };
      },
      OnDblClick: function OnDblClick() {
        var _this93 = this;

        this.editable && Ti.Be.EditIt(this.$el, {
          text: this.TheValue,
          ok: function ok(t) {
            _this93.$notify("change", t);
          }
        });
      },
      OnClickPrefixIcon: function OnClickPrefixIcon() {
        this.$notify("prefix:icon");
      },
      OnClickPrefixText: function OnClickPrefixText() {
        this.$notify("prefix:text");
      },
      OnClickValue: function OnClickValue() {
        this.valueClickable && this.$notify("click:value");
      },
      OnClickSuffixIcon: function OnClickSuffixIcon() {
        this.$notify("suffix:icon");
      },
      OnClickSuffixText: function OnClickSuffixText() {
        this.$notify("suffix:text");
      },
      evalDisplay: function evalDisplay(t) {
        var _this94 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee44() {
          var e;
          return regeneratorRuntime.wrap(function _callee44$(_context44) {
            while (1) {
              switch (_context44.prev = _context44.next) {
                case 0:
                  if (!_this94.Dict) {
                    _context44.next = 5;
                    break;
                  }

                  _context44.next = 3;
                  return _this94.Dict.getItem(t);

                case 3:
                  e = _context44.sent;
                  e ? (_this94.autoLoadDictIcon && (_this94.myDisplayIcon = _this94.Dict.getIcon(e)), t = _this94.Dict.getBy(_this94.myDictValKey, e, t)) : _this94.myDisplayIcon = null;

                case 5:
                  return _context44.abrupt("return", _.isNumber(t) ? _this94.format ? Ti.Types.toStr(t, _this94.format) : t : _.isArray(t) || _.isPlainObject(t) ? JSON.stringify(t, null, "  ") : Ti.Util.isNil(t) ? Ti.I18n.text(_this94.placeholder) : _.isDate(t) ? Ti.Types.toStr(t, _this94.format) : (_this94.format && (t = Ti.Types.toStr(t, _this94.format)), _this94.autoI18n ? Ti.I18n.text(t) : t));

                case 6:
                case "end":
                  return _context44.stop();
              }
            }
          }, _callee44);
        }))();
      },
      reloadMyDisplay: function reloadMyDisplay() {
        var _this95 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee45() {
          return regeneratorRuntime.wrap(function _callee45$(_context45) {
            while (1) {
              switch (_context45.prev = _context45.next) {
                case 0:
                  _this95.myDisplayIcon = null;
                  _context45.next = 3;
                  return _this95.evalDisplay(_this95.TheValue);

                case 3:
                  _this95.myDisplayText = _context45.sent;

                case 4:
                case "end":
                  return _context45.stop();
              }
            }
          }, _callee45);
        }))();
      }
    },
    watch: {
      value: {
        handler: "reloadMyDisplay",
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/ti/label/ti-label.mjs", t);
}(), Ti.Preload("ti/com/ti/label/_com.json", {
  name: "ti-label",
  globally: !0,
  template: "./ti-label.html",
  props: "./ti-label-props.mjs",
  mixins: ["./ti-label.mjs"]
}), Ti.Preload("ti/com/ti/label/_hmaker.json", {
  icon: "im-tag",
  title: "i18n:com-label",
  scenes: ["desktop", "tablet", "phone"],
  editComType: "ti-form",
  editComConf: {
    mode: "tab",
    data: "=comConf",
    fields: [{
      title: "i18n:hmk-aspect",
      fields: [{
        title: "i18n:hmk-placeholder",
        name: "placeholder",
        comType: "ti-input"
      }, {
        title: "i18n:hmk-autoI18n",
        name: "autoI18n",
        type: "Boolean",
        defaultAs: !0,
        comType: "ti-toggle"
      }, {
        title: "i18n:hmk-prefixIcon",
        name: "prefixIcon",
        comType: "ti-input-icon"
      }, {
        title: "i18n:hmk-prefixText",
        name: "prefixText",
        comType: "ti-input"
      }, {
        title: "i18n:hmk-suffixIcon",
        name: "suffixIcon",
        comType: "ti-input-icon"
      }, {
        title: "i18n:hmk-suffixText",
        name: "suffixText",
        comType: "ti-input"
      }]
    }, {
      title: "i18n:hmk-behavior",
      fields: [{
        title: "i18n:hmk-href",
        name: "href",
        comType: "ti-input"
      }, {
        title: "i18n:hmk-newTab",
        name: "newTab",
        type: "Boolean",
        hidden: {
          href: "NoEmpty"
        },
        comType: "ti-toggle"
      }, {
        title: "i18n:hmk-breakLine",
        name: "breakLine",
        type: "Boolean",
        defaultAs: !0,
        comType: "ti-toggle"
      }, {
        title: "i18n:hmk-editable",
        name: "editable",
        type: "Boolean",
        comType: "ti-toggle"
      }]
    }, {
      title: "i18n:hmk-data",
      fields: [{
        title: "i18n:hmk-value",
        name: "value",
        comType: "ti-input"
      }, {
        title: "i18n:hmk-dict",
        name: "dict",
        comType: "ti-input"
      }, {
        title: "i18n:hmk-trimed",
        name: "trimed",
        type: "Boolean",
        comType: "ti-toggle"
      }, {
        title: "i18n:hmk-format",
        name: "format",
        comType: "ti-input",
        comConf: {
          autoJsValue: !0
        }
      }]
    }, {
      title: "i18n:hmk-measure",
      fields: [{
        title: "i18n:hmk-width",
        name: "width",
        comType: "ti-input"
      }, {
        title: "i18n:hmk-height",
        name: "height",
        comType: "ti-input"
      }, {
        title: "i18n:hmk-valueMaxWidth",
        name: "valueMaxWidth",
        comType: "ti-input"
      }]
    }]
  }
}), Ti.Preload("ti/com/ti/lbs/map/baidu/ti-lbs-map-baidu.html", '<div class="ti-lbs-map by-baidu ti-fill-parent">\n  <div ref="arena" class="map-arena ti-fill-parent"></div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        valueMarker: null
      };
    },
    props: {
      mapType: {
        type: String,
        "default": "ROADMAP"
      },
      center: {
        type: Object,
        "default": null
      },
      zoom: {
        type: Number,
        "default": 8
      },
      value: {
        type: Object,
        "default": null
      },
      valueOptions: {
        type: Object,
        "default": function _default() {
          return {
            icon: null,
            title: "UserMarker",
            animation: "DOWN"
          };
        }
      }
    },
    computed: {
      mapCenterLatLng: function mapCenterLatLng() {
        return _.isEmpty(this.center) ? _.isEmpty(this.value) ? this.genLatLng({
          lat: 39.9042,
          lng: 116.4074
        }) : this.genLatLng(this.value) : this.genLatLng(this.center);
      },
      mapTypeId: function mapTypeId() {
        return {
          ROADMAP: BMAP_NORMAL_MAP,
          SATELLITE: BMAP_SATELLITE_MAP,
          HYBRID: BMAP_HYBRID_MAP
        }[this.mapType] || BMAP_NORMAL_MAP;
      }
    },
    methods: {
      genLatLng: function genLatLng() {
        var _ref49 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref49.lat,
            e = _ref49.lng;

        return new BMap.Point(e, t);
      },
      drawValue: function drawValue() {
        var t = this.__map;
        this.valueOptions;
        if (!this.value) return;
        var e = this.genLatLng(this.value);
        var i = new BMap.Marker(e);
        t.addOverlay(i), this.valueMarker = i;
      }
    },
    watch: {
      value: function value() {
        this.drawValue();
      }
    },
    mounted: function () {
      var _mounted3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee46() {
        var t;
        return regeneratorRuntime.wrap(function _callee46$(_context46) {
          while (1) {
            switch (_context46.prev = _context46.next) {
              case 0:
                t = new BMap.Map(this.$refs.arena, {
                  mapType: this.mapTypeId
                });
                t.centerAndZoom(this.mapCenterLatLng, this.zoom), t.addControl(new BMap.MapTypeControl({
                  mapTypes: [BMAP_NORMAL_MAP, BMAP_SATELLITE_MAP, BMAP_HYBRID_MAP]
                })), t.enableScrollWheelZoom(!0), this.__map = t, this.drawValue();

              case 2:
              case "end":
                return _context46.stop();
            }
          }
        }, _callee46, this);
      }));

      function mounted() {
        return _mounted3.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/ti/lbs/map/baidu/ti-lbs-map-baidu.mjs", t);
}(), Ti.Preload("ti/com/ti/lbs/map/baidu/_com.json", {
  name: "ti-lbs-map-baidu",
  globally: !0,
  template: "./ti-lbs-map-baidu.html",
  mixins: ["./ti-lbs-map-baidu.mjs"],
  components: []
}), Ti.Preload("ti/com/ti/lbs/map/google/ti-lbs-map-google.html", '<div class="ti-lbs-map by-google ti-fill-parent">\n  <div ref="arena" class="map-arena ti-fill-parent"></div>\n  \x3c!--div style="background:#FF0;position: absolute; bottom:0;right:0;"\n    @click="redrawLayers()">Redraw</div--\x3e\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myLastMove: void 0,
        mySyncTime: void 0,
        myUpTime: void 0,
        myCenterMarker: void 0,
        myLayers: {},
        myGrid: {
          x: [],
          y: [],
          x_step: void 0,
          y_step: void 0
        }
      };
    },
    props: {
      mapType: {
        type: String,
        "default": "ROADMAP"
      },
      center: {
        type: [Object, Array],
        "default": void 0
      },
      zoom: {
        type: Number,
        "default": void 0
      },
      bounds: {
        type: Array,
        "default": void 0
      },
      layers: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      pinCenter: {
        type: Boolean,
        "default": !1
      },
      cooling: {
        type: Number,
        "default": 1e3
      },
      maxZoom: {
        type: Number,
        "default": 22
      },
      minZoom: {
        type: Number,
        "default": 1
      },
      boundPadding: {
        type: [Object, Number],
        "default": 10
      },
      stroke: {
        type: Object,
        "default": function _default() {
          return {
            color: "#08F",
            opacity: .8,
            weight: 8
          };
        }
      },
      gestureHandling: {
        type: String,
        "default": "auto",
        validator: function validator(t) {
          return /^(cooperative|greedy|none|auto)$/.test(t);
        }
      },
      clustering: {
        type: Object,
        "default": void 0
      }
    },
    computed: {
      MapTypeId: function MapTypeId() {
        return this.getMapTypeId(this.mapType);
      },
      MapCenter: function MapCenter() {
        if (_.isArray(this.center)) {
          var _this$center = _slicedToArray(this.center, 2),
              _t63 = _this$center[0],
              e = _this$center[1];

          return {
            lat: (_t63.lat - e.lat) / 2 + e.lat,
            lng: (_t63.lng - e.lng) / 2 + e.lng
          };
        }

        return this.center;
      }
    },
    methods: {
      isCoolDown: function isCoolDown() {
        if (!this.myUpTime) return !0;
        return Date.now() - this.myUpTime > this.cooling;
      },
      isInSync: function isInSync() {
        if (!this.mySyncTime) return !1;
        return Date.now() - this.mySyncTime < this.cooling;
      },
      getMapTypeId: function getMapTypeId() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "ROADMAP";
        return google.maps.MapTypeId[t] || google.maps.MapTypeId.ROADMAP;
      },
      draw_center_marker: function draw_center_marker(t) {
        return t || (t = this.$map.getCenter()), this.myCenterMarker ? this.myCenterMarker.setPosition(t) : this.myCenterMarker = new google.maps.Marker({
          position: t,
          map: this.$map
        }), t;
      },
      draw_as_point: function draw_as_point() {
        var _this96 = this;

        var _ref50 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref50.name,
            _ref50$items = _ref50.items,
            e = _ref50$items === void 0 ? [] : _ref50$items,
            i = _ref50.iconSize,
            n = _ref50.iconSizeHoverScale,
            a = _ref50.clickable;

        if (!t) throw "draw_as_point without layer name!";
        var s = !_.isUndefined(this.myGrid.x_step) && !_.isUndefined(this.myGrid.y_step),
            o = this.$map.getBounds();
        if (!o) return;
        o = o.toJSON();

        var l = [],
            r = [],
            d = function d(t) {
          var e,
              s,
              o,
              r = t.label;
          _.isString(r) && (r = {
            color: "#FFF",
            text: r
          }), t.src && (s = i || {
            width: 100,
            height: 100
          }, e = {
            url: t.src,
            scaledSize: s
          }, n && (o = {
            width: s.width * n,
            height: s.height * n
          }));
          var d = new google.maps.Marker({
            position: t,
            title: t.title,
            label: r,
            icon: e,
            clickable: a
          });
          l.push(d), a && (d.addListener("click", function () {
            _this96.$notify("point:click", t);
          }), o && (d.addListener("mouseover", function () {
            d.setIcon({
              url: t.src,
              scaledSize: o
            });
          }), d.addListener("mouseout", function () {
            d.setIcon({
              url: t.src,
              scaledSize: s
            });
          })));
        };

        if (s) {
          var _iterator37 = _createForOfIteratorHelper(e),
              _step37;

          try {
            for (_iterator37.s(); !(_step37 = _iterator37.n()).done;) {
              var _t65 = _step37.value;
              if (!_t65 || !_.isNumber(_t65.lat) || !_.isNumber(_t65.lng)) continue;
              var _e22 = {};
              _e22.x = Math.round(Ti.GPS.getLngToWest(_t65.lng, o.west) / this.myGrid.x_step), _e22.y = Math.round(Ti.GPS.getLatToSouth(_t65.lat, o.south) / this.myGrid.y_step);
              var _i11 = r[_e22.y];
              _.isArray(_i11) || (_i11 = [], r[_e22.y] = _i11);
              var _n11 = _i11[_e22.x];
              _.isArray(_n11) || (_n11 = [], _i11[_e22.x] = _n11), _n11.push(_objectSpread({}, _e22, {
                title: _t65.title,
                it: _t65
              }));
            }
          } catch (err) {
            _iterator37.e(err);
          } finally {
            _iterator37.f();
          }

          console.log(this.__dump_matrix(r));

          var _t64 = this.clusteringMatrix(r);

          console.log(_t64), _.forEach(_t64, function (t) {
            _.isArray(t) ? t.length > 1 ? function (t) {
              var e,
                  a,
                  s,
                  o,
                  r,
                  d = {
                n: t.length,
                title0: t[0].title,
                title1: t[1].title
              },
                  c = Ti.Util.explainObj(d, _this96.clustering.title || "->${n} places");
              _this96.clustering.label && (r = Ti.Util.explainObj(d, _this96.clustering.label)), _this96.clustering.src && (s = i || {
                width: 100,
                height: 100
              }, e = {
                url: _this96.clustering.src,
                scaledSize: s
              }, n && (o = {
                width: s.width * n,
                height: s.height * n
              }, a = {
                url: _this96.clustering.src,
                scaledSize: o
              }));
              var h = [];

              _.forEach(t, function (_ref51) {
                var t = _ref51.it;
                return h.push(t);
              });

              var m = Ti.GPS.getCenter(h),
                  p = new google.maps.Marker({
                position: m,
                title: c,
                label: r,
                icon: e,
                clickable: !0
              });
              p.addListener("click", function () {
                _this96.$map.panTo(m), _this96.$map.setZoom(_this96.$map.getZoom() + 1);
              }), a && (p.addListener("mouseover", function () {
                p.setIcon(a);
              }), p.addListener("mouseout", function () {
                p.setIcon(e);
              })), l.push(p);
            }(t) : t.length > 0 && d(t[0].it) : d(t);
          });
        } else _.forEach(e, d);

        this.myLayers[t] = l, _.forEach(l, function (t) {
          return t.setMap(_this96.$map);
        });
      },
      clusteringMatrix: function clusteringMatrix(t) {
        var e = [];

        for (var i = 0; i < t.length; i++) {
          var n = t[i];
          if (n) for (var a = 0; a < n.length; a++) {
            var s = n[a];

            if (s && s.length > 0) {
              var o = n[a + 1];
              o && o.length > 0 && (n[a + 1] = void 0, s.push.apply(s, _toConsumableArray(o)));
              var l = t[i + 1];
              l && l.length > 0 && ((o = l[a]) && o.length > 0 && (l[a] = void 0, s.push.apply(s, _toConsumableArray(o))), (o = l[a + 1]) && o.length > 0 && (l[a + 1] = void 0, s.push.apply(s, _toConsumableArray(o)))), e.push(s);
            }
          }
        }

        return e;
      },
      __dump_matrix: function __dump_matrix(t) {
        var e = "";

        for (var i = 0; i < t.length; i++) {
          var n = t[i];
          if (e += "".concat(i, ": "), n) for (var _t66 = 0; _t66 < n.length; _t66++) {
            var _i12 = n[_t66];
            e += "[".concat(_i12 ? _i12.length : 0, "]");
          }
          e += "\n";
        }
      },
      tidyGridAxisLine: function tidyGridAxisLine(t, e) {
        if (t.length > e) {
          var i = t.slice(e);

          var _iterator38 = _createForOfIteratorHelper(i),
              _step38;

          try {
            for (_iterator38.s(); !(_step38 = _iterator38.n()).done;) {
              var _t67 = _step38.value;

              _t67.setMap(null);
            }
          } catch (err) {
            _iterator38.e(err);
          } finally {
            _iterator38.f();
          }

          return t.slice(0, e);
        }

        for (var _i13 = t.length; _i13 < e; _i13++) {
          t.push(new google.maps.Polyline({
            map: this.$map,
            geodesic: !1,
            strokeColor: "#FF0000",
            strokeOpacity: 1,
            strokeWeight: 1
          }));
        }

        return t;
      },
      eval_grid: function eval_grid() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;
        var i = this.$map.getBounds();
        if (!i) return;
        var n = (i = i.toJSON()).east - i.west,
            a = i.north - i.south;
        n < 0 && (n += 360);
        var s = n / t,
            o = a / e,
            l = t - 1,
            r = e - 1;

        if (this.myGrid.x = this.tidyGridAxisLine(this.myGrid.x, l), this.myGrid.y = this.tidyGridAxisLine(this.myGrid.y, r), this.myGrid.x_step = s, this.myGrid.y_step = o, this.showGrid) {
          for (var _e23 = 1; _e23 < t; _e23++) {
            var _t68 = s * _e23,
                _n12 = Ti.GPS.normlizedLng(i.west + _t68),
                _a2 = [{
              lat: i.north,
              lng: _n12
            }, {
              lat: i.south,
              lng: _n12
            }];

            this.myGrid.x[_e23 - 1].setPath(_a2);
          }

          for (var _t69 = 1; _t69 < e; _t69++) {
            var _e24 = o * _t69,
                _n13 = Ti.GPS.normlizedLat(i.south + _e24),
                _a3 = [{
              lat: _n13,
              lng: i.west
            }, {
              lat: _n13,
              lng: i.east
            }];

            this.myGrid.y[_t69 - 1].setPath(_a3);
          }
        }
      },
      draw_as_path: function draw_as_path() {
        var _ref52 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref52.name,
            _ref52$items = _ref52.items,
            e = _ref52$items === void 0 ? [] : _ref52$items,
            i = _ref52.iconSize,
            n = _ref52.clickable;

        if (!t) throw "draw_as_path without layer name!";

        if (this.draw_as_point({
          name: t,
          items: e,
          iconSize: i,
          clickable: n
        }), _.isArray(e) && e.length > 1) {
          var _i14 = _.first(e);

          _i14 && _.isNumber(_i14.lat) && _.isNumber(_i14.lng) && (this.myLayers["".concat(t, "-path")] = new google.maps.Polyline({
            map: this.$map,
            path: e,
            strokeColor: this.stroke.color,
            strokeOpacity: this.stroke.opacity,
            strokeWeight: this.stroke.weight
          }));
        }
      },
      drawLayers: function drawLayers() {
        if (this.clustering) {
          var _this$clustering = this.clustering,
              _t70 = _this$clustering.x,
              e = _this$clustering.y;
          this.eval_grid(_t70, e);
        }

        if (this.pinCenter && this.draw_center_marker(), _.isEmpty(this.layers)) return;
        var t = 0;

        var _iterator39 = _createForOfIteratorHelper(this.layers),
            _step39;

        try {
          for (_iterator39.s(); !(_step39 = _iterator39.n()).done;) {
            var _e25 = _step39.value;
            t++, _e25.name || (_e25.name = "Layer-".concat(t)), this["draw_as_".concat(_e25.type)](_e25);
          }
        } catch (err) {
          _iterator39.e(err);
        } finally {
          _iterator39.f();
        }
      },
      clearLayer: function clearLayer(t) {
        t && (_.isFunction(t.setMap) ? t.setMap(null) : _.forEach(t, function (t) {
          t.setMap(null);
        }));
      },
      cleanLayers: function cleanLayers(t) {
        var _this97 = this;

        if (this.myCenterMarker && (this.myCenterMarker.setMap(null), this.myCenterMarker = void 0), t) {
          var e = this.myLayers[t];
          this.clearLayer(e), this.myLayers[t] = void 0;
        } else _.forEach(this.myLayers, function (t) {
          _this97.clearLayer(t);
        }), this.myLayers = {};
      },
      redrawLayers: function redrawLayers() {
        this.cleanLayers(), this.drawLayers();
      },
      redrawWhenMoveCoolDown: function redrawWhenMoveCoolDown() {
        var _this98 = this;

        var t = Date.now() - this.myLastMove;
        if (!isNaN(t)) return t > 500 ? (this.redrawLayers(), void (this.myLastMove = void 0)) : void _.delay(function () {
          _this98.redrawWhenMoveCoolDown();
        }, t);
      }
    },
    watch: {
      mapType: function mapType(t) {
        var e = this.getMapTypeId(t);
        this.$map.setMapTypeId(e);
      },
      layers: function layers(t, e) {
        _.isEqual(t, e) || this.redrawLayers();
      },
      center: function center(t, e) {
        if (this.isCoolDown() && t) if (this.mySyncTime = Date.now(), _.isArray(t)) {
          var _e26 = new google.maps.LatLng(t[0]),
              i = new google.maps.LatLng(t[1]),
              n = new google.maps.LatLngBounds(_e26, i);

          this.$map.fitBounds(n, this.boundPadding);
        } else _.isNumber(t.lat) && _.isNumber(t.lng) && this.$map.panTo(t);
      },
      zoom: function zoom(t) {
        this.isCoolDown() && _.isNumber(t) && t > 0 && this.$map.setZoom(t);
      },
      gestureHandling: function gestureHandling(t) {
        this.$map.setOptions({
          gestureHandling: t
        });
      }
    },
    mounted: function () {
      var _mounted4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee47() {
        var _this99 = this;

        return regeneratorRuntime.wrap(function _callee47$(_context47) {
          while (1) {
            switch (_context47.prev = _context47.next) {
              case 0:
                this.$map = new google.maps.Map(this.$refs.arena, {
                  zoom: this.zoom,
                  center: this.MapCenter,
                  mapTypeId: this.MapTypeId,
                  maxZoom: this.maxZoom,
                  minZoom: this.minZoom,
                  fullscreenControl: !1,
                  mapTypeControl: !1,
                  streetViewControl: !1,
                  zoomControl: !1,
                  gestureHandling: this.gestureHandling,
                  center_changed: function center_changed() {
                    var t = _this99.$map.getCenter();

                    if (_this99.clustering && _.isUndefined(_this99.myLastMove) && _.delay(function () {
                      _this99.redrawWhenMoveCoolDown();
                    }, 500), _this99.myLastMove = Date.now(), _this99.pinCenter && _this99.draw_center_marker(t), !_this99.isInSync()) {
                      _this99.myUpTime = Date.now();
                      var e = t.toJSON();
                      e.lng = Ti.GPS.normlizedLng(e.lng), _this99.$emit("center:change", e);
                    }
                  },
                  zoom_changed: function zoom_changed() {
                    _this99.clustering && _this99.redrawLayers(), _this99.myUpTime = Date.now(), _this99.$emit("zoom:change", _this99.$map.getZoom());
                  }
                }), _.delay(function () {
                  _this99.redrawLayers();
                }, 1e3);

              case 1:
              case "end":
                return _context47.stop();
            }
          }
        }, _callee47, this);
      }));

      function mounted() {
        return _mounted4.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/ti/lbs/map/google/ti-lbs-map-google.mjs", t);
}(), Ti.Preload("ti/com/ti/lbs/map/google/_com.json", {
  name: "ti-lbs-map-google",
  globally: !0,
  template: "./ti-lbs-map-google.html",
  mixins: ["./ti-lbs-map-google.mjs"],
  components: []
}), Ti.Preload("ti/com/ti/lbs/map/tencent/ti-lbs-map-tencent.html", '<div class="ti-lbs-map by-tencent ti-fill-parent">\n  <div ref="arena" class="map-arena ti-fill-parent"></div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        valueMarker: null
      };
    },
    props: {
      mapType: {
        type: String,
        "default": "ROADMAP"
      },
      center: {
        type: Object,
        "default": null
      },
      zoom: {
        type: Number,
        "default": 8
      },
      value: {
        type: Object,
        "default": null
      },
      valueOptions: {
        type: Object,
        "default": function _default() {
          return {
            icon: null,
            title: "UserMarker",
            animation: "DOWN"
          };
        }
      }
    },
    computed: {
      mapCenterLatLng: function mapCenterLatLng() {
        return _.isEmpty(this.center) ? _.isEmpty(this.value) ? this.genLatLng({
          lat: 39.9042,
          lng: 116.4074
        }) : this.genLatLng(this.value) : this.genLatLng(this.center);
      },
      mapTypeId: function mapTypeId() {
        return qq.maps.MapTypeId[this.mapType] || qq.maps.MapTypeId.ROADMAP;
      }
    },
    methods: {
      genLatLng: function genLatLng() {
        var _ref53 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref53.lat,
            e = _ref53.lng;

        return new qq.maps.LatLng(t, e);
      },
      drawValue: function drawValue() {
        var t = this.__map,
            e = this.valueOptions;
        if (!this.value) return;
        var i = this.genLatLng(this.value);
        var n = new qq.maps.Marker({
          position: i,
          animation: qq.maps.MarkerAnimation[e.animation],
          map: t,
          draggable: !0,
          title: e.title,
          visible: !0
        });
        this.valueMarker = n;
      }
    },
    watch: {
      value: function value() {
        this.drawValue();
      }
    },
    mounted: function () {
      var _mounted5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee48() {
        var t;
        return regeneratorRuntime.wrap(function _callee48$(_context48) {
          while (1) {
            switch (_context48.prev = _context48.next) {
              case 0:
                t = new qq.maps.Map(this.$refs.arena, {
                  zoom: this.zoom,
                  center: this.mapCenterLatLng,
                  mapTypeId: this.mapTypeId
                });
                this.__map = t, this.drawValue();

              case 2:
              case "end":
                return _context48.stop();
            }
          }
        }, _callee48, this);
      }));

      function mounted() {
        return _mounted5.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/ti/lbs/map/tencent/ti-lbs-map-tencent.mjs", t);
}(), Ti.Preload("ti/com/ti/lbs/map/tencent/_com.json", {
  name: "ti-lbs-map-tencent",
  globally: !0,
  template: "./ti-lbs-map-tencent.html",
  mixins: ["./ti-lbs-map-tencent.mjs"],
  components: []
}), Ti.Preload("ti/com/ti/lbs/map/ti-lbs-map.html", '<div class="ti-lbs-map" \n  :class="TopClass"\n  :style="TopStyle">\n  \x3c!--\n    Show Map\n  --\x3e\n  <div \n    v-if="apiLoaded"\n      class="map-con">\n      \x3c!--\n        Map Main\n      --\x3e\n      <div class="as-main">\n        <component \n          :is="MapComType"\n            v-bind="MapComConf"\n            @center:change="OnCenterChange"\n            @zoom:change="OnZoomChange"/>\n      </div>\n      \x3c!--\n        Wait cooling\n      --\x3e\n      <div\n        v-if="CoolingIcon"\n          class="as-wait-cooling"><TiIcon :value="CoolingIcon"/></div>\n      \x3c!--\n        Map Controls\n      --\x3e\n      <div class="as-controls">\n        <TiActionbar v-bind="MapActionBar"/>\n      </div>\n      \x3c!--\n        Map Info\n      --\x3e\n      <div\n        v-if="infoBar && MapCenter"\n          class="as-info">\n          <ul class="as-laln">\n            <li><span>{{\'lat\'|i18n}}:</span><em>{{MapCenter.lat|float(8)}}</em></li>\n            <li><span>{{\'lng\'|i18n}}:</span><em>{{MapCenter.lng|float(8)}}</em></li>\n            <li><span>ZOOM</span><em>{{myZoom || zoom}}</em></li>\n          </ul>\n      </div> \x3c!--as-info--\x3e\n  </div>\n  \x3c!--\n    Show Loading \n  --\x3e\n  <ti-loading\n    v-else\n      class="as-big-mask"/>\n</div>'), function () {
  var t = {
    inject: {
      $vars: {
        "default": {}
      }
    },
    data: function data() {
      return {
        myUpTime: void 0,
        myWaitCooling: !1,
        myFullscreen: !1,
        myMapCenter: void 0,
        myZoom: void 0,
        myMapType: void 0,
        apiLoaded: !1
      };
    },
    props: {
      by: {
        type: String,
        "default": "tencent"
      },
      secretKey: {
        type: String,
        "default": "${by}MapKey"
      },
      apiUrls: {
        type: Object,
        "default": function _default() {
          return {
            google: "!js://maps.googleapis.com/maps/api/js?key=${key}"
          };
        }
      },
      mapType: {
        type: String,
        "default": "ROADMAP"
      },
      autoFloat: {
        type: Number,
        "default": 1e7
      },
      width: {
        type: [String, Number],
        "default": 400
      },
      height: {
        type: [String, Number],
        "default": 400
      },
      zoom: {
        type: Number,
        "default": 8
      },
      coordinate: {
        type: String,
        "default": "WGS84"
      },
      value: {
        type: [Object, Array],
        "default": null
      },
      mode: {
        type: String,
        "default": "auto",
        validator: function validator(t) {
          return /^(auto|point|path|area)$/.test(t);
        }
      },
      keepStateBy: {
        type: String,
        "default": void 0
      },
      cooling: {
        type: Number,
        "default": 1200
      },
      maxZoom: {
        type: Number,
        "default": 22
      },
      minZoom: {
        type: Number,
        "default": 1
      },
      infoBar: {
        type: Boolean,
        "default": !0
      },
      iconSize: {
        type: Object,
        "default": void 0
      },
      iconSizeHoverScale: {
        type: Number,
        "default": 1.3
      },
      boundPadding: {
        type: [Object, Number],
        "default": 10
      },
      pointClickable: {
        type: Boolean,
        "default": !0
      },
      gestureHandling: {
        type: String,
        "default": "auto",
        validator: function validator(t) {
          return /^(cooperative|greedy|none|auto)$/.test(t);
        }
      },
      clustering: {
        type: Object,
        "default": void 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-fullscreen": this.myFullscreen,
          "is-embed": !this.myFullscreen
        });
      },
      TopStyle: function TopStyle() {
        if (!this.myFullscreen) return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      TheMapSecretKey: function TheMapSecretKey() {
        var t = Ti.S.renderBy(this.secretKey, this);
        return _.get(this.$vars, t);
      },
      TheMapApiUrl: function TheMapApiUrl() {
        var t = _.get(this.apiUrls, this.by);

        return t = Ti.S.renderBy(t, {
          key: this.TheMapSecretKey
        });
      },
      TheGestureHandling: function TheGestureHandling() {
        return this.myFullscreen ? "greedy" : this.gestureHandling;
      },
      ToggleIcon: function ToggleIcon() {
        return this.myFullscreen ? "zmdi-fullscreen-exit" : "zmdi-fullscreen";
      },
      MapComType: function MapComType() {
        return "ti-lbs-map-".concat(this.by);
      },
      MapComConf: function MapComConf() {
        return _objectSpread({
          secretKey: this.TheMapSecretKey,
          center: this.MapCenter,
          mapType: this.myMapType,
          zoom: this.myZoom,
          maxZoom: this.maxZoom,
          minZoom: this.minZoom,
          boundPadding: this.boundPadding,
          gestureHandling: this.TheGestureHandling,
          clustering: this.clustering
        }, this.MapComConfByMode);
      },
      MapComConfByMode: function MapComConfByMode() {
        var _this100 = this;

        var t = {
          auto: function auto(e) {
            return _.isArray(e) ? t.path(e) : t.point(e);
          },
          point: function point(t) {
            return _.isArray(t) ? {
              layers: [{
                type: "point",
                items: _.concat(t),
                iconSize: _this100.iconSize,
                iconSizeHoverScale: _this100.iconSizeHoverScale,
                clickable: _this100.pointClickable
              }]
            } : {
              pinCenter: !0
            };
          },
          path: function path(t) {
            return t ? {
              layers: [{
                type: "path",
                items: _.concat(t),
                iconSize: _this100.iconSize
              }]
            } : {};
          },
          area: function area(t) {
            return t ? {
              layers: [{
                type: "area",
                items: _.concat(t),
                iconSize: _this100.iconSize
              }]
            } : {};
          }
        };
        return t[this.mode](this.LalValue);
      },
      TargetCoordinate: function TargetCoordinate() {
        return {
          tencent: "GCJ02",
          baidu: "BD09",
          ali: "GCJ02"
        }[this.by] || "WGS84";
      },
      LalValue: function LalValue() {
        if (_.isEmpty(this.value)) return {
          lat: 39.908765655793395,
          lng: 116.39748860418158
        };

        if (_.isArray(this.value)) {
          var _t71 = [];

          var _iterator40 = _createForOfIteratorHelper(this.value),
              _step40;

          try {
            for (_iterator40.s(); !(_step40 = _iterator40.n()).done;) {
              var e = _step40.value;
              var i = this.genLngLat(e),
                  n = e.src;
              e.obj, e.preview && (n = Ti.WWW.evalObjPreviewSrc(e.obj, e.preview)), _t71.push(_.assign({}, e, i, {
                src: n
              }));
            }
          } catch (err) {
            _iterator40.e(err);
          } finally {
            _iterator40.f();
          }

          return _t71;
        }

        var t = this.genLngLat(this.value);
        return _.assign({}, this.value, t);
      },
      MapCenter: function MapCenter() {
        if (this.myMapCenter) return this.myMapCenter;
        if (this.LalValue) return _.isArray(this.LalValue) ? Ti.GPS.getBounds(this.LalValue) : _.pick(this.LalValue, "lng", "lat");
      },
      MapActionBar: function MapActionBar() {
        var _this101 = this;

        return {
          items: [{
            className: "big-icon",
            icon: this.myFullscreen ? "im-minimize" : "im-maximize",
            action: function action() {
              return _this101.myFullscreen = !_this101.myFullscreen;
            }
          }, {
            icon: "far-map",
            text: "i18n:map-type",
            altDisplay: [{
              icon: "fas-road",
              text: "i18n:map-roadmap",
              match: {
                myMapType: "ROADMAP"
              }
            }, {
              icon: "fas-satellite",
              text: "i18n:map-satellite",
              match: {
                myMapType: "SATELLITE"
              }
            }, {
              icon: "fas-globe-asia",
              text: "i18n:map-hybrid",
              match: {
                myMapType: "HYBRID"
              }
            }, {
              icon: "fas-drafting-compass",
              text: "i18n:map-terrain",
              match: {
                myMapType: "TERRAIN"
              }
            }],
            items: [{
              icon: "fas-road",
              text: "i18n:map-roadmap",
              highlight: {
                myMapType: "ROADMAP"
              },
              action: function action() {
                return _this101.myMapType = "ROADMAP";
              }
            }, {
              icon: "fas-globe-asia",
              text: "i18n:map-hybrid",
              highlight: {
                myMapType: "HYBRID"
              },
              action: function action() {
                return _this101.myMapType = "HYBRID";
              }
            }, {
              icon: "fas-satellite",
              text: "i18n:map-satellite",
              highlight: {
                myMapType: "SATELLITE"
              },
              action: function action() {
                return _this101.myMapType = "SATELLITE";
              }
            }, {
              icon: "fas-drafting-compass",
              text: "i18n:map-terrain",
              highlight: {
                myMapType: "TERRAIN"
              },
              action: function action() {
                return _this101.myMapType = "TERRAIN";
              }
            }]
          }, {
            className: "big-icon",
            icon: "im-plus",
            wait: 1200,
            action: function action() {
              return _this101.zoomMap(1);
            }
          }, {
            className: "big-icon",
            icon: "im-minus",
            wait: 1200,
            action: function action() {
              return _this101.zoomMap(-1);
            }
          }],
          status: this
        };
      },
      CoolingIcon: function CoolingIcon() {
        if (this.myUpTime > 0) return this.myWaitCooling ? "fas-spinner fa-spin" : "zmdi-check-circle";
      }
    },
    methods: {
      OnCenterChange: function OnCenterChange(t) {
        this.myMapCenter = t, this.MapComConfByMode.pinCenter && (this.myUpTime = Date.now(), this.myWaitCooling || this.checkUpdate());
      },
      OnZoomChange: function OnZoomChange(t) {
        this.myZoom = t, this.saveState({
          zoom: t
        });
      },
      zoomMap: function zoomMap(t) {
        var e = this.myZoom + t;
        _.inRange(e, this.minZoom, this.maxZoom + 1) && (this.myZoom = e, this.saveState({
          zoom: e
        }));
      },
      isCoolDown: function isCoolDown() {
        if (!this.myUpTime) return !0;
        return Date.now() - this.myUpTime > this.cooling;
      },
      checkUpdate: function checkUpdate() {
        var _this102 = this;

        if (this.isCoolDown()) {
          var _t72 = _.pick(this.myMapCenter, "lng", "lat");

          this.$notify("change", _t72), this.myWaitCooling = !1, _.delay(function () {
            _this102.myUpTime = void 0;
          }, 1e3);
        } else {
          this.myWaitCooling = !0;
          Date.now(), this.myUpTime;

          _.delay(function () {
            _this102.checkUpdate();
          }, this.cooling);
        }
      },
      autoLatLng: function autoLatLng(t) {
        return t > 360 ? t / this.autoFloat : t;
      },
      genLngLat: function genLngLat() {
        var _ref54 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref54.lat,
            e = _ref54.lng;

        t = this.autoLatLng(t), e = this.autoLatLng(e);
        var i = this.coordinate,
            n = this.TargetCoordinate;
        if (i == n) return {
          lat: t,
          lng: e
        };
        var a = "".concat(i, "_TO_").concat(n);
        return (0, Ti.GPS[a])(t, e);
      },
      saveState: function saveState(t) {
        if (this.keepStateBy) {
          var e = Ti.Storage.session.getObject(this.keepStateBy);
          _.assign(e, t), Ti.Storage.session.setObject(this.keepStateBy, e);
        }
      }
    },
    watch: {
      value: function value() {
        _.isUndefined(this.myUpTime) && (this.myMapCenter = void 0);
      },
      myFullscreen: function myFullscreen(t, e) {
        _.isEqual(t, e) || this.$notify("change:fullscreen", t);
      }
    },
    created: function created() {
      if (this.myMapType = this.mapType, this.myZoom = this.zoom, this.keepStateBy) {
        var _t73 = Ti.Storage.session.getObject(this.keepStateBy);

        this.myMapType = _t73.mapType || this.mapType, this.myZoom = _t73.zoom || this.zoom;
      }
    },
    mounted: function () {
      var _mounted6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee49() {
        var t;
        return regeneratorRuntime.wrap(function _callee49$(_context49) {
          while (1) {
            switch (_context49.prev = _context49.next) {
              case 0:
                t = this.TheMapApiUrl;
                _context49.t0 = t;

                if (!_context49.t0) {
                  _context49.next = 6;
                  break;
                }

                _context49.next = 5;
                return Ti.Load(t);

              case 5:
                this.apiLoaded = !0;

              case 6:
              case "end":
                return _context49.stop();
            }
          }
        }, _callee49, this);
      }));

      function mounted() {
        return _mounted6.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/ti/lbs/map/ti-lbs-map.mjs", t);
}(), Ti.Preload("ti/com/ti/lbs/map/_com.json", {
  name: "ti-lbs-map",
  globally: !0,
  template: "./ti-lbs-map.html",
  mixins: ["./ti-lbs-map.mjs"],
  components: ["./tencent/_com.json", "./baidu/_com.json", "./google/_com.json", "@com:ti/button"]
}), Ti.Preload("ti/com/ti/lbs/route/ti-lbs-route.html", '<div class="ti-lbs-route" \n  :class="TopClass"\n  :style="TopStyle">\n  \x3c!--Map--\x3e\n  <TiLbsMap\n    v-bind="this"\n    :gesture-handling="TheGestureHandling"\n    :value="ValueItems"\n    mode="path"\n    @change:fullscreen="OnFullscreenChange"/>\n  \x3c!--\n    Edit Panel\n  --\x3e\n  <template v-if="editable">\n    \x3c!--\n      Route List\n    --\x3e\n    <transition name="ti-trans-fade">\n      <div\n        v-if="isShowList"\n          class="as-list">\n            <TiList\n              :data="ValueItems"\n              v-bind="ListConf"\n              blank-class="as-big"\n              :current-id="myCurrentId"\n              :checked-ids="myCheckedIds"\n              :puppet-mode="true"\n              @select="OnListSelect"\n              @open="OnListOpen"/>\n      </div>\n    </transition>\n    \x3c!--\n      Actions\n    --\x3e\n    <div class="as-actions">\n      <TiButton\n        :setup="ActionButtons"/>\n    </div>\n  </template>\n</div>'), function () {
  var t = {
    inject: {
      $vars: {
        "default": {}
      }
    },
    data: function data() {
      return {
        myShowList: void 0,
        myCurrentId: void 0,
        myCheckedIds: void 0,
        myFullscreen: !1,
        apiLoaded: !1
      };
    },
    props: {
      by: {
        type: String,
        "default": "tencent"
      },
      secretKey: {
        type: String,
        "default": "${by}MapKey"
      },
      apiUrls: {
        type: Object,
        "default": function _default() {
          return {
            google: "!js://maps.googleapis.com/maps/api/js?key=${key}"
          };
        }
      },
      mapType: {
        type: String,
        "default": "ROADMAP"
      },
      autoFloat: {
        type: Number,
        "default": 1e7
      },
      width: {
        type: [String, Number],
        "default": 400
      },
      height: {
        type: [String, Number],
        "default": 400
      },
      zoom: {
        type: Number,
        "default": 8
      },
      coordinate: {
        type: String,
        "default": "WGS84"
      },
      maxZoom: {
        type: Number,
        "default": 22
      },
      minZoom: {
        type: Number,
        "default": 1
      },
      infoBar: {
        type: Boolean,
        "default": !0
      },
      editable: {
        type: Boolean,
        "default": !1
      },
      iconSize: {
        type: Object,
        "default": void 0
      },
      value: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      keepStateBy: {
        type: String,
        "default": void 0
      },
      showList: {
        type: Boolean,
        "default": !0
      },
      addBy: {
        type: Object,
        "default": void 0
      },
      gestureHandling: {
        type: String,
        "default": "auto",
        validator: function validator(t) {
          return /^(cooperative|greedy|none|auto)$/.test(t);
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-fullscreen": this.myFullscreen
        });
      },
      TopStyle: function TopStyle() {
        if (!this.myFullscreen) return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      TheMapSecretKey: function TheMapSecretKey() {
        var t = Ti.S.renderBy(this.secretKey, this);
        return _.get(this.$vars, t);
      },
      TheMapApiUrl: function TheMapApiUrl() {
        var t = _.get(this.apiUrls, this.by);

        return t = Ti.S.renderBy(t, {
          key: this.TheMapSecretKey
        });
      },
      TheGestureHandling: function TheGestureHandling() {
        return this.myFullscreen ? "greedy" : this.gestureHandling;
      },
      ValueItems: function ValueItems() {
        var t = [];
        return _.forEach(this.value, function (e, i) {
          var n = _.cloneDeep(e);

          n.label || (n.label = "" + (i + 1)), n.id || (n.id = "R".concat(i)), t.push(n);
        }), t;
      },
      hasItems: function hasItems() {
        return !_.isEmpty(this.ValueItems);
      },
      ListConf: function ListConf() {
        return {
          display: ["<icon:zmdi-pin>", "label:[$${val}]", "title"],
          multi: !0
        };
      },
      ActionButtons: function ActionButtons() {
        var _this103 = this;

        var t = [{
          icon: "zmdi-edit",
          disabled: !this.hasCurrentId,
          handler: function handler() {
            return _this103.editCurrent();
          }
        }, {
          icon: "fas-sort-numeric-down",
          disabled: !this.hasItems,
          handler: function handler() {
            return _this103.renumberItems();
          }
        }, {
          icon: "zmdi-long-arrow-up",
          disabled: !this.hasCheckedIds,
          handler: function handler() {
            return _this103.moveCheckedUp();
          }
        }, {
          icon: "zmdi-long-arrow-down",
          disabled: !this.hasCheckedIds,
          handler: function handler() {
            return _this103.moveCheckedDown();
          }
        }, {
          icon: "zmdi-delete",
          disabled: !this.hasCheckedIds,
          handler: function handler() {
            return _this103.removeChecked();
          }
        }, {
          icon: "zmdi-format-list-bulleted",
          handler: function handler() {
            _this103.myShowList = !_this103.isShowList;
          }
        }];
        return this.addBy ? _.concat({
          icon: "zmdi-plus",
          text: "i18n:lbs-place-add",
          handler: function handler() {
            return _this103.openNewItemSelector();
          }
        }, t) : t;
      },
      hasCurrentId: function hasCurrentId() {
        return !Ti.Util.isNil(this.myCurrentId);
      },
      hasCheckedIds: function hasCheckedIds() {
        return !_.isEmpty(this.myCheckedIds);
      },
      isShowList: function isShowList() {
        return Ti.Util.fallback(this.myShowList, this.showList);
      }
    },
    methods: {
      OnFullscreenChange: function OnFullscreenChange(t) {
        console.log("OnFullscreenChange", t), this.myFullscreen = t;
      },
      OnListSelect: function OnListSelect(_ref55) {
        var t = _ref55.currentId,
            e = _ref55.checkedIds;
        this.myCurrentId = t, this.myCheckedIds = e;
      },
      OnListOpen: function OnListOpen(_ref56) {
        var _this104 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee50() {
          var t, e, i, n;
          return regeneratorRuntime.wrap(function _callee50$(_context50) {
            while (1) {
              switch (_context50.prev = _context50.next) {
                case 0:
                  t = _ref56.index, e = _ref56.item;
                  _context50.next = 3;
                  return Ti.App.Open({
                    title: "i18n:edit",
                    position: "right",
                    result: e,
                    comType: "TiForm",
                    comConf: {
                      data: "=result",
                      fields: [{
                        title: "i18n:title",
                        name: "title",
                        comType: "ti-input"
                      }, {
                        title: "i18n:label",
                        name: "label",
                        comType: "ti-input"
                      }]
                    }
                  });

                case 3:
                  i = _context50.sent;

                  if (!_.isEmpty(i)) {
                    _context50.next = 6;
                    break;
                  }

                  return _context50.abrupt("return");

                case 6:
                  n = _.cloneDeep(_this104.ValueItems);
                  _.assign(n[t], i), _this104.$notify("change", n);

                case 8:
                case "end":
                  return _context50.stop();
              }
            }
          }, _callee50);
        }))();
      },
      renumberItems: function renumberItems() {
        var _this105 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee51() {
          var t, e, i;
          return regeneratorRuntime.wrap(function _callee51$(_context51) {
            while (1) {
              switch (_context51.prev = _context51.next) {
                case 0:
                  _context51.next = 2;
                  return Ti.App.Open({
                    title: "i18n:lbs-ro-rnb-title",
                    position: "right",
                    result: {
                      first: 1,
                      type: "capital"
                    },
                    model: {
                      prop: "data",
                      event: "change"
                    },
                    comType: "TiForm",
                    comConf: {
                      fields: [{
                        title: "i18n:lbs-ro-rnb-k-first",
                        name: "first",
                        type: "Integer",
                        comType: "ti-input-num"
                      }, {
                        title: "i18n:lbs-ro-rnb-k-type",
                        name: "type",
                        comType: "ti-switcher",
                        comConf: {
                          options: [{
                            value: "capital",
                            text: "i18n:lbs-ro-rnb-k-type-capital"
                          }, {
                            value: "alpha",
                            text: "i18n:lbs-ro-rnb-k-type-alpha"
                          }, {
                            value: "number",
                            text: "i18n:lbs-ro-rnb-k-type-number"
                          }]
                        }
                      }]
                    }
                  });

                case 2:
                  t = _context51.sent;

                  if (t) {
                    _context51.next = 5;
                    break;
                  }

                  return _context51.abrupt("return");

                case 5:
                  e = {
                    alpha: "abcdefghijklmnopqrstuvwxyz".split(""),
                    capital: "ABCDEFGHIJKLMNOPQRSTUVWXYZ".split("")
                  }[t.type], i = _.cloneDeep(_this105.ValueItems);
                  _.forEach(i, function (i, n) {
                    var a = t.first + n;

                    if (e) {
                      var _t74 = Ti.Num.scrollIndex(a - 1, e.length);

                      i.label = _.nth(e, _t74);
                    } else i.label = "" + a;
                  }), _this105.$notify("change", i);

                case 7:
                case "end":
                  return _context51.stop();
              }
            }
          }, _callee51);
        }))();
      },
      editCurrent: function editCurrent() {
        var _this106 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee52() {
          var t, e, _iterator41, _step41, i;

          return regeneratorRuntime.wrap(function _callee52$(_context52) {
            while (1) {
              switch (_context52.prev = _context52.next) {
                case 0:
                  if (_this106.myCurrentId) {
                    _context52.next = 2;
                    break;
                  }

                  return _context52.abrupt("return");

                case 2:
                  t = 0, e = null;
                  _iterator41 = _createForOfIteratorHelper(_this106.ValueItems);
                  _context52.prev = 4;

                  _iterator41.s();

                case 6:
                  if ((_step41 = _iterator41.n()).done) {
                    _context52.next = 14;
                    break;
                  }

                  i = _step41.value;

                  if (!(_this106.myCurrentId == i.id)) {
                    _context52.next = 11;
                    break;
                  }

                  e = i;
                  return _context52.abrupt("break", 14);

                case 11:
                  t++;

                case 12:
                  _context52.next = 6;
                  break;

                case 14:
                  _context52.next = 19;
                  break;

                case 16:
                  _context52.prev = 16;
                  _context52.t0 = _context52["catch"](4);

                  _iterator41.e(_context52.t0);

                case 19:
                  _context52.prev = 19;

                  _iterator41.f();

                  return _context52.finish(19);

                case 22:
                  _context52.next = 24;
                  return _this106.OnListOpen({
                    index: t,
                    item: e
                  });

                case 24:
                case "end":
                  return _context52.stop();
              }
            }
          }, _callee52, null, [[4, 16, 19, 22]]);
        }))();
      },
      openNewItemSelector: function openNewItemSelector() {
        var _this107 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee53() {
          var t, e, i, n;
          return regeneratorRuntime.wrap(function _callee53$(_context53) {
            while (1) {
              switch (_context53.prev = _context53.next) {
                case 0:
                  if (_this107.addBy) {
                    _context53.next = 2;
                    break;
                  }

                  return _context53.abrupt("return");

                case 2:
                  t = _.merge({
                    icon: "zmdi-plus-circle-o",
                    title: "add-item",
                    width: "80%",
                    height: "80%",
                    position: "top",
                    result: _this107.ValueItems,
                    comType: "TiTransfer",
                    comConf: {}
                  }, _this107.addBy);
                  _context53.next = 5;
                  return Ti.App.Open(t);

                case 5:
                  e = _context53.sent;

                  if (!Ti.Util.isNil(e)) {
                    _context53.next = 8;
                    break;
                  }

                  return _context53.abrupt("return");

                case 8:
                  i = [], n = {};
                  _.forEach(i, function (t) {
                    return n[t.id] = !0;
                  }), _.forEach(e, function (t) {
                    n[t.id] || (n[t.id] = !0, Ti.Util.isNil(t.label) && (t.label = i.length + 1 + ""), i.push(t));
                  }), _this107.$notify("change", i);

                case 10:
                case "end":
                  return _context53.stop();
              }
            }
          }, _callee53);
        }))();
      },
      moveCheckedUp: function moveCheckedUp() {
        var t = this.genMoveContext();
        if (_.isEmpty(t.checkeds)) return Ti.Toast.Open("i18n:nil-obj", "warn");

        if (t.firstIndex > 0) {
          var _Ti$Util5;

          var e = t.remains,
              i = t.firstIndex - 1;

          if ((_Ti$Util5 = Ti.Util).insertToArray.apply(_Ti$Util5, [e, i].concat(_toConsumableArray(t.checkeds))), Ti.Util.isNil(_.first(t.checkeds).id)) {
            var _e27 = {};

            for (var n = 0; n < t.checkeds.length; n++) {
              _e27["R".concat(n + i)] = !0;
            }

            this.myCurrentId = null, this.myCheckedIds = _e27;
          }

          this.$notify("change", e);
        }
      },
      moveCheckedDown: function moveCheckedDown() {
        var t = this.genMoveContext();
        if (_.isEmpty(t.checkeds)) return Ti.Toast.Open("i18n:nil-obj", "warn");

        if (t.lastIndex < t.remains.length) {
          var _Ti$Util6;

          var e = t.remains,
              i = t.lastIndex + 1;

          if ((_Ti$Util6 = Ti.Util).insertToArray.apply(_Ti$Util6, [e, i].concat(_toConsumableArray(t.checkeds))), Ti.Util.isNil(_.first(t.checkeds).id)) {
            var _e28 = {};

            for (var n = 0; n < t.checkeds.length; n++) {
              _e28["R".concat(n + i)] = !0;
            }

            this.myCurrentId = null, this.myCheckedIds = _e28;
          }

          this.$notify("change", e);
        }
      },
      removeChecked: function removeChecked() {
        var t = this.genMoveContext();
        if (_.isEmpty(t.checkeds)) return Ti.Toast.Open("i18n:del-none", "warn");
        this.myCheckedIds = {}, this.myCurrentId = null, this.$notify("change", t.remains);
      },
      genMoveContext: function genMoveContext() {
        var _this108 = this;

        var t = {
          firstIndex: -1,
          lastIndex: -1,
          checkeds: [],
          remains: []
        };
        return _.forEach(this.ValueItems, function (e, i) {
          var n = _.get(_this108.myCheckedIds, e.id),
              a = _this108.value[i];

          n ? (t.checkeds.push(a), t.firstIndex < 0 ? (t.firstIndex = i, t.lastIndex = i) : t.lastIndex = t.remains.length) : t.remains.push(a);
        }), t;
      }
    },
    mounted: function () {
      var _mounted7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee54() {
        var t;
        return regeneratorRuntime.wrap(function _callee54$(_context54) {
          while (1) {
            switch (_context54.prev = _context54.next) {
              case 0:
                t = this.TheMapApiUrl;
                _context54.t0 = t;

                if (!_context54.t0) {
                  _context54.next = 6;
                  break;
                }

                _context54.next = 5;
                return Ti.Load(t);

              case 5:
                this.apiLoaded = !0;

              case 6:
              case "end":
                return _context54.stop();
            }
          }
        }, _callee54, this);
      }));

      function mounted() {
        return _mounted7.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/ti/lbs/route/ti-lbs-route.mjs", t);
}(), Ti.Preload("ti/com/ti/lbs/route/_com.json", {
  name: "ti-lbs-route",
  globally: !0,
  template: "./ti-lbs-route.html",
  mixins: ["./ti-lbs-route.mjs"],
  components: ["@com:ti/lbs/map"]
}), Ti.Preload("ti/com/ti/list/com/list-row/list-row.html", '<div class="list-row"\n  :class="TopClass">\n  \x3c!--current actived row indicator--\x3e\n  <div class="row-actived-indicator"></div>\n  \x3c!-- Indents --\x3e\n  <div v-for="n in indent"\n  class="row-indent"></div>\n  \x3c!--ICON: Handler--\x3e\n  <template v-if="icon">\n    <ti-icon\n      v-if="hasRealIcon"\n        class="row-icon"\n        :value="icon"\n        @click.native.left.stop="OnClickIcon"/>\n    <div v-else\n      class="row-icon"></div>\n  </template>\n  \x3c!--ICON: Checker--\x3e\n  <ti-icon v-if="checkable"\n      class="row-checker"\n      :value="theCheckIcon"\n      @click.native.left.stop="OnClickChecker"/>\n  \x3c!-- Content --\x3e\n  <div\n    class="row-con"\n    @click.left="OnClickRow"\n    @dblclick.left="OnDblClickRow"\n    v-ti-activable>\n    <component \n      v-for="(it, index) in myDisplayItems"\n        :class="\'item-\'+index"\n        :key="it.uniqueKey"\n        :is="it.comType"\n        v-bind="it.comConf"\n        @change="onItemChanged(it, $event)"/>\n  </div>\n\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        myDisplayItems: []
      };
    },
    props: {
      indent: {
        type: Number,
        "default": 0
      },
      icon: {
        type: [Boolean, String],
        "default": null
      },
      display: {
        type: Array,
        "default": function _default() {
          return [];
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getListItemClass("row-indent-".concat(this.indent));
      },
      hasRealIcon: function hasRealIcon() {
        return this.icon && _.isString(this.icon);
      }
    },
    methods: {
      evalMyDisplayItems: function evalMyDisplayItems() {
        var _this109 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee55() {
          var t, _iterator42, _step42, e, i;

          return regeneratorRuntime.wrap(function _callee55$(_context55) {
            while (1) {
              switch (_context55.prev = _context55.next) {
                case 0:
                  t = [];
                  _iterator42 = _createForOfIteratorHelper(_this109.display);
                  _context55.prev = 2;

                  _iterator42.s();

                case 4:
                  if ((_step42 = _iterator42.n()).done) {
                    _context55.next = 12;
                    break;
                  }

                  e = _step42.value;
                  _context55.next = 8;
                  return _this109.evalDataForFieldDisplayItem({
                    itemData: _this109.data,
                    displayItem: e,
                    vars: {
                      isCurrent: _this109.isCurrent,
                      isChecked: _this109.isChecked,
                      isChanged: _this109.isChanged,
                      isActived: _this109.isActived,
                      rowId: _this109.rowId
                    }
                  });

                case 8:
                  i = _context55.sent;
                  i && t.push(i);

                case 10:
                  _context55.next = 4;
                  break;

                case 12:
                  _context55.next = 17;
                  break;

                case 14:
                  _context55.prev = 14;
                  _context55.t0 = _context55["catch"](2);

                  _iterator42.e(_context55.t0);

                case 17:
                  _context55.prev = 17;

                  _iterator42.f();

                  return _context55.finish(17);

                case 20:
                  _this109.myDisplayItems = t;

                case 21:
                case "end":
                  return _context55.stop();
              }
            }
          }, _callee55, null, [[2, 14, 17, 20]]);
        }))();
      },
      onItemChanged: function onItemChanged() {
        var _ref57 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref57.name,
            e = _ref57.value;

        this.$notify("item:changed", {
          name: t,
          value: e,
          rowId: this.rowId,
          data: this.data
        });
      },
      OnClickIcon: function OnClickIcon(t) {
        this.$notify("icon", {
          rowId: this.rowId,
          shift: t.shiftKey,
          toggle: t.ctrlKey || t.metaKey
        });
      },
      __ti_shortcut: function __ti_shortcut(t) {
        if (!_.isEmpty(this.rowToggleKey) && this.isRowToggleKey(t)) return this.onClickChecker({}), {
          prevent: !0,
          stop: !0,
          quit: !0
        };
      }
    },
    watch: {
      display: function display() {
        this.evalMyDisplayItems();
      },
      data: function data() {
        this.evalMyDisplayItems();
      },
      isCurrent: function isCurrent() {
        this.evalMyDisplayItems();
      },
      isChecked: function isChecked() {
        this.evalMyDisplayItems();
      }
    },
    mounted: function mounted() {
      this.evalMyDisplayItems();
    }
  };
  Ti.Preload("ti/com/ti/list/com/list-row/list-row.mjs", t);
}(), Ti.Preload("ti/com/ti/list/com/list-row/_com.json", {
  name: "list-row",
  globally: !1,
  template: "./list-row.html",
  methods: "@com:ti/support/field_display.mjs",
  mixins: ["@com:ti/support/list_item_mixins.mjs", "./list-row.mjs"]
}), Ti.Preload("ti/com/ti/list/ti-list.html", '<div class="ti-list"\n  :class="TopClass"\n  @click="OnClickTop"\n  v-ti-activable>\n  \x3c!--\n    Blank\n  --\x3e\n  <ti-loading \n    v-if="isDataEmpty"\n      class="nil-data"\n      :class="blankClass"\n      v-bind="blankAs"/>\n  \x3c!--\n    Show Items\n  --\x3e\n  <template v-else>\n    <list-row\n      v-for="row in TheData"\n        :key="row.id"\n        :row-id="row.id"\n        :index="row.index"\n        :icon="row.icon"\n        :indent="row.indent"\n        :data="row.rawData"\n        :display="DisplayItems"\n        :current-id="theCurrentId"\n        :checked-ids="theCheckedIds"\n        :changed-id="changedId"\n        :checkable="checkable"\n        :selectable="selectable"\n        :openable="openable"\n        :row-toggle-key="TheRowToggleKey"\n        :class-name="itemClassName"\n        @checker="OnRowCheckerClick"\n        @select="OnRowSelect"\n        @open="OnRowOpen"/>\n  </template>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myData: []
      };
    },
    props: {
      iconBy: {
        type: [String, Function],
        "default": null
      },
      indentBy: {
        type: [String, Function],
        "default": null
      },
      itemClassName: void 0,
      display: {
        type: [Object, String, Array],
        "default": function _default() {
          return {
            key: "..",
            comType: "ti-label"
          };
        }
      },
      border: {
        type: Boolean,
        "default": !0
      },
      autoScrollIntoView: {
        type: Boolean,
        "default": !0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-hoverable": this.hoverable,
          "show-border": this.border
        });
      },
      getRowIndent: function getRowIndent() {
        var _this110 = this;

        return _.isFunction(this.indentBy) ? function (t) {
          return _this110.indentBy(t);
        } : _.isString(this.indentBy) ? function (t) {
          return _.get(t, _this110.indentBy);
        } : function (t) {
          return 0;
        };
      },
      getRowIcon: function getRowIcon() {
        var _this111 = this;

        return _.isFunction(this.iconBy) ? function (t) {
          return _this111.iconBy(t);
        } : _.isString(this.iconBy) ? function (t) {
          return _.get(t, _this111.iconBy);
        } : function (t) {
          return null;
        };
      },
      DisplayItems: function DisplayItems() {
        var t = _.concat(this.display),
            e = [];

        var _iterator43 = _createForOfIteratorHelper(t),
            _step43;

        try {
          for (_iterator43.s(); !(_step43 = _iterator43.n()).done;) {
            var i = _step43.value;

            var _t75 = this.evalFieldDisplayItem(i);

            _t75 && e.push(_t75);
          }
        } catch (err) {
          _iterator43.e(err);
        } finally {
          _iterator43.f();
        }

        return e;
      },
      TheData: function TheData() {
        return this.myData;
      }
    },
    methods: {
      OnClickTop: function OnClickTop(t) {
        this.cancelable && Ti.Dom.hasOneClass(t.target, "ti-list", "list-item") && this.cancelRow();
      },
      scrollCurrentIntoView: function scrollCurrentIntoView() {
        if (!this.autoScrollIntoView || Ti.Util.isNil(this.myCurrentId)) return;

        var _Ti$Dom$findAll = Ti.Dom.findAll(".list-row.is-current", this.$el),
            _Ti$Dom$findAll2 = _slicedToArray(_Ti$Dom$findAll, 1),
            t = _Ti$Dom$findAll2[0];

        if (t) {
          var e = Ti.Rects.createBy(t),
              i = Ti.Rects.createBy(this.$el);
          i.contains(e) || (this.$el.scrollTop += e.top - i.top);
        }
      },
      __ti_shortcut: function __ti_shortcut(t) {
        return "ARROWUP" == t ? (this.selectPrevRow({
          payload: {
            byKeyboardArrow: !0
          }
        }), this.scrollCurrentIntoView(), {
          prevent: !0,
          stop: !0,
          quit: !0
        }) : "ARROWDOWN" == t ? (this.selectNextRow({
          payload: {
            byKeyboardArrow: !0
          }
        }), this.scrollCurrentIntoView(), {
          prevent: !0,
          stop: !0,
          quit: !0
        }) : void 0;
      }
    },
    watch: {
      data: {
        handler: function () {
          var _handler = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee56(t, e) {
            var _this112 = this;

            return regeneratorRuntime.wrap(function _callee56$(_context56) {
              while (1) {
                switch (_context56.prev = _context56.next) {
                  case 0:
                    _context56.t0 = _.isEqual(t, e);

                    if (_context56.t0) {
                      _context56.next = 6;
                      break;
                    }

                    _context56.next = 4;
                    return this.evalData(function (t) {
                      t.icon = _this112.getRowIcon(t.item), t.indent = _this112.getRowIndent(t.item);
                    });

                  case 4:
                    this.myData = _context56.sent;
                    this.$nextTick(function () {
                      _this112.scrollCurrentIntoView();
                    });

                  case 6:
                  case "end":
                    return _context56.stop();
                }
              }
            }, _callee56, this);
          }));

          function handler(_x3, _x4) {
            return _handler.apply(this, arguments);
          }

          return handler;
        }(),
        immediate: !0
      },
      myCurrentId: function myCurrentId() {
        var _this113 = this;

        this.$nextTick(function () {
          _this113.scrollCurrentIntoView();
        });
      }
    }
  };
  Ti.Preload("ti/com/ti/list/ti-list.mjs", t);
}(), Ti.Preload("ti/com/ti/list/_com.json", {
  name: "ti-list",
  globally: !0,
  template: "./ti-list.html",
  props: "@com:ti/support/list_props.mjs",
  methods: "@com:ti/support/field_display.mjs",
  mixins: ["@com:ti/support/list_mixins.mjs", "./ti-list.mjs"],
  components: ["./com/list-row", "@com:ti/label"]
}), Ti.Preload("ti/com/ti/list/_hmaker.json", {
  icon: "im-data",
  title: "i18n:com-list",
  screen: ["desktop", "tablet"],
  manual: !0,
  tutorial: !0,
  video: !0,
  editComType: "ti-form",
  editComConf: {
    fields: []
  }
}), Ti.Preload("ti/com/ti/loading/ti-loading.html", '<div class="ti-loading"\n  :class="TopClass">\n  <ti-icon class="as-icon" :value="icon"/>\n  <div class="as-text">{{text|i18n}}</div>\n</div>'), function () {
  var t = {
    props: {
      icon: {
        type: String,
        "default": "fas-spinner fa-spin"
      },
      text: {
        type: String,
        "default": "i18n:loading"
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      }
    }
  };
  Ti.Preload("ti/com/ti/loading/ti-loading.mjs", t);
}(), Ti.Preload("ti/com/ti/loading/_com.json", {
  name: "ti-loading",
  globally: !0,
  template: "./ti-loading.html",
  mixins: ["./ti-loading.mjs"]
}), Ti.Preload("ti/com/ti/logging/ti-logging.html", '<div class="ti-logging"\n  :class="TopClass"\n  :style="TopStyle">\n  <pre ref="pre"><div \n    v-for="(line, index) in lines"\n      :data-index="index"\n      >{{line || \'&nbsp;\'}}</div></pre>    \n</div>'), function () {
  var t = {
    props: {
      lines: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      width: {
        type: [Number, String],
        "default": null
      },
      height: {
        type: [Number, String],
        "default": null
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TopStyle: function TopStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      }
    },
    methods: {
      scrollToBottom: function scrollToBottom() {
        var t = this.$refs.pre;
        t.scrollTop = t.scrollHeight;
      }
    },
    watch: {
      lines: function lines() {
        var _this114 = this;

        this.$nextTick(function () {
          _this114.scrollToBottom();
        });
      }
    }
  };
  Ti.Preload("ti/com/ti/logging/ti-logging.mjs", t);
}(), Ti.Preload("ti/com/ti/logging/_com.json", {
  name: "ti-logging",
  globally: !0,
  template: "./ti-logging.html",
  mixins: ["./ti-logging.mjs"]
}), Ti.Preload("ti/com/ti/media/binary/ti-media-binary.html", '<div class="ti-media-binary">\n  <div class="tob-icon">\n    <ti-icon v-if="icon" :value="icon" size="1.28rem"/>\n  </div>\n  <div class="tob-title">\n    {{title}}\n  </div>\n  <div class="tob-actions">\n    <a :href="src">\n      <ti-icon value="download"/>\n      <span>{{\'download\'|i18n}}</span>\n    </a>\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      icon: {
        type: [String, Object],
        "default": null
      },
      title: {
        type: String,
        "default": null
      },
      src: {
        type: String,
        "default": null
      },
      width: {
        type: [String, Number],
        "default": ""
      },
      height: {
        type: [String, Number],
        "default": ""
      }
    },
    computed: {},
    methods: {}
  };
  Ti.Preload("ti/com/ti/media/binary/ti-media-binary.mjs", t);
}(), Ti.Preload("ti/com/ti/media/binary/_com.json", {
  name: "ti-media-binary",
  globally: !0,
  template: "./ti-media-binary.html",
  mixins: ["./ti-media-binary.mjs"]
}), Ti.Preload("ti/com/ti/media/image/ti-media-image.html", '<div class="ti-media-image" \n     :class="topClass"\n     :style="topStyle"\n     :fit-mode="fitMode"\n     v-drag-off>\n  <div class="as-con" ref="con">\n    <img ref="the_image"\n      :src="src"\n      :style="theImageStyle"\n      @load="onImageLoaded"\n      @dblclick.stop="onToggleImageFitMode">\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        naturalWidth: -1,
        naturalHeight: -1,
        viewportWidth: -1,
        viewportHeight: -1,
        fitMode: "contain",
        imgLoading: !0,
        inViewport: !1
      };
    },
    props: {
      src: {
        type: String,
        "default": null
      },
      width: {
        type: [String, Number],
        "default": ""
      },
      height: {
        type: [String, Number],
        "default": ""
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName({
          "as-fitmode-cover": "cover" == this.fitMode,
          "as-fitmode-contain": "contain" == this.fitMode,
          "is-img-loading": this.imgLoading,
          "is-in-viewport": this.inViewport
        }, this.className);
      },
      topStyle: function topStyle() {
        return {
          width: this.width,
          height: this.height
        };
      },
      theImageStyle: function theImageStyle() {
        var t = {
          visibility: "hidden",
          position: "relative"
        };

        if (this.naturalWidth > 0 && this.naturalHeight > 0) {
          var e = Ti.Rects.create({
            top: 0,
            left: 0,
            width: this.viewportWidth,
            height: this.viewportHeight
          }),
              i = Ti.Rects.create({
            top: 2,
            left: 2,
            width: this.naturalWidth,
            height: this.naturalHeight
          }).zoomTo({
            width: e.width,
            height: e.height,
            mode: this.fitMode
          });
          this.inViewport = e.contains(i, 2), t.width = i.width, t.height = i.height, t.left = (e.width - i.width) / 2, t.top = (e.height - i.height) / 2, t.visibility = "visible";
        }

        return Ti.Css.toStyle(t);
      }
    },
    methods: {
      onImageLoaded: function onImageLoaded() {
        var t = this.$refs.the_image;
        t && (this.naturalWidth = t.naturalWidth, this.naturalHeight = t.naturalHeight, this.imgLoading = !1);
      },
      onResizeViewport: function onResizeViewport() {
        var t = Ti.Rects.createBy(this.$refs.con);
        this.viewportWidth = t.width, this.viewportHeight = t.height;
      },
      onToggleImageFitMode: function onToggleImageFitMode() {
        this.fitMode = {
          contain: "cover",
          cover: "contain"
        }[this.fitMode];
      }
    },
    mounted: function mounted() {
      var _this115 = this;

      Ti.Viewport.watch(this, {
        resize: function resize() {
          _this115.onResizeViewport();
        }
      }), this.onResizeViewport();
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Viewport.unwatch(this);
    }
  };
  Ti.Preload("ti/com/ti/media/image/ti-media-image.mjs", t);
}(), Ti.Preload("ti/com/ti/media/image/_com.json", {
  name: "ti-media-image",
  globally: !0,
  template: "./ti-media-image.html",
  mixins: ["./ti-media-image.mjs"]
}), Ti.Preload("ti/com/ti/media/video/ti-media-video.html", '<div class="ti-media-video"\n    :class="topClass"\n    :style="topStyle"\n    v-drag-off>\n    <video ref="the_video"\n      :src="src"\n      controls\n      @loadeddata="onVideoLoaded"/>\n    <div class="tov-loading" v-if="loading">\n      <ti-loading/>\n    </div>\n</div>'), function () {
  var t = function t(_t76) {
    this.doResizeVideo();
  },
      e = {
    inheritAttrs: !1,
    data: function data() {
      return {
        naturalWidth: -1,
        naturalHeight: -1,
        fitMode: "none",
        loading: !0
      };
    },
    props: {
      src: {
        type: String,
        "default": null
      },
      width: {
        type: [String, Number],
        "default": ""
      },
      height: {
        type: [String, Number],
        "default": ""
      }
    },
    computed: {
      topClass: function topClass() {
        return {
          "as-none": "none" == this.fitMode,
          "as-contain": "contain" == this.fitMode,
          "as-loading": this.loading
        };
      },
      topStyle: function topStyle() {
        return {
          width: this.width,
          height: this.height
        };
      }
    },
    methods: {
      onVideoLoaded: function onVideoLoaded() {
        var t = this.$refs.the_video;
        this.naturalWidth = t.videoWidth, this.naturalHeight = t.videoHeight, this.loading = !1, this.doResizeVideo();
      },
      isContainsByViewport: function isContainsByViewport() {
        var t = Ti.Rects.createBy(this.$el),
            e = Ti.Rects.create(_objectSpread({}, t.raw("tl"), {
          width: this.naturalWidth,
          height: this.naturalHeight
        }));
        return t.contains(e);
      },
      doResizeVideo: function doResizeVideo() {
        this.isContainsByViewport() ? this.fitMode = "none" : this.fitMode = "contain";
      }
    },
    mounted: function mounted() {
      Ti.Viewport.watch(this, {
        resize: t
      });
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Viewport.unwatch(this);
    }
  };

  Ti.Preload("ti/com/ti/media/video/ti-media-video.mjs", e);
}(), Ti.Preload("ti/com/ti/media/video/_com.json", {
  name: "ti-media-video",
  globally: !0,
  template: "./ti-media-video.html",
  mixins: ["./ti-media-video.mjs"]
}), Ti.Preload("ti/com/ti/month/ti-month.html", '<div class="ti-col-data as-month" \n  :class="topClass" \n  :style="topStyle">\n  <ti-list v-for="list in theListGroup"\n    :key="list.key"\n    :data="list.data"\n    :display="\'text\'"\n    :current-id="list.currentId"\n    :cancelable="false"\n    @select="onListSelected(list.key, $event)"/>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      value: {
        type: [String, Number, Date],
        "default": null
      },
      height: {
        type: [Number, String],
        "default": 200
      },
      beginYear: {
        type: [Number, String],
        "default": 1970
      },
      endYear: {
        type: [Number, String],
        "default": new Date().getFullYear() + 1
      }
    },
    computed: {
      topClass: function topClass() {
        return this.getTopClass();
      },
      topStyle: function topStyle() {
        return {
          height: Ti.Css.toSize(this.height)
        };
      },
      theDate: function theDate() {
        return Ti.Types.toDate(this.value, null);
      },
      theListGroup: function theListGroup() {
        return [this.createList("year", 1 * this.beginYear, 1 * this.endYear, this.theDate ? this.theDate.getFullYear() : null, {
          reverse: !0
        }), this.createList("month", 0, 12, this.theDate ? this.theDate.getMonth() : null, {
          getText: function getText(t) {
            var e = Ti.DateTime.getMonthAbbr(t);
            return Ti.I18n.get(e);
          }
        })];
      }
    },
    methods: {
      createList: function createList(t, e, i, n) {
        var _ref58 = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {},
            _ref58$reverse = _ref58.reverse,
            a = _ref58$reverse === void 0 ? !1 : _ref58$reverse,
            _ref58$getText = _ref58.getText,
            s = _ref58$getText === void 0 ? function (t) {
          return t;
        } : _ref58$getText;

        var o = {
          key: t,
          currentId: "R-".concat(n),
          data: []
        };

        for (var _t77 = e; _t77 < i; _t77++) {
          o.data.push({
            id: "R-".concat(_t77),
            value: _t77,
            text: s(_t77)
          });
        }

        return a && o.data.reverse(), o;
      },
      onListSelected: function onListSelected(t) {
        var _ref59 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            e = _ref59.current;

        var i = _.get(e, "value") || 0,
            n = this.theDate || new Date(),
            a = {
          month: function month(t) {
            return new Date(n.getFullYear(), t);
          },
          year: function year(t) {
            return new Date(t, n.getMonth());
          }
        }[t](i);
        this.$notify("change", a);
      }
    }
  };
  Ti.Preload("ti/com/ti/month/ti-month.mjs", t);
}(), Ti.Preload("ti/com/ti/month/_com.json", {
  name: "ti-month",
  globally: !0,
  template: "./ti-month.html",
  mixins: ["./ti-month.mjs"],
  components: ["@com:ti/list"]
}), Ti.Preload("ti/com/ti/obj/pair/ti-obj-pair.html", '<div class="ti-obj-pair" \n    :class="TopClass">\n  \x3c!--\n    Empty\n  --\x3e\n  <ti-loading\n    v-if="isEmpty"\n      v-bind="blankAs"/>\n  \x3c!--\n    Show Pair\n  --\x3e\n  <template v-else>\n    <table>\n      <thead v-if="showHead">\n        <tr>\n          <th class="as-name" >{{nameText  | i18n}}</th>\n          <th class="as-value">{{valueText | i18n}}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr\n          v-for="pa in myPairList">\n          <td class="as-name" >{{pa.title}}</td>\n          <td class="as-value">{{pa.text || pa.value}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </template>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myPairList: []
      };
    },
    props: {
      value: {
        type: [String, Object],
        "default": void 0
      },
      nameText: {
        type: String,
        "default": "i18n:name"
      },
      valueText: {
        type: String,
        "default": "i18n:value"
      },
      fields: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      onlyFields: {
        type: Boolean,
        "default": !1
      },
      blankAs: {
        type: Object,
        "default": function _default() {
          return {
            icon: "im-plug",
            "default": void 0
          };
        }
      },
      showHead: {
        type: Boolean,
        "default": !0
      },
      autoI18n: {
        type: Boolean,
        "default": !0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      FieldsMap: function FieldsMap() {
        var t = {};

        var _iterator44 = _createForOfIteratorHelper(this.fields),
            _step44;

        try {
          for (_iterator44.s(); !(_step44 = _iterator44.n()).done;) {
            var e = _step44.value;
            e.name && (t[e.name] = e);
          }
        } catch (err) {
          _iterator44.e(err);
        } finally {
          _iterator44.f();
        }

        return t;
      },
      TheData: function TheData() {
        return this.value ? _.isString(this.value) ? JSON.parse(this.value) : _.isPlainObject(this.value) ? this.value : {} : {};
      },
      isEmpty: function isEmpty() {
        return _.isEmpty(this.TheData);
      }
    },
    methods: {
      evalThePairList: function evalThePairList() {
        var _this116 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee57() {
          var t, e, _iterator45, _step45, _i15, n, _t78, _t79, i;

          return regeneratorRuntime.wrap(function _callee57$(_context57) {
            while (1) {
              switch (_context57.prev = _context57.next) {
                case 0:
                  t = {};

                  _this116.joinPairs(t, [], _this116.TheData);

                  e = [];
                  _iterator45 = _createForOfIteratorHelper(_this116.fields);
                  _context57.prev = 4;

                  _iterator45.s();

                case 6:
                  if ((_step45 = _iterator45.n()).done) {
                    _context57.next = 19;
                    break;
                  }

                  _i15 = _step45.value;
                  n = t[_i15.name];

                  if (!n) {
                    _context57.next = 17;
                    break;
                  }

                  _t78 = _i15.title || _i15.name;

                  if (!(_this116.autoI18n && (_t78 = Ti.I18n.text(_t78)), n.title = _t78, _i15.dict)) {
                    _context57.next = 16;
                    break;
                  }

                  _t79 = Ti.DictFactory.CheckDict(_i15.dict);
                  _context57.next = 15;
                  return _t79.getItemText(n.value);

                case 15:
                  n.text = _context57.sent;

                case 16:
                  e.push(n);

                case 17:
                  _context57.next = 6;
                  break;

                case 19:
                  _context57.next = 24;
                  break;

                case 21:
                  _context57.prev = 21;
                  _context57.t0 = _context57["catch"](4);

                  _iterator45.e(_context57.t0);

                case 24:
                  _context57.prev = 24;

                  _iterator45.f();

                  return _context57.finish(24);

                case 27:
                  if (!_this116.onlyFields) {
                    i = [];
                    _.forEach(t, function (t) {
                      t.name && !_this116.FieldsMap[t.name] && (t.title = t.name, i.push(t));
                    }), e.push.apply(e, i);
                  }

                  _this116.myPairList = e;

                case 29:
                case "end":
                  return _context57.stop();
              }
            }
          }, _callee57, null, [[4, 21, 24, 27]]);
        }))();
      },
      joinPairs: function joinPairs() {
        var _this117 = this;

        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        var i = arguments.length > 2 ? arguments[2] : undefined;
        if (_.isPlainObject(i)) _.forEach(i, function (i, n) {
          _this117.joinPairs(t, _.concat(e, n), i);
        });else if (_.isArray(i)) for (var n = 0; n < i.length; n++) {
          var a = i[n];
          this.joinPairs(t, _.concat(e, n + ""), a);
        } else {
          var _n14 = e.join("."),
              _a4 = Ti.Types.toStr(i);

          t[_n14] = {
            name: _n14,
            value: _a4
          };
        }
      }
    },
    watch: {
      value: "evalThePairList"
    },
    mounted: function mounted() {
      this.evalThePairList();
    }
  };
  Ti.Preload("ti/com/ti/obj/pair/ti-obj-pair.mjs", t);
}(), Ti.Preload("ti/com/ti/obj/pair/_com.json", {
  name: "ti-obj-pair",
  globally: !0,
  template: "./ti-obj-pair.html",
  mixins: ["./ti-obj-pair.mjs"]
}), Ti.Preload("ti/com/ti/obj/thumb/ti-obj-thumb.html", '<div class="ti-obj-thumb" \n    :class="TopClass">\n  \x3c!--\n    Preview && Process Bar\n  --\x3e\n  <header>\n    \x3c!--Preview Part--\x3e\n    <div class="as-preview">\n      \x3c!-- Local Image --\x3e\n      <template v-if="isLocalImage">\n        <img ref="localImage" is-local-file>\n      </template>\n      \x3c!-- Local File --\x3e\n      <template v-else-if="isLocalFile">\n        <ti-icon :value="LocalFileIcon"/>\n      </template>\n      \x3c!-- Remote Image --\x3e\n      <template v-else-if="\'image\'==preview.type">\n        <img :src="preview.value">\n      </template>\n      \x3c!-- Icon --\x3e\n      <template v-else>\n        <ti-icon :value="preview"/>\n      </template>\n      \x3c!--Badge--\x3e\n      <template v-if="badges">\n        <div v-if="badges.NW" class="as-badge at-nw"><ti-icon :value="badges.NW"/></div>\n        <div v-if="badges.NE" class="as-badge at-ne"><ti-icon :value="badges.NE"/></div>\n        <div v-if="badges.SW" class="as-badge at-sw"><ti-icon :value="badges.SW"/></div>\n        <div v-if="badges.SE" class="as-badge at-se"><ti-icon :value="badges.SE"/></div>\n      </template>\n    </div>\n    \x3c!--Process bar--\x3e\n    <div v-if="isShowProgress"\n      class="as-progress ti-progress-bar">\n      <span class="bar-tip">{{ProgressTip}}</span>\n      <b class="bar-outer">\n        <em class="bar-inner" \n            :style="ProgressStyle"></em>\n      </b>\n    </div>\n  </header>\n  \x3c!--\n    Status Mask\n  --\x3e\n  <section class="as-status" v-if="status">\n    <ti-icon \n      :value="status"\n      font-size="2em"\n      width="3em"\n      height="3em"/>\n  </section>\n  \x3c!--\n    Footer for item title text\n  --\x3e\n  <footer v-if="showFooter">\n    <div class="as-title">\n      <a v-if="hasHref"\n        :href="TheHref"\n        @click.left.prevent="OnClickTitle">{{TheTitle}}</a>\n      <span v-else>{{TheTitle}}</span>\n    </div>\n  </footer>\n  \x3c!--\n    Remove Icon\n  --\x3e\n  <div \n    v-if="removeIcon"\n      class="as-remove"\n      @click.left.stop="OnRemove">\n      <ti-icon :value="removeIcon"/>\n  </div>\n</div>'), function () {
  var t = {
    props: {
      index: {
        type: Number,
        "default": -1
      },
      id: {
        type: String,
        "default": void 0
      },
      title: {
        type: String,
        "default": void 0
      },
      preview: {
        type: [String, Object],
        "default": "broken_image"
      },
      href: {
        type: String,
        "default": void 0
      },
      status: {
        type: [String, Object],
        "default": void 0
      },
      progress: {
        type: Number,
        "default": -1
      },
      visibility: {
        type: String,
        "default": "show"
      },
      showFooter: {
        type: Boolean,
        "default": !0
      },
      badges: {
        type: Object,
        "default": function _default() {
          return {
            NW: null,
            NE: null,
            SW: null,
            SE: null
          };
        }
      },
      removeIcon: {
        type: [String, Object],
        "default": void 0
      },
      onTitle: {
        type: [String, Function, Boolean],
        "default": void 0
      }
    },
    watch: {
      preview: function preview() {
        this.renderLocalFile();
      }
    },
    computed: {
      TopClass: function TopClass() {
        var _this118 = this;

        return this.getTopClass({
          "is-hide": "hide" == this.visibility,
          "is-weak": "weak" == this.visibility
        }, function () {
          return _this118.status ? "is-status-".concat(_this118.status) : null;
        });
      },
      PreviewType: function PreviewType() {
        return _.get(this.preview, "type") || "auto";
      },
      isLocalFile: function isLocalFile() {
        return "localFile" == this.PreviewType;
      },
      isLocalImage: function isLocalImage() {
        return this.isLocalFile && /^image\//.test(this.LocalFile.type);
      },
      LocalFile: function LocalFile() {
        if (this.isLocalFile) return this.preview.value;
      },
      LocalFileIcon: function LocalFileIcon() {
        if (this.isLocalFile) {
          var _t80 = this.LocalFile,
              e = {
            type: Ti.Util.getSuffixName(_t80.name),
            mime: _t80.type,
            race: Ti.Util.isNil(_t80.type) ? "DIR" : "FILE"
          };
          return Ti.Icons.get(e);
        }
      },
      isShowProgress: function isShowProgress() {
        return this.progress >= 0;
      },
      ProgressTip: function ProgressTip() {
        return Ti.S.toPercent(this.progress, {
          fixed: 1,
          auto: !1
        });
      },
      ProgressStyle: function ProgressStyle() {
        return {
          width: this.ProgressTip
        };
      },
      hasHref: function hasHref() {
        return !!this.href;
      },
      TheHref: function TheHref() {
        return encodeURI(this.href);
      },
      TheTitle: function TheTitle() {
        return Ti.I18n.text(this.title);
      }
    },
    methods: {
      OnRemove: function OnRemove() {
        var t = this.genEventContext();
        this.$notify("remove", t);
      },
      OnClickTitle: function OnClickTitle(t) {
        var e = this.genEventContext();
        !1 === this.onTitle ? t.stopPropagation() : _.isString(this.onTitle) ? this.$notify(this.onTitle, e) : _.isFunction(this.onTitle) && (t.stopPropagation(), this.onTitle(e));
      },
      genEventContext: function genEventContext() {
        return {
          index: this.index,
          id: this.id,
          title: this.title
        };
      },
      renderLocalFile: function renderLocalFile() {
        var _this119 = this;

        if (this.isLocalImage) {
          var _t81 = new FileReader();

          _t81.onload = function (t) {
            _this119.$refs.localImage && (_this119.$refs.localImage.src = t.target.result);
          }, _t81.readAsDataURL(this.preview.value);
        }
      }
    },
    mounted: function mounted() {
      this.renderLocalFile();
    }
  };
  Ti.Preload("ti/com/ti/obj/thumb/ti-obj-thumb.mjs", t);
}(), Ti.Preload("ti/com/ti/obj/thumb/_com.json", {
  name: "ti-obj-thumb",
  globally: !0,
  template: "./ti-obj-thumb.html",
  mixins: ["./ti-obj-thumb.mjs"]
}), Ti.Preload("ti/com/ti/obj/tile/ti-obj-tile.html", '<div class="ti-obj-tile" \n    :class="topClass">\n  \x3c!--\n    Preview Image\n  --\x3e\n  <div class="as-preview">\n    <a v-if="hasHref"\n      :href="href"\n      @click="onClick"\n      ><ti-icon \n        :value="preview"\n        :height="previewHeight"/></a>\n    <ti-icon v-else\n      :value="preview"\n      :height="previewHeight"/>\n  </div>\n  \x3c!--\n    Title\n  --\x3e\n  <div class="as-title">\n    <a v-if="hasHref"\n      :href="href"\n      @click="onClick"\n    >{{title}}</a>\n    \x3c!--\n      Without Href\n    --\x3e\n    <span v-else>{{title}}</span>\n  </div>\n  \x3c!--\n    Footer\n  --\x3e\n  <div v-if="hasBrief"\n    class="as-brief">\n    <span>{{brief}}</span>\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      index: {
        type: Number,
        "default": -1
      },
      id: {
        type: String,
        "default": null
      },
      preview: {
        type: [Object, String],
        "default": function _default() {
          return {
            type: "font",
            value: "broken_image"
          };
        }
      },
      previewHeight: {
        type: [String, Number],
        "default": null
      },
      hover: {
        type: String,
        "default": null,
        validator: function validator(t) {
          return !t || /^(up|down|left|right|zoom)$/.test(t);
        }
      },
      title: {
        type: String,
        "default": null
      },
      href: {
        type: String,
        "default": null
      },
      brief: {
        type: String,
        "default": null
      },
      emitBy: {
        type: Object,
        "default": function _default() {
          return {
            evantName: null,
            payload: {}
          };
        }
      }
    },
    computed: {
      topClass: function topClass() {
        var t = [this.className];
        return this.hover && (t.push("on-hover"), t.push("on-hover-".concat(this.hover))), t;
      },
      hasHref: function hasHref() {
        return !!this.href;
      },
      hasBrief: function hasBrief() {
        return !!this.brief;
      }
    },
    methods: {
      onClick: function onClick(t) {
        if (this.emitBy.eventName) {
          t.preventDefault();
          var e = this.emitBy.eventName,
              i = this.emitBy.payload || {};
          console.log("onClick", e, i), this.$notify(e, i);
        }
      }
    }
  };
  Ti.Preload("ti/com/ti/obj/tile/ti-obj-tile.mjs", t);
}(), Ti.Preload("ti/com/ti/obj/tile/_com.json", {
  name: "ti-obj-tile",
  globally: !0,
  template: "./ti-obj-tile.html",
  mixins: ["./ti-obj-tile.mjs"]
}), Ti.Preload("ti/com/ti/paging/button/ti-paging-button.html", '<div class="ti-paging-button"\n  :class="TopClass">\n  <div class="as-pg-btn is-prev" @click.left="JumpTo(PN-1)">\n    <i class="im im-angle-left"></i>\n    <span>{{\'i18n:prev\'|i18n}}</span>\n  </div>\n  <template \n    v-for="btn of BtnList">\n      <div\n        v-if="btn.ellipsis"\n          class="as-ellipsis">\n          <span>...</span></div>\n      <div\n        v-else\n          class="as-pg-btn"\n          :class="btn.className"\n          @click.left="JumpTo(btn.value)">\n          <span>{{btn.value}}</span></div>\n  </template>\n  <div class="as-pg-btn is-next" @click.left="JumpTo(PN+1)">\n    <span>{{\'i18n:next\'|i18n}}</span>\n    <i class="im im-angle-right"></i>\n  </div>\n</div>'), function () {
  var t = {
    props: {
      value: {
        type: Object,
        "default": function _default() {
          return {
            pn: 0,
            pgsz: 0,
            pgc: 0,
            sum: 0,
            count: 0
          };
        }
      },
      maxNumber: {
        type: Number,
        "default": 10
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-first": 1 == this.PN,
          "is-last": this.PN == this.LastPN
        });
      },
      PN: function PN() {
        return _.get(this.value, "pn");
      },
      LastPN: function LastPN() {
        return _.get(this.value, "pgc");
      },
      isFirstPage: function isFirstPage() {
        return 1 == this.PN;
      },
      isLastPage: function isLastPage() {
        return this.LastPN == this.PN;
      },
      BtnList: function BtnList() {
        var t = this.maxNumber - 2,
            e = [];
        if (this.LastPN - 2 < t) for (var _t82 = 1; _t82 <= this.LastPN; _t82++) {
          e.push(this.genBtn(_t82));
        } else {
          var i = t / 2,
              n = Math.round(this.PN - i),
              a = Math.round(this.PN + i);
          n <= 1 ? (a += 1 - n, n = 2) : a >= this.LastPN ? (n -= a - this.LastPN, a = this.LastPN - 1) : a--, e.push(this.genBtn(1)), n > 2 && e.push(this.genBtn(".."));

          for (var _t83 = n; _t83 <= a; _t83++) {
            e.push(this.genBtn(_t83));
          }

          a < this.LastPN - 2 && e.push(this.genBtn("..")), e.push(this.genBtn(this.LastPN));
        }
        return e;
      }
    },
    methods: {
      genBtn: function genBtn(t) {
        return ".." == t ? {
          ellipsis: !0
        } : {
          value: t,
          className: {
            "is-current": this.PN == t
          }
        };
      },
      JumpTo: function JumpTo(t) {
        t != this.PN && t >= 1 && t <= this.LastPN && this.$notify("change", {
          skip: this.value.pgsz * (t - 1),
          limit: this.value.pgsz,
          pn: t,
          pgsz: this.value.pgsz
        });
      }
    }
  };
  Ti.Preload("ti/com/ti/paging/button/ti-paging-button.mjs", t);
}(), Ti.Preload("ti/com/ti/paging/button/_com.json", {
  name: "ti-paging-button",
  globally: !0,
  template: "./ti-paging-button.html",
  mixins: ["./ti-paging-button.mjs"]
}), Ti.Preload("ti/com/ti/paging/jumper/ti-paging-jumper.html", '<div class="ti-paging-jumper"\n  :class="TopClass">\n  <div \n    class="pj-btn"\n    :class="getBtnClass(1)"\n    @click="OnJumpTo(1)">\n      <ti-icon value="zmdi-skip-previous"/>\n      <span class="it-text">{{\'paging-first\'|i18n}}</span></div>\n  <div \n    class="pj-btn"\n    :class="getBtnClass(value.pn-1)"\n    @click="OnJumpTo(value.pn-1)">\n      <ti-icon value="zmdi-chevron-left"/>\n      <span class="it-text">{{\'paging-prev\'|i18n}}</span></div>\n  <div \n    class="pj-current"\n    :class="PageNumberClass"\n    @click="OnClickCurrent">\n    <b>{{value.pn}}</b>\n  </div>\n  <div \n    class="pj-btn"\n    :class="getBtnClass(value.pn+1)"\n    @click="OnJumpTo(value.pn+1)">\n      <span class="it-text">{{\'paging-next\'|i18n}}</span>\n      <ti-icon value="zmdi-chevron-right"/></div>\n  <div \n    class="pj-btn"\n    :class="getBtnClass(value.pgc)"\n    @click="OnJumpTo(value.pgc)">\n      <span class="it-text">{{\'paging-last\'|i18n}}</span>\n      <ti-icon value="zmdi-skip-next"/></div>\n  <div\n    v-if="hasValue"\n      class="pj-sum"\n      :class="SumClass"\n      @click="OnClickSum">{{\'paging-sum\'|i18n(value)}}</div>\n</div>'), function () {
  var t = {
    props: {
      value: {
        type: Object,
        "default": function _default() {
          return {
            pn: 0,
            pgsz: 0,
            pgc: 0,
            sum: 0,
            count: 0
          };
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      hasValue: function hasValue() {
        return !_.isEmpty(this.value) && this.value.pn > 0;
      },
      PageNumberClass: function PageNumberClass() {
        return this.hasValue && this.value.pgc > 1 ? "is-enabled" : "is-disabled";
      },
      SumClass: function SumClass() {
        return this.hasValue && this.value.pgsz > 0 ? "is-enabled" : "is-disabled";
      }
    },
    methods: {
      isInvalidPageNumber: function isInvalidPageNumber(t) {
        return t <= 0 || t > this.value.pgc || t == this.value.pn;
      },
      getBtnClass: function getBtnClass(t) {
        return !this.hasValue || this.isInvalidPageNumber(t) ? "is-disabled" : "is-enabled";
      },
      OnJumpTo: function OnJumpTo(t) {
        this.isInvalidPageNumber(t) || this.$notify("change", {
          skip: this.value.pgsz * (t - 1),
          limit: this.value.pgsz,
          pn: t,
          pgsz: this.value.pgsz
        });
      },
      OnClickCurrent: function OnClickCurrent() {
        var _this120 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee58() {
          var t, e, i;
          return regeneratorRuntime.wrap(function _callee58$(_context58) {
            while (1) {
              switch (_context58.prev = _context58.next) {
                case 0:
                  if (!(_this120.value.pgc <= 1)) {
                    _context58.next = 2;
                    break;
                  }

                  return _context58.abrupt("return");

                case 2:
                  t = Ti.I18n.getf("paging-change-pn", _this120.value);
                  _context58.next = 5;
                  return Ti.Prompt(t, {
                    value: _this120.value.pn
                  });

                case 5:
                  e = _context58.sent;

                  if (!(!e || e == _this120.value.pn)) {
                    _context58.next = 8;
                    break;
                  }

                  return _context58.abrupt("return");

                case 8:
                  i = parseInt(e);

                  if (!(isNaN(i) || i <= 0 || i > _this120.value.pgc)) {
                    _context58.next = 14;
                    break;
                  }

                  t = Ti.I18n.getf("paging-change-pn-invalid", _this120.value);
                  _context58.next = 13;
                  return Ti.Alert(t, {
                    title: "i18n:warn",
                    type: "warn",
                    icon: "im-warning",
                    width: 420
                  });

                case 13:
                  return _context58.abrupt("return", void _context58.sent);

                case 14:
                  _this120.$notify("change", {
                    skip: _this120.value.pgsz * (i - 1),
                    limit: _this120.value.pgsz,
                    pn: i,
                    pgsz: _this120.value.pgsz
                  });

                case 15:
                case "end":
                  return _context58.stop();
              }
            }
          }, _callee58);
        }))();
      },
      OnClickSum: function OnClickSum() {
        var _this121 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee59() {
          var t, e, i;
          return regeneratorRuntime.wrap(function _callee59$(_context59) {
            while (1) {
              switch (_context59.prev = _context59.next) {
                case 0:
                  t = Ti.I18n.getf("paging-change-pgsz", _this121.value);
                  _context59.next = 3;
                  return Ti.Prompt(t, {
                    value: _this121.value.pgsz
                  });

                case 3:
                  e = _context59.sent;

                  if (!(!e || e == _this121.value.pgsz)) {
                    _context59.next = 6;
                    break;
                  }

                  return _context59.abrupt("return");

                case 6:
                  i = parseInt(e);

                  if (!(isNaN(i) || i <= 0)) {
                    _context59.next = 12;
                    break;
                  }

                  _context59.next = 10;
                  return Ti.Alert("i18n:paging-change-pgsz-invalid", {
                    title: "i18n:warn",
                    type: "warn",
                    icon: "im-warning",
                    width: 420
                  });

                case 10:
                  _context59.next = 13;
                  break;

                case 12:
                  _this121.$notify("change:pgsz", i), _this121.$notify("change", {
                    pn: 1,
                    pgsz: i
                  });

                case 13:
                case "end":
                  return _context59.stop();
              }
            }
          }, _callee59);
        }))();
      }
    }
  };
  Ti.Preload("ti/com/ti/paging/jumper/ti-paging-jumper.mjs", t);
}(), Ti.Preload("ti/com/ti/paging/jumper/_com.json", {
  name: "ti-paging-jumper",
  globally: !0,
  template: "./ti-paging-jumper.html",
  mixins: ["./ti-paging-jumper.mjs"]
}), Ti.Preload("ti/com/ti/roadblock/ti-roadblock.html", '<div class="ti-roadblock"\n  :class="TopClass">\n  <div class="as-main">\n    <div v-if="icon" class="as-icon">\n      <ti-icon :value="icon"/>\n    </div>\n    <div v-if="text" class="as-text">\n      <span>{{text | i18n}}</span>\n    </div>\n  </div>\n</div>'), function () {
  var t = {
    props: {
      icon: {
        type: String,
        "default": "fas-exclamation-triangle"
      },
      text: {
        type: String,
        "default": null
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      }
    }
  };
  Ti.Preload("ti/com/ti/roadblock/ti-roadblock.mjs", t);
}(), Ti.Preload("ti/com/ti/roadblock/_com.json", {
  name: "ti-roadblock",
  globally: !0,
  template: "./ti-roadblock.html",
  mixins: ["./ti-roadblock.mjs"],
  components: []
}), Ti.Preload("ti/com/ti/session/badge/ti-session-badge.html", '<div class="ti-session-badge"\n  :class="TopClass">\n  \x3c!--\n    Has Session, show account info\n  --\x3e\n  <template v-if="hasSession">\n    \x3c!--Avatar--\x3e\n    <div v-if="hasAvatar"\n      class="as-avatar">\n      <img :src="myAvatar"/>\n    </div>\n    \x3c!--User Icon--\x3e\n    <div v-else\n      class="as-icon">\n      <ti-icon :value="myIcon"/>\n    </div>\n    \x3c!--User Name--\x3e\n    <div class="as-name">\n      \x3c!--Name Event--\x3e\n      <a\n        v-if="nameEvent"\n          @click.left="$notify(nameEvent)">{{myName}}</a>\n      \x3c!--Name display--\x3e\n      <span\n        v-else>{{myName}}</span>\n    </div>\n    \x3c!--Links--\x3e\n    <div v-for="li in theLinks"\n      class="as-link">\n      \x3c!--Icon--\x3e\n      <ti-icon\n        v-if="li.icon"\n          class="it-icon"\n          :value="li.icon"/>\n      \x3c!--Text--\x3e\n      <a\n        @click.left="OnClickLink(li, $event)"\n        :href="li.href"\n        :target="li.newtab?\'_blank\':null">{{li.title|i18n}}</a>\n    </div>\n  </template>\n  \x3c!--\n    Without session, show login link\n  --\x3e\n  <template v-else>\n    <div v-if="loginIcon"\n      class="as-icon">\n      <ti-icon :value="loginIcon"/>\n    </div>\n    <div class="as-link">\n      <a @click="$notify(loginEvent)">{{\'login\'|i18n}}</a>\n    </div>\n  </template>\n</div>'), function () {
  var t = {
    props: {
      me: {
        type: Object,
        "default": null
      },
      avatarKey: {
        type: String,
        "default": null
      },
      avatarSrc: {
        type: String,
        "default": null
      },
      loginIcon: {
        type: String,
        "default": "zmdi-account-circle"
      },
      nameKeys: {
        type: [String, Array],
        "default": "name"
      },
      nameEvent: {
        type: String,
        "default": "go:dashboard"
      },
      loginEvent: {
        type: String,
        "default": "do:login"
      },
      logoutEvent: {
        type: String,
        "default": "do:logout"
      },
      links: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      autoSignLink: {
        type: Boolean,
        "default": !0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      theLinks: function theLinks() {
        var t = _.cloneDeep(this.links) || [];
        return this.autoSignLink && (this.hasSession ? t.push({
          title: "i18n:logout",
          emit: this.logoutEvent
        }) : t.push({
          title: "i18n:login",
          emit: this.loginEvent
        })), t;
      },
      myName: function myName() {
        if (this.me) return Ti.Util.getOrPick(this.me, this.nameKeys) || Ti.I18n.get("mine");
      },
      myIcon: function myIcon() {
        return this.me ? 2 == this.me.sex ? "im-user-female" : "im-user-male" : "far-user";
      },
      myAvatar: function myAvatar() {
        if (this.avatarSrc) return Ti.S.renderBy(this.avatarSrc, this.me);
      },
      hasAvatar: function hasAvatar() {
        return this.avatarSrc && this.avatarKey && this.me && this.me[this.avatarKey];
      },
      hasSession: function hasSession() {
        return !!this.me;
      }
    },
    methods: {
      OnClickLink: function OnClickLink(t, e) {
        t.emit && (e.preventDefault(), this.$notify(t.emit));
      }
    }
  };
  Ti.Preload("ti/com/ti/session/badge/ti-session-badge.mjs", t);
}(), Ti.Preload("ti/com/ti/session/badge/_com.json", {
  name: "ti-session-badge",
  globally: !0,
  template: "./ti-session-badge.html",
  mixins: ["./ti-session-badge.mjs"]
}), Ti.Preload("ti/com/ti/sheet/emoji/ti-sheet-emoji.html", '<div  class="ti-sheet-emoji" \n  :class="TopClass"\n  :style="TopStyle">\n  \x3c!--\n    Candidate List\n  --\x3e\n  <div class="as-list">\n    <div\n      v-for="li in TheDataSheet"\n        class="emoji-item"\n        @click.left="myValue=li.value">\n        <span>{{li.value}}</span>\n    </div>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myValue: null
      };
    },
    props: {
      value: {
        type: [String, Object, Number],
        "default": null
      },
      width: {
        type: [Number, String],
        "default": "100%"
      },
      height: {
        type: [Number, String],
        "default": "100%"
      },
      data: {
        type: [String, Array],
        "default": function _default() {
          return ["😀 😃 😄 😁 😆 😅 🤣 😂 🙂 🙃 😉 😊 😇", "🥰 😍 🤩 😘 😗 😚 😙 😋 😛 😜 🤪 😝 🤑", "🤗 🤭 🤫 🤔 🤐 🤨 😐 😑 😶 😏 😒 🙄 😬", "🤥 😌 😔 😪 🤤 😴 😷 🤒 🤕 🤢 🤮 🤧 🥵", "🥶 🥴 😵 🤯 🤠 🥳 😎 🤓 🧐 😕 😟 🙁 ☹️", "😮 😯 😲 😳 🥺 😦 😧 😨 😰 😥 😢 😭 😱", "😖 😣 😞 😓 😩 😫 🥱 😤 😡 😠 🤬 😈 👿", "💀 ☠️ 💩 🤡 👹 👺 👻 👽 👾 🤖 😺 😸 😹", "😻 😼 😽 🙀 😿 😾 🙈 🙉 🙊 "];
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TopStyle: function TopStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      hasValue: function hasValue() {
        return !!this.TheValue;
      },
      TheValue: function TheValue() {
        return this.myValue || this.value;
      },
      TheDataSheet: function TheDataSheet() {
        var t = [],
            e = _.flattenDeep(this.data).join("").replace(/[ ]/g, "");

        for (var i = 0; i < e.length; i += 2) {
          var n = e.substring(i, i + 2);
          t.push({
            value: n
          });
        }

        return t;
      }
    },
    methods: {
      OnClickTop: function OnClickTop() {
        this.notifyName && this.$notify(this.notifyName, this.notifyConf);
      }
    },
    watch: {
      myValue: function myValue() {
        this.$notify("change", this.myValue);
      }
    }
  };
  Ti.Preload("ti/com/ti/sheet/emoji/ti-sheet-emoji.mjs", t);
}(), Ti.Preload("ti/com/ti/sheet/emoji/_com.json", {
  name: "ti-sheet-emoji",
  globally: !0,
  template: "./ti-sheet-emoji.html",
  mixins: ["./ti-sheet-emoji.mjs"]
}), function () {
  function t() {
    var _ref60 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        t = _ref60.varName,
        e = _ref60.vars,
        i = _ref60.matched;

    if (i.startsWith("$$")) return i.substring(1);

    var n = /^(=)?([^?]+)(\?(.*))?$/.exec(t),
        a = "=" == n[1] ? e.vars : e.itemData,
        s = _.trim(n[2]),
        o = Ti.Util.fallbackNil(_.trim(n[4]), i),
        l = Ti.Util.getOrPick(a, s);

    return Ti.Util.fallback(l, o);
  }

  function e(i) {
    var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    if (_.isString(i)) {
      var _e29 = /^=>(.+)$/.exec(i);

      if (_e29) {
        return Ti.Util.genInvoking(_e29[1], {
          context: _objectSpread({}, n, {
            item: n.itemData
          }),
          partial: "left"
        })();
      }

      if (_e29 = /^\$\{=([^${}=]+)\}$/.exec(i)) {
        var _t84 = _.trim(_e29[1]);

        return ".." == _t84 ? n.itemData : "value" == _t84 ? n.value : Ti.Util.fallback(_.get(n.vars, _t84), i);
      }

      if (_e29 = /^(\((.+)\)\?)?(.+)$/.exec(i)) {
        var _i16 = _.trim(_e29[2]),
            a = _.trim(_e29[3]);

        return _i16 ? _.get(n.itemData, _i16) ? Ti.S.renderBy(a, n, {
          iteratee: t
        }) : null : Ti.S.renderBy(a, n, {
          iteratee: t
        });
      }

      return i;
    }

    if (_.isPlainObject(i)) {
      var _t85 = {};
      return _.forEach(i, function (i, a) {
        var s = e(i, n);
        "..." == a ? _.assign(_t85, s) : _t85[a] = s;
      }), _t85;
    }

    if (_.isArray(i)) {
      var _t86 = [];

      var _iterator46 = _createForOfIteratorHelper(i),
          _step46;

      try {
        for (_iterator46.s(); !(_step46 = _iterator46.n()).done;) {
          var _a5 = _step46.value;

          var _i17 = e(_a5, n);

          _t86.push(_i17);
        }
      } catch (err) {
        _iterator46.e(err);
      } finally {
        _iterator46.f();
      }

      return _t86;
    }

    return i;
  }

  var i = {
    evalFieldDisplayItem: function evalFieldDisplayItem() {
      var _this122 = this;

      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      var _ref61 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          e = _ref61.defaultKey;

      var i = function () {
        if (Ti.Util.isNil(t)) return e ? {
          key: e,
          comType: "ti-label"
        } : null;

        if (_.isPlainObject(t)) {
          var _i18 = _.assign({
            key: e,
            comType: "ti-label"
          }, t);

          if (_i18.transformer) {
            var _t87 = {
              context: _this122,
              partial: "right"
            };
            _i18.transformer = Ti.Util.genInvoking(_i18.transformer, _t87);
          }

          return _i18;
        }

        if (_.isArray(t)) return {
          key: t,
          comType: "ti-label"
        };
        if (!0 === t) return {
          key: e,
          comType: "ti-label"
        };

        if (_.isString(t)) {
          var _i19 = /^<([^:>=]*)(:([^>]+))?>$/.exec(t);

          if (_i19) return {
            key: _i19[1] || e || ":ti-icon",
            defaultAs: _i19[3] || void 0,
            comType: "ti-icon"
          };
          if (_i19 = /^(!)?[@#]([^\(]+)\(([^)]+)\)(:([^:]*)(:([^:]+))?)?$/.exec(t)) return {
            key: _i19[3] || e,
            comType: "ti-label",
            comConf: {
              dict: _i19[2],
              format: _i19[5] || void 0,
              className: _i19[7] || "is-nowrap",
              autoLoadDictIcon: "!" != _i19[1]
            }
          };
          if (_i19 = /^<=([^:]+)(:(.+))?>$/.exec(t)) return {
            key: _i19[3] || e || Symbol(t),
            comType: _i19[1]
          };

          if (_i19 = /^([^+-:>]+)(:([^+-:]*)(:([^:]+))?)?(([+-])>([^%]*))?$/.exec(t)) {
            var _t88 = _.trim(_i19[1] || _i19[0]),
                _e30 = _i19[3] || void 0,
                n = "+" == _i19[7],
                a = _.trim(_i19[8]);

            return {
              key: _t88,
              comType: "ti-label",
              comConf: {
                className: _i19[5] || "is-nowrap",
                newTab: n,
                href: a,
                format: _e30
              }
            };
          }

          return {
            key: t,
            comType: "ti-label"
          };
        }

        return t;
      }();

      if (i.dict) {
        var _Ti$DictFactory$expla3 = Ti.DictFactory.explainDictName(i.dict),
            _t89 = _Ti$DictFactory$expla3.name,
            _e31 = _Ti$DictFactory$expla3.vKey;

        i.$dict = Ti.DictFactory.CheckDict(_t89), i.$dictValueKey = _e31 || ".text";
      }

      return i;
    },
    evalDataForFieldDisplayItem: function evalDataForFieldDisplayItem() {
      var _arguments13 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee60() {
        var _ref62, _ref62$itemData, t, _ref62$displayItem, i, _ref62$vars, n, _ref62$autoIgnoreNil, a, _ref62$autoIgnoreBlan, s, _ref62$autoValue, o, l, r, d, c, h;

        return regeneratorRuntime.wrap(function _callee60$(_context60) {
          while (1) {
            switch (_context60.prev = _context60.next) {
              case 0:
                _ref62 = _arguments13.length > 0 && _arguments13[0] !== undefined ? _arguments13[0] : {}, _ref62$itemData = _ref62.itemData, t = _ref62$itemData === void 0 ? {} : _ref62$itemData, _ref62$displayItem = _ref62.displayItem, i = _ref62$displayItem === void 0 ? {} : _ref62$displayItem, _ref62$vars = _ref62.vars, n = _ref62$vars === void 0 ? {} : _ref62$vars, _ref62$autoIgnoreNil = _ref62.autoIgnoreNil, a = _ref62$autoIgnoreNil === void 0 ? !0 : _ref62$autoIgnoreNil, _ref62$autoIgnoreBlan = _ref62.autoIgnoreBlank, s = _ref62$autoIgnoreBlan === void 0 ? !0 : _ref62$autoIgnoreBlan, _ref62$autoValue = _ref62.autoValue, o = _ref62$autoValue === void 0 ? "value" : _ref62$autoValue, l = _ref62.uniqueKey;
                r = i, d = r.defaultAs;

                if (!(_.isArray(r.key) ? d = _.pick(t, r.key) : _.isString(r.key) && (d = ".." == r.key ? t : /^'[^']+'$/.test(r.key) ? r.key.substring(1, r.key.length - 1) : /^->(.+)$/.test(r.key) ? Ti.S.renderBy(r.key.substring(2), t) : Ti.Util.fallback(Ti.Util.getOrPickNoBlank(t, r.key), d)), _.isFunction(r.transformer) && (Ti.Util.isNil(d) && !r.transNil || (d = r.transformer(d))), s && Ti.S.isBlank(d) && Ti.Util.fallback(r.ignoreBlank, !0))) {
                  _context60.next = 4;
                  break;
                }

                return _context60.abrupt("return");

              case 4:
                if (!(a && Ti.Util.isNil(d) && Ti.Util.fallback(r.ignoreNil, !0))) {
                  _context60.next = 6;
                  break;
                }

                return _context60.abrupt("return");

              case 6:
                _context60.t0 = r.$dict;

                if (!_context60.t0) {
                  _context60.next = 11;
                  break;
                }

                _context60.next = 10;
                return r.$dict.getItemAs(r.$dictValueKey, d);

              case 10:
                d = _context60.sent;

              case 11:
                c = _.cloneDeep(r), h = {};
                return _context60.abrupt("return", (_.isFunction(r.comConf) ? h = _.assign({}, r.comConf(t)) : r.comConf && (h = e(r.comConf, {
                  vars: n,
                  itemData: t,
                  value: d
                })), o && _.isUndefined(h[o]) && (h[o] = d), c.comConf = h, c.uniqueKey = l || _.concat(c.key, c.comType).join("-"), c));

              case 13:
              case "end":
                return _context60.stop();
            }
          }
        }, _callee60);
      }))();
    }
  };
  Ti.Preload("ti/com/ti/support/field_display.mjs", i);
}(), function () {
  var t = {
    isSelectedItem: function isSelectedItem() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      var _ref63 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref63$value = _ref63.value,
          e = _ref63$value === void 0 ? null : _ref63$value,
          _ref63$multi = _ref63.multi,
          i = _ref63$multi === void 0 ? !1 : _ref63$multi;

      return i ? _.isArray(e) && _.indexOf(e, t.value) >= 0 : _.isEqual(e, t.value);
    },
    normalizeData: function normalizeData() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

      var _ref64 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref64$emptyItem = _ref64.emptyItem,
          e = _ref64$emptyItem === void 0 ? null : _ref64$emptyItem,
          _ref64$multi = _ref64.multi,
          i = _ref64$multi === void 0 ? !1 : _ref64$multi,
          _ref64$value = _ref64.value,
          n = _ref64$value === void 0 ? null : _ref64$value,
          _ref64$focusIndex = _ref64.focusIndex,
          a = _ref64$focusIndex === void 0 ? -1 : _ref64$focusIndex,
          _ref64$mapping = _ref64.mapping,
          s = _ref64$mapping === void 0 ? null : _ref64$mapping,
          _ref64$defaultIcon = _ref64.defaultIcon,
          o = _ref64$defaultIcon === void 0 ? null : _ref64$defaultIcon,
          _ref64$iteratee = _ref64.iteratee,
          l = _ref64$iteratee === void 0 ? null : _ref64$iteratee,
          _ref64$defaultTipKey = _ref64.defaultTipKey,
          r = _ref64$defaultTipKey === void 0 ? null : _ref64$defaultTipKey;

      var d = 0,
          c = [];

      if (!i && e) {
        var _t90 = _.cloneDeep(e);

        _t90.selected = _.isUndefined(_t90.value) || _.isNull(_t90.value) ? _.isNull(n) : this.isSelectedItem(_t90, {
          value: n,
          multi: i
        }), _.isFunction(l) && (_t90 = l(_t90, d) || _t90), c.push(_t90), d++;
      }

      var h = [];

      if (_.isArray(t)) {
        var _e32 = s ? _.defaults(_objectSpread({}, s), {
          icon: "icon",
          text: "text",
          value: "value",
          tip: "tip"
        }) : null;

        var _iterator47 = _createForOfIteratorHelper(t),
            _step47;

        try {
          for (_iterator47.s(); !(_step47 = _iterator47.n()).done;) {
            var _i20 = _step47.value;

            if (_.isPlainObject(_i20)) {
              var _t91 = void 0;

              !(_t91 = _e32 ? Ti.Util.translate(_i20, _e32) : _.cloneDeep(_i20)).tip && r && (_t91.tip = _i20[r]), h.push(_t91);
            } else h.push({
              icon: o,
              text: Ti.Types.toStr(_i20),
              value: _i20
            });
          }
        } catch (err) {
          _iterator47.e(err);
        } finally {
          _iterator47.f();
        }
      }

      for (var _t92 = 0; _t92 < h.length; _t92++) {
        var _e33 = h[_t92];
        _e33.index = _t92, _e33.focused = _t92 == a, _e33.icon = _e33.icon || o, _e33.selected = this.isSelectedItem(_e33, {
          value: n,
          multi: i
        }), _.isFunction(l) && (h[_t92] = l(_e33, _t92) || _e33);
      }

      return h;
    },
    matchItemByKey: function matchItemByKey() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "value";
      var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "equal";
      var n = arguments.length > 3 ? arguments[3] : undefined;
      var a = t[e],
          s = {
        equal: function equal() {
          return _.isEqual(a, n);
        },
        starts: function starts() {
          return _.startsWith(a, n);
        },
        contains: function contains() {
          if (_.isString(a)) return a.indexOf(n + "") >= 0;

          _.indexOf(a, n);
        }
      }[i];
      return !!_.isFunction(s) && s();
    },
    findItemInList: function findItemInList(t) {
      var _ref65 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref65$list = _ref65.list,
          e = _ref65$list === void 0 ? [] : _ref65$list,
          _ref65$matchValue = _ref65.matchValue,
          i = _ref65$matchValue === void 0 ? "equal" : _ref65$matchValue,
          _ref65$matchText = _ref65.matchText,
          n = _ref65$matchText === void 0 ? "off" : _ref65$matchText;

      if (_.isArray(e) && !_.isEmpty(e)) {
        var _iterator48 = _createForOfIteratorHelper(e),
            _step48;

        try {
          for (_iterator48.s(); !(_step48 = _iterator48.n()).done;) {
            var a = _step48.value;
            if (this.matchItemByKey(a, "value", i, t)) return a;
            if (this.matchItemByKey(a, "text", n, t)) return a;
          }
        } catch (err) {
          _iterator48.e(err);
        } finally {
          _iterator48.f();
        }
      }

      return null;
    },
    getSelectedItemIndex: function getSelectedItemIndex(t) {
      var _ref66 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref66$value = _ref66.value,
          e = _ref66$value === void 0 ? null : _ref66$value,
          _ref66$multi = _ref66.multi,
          i = _ref66$multi === void 0 ? !1 : _ref66$multi;

      var n = [],
          a = {
        value: e,
        multi: i
      };

      for (var _e34 = 0; _e34 < t.length; _e34++) {
        var _i21 = t[_e34];

        if (this.isSelectedItem(_i21, a)) {
          if (!this.multi) return _e34;
          n.push(_e34);
        }
      }

      return _.isEmpty(n) && !i ? -1 : n;
    }
  };
  Ti.Preload("ti/com/ti/support/formed_list_methods.mjs", t);
}(), function () {
  var t = {
    inject: ["$vars"],
    props: {
      index: {
        type: Number,
        "default": -1
      },
      rowId: {
        type: String,
        "default": null
      },
      data: null,
      changedId: {
        type: String,
        "default": null
      },
      currentId: {
        type: String,
        "default": null
      },
      checkedIds: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      checkable: {
        type: Boolean,
        "default": !1
      },
      selectable: {
        type: Boolean,
        "default": !0
      },
      openable: {
        type: Boolean,
        "default": !0
      },
      rowToggleKey: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      checkIcons: {
        type: Object,
        "default": function _default() {
          return {
            on: "fas-check-square",
            off: "far-square"
          };
        }
      }
    },
    computed: {
      getListItemClass: function getListItemClass() {
        var _this123 = this;

        return function () {
          for (var _len4 = arguments.length, t = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
            t[_key4] = arguments[_key4];
          }

          return _this123.getTopClass({
            "is-current": _this123.isCurrent,
            "is-checked": _this123.isChecked,
            "is-changed": _this123.isChanged,
            "no-checked": !_this123.isChecked
          }, t);
        };
      },
      isCurrent: function isCurrent() {
        return this.rowId == this.currentId;
      },
      isChanged: function isChanged() {
        return this.rowId == this.changedId;
      },
      isChecked: function isChecked() {
        return !!this.checkedIds[this.rowId];
      },
      theCheckIcon: function theCheckIcon() {
        return this.checkedIds[this.rowId] ? this.checkIcons.on : this.checkIcons.off;
      }
    },
    methods: {
      isRowToggleKey: function isRowToggleKey(t) {
        return _.indexOf(this.rowToggleKey, t) >= 0;
      },
      OnClickChecker: function OnClickChecker() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        this.checkable && this.$notify("checker", {
          rowId: this.rowId,
          shift: t.shiftKey,
          toggle: t.ctrlKey || t.metaKey
        });
      },
      OnClickRow: function OnClickRow() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var e = t.ctrlKey || t.metaKey;
        !this.selectable || this.isCurrent && this.isChecked && !e || this.$notify("select", {
          rowId: this.rowId,
          shift: t.shiftKey,
          toggle: e
        });
      },
      OnDblClickRow: function OnDblClickRow() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        this.openable && (t.stopPropagation(), this.$notify("open", {
          rowId: this.rowId
        }));
      },
      doAutoActived: function doAutoActived() {
        !this.isActived && this.isCurrent && this.setActived();
      }
    },
    watch: {
      isCurrent: function isCurrent() {
        this.doAutoActived();
      }
    },
    mounted: function mounted() {
      this.doAutoActived();
    }
  };
  Ti.Preload("ti/com/ti/support/list_item_mixins.mjs", t);
}(), function () {
  var t = {
    provide: function provide() {
      return {
        $vars: this.vars || {}
      };
    },
    data: function data() {
      return {
        myLastIndex: -1,
        myCurrentId: null,
        myCheckedIds: {}
      };
    },
    computed: {
      TopStyle: function TopStyle() {
        var t = this.width,
            e = this.height;
        return Ti.Css.toStyle({
          width: t,
          height: e
        });
      },
      hasRowToggleKey: function hasRowToggleKey() {
        return !_.isEmpty(this.rowToggleKey);
      },
      TheRowToggleKey: function TheRowToggleKey() {
        return _.without(_.concat(this.rowToggleKey), void 0);
      },
      getRowId: function getRowId() {
        return Ti.Util.genRowIdGetter(this.idBy);
      },
      getRowData: function getRowData() {
        return Ti.Util.genRowDataGetter(this.rawDataBy);
      },
      isDataEmpty: function isDataEmpty() {
        return !_.isArray(this.data) || _.isEmpty(this.data);
      },
      isAllChecked: function isAllChecked() {
        if (this.isDataEmpty) return !1;

        var _iterator49 = _createForOfIteratorHelper(this.TheData),
            _step49;

        try {
          for (_iterator49.s(); !(_step49 = _iterator49.n()).done;) {
            var _t93 = _step49.value;
            if (!this.theCheckedIds[_t93.id]) return !1;
          }
        } catch (err) {
          _iterator49.e(err);
        } finally {
          _iterator49.f();
        }

        return !0;
      },
      hasChecked: function hasChecked() {
        var _iterator50 = _createForOfIteratorHelper(this.data),
            _step50;

        try {
          for (_iterator50.s(); !(_step50 = _iterator50.n()).done;) {
            var _t94 = _step50.value;
            var e = this.getRowId(_t94);
            if (this.theCheckedIds[e]) return !0;
          }
        } catch (err) {
          _iterator50.e(err);
        } finally {
          _iterator50.f();
        }

        return !1;
      },
      theCurrentRowId: function theCurrentRowId() {
        return this.wrapRowId(this.currentId);
      },
      theCurrentId: function theCurrentId() {
        return this.puppetMode ? this.theCurrentRowId : this.myCurrentId;
      },
      theCheckedIds: function theCheckedIds() {
        return this.puppetMode ? this.getCheckedIdsMap(this.checkedIds) : this.myCheckedIds;
      },
      Dict: function Dict() {
        if (this.dict) {
          if (this.dict instanceof Ti.Dict) return this.dict;

          var _Ti$DictFactory$expla4 = Ti.DictFactory.explainDictName(this.dict),
              _t95 = _Ti$DictFactory$expla4.name;

          return Ti.DictFactory.CheckDict(_t95);
        }
      }
    },
    methods: {
      wrapRowId: function wrapRowId(t) {
        return _.isNumber(t) ? "" + t : t;
      },
      evalData: function evalData() {
        var _arguments14 = arguments,
            _this124 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee61() {
          var t, e, _t96, _i22, n, _e35, i;

          return regeneratorRuntime.wrap(function _callee61$(_context61) {
            while (1) {
              switch (_context61.prev = _context61.next) {
                case 0:
                  t = _arguments14.length > 0 && _arguments14[0] !== undefined ? _arguments14[0] : _.identity;
                  e = _this124.data;

                  if (!_this124.Dict) {
                    _context61.next = 31;
                    break;
                  }

                  if (!_.isString(e)) {
                    _context61.next = 9;
                    break;
                  }

                  _context61.next = 6;
                  return _this124.Dict.queryData(e);

                case 6:
                  e = _context61.sent;
                  _context61.next = 31;
                  break;

                case 9:
                  if (!_.isArray(e)) {
                    _context61.next = 28;
                    break;
                  }

                  _t96 = [];
                  _i22 = 0;

                case 12:
                  if (!(_i22 < e.length)) {
                    _context61.next = 25;
                    break;
                  }

                  n = e[_i22];

                  if (!_.isString(n)) {
                    _context61.next = 21;
                    break;
                  }

                  _context61.next = 17;
                  return _this124.Dict.getItem(n);

                case 17:
                  _e35 = _context61.sent;
                  _e35 && _t96.push(_e35);
                  _context61.next = 22;
                  break;

                case 21:
                  _t96.push(n);

                case 22:
                  _i22++;
                  _context61.next = 12;
                  break;

                case 25:
                  e = _t96;
                  _context61.next = 31;
                  break;

                case 28:
                  _context61.next = 30;
                  return _this124.Dict.getData();

                case 30:
                  e = _context61.sent;

                case 31:
                  i = [];
                  return _context61.abrupt("return", (_.forEach(e, function (e, n) {
                    var a = {
                      index: n,
                      id: _this124.getRowId(e, n),
                      rawData: _this124.getRowData(e),
                      item: e
                    };
                    a = t(a) || a, i.push(a);
                  }), i));

                case 33:
                case "end":
                  return _context61.stop();
              }
            }
          }, _callee61);
        }))();
      },
      findRowIndexById: function findRowIndexById(t) {
        var _iterator51 = _createForOfIteratorHelper(this.TheData),
            _step51;

        try {
          for (_iterator51.s(); !(_step51 = _iterator51.n()).done;) {
            var e = _step51.value;
            if (e.id == t) return e.index;
          }
        } catch (err) {
          _iterator51.e(err);
        } finally {
          _iterator51.f();
        }

        return -1;
      },
      findRowById: function findRowById(t) {
        var _iterator52 = _createForOfIteratorHelper(this.TheData),
            _step52;

        try {
          for (_iterator52.s(); !(_step52 = _iterator52.n()).done;) {
            var e = _step52.value;
            if (e.id == t) return e;
          }
        } catch (err) {
          _iterator52.e(err);
        } finally {
          _iterator52.f();
        }
      },
      getCurrentRow: function getCurrentRow() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.theCurrentId;
        return this.findRowById(t);
      },
      getCurrent: function getCurrent() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.theCurrentId;
        var e = this.getCurrentRow(t);
        return e ? e.rawData : null;
      },
      getCheckedRow: function getCheckedRow() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.theCheckedIds;
        var e = [];

        var _iterator53 = _createForOfIteratorHelper(this.TheData),
            _step53;

        try {
          for (_iterator53.s(); !(_step53 = _iterator53.n()).done;) {
            var i = _step53.value;
            t[i.id] && e.push(i);
          }
        } catch (err) {
          _iterator53.e(err);
        } finally {
          _iterator53.f();
        }

        return e;
      },
      getChecked: function getChecked() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.theCheckedIds;
        var e = this.getCheckedRow(t);
        return _.map(e, function (t) {
          return t.rawData;
        });
      },
      getEmitContext: function getEmitContext(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var i = [],
            n = null,
            a = -1;

        var _iterator54 = _createForOfIteratorHelper(this.TheData),
            _step54;

        try {
          for (_iterator54.s(); !(_step54 = _iterator54.n()).done;) {
            var s = _step54.value;
            s.id == t && (n = s.rawData, a = s.index), e[s.id] && i.push(s.rawData);
          }
        } catch (err) {
          _iterator54.e(err);
        } finally {
          _iterator54.f();
        }

        return {
          current: n,
          currentId: t,
          currentIndex: a,
          checked: i,
          checkedIds: e
        };
      },
      selectRow: function selectRow(t) {
        var _ref67 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            _ref67$quiet = _ref67.quiet,
            e = _ref67$quiet === void 0 ? !1 : _ref67$quiet,
            i = _ref67.payload;

        var n = {},
            a = null;
        this.autoCheckCurrent ? (n = t ? _defineProperty({}, t, !0) : {}, a = t || null) : (n = _.cloneDeep(this.myCheckedIds), a = t);
        var s = this.getEmitContext(a, n);
        this.puppetMode || (this.myCheckedIds = n, this.myCurrentId = a), this.myLastIndex = this.findRowIndexById(t), e || (_.defaults(s, i), this.doNotifySelect(s));
      },
      selectRowByIndex: function selectRowByIndex(t, e) {
        var i = t;

        if (this.scrollIndex && (i = Ti.Num.scrollIndex(t, this.TheData.length)), _.inRange(i, 0, this.TheData.length)) {
          var _t97 = this.TheData[i];
          this.selectRow(_t97.id, e);
        }
      },
      selectPrevRow: function selectPrevRow(t) {
        this.selectRowByIndex(Math.max(-1, this.myLastIndex - 1), t);
      },
      selectNextRow: function selectNextRow(t) {
        this.selectRowByIndex(this.myLastIndex + 1, t);
      },
      selectRowsToCurrent: function selectRowsToCurrent(t) {
        var e = _.cloneDeep(this.theCheckedIds),
            i = this.theCurrentId,
            n = this.findRowIndexById(t);

        if (n >= 0) {
          var _t98 = Math.min(n, this.myLastIndex),
              a = Math.max(n, this.myLastIndex);

          _t98 < 0 && (_t98 = 0);

          for (var _i23 = _t98; _i23 <= a; _i23++) {
            e[this.TheData[_i23].id] = !0;
          }

          var s = this.getEmitContext(i, e);
          this.puppetMode || (this.myCheckedIds = e, this.myCurrentId = i), this.myLastIndex = n, this.doNotifySelect(s);
        }
      },
      checkRow: function checkRow(t) {
        var e = _.cloneDeep(this.theCheckedIds),
            i = this.theCurrentId,
            n = this.myLastIndex,
            a = this.findRowIndexById(t);

        if (_.isUndefined(t)) e = {}, _.forEach(this.TheData, function (t) {
          e[t.id] = !0;
        });else if (_.isArray(t)) {
          var _i24 = _.last(t);

          _.forEach(t, function (t) {
            e[t] = !0;
          }), this.autoCheckCurrent && (n = this.findRowIndexById(_i24));
        } else e[t] = !0, this.autoCheckCurrent && (n = a);
        var s = this.getEmitContext(i, e);
        this.puppetMode || (this.myCheckedIds = e, this.myCurrentId = i), this.myLastIndex = a, this.doNotifySelect(s);
      },
      cancelRow: function cancelRow(t) {
        var e = _.cloneDeep(this.theCheckedIds),
            i = this.theCurrentId,
            n = -1;

        _.isUndefined(t) ? (e = {}, i = null) : (n = this.findRowIndexById(t), e[t] = !1, this.autoCheckCurrent && i == t && (i = null));
        var a = this.getEmitContext(i, e);
        this.puppetMode || (this.myCheckedIds = e, this.myCurrentId = i, this.myLastIndex = n), this.doNotifySelect(a);
      },
      toggleRow: function toggleRow(t) {
        this.theCheckedIds[t] ? this.cancelRow(t) : this.checkRow(t);
      },
      doNotifySelect: function doNotifySelect(t) {
        this.$notify("select", t), _.isFunction(this.onSelect) && this.onSelect(t);
      },
      OnRowCheckerClick: function OnRowCheckerClick() {
        var _ref69 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref69.rowId,
            e = _ref69.shift;

        this.multi ? e ? this.selectRowsToCurrent(t) : this.toggleRow(t) : this.selectRow(t);
      },
      OnRowSelect: function OnRowSelect() {
        var _ref70 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref70.rowId,
            e = _ref70.shift,
            i = _ref70.toggle;

        e && this.multi ? this.selectRowsToCurrent(t) : i && this.multi ? this.toggleRow(t) : Ti.Util.isNil(t) || this.autoCheckCurrent ? this.selectRow(t) : this.toggleRow(t);
      },
      OnRowOpen: function OnRowOpen() {
        var _ref71 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref71.rowId;

        var e = this.findRowById(t);
        e && (this.$notify("open", e), _.isFunction(this.onOpen) && this.onOpen(e));
      },
      getCheckedIdsMap: function getCheckedIdsMap() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var e = {};
        return _.isArray(t) ? _.forEach(t, function (t) {
          e[t] = !0;
        }) : _.forEach(t, function (t, i) {
          t && (e[i] = !0);
        }), this.autoCheckCurrent && !Ti.Util.isNil(this.theCurrentId) && (e[this.theCurrentId] = !0), e;
      },
      syncCurrentId: function syncCurrentId() {
        this.puppetMode || this.theCurrentId == this.theCurrentRowId ? this.myLastIndex = this.findRowIndexById(this.theCurrentRowId) : this.selectRow(this.theCurrentRowId, {
          quiet: !0
        });
      },
      syncCheckedIds: function syncCheckedIds() {
        this.puppetMode || (this.myCheckedIds = this.getCheckedIdsMap(this.checkedIds));
      }
    },
    watch: {
      currentId: function currentId() {
        this.syncCurrentId();
      },
      checkedIds: function checkedIds() {
        this.syncCheckedIds();
      },
      data: function data() {
        this.theCurrentId && (this.myLastIndex = this.findRowIndexById(this.theCurrentId));
      }
    },
    mounted: function () {
      var _mounted8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee62() {
        return regeneratorRuntime.wrap(function _callee62$(_context62) {
          while (1) {
            switch (_context62.prev = _context62.next) {
              case 0:
                this.syncCheckedIds(), this.syncCurrentId();

              case 1:
              case "end":
                return _context62.stop();
            }
          }
        }, _callee62, this);
      }));

      function mounted() {
        return _mounted8.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/ti/support/list_mixins.mjs", t);
}(), function () {
  var t = {
    data: {
      type: [Array, String],
      "default": function _default() {
        return [];
      }
    },
    dict: {
      type: [String, Ti.Dict],
      "default": null
    },
    idBy: {
      type: [String, Function],
      "default": "id"
    },
    rawDataBy: {
      type: [Object, String, Function],
      "default": _.identity
    },
    currentId: {
      type: [String, Number],
      "default": null
    },
    checkedIds: {
      type: [Array, Object],
      "default": function _default() {
        return [];
      }
    },
    changedId: {
      type: String,
      "default": null
    },
    vars: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },
    multi: {
      type: Boolean,
      "default": !1
    },
    autoCheckCurrent: {
      type: Boolean,
      "default": !0
    },
    rowToggleKey: {
      type: [String, Array],
      "default": function _default() {
        return ["SPACE"];
      }
    },
    checkable: {
      type: Boolean,
      "default": !1
    },
    selectable: {
      type: Boolean,
      "default": !0
    },
    openable: {
      type: Boolean,
      "default": !0
    },
    cancelable: {
      type: Boolean,
      "default": !0
    },
    hoverable: {
      type: Boolean,
      "default": !1
    },
    puppetMode: {
      type: Boolean,
      "default": !1
    },
    scrollIndex: {
      type: Boolean,
      "default": !1
    },
    onSelect: {
      type: Function,
      "default": void 0
    },
    onOpen: {
      type: Function,
      "default": void 0
    },
    blankAs: {
      type: Object,
      "default": function _default() {
        return {
          icon: "fas-disease",
          text: "empty-data"
        };
      }
    },
    blankClass: {
      type: String,
      "default": "as-big-mask",
      validator: function validator(t) {
        return /^as-(big|hug|big-mask|mid-tip)$/.test(t);
      }
    },
    width: {
      type: [Number, String],
      "default": null
    },
    height: {
      type: [Number, String],
      "default": null
    }
  };
  Ti.Preload("ti/com/ti/support/list_props.mjs", t);
}(), function () {
  var t = {
    value: null,
    options: {
      type: [Array, Function, String, Ti.Dict],
      "default": function _default() {
        return [];
      }
    },
    valueBy: {
      type: [String, Function],
      "default": void 0
    },
    textBy: {
      type: [String, Function],
      "default": void 0
    },
    iconeBy: {
      type: [String, Function],
      "default": void 0
    },
    multi: !1,
    allowEmpty: {
      type: Boolean,
      "default": !0
    },
    autoSplitValue: {
      type: [Boolean, String],
      "default": !0
    },
    defaultIcon: {
      type: String,
      "default": null
    },
    emptylAs: {
      "default": null
    },
    width: {
      type: [Number, String],
      "default": null
    },
    height: {
      type: [Number, String],
      "default": null
    }
  };
  Ti.Preload("ti/com/ti/switcher/ti-switcher-props.mjs", t);
}(), Ti.Preload("ti/com/ti/switcher/ti-switcher.html", '<div class="ti-switcher"\n  :class="TopClass">\n  \x3c!--\n    Show Loading\n  --\x3e\n  <ti-icon\n    v-if="loading"\n    value="zmdi-settings zmdi-hc-spin"/>\n  \x3c!--\n    Options\n  --\x3e\n  <div v-else\n    class="switcher-con">\n    <ul>\n      <li v-for="it in TheItems" \n        :key="it.value"\n        :class="it.className"\n        @click="OnClickItem(it, $event)"\n        @mousedown="myFocusIndex=it.index;">\n        <ti-icon class="it-icon"\n          size=".8em"\n          v-if="it.icon" \n          :value="it.icon"/>\n        <span\n          class="it-text">{{it.text|i18n}}</span>\n      </li>\n    </ul>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        loading: !1,
        myOptionsData: [],
        myValueMap: {},
        myLastIndex: 0,
        myFocusIndex: -1
      };
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      Dict: function Dict() {
        var _this125 = this;

        if (this.options instanceof Ti.Dict) return this.options;

        if (_.isString(this.options)) {
          var _t99 = Ti.DictFactory.DictReferName(this.options);

          if (_t99) return Ti.DictFactory.CheckDict(_t99, function (_ref72) {
            var t = _ref72.loading;
            _this125.loading = t;
          });
        }

        return Ti.DictFactory.GetOrCreate({
          data: this.options,
          getValue: Ti.Util.genGetter(this.valueBy || "value"),
          getText: Ti.Util.genGetter(this.textBy || "text|name"),
          getIcon: Ti.Util.genGetter(this.iconBy || "icon")
        }, {
          hooks: function hooks(_ref73) {
            var t = _ref73.loading;
            return _this125.loading = t;
          }
        });
      },
      TheItems: function TheItems() {
        var _this126 = this;

        return _.map(this.myOptionsData, function (t, e) {
          var i = _this126.Dict.getValue(t);

          return {
            index: e,
            className: {
              "is-selected": _this126.myValueMap[i],
              "is-focused": e == _this126.myFocusIndex
            },
            text: _this126.Dict.getText(t),
            value: i,
            icon: _this126.Dict.getIcon(t) || _this126.defaultIcon
          };
        });
      }
    },
    methods: {
      OnClickItem: function OnClickItem(_ref74, i) {
        var t = _ref74.value,
            e = _ref74.index;
        var n = i.ctrlKey || i.metaKey;
        i.shiftKey && this.multi ? this.selectItemsToCurrent(t, e) : n && this.multi ? this.toggleItem(t) : this.allowEmpty ? this.toggleItem(t) : this.myValueMap = _defineProperty({}, t, !0), this.myLastIndex = e, this.tryNotifyChanged();
      },
      findItemIndexByValue: function findItemIndexByValue(t) {
        var _iterator55 = _createForOfIteratorHelper(this.TheItems),
            _step55;

        try {
          for (_iterator55.s(); !(_step55 = _iterator55.n()).done;) {
            var e = _step55.value;
            if (e.value == t) return e.index;
          }
        } catch (err) {
          _iterator55.e(err);
        } finally {
          _iterator55.f();
        }

        return -1;
      },
      selectItemsToCurrent: function selectItemsToCurrent(t) {
        var e = _.cloneDeep(this.myValueMap),
            i = this.findItemIndexByValue(t);

        if (i >= 0) {
          var _t100 = Math.min(i, this.myLastIndex),
              n = Math.max(i, this.myLastIndex);

          _t100 < 0 && (_t100 = 0);

          for (var _i25 = _t100; _i25 <= n; _i25++) {
            e[this.TheItems[_i25].value] = !0;
          }
        }

        this.myValueMap = e;
      },
      toggleItem: function toggleItem(t) {
        var e = this.myValueMap[t];
        this.multi ? this.myValueMap = _.assign({}, this.myValueMap, _defineProperty({}, t, !e)) : this.myValueMap = _defineProperty({}, t, !e);
      },
      tryNotifyChanged: function tryNotifyChanged() {
        var t = Ti.Util.truthyKeys(this.myValueMap);

        if (!_.isEqual(t, this.Values)) {
          var e = this.multi ? t : t.join(",");
          this.$notify("change", e);
        }
      },
      reloadMyOptionsData: function reloadMyOptionsData() {
        var _this127 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee63() {
          return regeneratorRuntime.wrap(function _callee63$(_context63) {
            while (1) {
              switch (_context63.prev = _context63.next) {
                case 0:
                  _context63.next = 2;
                  return _this127.Dict.getData();

                case 2:
                  _this127.myOptionsData = _context63.sent;

                case 3:
                case "end":
                  return _context63.stop();
              }
            }
          }, _callee63);
        }))();
      },
      reloadMyValueMap: function reloadMyValueMap() {
        var t = null;
        this.autoSplitValue && (t = _.isBoolean(this.autoSplitValue) ? /[:,;\t\n\/]+/g : this.autoSplitValue);
        var e = Ti.S.toArray(this.value, {
          sep: t
        }),
            i = {};
        _.forEach(e, function (t) {
          return i[t] = !0;
        }), this.myValueMap = i;
      }
    },
    watch: {
      options: {
        handler: "reloadMyOptionsData",
        immediate: !0
      },
      value: {
        handler: "reloadMyValueMap",
        immediate: !0
      }
    },
    mounted: function () {
      var _mounted9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee64() {
        var _this128 = this;

        return regeneratorRuntime.wrap(function _callee64$(_context64) {
          while (1) {
            switch (_context64.prev = _context64.next) {
              case 0:
                Ti.Dom.watchDocument("mouseup", function () {
                  return _this128.myFocusIndex = -1;
                });

              case 1:
              case "end":
                return _context64.stop();
            }
          }
        }, _callee64);
      }));

      function mounted() {
        return _mounted9.apply(this, arguments);
      }

      return mounted;
    }(),
    beforeDestroy: function beforeDestroy() {
      Ti.Dom.unwatchDocument("mouseup", this.__on_mouseup);
    }
  };
  Ti.Preload("ti/com/ti/switcher/ti-switcher.mjs", t);
}(), Ti.Preload("ti/com/ti/switcher/_com.json", {
  name: "ti-switcher",
  globally: !0,
  template: "./ti-switcher.html",
  props: "./ti-switcher-props.mjs",
  mixins: ["./ti-switcher.mjs"]
}), Ti.Preload("ti/com/ti/table/com/table-row/com/table-cell/table-cell.html", '<td class="table-cell"\n  :class="TopClass"\n  :col-index="index"\n  v-ti-activable>\n  <div class="cell-wrapper"\n    :class="WrapperClass">\n    \x3c!--Slot for first column--\x3e\n    <slot></slot>\n    \x3c!--Fields--\x3e\n    <div class="cell-con">\n      <component \n        v-for="(it, index) in cellItems"\n          :class="\'item-\'+index"\n          :key="it.uniqueKey"\n          :is="it.comType"\n          v-bind="it.comConf"\n          @change="OnItemChanged(it, $event)"/>\n    </div>\n  </div>\n</td>'), function () {
  var t = {
    inject: ["$table"],
    data: function data() {
      return {
        isEditingMode: !1,
        cellItems: [],
        myCellSize: -1
      };
    },
    props: {
      index: {
        type: Number,
        "default": -1
      },
      rowId: {
        type: String,
        "default": null
      },
      rowIndex: {
        type: Number,
        "default": -1
      },
      title: {
        type: String,
        "default": null
      },
      nowrap: {
        type: Boolean,
        "default": !0
      },
      display: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      name: {
        type: [String, Array],
        "default": null
      },
      type: {
        type: String,
        "default": "String"
      },
      dict: {
        type: String,
        "default": "String"
      },
      comType: {
        type: String,
        "default": null
      },
      comConf: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      serializer: {
        type: Function,
        "default": _.identity
      },
      transformer: {
        type: Function,
        "default": _.identity
      },
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      isCurrent: {
        type: Boolean,
        "default": !1
      },
      isHover: {
        type: Boolean,
        "default": !1
      },
      isChecked: {
        type: Boolean,
        "default": !1
      },
      ignoreNil: {
        type: Boolean,
        "default": !0
      },
      focusBy: {
        type: String,
        "default": "focus"
      }
    },
    computed: {
      TopClass: function TopClass() {
        var t = this.className && this.className.indexOf("align-") >= 0;
        return this.getTopClass({
          "has-align": t,
          "not-align": !t
        });
      },
      WrapperClass: function WrapperClass() {
        return {
          "is-nowrap": this.nowrap,
          "is-editing-mode": this.isEditingMode
        };
      },
      theCurrentDisplayItems: function theCurrentDisplayItems() {
        if (this.isActived && this.comType || _.isEmpty(this.display)) {
          this.isEditingMode = !0;

          var _t101 = _.assign({}, this.comConf);

          return this.focusBy && (_t101[this.focusBy] = "${=isActived}"), [{
            comType: this.comType,
            comConf: _t101,
            key: this.name,
            type: this.type,
            dict: this.dict,
            transformer: this.transformer,
            ignoreNil: !1
          }];
        }

        return this.isEditingMode = !1, this.display;
      }
    },
    methods: {
      evalCellDisplayItems: function evalCellDisplayItems() {
        var _this129 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee65() {
          var t, _e36, _i26, n, e, i;

          return regeneratorRuntime.wrap(function _callee65$(_context65) {
            while (1) {
              switch (_context65.prev = _context65.next) {
                case 0:
                  t = [];
                  _e36 = 0;

                case 2:
                  if (!(_e36 < _this129.theCurrentDisplayItems.length)) {
                    _context65.next = 11;
                    break;
                  }

                  _i26 = _this129.theCurrentDisplayItems[_e36];
                  _context65.next = 6;
                  return _this129.evalDataForFieldDisplayItem({
                    itemData: _this129.data,
                    displayItem: _i26,
                    vars: {
                      rowId: _this129.rowId,
                      isCurrent: _this129.isCurrent
                    },
                    autoIgnoreNil: !0,
                    uniqueKey: "row".concat(_this129.rowId, "-cell").concat(_this129.index, "-").concat(_e36)
                  });

                case 6:
                  n = _context65.sent;
                  n && t.push(n);

                case 8:
                  _e36++;
                  _context65.next = 2;
                  break;

                case 11:
                  e = Ti.Util.pureCloneDeep(_this129.cellItems), i = Ti.Util.pureCloneDeep(t);
                  _.isEqual(e, i) || (_this129.cellItems = t);

                case 13:
                case "end":
                  return _context65.stop();
              }
            }
          }, _callee65);
        }))();
      },
      OnItemChanged: function OnItemChanged(t, e) {
        this.$table.$notify("cell:item:change", {
          rowId: this.rowId,
          cellIndex: this.index,
          index: this.rowIndex,
          name: t.key,
          value: e
        });
      }
    },
    watch: {
      data: {
        handler: "evalCellDisplayItems",
        immediate: !0
      },
      isCurrent: "evalCellDisplayItems"
    }
  };
  Ti.Preload("ti/com/ti/table/com/table-row/com/table-cell/table-cell.mjs", t);
}(), Ti.Preload("ti/com/ti/table/com/table-row/com/table-cell/_com.json", {
  name: "table-cell",
  globally: !1,
  template: "./table-cell.html",
  methods: "@com:ti/support/field_display.mjs",
  mixins: ["./table-cell.mjs"],
  components: ["@com:ti/label"]
}), Ti.Preload("ti/com/ti/table/com/table-row/table-row.html", '<tr class="table-row"\n  :class="TopClass"\n  @click.left="OnClickRow"\n  @dblclick.left="OnDblClickRow"\n  v-ti-activable>\n  \x3c!--\n    Cells\n  --\x3e\n  <table-cell v-for="fld in fields"\n    :key="fld.index"\n    v-bind="fld"\n    :row-id="rowId"\n    :row-index="index"\n    :is-current="isCurrent"\n    :is-hover="isHover"\n    :is-checked="isChecked"\n    :data="data">\n    <template v-if="fld.index == 0">\n      <div class="table-row-head">\n        \x3c!--current actived row indicator--\x3e\n        <div class="row-actived-indicator"></div>\n        \x3c!-- Indents --\x3e\n        <div v-for="n in indent"\n            class="row-indent"></div>\n        \x3c!--ICON: Handler--\x3e\n        <template v-if="icon">\n          <ti-icon\n            v-if="hasRealIcon"\n              class="row-icon"\n              :value="icon"\n              @click.native.left.stop="OnClickIcon"/>\n          <div v-else\n            class="row-icon"></div>\n        </template>\n        \x3c!--ICON: Checker--\x3e\n        <ti-icon v-if="checkable"\n            class="row-checker"\n            :value="theCheckIcon"\n            @click.native.left.stop="OnClickChecker"/>\n      </div>\n    </template>\n  </table-cell>\n</tr>'), function () {
  var t = {
    props: {
      indent: {
        type: Number,
        "default": 0
      },
      icon: {
        type: [Boolean, String],
        "default": null
      },
      fields: {
        type: Array,
        "default": function _default() {
          return [];
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getListItemClass({
          "is-hover": this.isHover
        }, "row-indent-".concat(this.indent));
      },
      isHover: function isHover() {
        return this.hoverId && this.rowId == this.hoverId;
      },
      hasRealIcon: function hasRealIcon() {
        return this.icon && _.isString(this.icon);
      }
    },
    methods: {
      OnClickIcon: function OnClickIcon(t) {
        this.$notify("icon", {
          rowId: this.rowId,
          shift: t.shiftKey,
          toggle: t.ctrlKey || t.metaKey
        });
      }
    }
  };
  Ti.Preload("ti/com/ti/table/com/table-row/table-row.mjs", t);
}(), Ti.Preload("ti/com/ti/table/com/table-row/_com.json", {
  name: "table-row",
  globally: !1,
  template: "./table-row.html",
  mixins: ["@com:ti/support/list_item_mixins.mjs", "./table-row.mjs"],
  components: ["./com/table-cell"]
}), function () {
  var t = {
    iconBy: {
      type: [String, Function],
      "default": null
    },
    indentBy: {
      type: [String, Function],
      "default": null
    },
    fields: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    head: {
      type: String,
      "default": "frozen",
      validator: function validator(t) {
        return Ti.Util.isNil(t) || /^(frozen|none|normal)$/.test(t);
      }
    },
    border: {
      type: String,
      "default": "cell",
      validator: function validator(t) {
        return /^(row|column|cell|none)$/.test(t);
      }
    },
    autoScrollIntoView: {
      type: Boolean,
      "default": !0
    }
  };
  Ti.Preload("ti/com/ti/table/ti-table-props.mjs", t);
}(), function () {
  var t = {
    data: function data() {
      return {
        myViewportWidth: 0,
        myTableWidth: 0,
        myColSizes: {
          priHead: [],
          priBody: [],
          primary: [],
          fixeds: [],
          amended: []
        },
        myCellsReady: !1,
        myCellsReport: {},
        I_am_in_resizing: !1
      };
    },
    methods: {
      reportReady: function reportReady() {
        var _this130 = this;

        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;
        var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !1;
        var n = "R".concat(t, "-C").concat(e);
        i ? delete this.myCellsReport[n] : this.myCellsReport[n] = i, _.delay(function () {
          _this130.myCellsReady = _.isEmpty(_this130.myCellsReport), _this130.myCellsReady && _this130.evalEachColumnSize();
        });
      },
      evalEachColumnSize: function evalEachColumnSize() {
        var _this131 = this;

        if (this.I_am_in_resizing) return;

        var t = _.get(this.$refs.body, "scrollTop");

        this.I_am_in_resizing = !0, this.myTableWidth = 0, this.myColSizes = {
          priHead: [],
          priBody: [],
          primary: [],
          fixeds: [],
          amended: []
        };

        var _iterator56 = _createForOfIteratorHelper(this.TableFields),
            _step56;

        try {
          for (_iterator56.s(); !(_step56 = _iterator56.n()).done;) {
            var _t106 = _step56.value;
            var e = _t106.width || "stretch";
            /^(stretch|auto)$/.test(e) ? this.myColSizes.fixeds.push(e) : this.myColSizes.fixeds.push(Ti.Css.toPixel(e, 1));
          }
        } catch (err) {
          _iterator56.e(err);
        } finally {
          _iterator56.f();
        }

        this.$nextTick(function () {
          var e = Ti.Dom.findAll(".table-head ul li", _this131.$el);

          var _iterator57 = _createForOfIteratorHelper(e),
              _step57;

          try {
            for (_iterator57.s(); !(_step57 = _iterator57.n()).done;) {
              var _t103 = _step57.value;

              var _e38 = Ti.Rects.createBy(_t103);

              _this131.myColSizes.priHead.push(_e38.width);
            }
          } catch (err) {
            _iterator57.e(err);
          } finally {
            _iterator57.f();
          }

          var i = Ti.Dom.findAll(".table-body .table-row", _this131.$el);

          var _iterator58 = _createForOfIteratorHelper(i),
              _step58;

          try {
            for (_iterator58.s(); !(_step58 = _iterator58.n()).done;) {
              var _t104 = _step58.value;

              var _e39 = Ti.Dom.findAll(":scope > div", _t104);

              for (var _t105 = 0; _t105 < _e39.length; _t105++) {
                var _i28 = _e39[_t105],
                    _n15 = Ti.Rects.createBy(_i28);

                _t105 >= _this131.myColSizes.priBody.length ? _this131.myColSizes.priBody[_t105] = _n15.width : _this131.myColSizes.priBody[_t105] = Math.max(_n15.width, _this131.myColSizes.priBody[_t105]);
              }
            }
          } catch (err) {
            _iterator58.e(err);
          } finally {
            _iterator58.f();
          }

          for (var _t102 = 0; _t102 < _this131.myColSizes.priHead.length; _t102++) {
            var _e37 = _this131.myColSizes.priHead[_t102],
                _i27 = _this131.myColSizes.priBody[_t102],
                n = Math.max(_e37, _i27);

            _this131.myColSizes.primary.push(n);
          }

          _this131.onTableResize(), _.delay(function () {
            _this131.I_am_in_resizing = !1, _this131.$refs.body && (_this131.$refs.body.scrollTop = t);
          }, 10);
        });
      },
      onTableResize: function onTableResize() {
        if (this.myColSizes.primary.length <= 0) return;
        var t = Ti.Rects.createBy(this.$el).width,
            e = [],
            i = [];

        for (var _n16 = 0; _n16 < this.myColSizes.fixeds.length; _n16++) {
          var _a6 = this.myColSizes.fixeds[_n16],
              s = this.myColSizes.primary[_n16];
          if ("stretch" == _a6) e.push(_n16), i.push(s);else if ("auto" == _a6) i.push(s);else if (_a6 <= 1 && _a6 > 0) i.push(_a6 * t);else if (_a6 < 0 && _a6 >= -1) {
            var _e40 = Math.abs(_a6 * t);

            i.push(Math.max(_e40, s));
          } else if (_a6 < -1) {
            var _t107 = Math.abs(_a6);

            i.push(Math.max(_t107, s));
          } else i.push(_a6);
        }

        var n = _.sum(i),
            a = Math.max(t, n);

        if (this.myTableWidth = a, e.length > 0) {
          var _t108 = a - n;

          if (_t108 > 0) {
            var _n17 = _t108 / e.length;

            var _iterator59 = _createForOfIteratorHelper(e),
                _step59;

            try {
              for (_iterator59.s(); !(_step59 = _iterator59.n()).done;) {
                var _t109 = _step59.value;
                i[_t109] += _n17;
              }
            } catch (err) {
              _iterator59.e(err);
            } finally {
              _iterator59.f();
            }
          }
        }

        this.myColSizes.amended = i;
      }
    },
    mounted: function () {
      var _mounted10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee66() {
        var _this132 = this;

        return regeneratorRuntime.wrap(function _callee66$(_context66) {
          while (1) {
            switch (_context66.prev = _context66.next) {
              case 0:
                Ti.Viewport.watch(this, {
                  resize: _.debounce(function () {
                    return _this132.onTableResize();
                  }, 10)
                });

              case 1:
              case "end":
                return _context66.stop();
            }
          }
        }, _callee66, this);
      }));

      function mounted() {
        return _mounted10.apply(this, arguments);
      }

      return mounted;
    }(),
    beforeDestroy: function beforeDestroy() {
      Ti.Viewport.unwatch(this);
    }
  };
  Ti.Preload("ti/com/ti/table/ti-table-resizes.mjs", t);
}(), Ti.Preload("ti/com/ti/table/ti-table.html", '<div class="ti-table"\n  :class="TopClass"\n  @click="OnClickTop"\n  v-ti-activable>\n  \x3c!--\n    Blank\n  --\x3e\n  <ti-loading \n    v-if="isDataEmpty"\n      class="nil-data"\n      :class="blankClass"\n      v-bind="blankAs"/>\n  \x3c!--\n    Show thead/tbody\n  --\x3e\n  <template v-else>\n    \x3c!--\n      Table\n    --\x3e\n    <table ref="table">\n      \x3c!--\n        Head\n      --\x3e\n      <thead v-if="isShowHead"\n        class="table-head"\n        :style="TableStyle">\n        \x3c!--field titles--\x3e\n        <tr>\n          <th\n            v-for="fld in TableFields"\n              :style="getHeadCellStyle(fld)"\n              :col-index="fld.index">\n            <span class="table-head-cell-text">{{fld.title|i18n}}</span>\n          </th>\n        </tr>\n      </thead>\n      \x3c!--\n        Body\n      --\x3e\n      <tbody\n        class="table-body"\n        :style="TableStyle">\n        <table-row\n          v-for="row in myData"\n            :key="row.id"\n            :row-id="row.id"\n            :index="row.index"\n            :icon="row.icon"\n            :indent="row.indent"\n            :data="row.rawData"\n            :fields="TableFields"\n            :current-id="theCurrentId"\n            :checked-ids="theCheckedIds"\n            :changed-id="changedId"\n            :checkable="checkable"\n            :selectable="selectable"\n            :openable="openable"\n            @icon="$notify(\'icon\', $event)"\n            @checker="OnRowCheckerClick"\n            @select="OnRowSelect"\n            @open="OnRowOpen"/>\n        </tbody>\n    </table>\n    \x3c!--checker--\x3e\n    <div\n      v-if="checkable && multi && isShowHead"\n        class="as-checker"\n        @click.left="OnClickHeadChecker">\n        <ti-icon :value="HeadCheckerIcon"/>\n    </div>\n  </template>\n</div>'), function () {
  var t = {
    provide: function provide() {
      return {
        $table: this
      };
    },
    data: function data() {
      return {
        myTableRect: null,
        myData: []
      };
    },
    computed: {
      TopClass: function TopClass() {
        var t = this.getTopClass({
          "is-hoverable": this.hoverable
        }, ["is-border-".concat(this.border), "is-head-".concat(this.head || "none")]);

        if (!t["is-layout-fixed"] && !t["is-layout-auto"]) {
          var e = "auto";

          for (var _t110 = 0; _t110 < this.fields.length; _t110++) {
            var i = this.fields[_t110];

            if (!Ti.Util.isNil(i.width)) {
              e = "fixed";
              break;
            }
          }

          t["is-layout-".concat(e)] = !0;
        }

        return t;
      },
      TableStyle: function TableStyle() {
        if (this.myTableWidth > 0) return Ti.Css.toStyle({
          width: this.myTableWidth
        });
      },
      getRowIndent: function getRowIndent() {
        var _this133 = this;

        return _.isFunction(this.indentBy) ? function (t) {
          return _this133.indentBy(t);
        } : _.isString(this.indentBy) ? function (t) {
          return _.get(t, _this133.indentBy);
        } : function (t) {
          return 0;
        };
      },
      getRowIcon: function getRowIcon() {
        var _this134 = this;

        return _.isFunction(this.iconBy) ? function (t) {
          return _this134.iconBy(t);
        } : _.isString(this.iconBy) ? function (t) {
          return _.get(t, _this134.iconBy);
        } : function (t) {
          return null;
        };
      },
      TheData: function TheData() {
        return this.myData;
      },
      isShowHead: function isShowHead() {
        return /^(frozen|normal)$/.test(this.head);
      },
      HeadCheckerIcon: function HeadCheckerIcon() {
        return this.isAllChecked ? "fas-check-square" : this.hasChecked ? "fas-minus-square" : "far-square";
      },
      TableFields: function TableFields() {
        var t = [];

        for (var e = 0; e < this.fields.length; e++) {
          var i = this.fields[e],
              n = this.evalFieldDisplay(i.display, i.name),
              a = Ti.Util.fallbackNil(i.width, "stretch");
          _.isString(a) ? /^\d+(\.\d+)?%$/.test(a) ? a = a.substring(0, a.length - 1) / 100 : /^(auto|stretch)$/.test(a) || (a = "stretch") : _.isNumber(a) || (a = "stretch"), t.push({
            index: e,
            title: i.title,
            nowrap: i.nowrap,
            width: a,
            className: i.className,
            name: i.name,
            display: n,
            type: i.type,
            comType: i.comType,
            comConf: i.comConf,
            transformer: i.transformer,
            serializer: i.serializer
          });
        }

        return t;
      }
    },
    methods: {
      OnClickHeadChecker: function OnClickHeadChecker() {
        this.isAllChecked ? this.cancelRow() : this.checkRow();
      },
      OnClickTop: function OnClickTop(t) {
        this.cancelable && Ti.Dom.hasOneClass(t.target, "ti-table", "table-body", "table-head-cell", "table-head-cell-text") && this.cancelRow();
      },
      onItemChanged: function onItemChanged(t) {
        this.$notify("item:change", t);
      },
      getHeadCellStyle: function getHeadCellStyle(t) {
        if (t && !Ti.Util.isNil(t.width) && this.myTableRect && this.myTableRect.width > 0) {
          var e = t.width;
          if (_.isNumber(e)) if (e < 0) {
            var _t111 = Math.abs(e / this.myTableRect.width);

            e = Math.round(100 * _t111) + "%";
          } else e = e >= 0 && e < 1 ? Math.round(100 * e) + "%" : "".concat(e, "px");
          return {
            width: e
          };
        }
      },
      evalFieldDisplay: function evalFieldDisplay() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var e = arguments.length > 1 ? arguments[1] : undefined;
        t = _.concat(t);
        var i = [];

        var _iterator60 = _createForOfIteratorHelper(t),
            _step60;

        try {
          for (_iterator60.s(); !(_step60 = _iterator60.n()).done;) {
            var n = _step60.value;

            var _t112 = this.evalFieldDisplayItem(n, {
              defaultKey: e
            });

            _t112 && i.push(_t112);
          }
        } catch (err) {
          _iterator60.e(err);
        } finally {
          _iterator60.f();
        }

        return i;
      },
      scrollCurrentIntoView: function scrollCurrentIntoView() {
        if (this.autoScrollIntoView && this.theCurrentId) {
          var _t113 = this.findRowIndexById(this.theCurrentId),
              e = this.$el,
              i = Ti.Dom.find(".table-row:nth-child(".concat(_t113 + 1, ")"), e);

          if (!_.isElement(e) || !_.isElement(i)) return;
          var n = Ti.Rects.createBy(e),
              a = Ti.Rects.createBy(i);
          n.contains(a) || (a.bottom > n.bottom ? e.scrollTop += a.bottom - n.bottom : e.scrollTop += a.top - n.top);
        }
      },
      OnResize: function OnResize() {
        this.$refs.table && (this.myTableRect = Ti.Rects.createBy(this.$refs.table));
      },
      __ti_shortcut: function __ti_shortcut(t) {
        return "ARROWUP" == t ? (this.selectPrevRow({
          payload: {
            byKeyboardArrow: !0
          }
        }), this.scrollCurrentIntoView(), {
          prevent: !0,
          stop: !0,
          quit: !0
        }) : "ARROWDOWN" == t ? (this.selectNextRow({
          payload: {
            byKeyboardArrow: !0
          }
        }), this.scrollCurrentIntoView(), {
          prevent: !0,
          stop: !0,
          quit: !0
        }) : void 0;
      }
    },
    watch: {
      data: {
        handler: function () {
          var _handler2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee67(t, e) {
            var _this135 = this;

            return regeneratorRuntime.wrap(function _callee67$(_context67) {
              while (1) {
                switch (_context67.prev = _context67.next) {
                  case 0:
                    _context67.t0 = _.isEqual(t, e);

                    if (_context67.t0) {
                      _context67.next = 5;
                      break;
                    }

                    _context67.next = 4;
                    return this.evalData(function (t) {
                      t.icon = _this135.getRowIcon(t.item), t.indent = _this135.getRowIndent(t.item);
                    });

                  case 4:
                    this.myData = _context67.sent;

                  case 5:
                    _.isEmpty(this.data) && (this.myCellsReady = !0);

                  case 6:
                  case "end":
                    return _context67.stop();
                }
              }
            }, _callee67, this);
          }));

          function handler(_x5, _x6) {
            return _handler2.apply(this, arguments);
          }

          return handler;
        }(),
        immediate: !0
      }
    },
    mounted: function mounted() {
      var _this136 = this;

      Ti.Viewport.watch(this, {
        resize: _.debounce(function () {
          return _this136.OnResize();
        }, 10)
      }), this.$nextTick(function () {
        return _this136.OnResize();
      }), this.autoScrollIntoView && _.delay(function () {
        _this136.scrollCurrentIntoView();
      }, 0);
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Viewport.unwatch(this);
    }
  };
  Ti.Preload("ti/com/ti/table/ti-table.mjs", t);
}(), Ti.Preload("ti/com/ti/table/_com.json", {
  name: "ti-table",
  globally: !0,
  template: "./ti-table.html",
  props: ["@com:ti/support/list_props.mjs", "./ti-table-props.mjs"],
  methods: "@com:ti/support/field_display.mjs",
  mixins: ["@com:ti/support/list_mixins.mjs", "./ti-table.mjs"],
  components: ["./com/table-row"]
}), Ti.Preload("ti/com/ti/tags/com/tags-item/tags-item.html", '<div class="ti-tags-item" \n  :class="topClass"\n  @mouseenter="mouseEnter=\'top\'"\n  @mouseleave="mouseEnter=null"\n  @click.left="onClickTop">\n  \x3c!--\n    Deleter\n  --\x3e\n  <ti-icon v-if="removable"\n    class="as-del"\n    :value="removeIcon"\n    @mouseenter.native="mouseEnter=\'del\'"\n    @mouseleave.native="mouseEnter=\'top\'"\n    @click.native.stop="onClickDel"/>\n  \x3c!--\n    Icon\n  --\x3e\n  <ti-icon v-if="icon" \n    class="as-icon"\n    :value="icon"/>\n  \x3c!--\n    Text\n  --\x3e\n  <template v-if="text">\n    <a v-if="href"\n      class="as-text"\n      @click.prevent\n      :href="href"\n      :class="textClass">{{text|i18n}}</a>\n    <span v-else\n      class="as-text"\n      :class="textClass">{{text|i18n}}</span>\n  </template>\n  \x3c!--\n    Status Icon\n  --\x3e\n  <ti-icon v-if="hasOptions"\n    class="as-status"\n    :value="theStatusIcon"/>\n  \x3c!--\n    Drop & Mask\n  --\x3e\n  <template v-if="\'extended\' == status">\n    <div class="as-mask" @click.stop="closeDrop"></div>\n    <div class="as-drop" ref="drop"\n      @click.stop>\n      <ti-icon-text v-for="it in theOptions"\n        :key="it.index"\n        v-bind="it"\n        @click.native="onClickOption(it)"/>\n    </div>\n  </template>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        mouseEnter: null,
        status: "collapse"
      };
    },
    props: {
      index: {
        type: Number,
        "default": -1
      },
      atLast: {
        type: Boolean,
        "default": !1
      },
      icon: {
        type: [String, Object],
        "default": null
      },
      text: {
        type: String,
        "default": null
      },
      href: {
        type: String,
        "default": null
      },
      value: {
        type: [String, Number, Boolean, Object],
        "default": null
      },
      options: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      optionDefaultIcon: {
        type: String,
        "default": null
      },
      cancelBubble: {
        type: Boolean,
        "default": !1
      },
      removable: {
        type: Boolean,
        "default": !1
      },
      removeIcon: {
        type: String,
        "default": null
      },
      statusIcons: {
        type: Object,
        "default": function _default() {
          return {
            collapse: "zmdi-chevron-down",
            extended: "zmdi-chevron-up"
          };
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName({
          "has-options": this.hasOptions,
          "is-enter-top": "top" == this.mouseEnter && this.hasOptions,
          "is-enter-del": "del" == this.mouseEnter
        }, this.className);
      },
      textClass: function textClass() {
        return {
          "without-icon": !this.hasIcon && !this.removable,
          "without-options": !this.hasOptions
        };
      },
      hasIcon: function hasIcon() {
        return !!this.icon;
      },
      hasOptions: function hasOptions() {
        return _.isArray(this.options) && this.options.length > 0;
      },
      theOptions: function theOptions() {
        var _this137 = this;

        var t = _.filter(_.concat(this.options), function (t) {
          return !Ti.Util.isNil(t);
        }),
            e = [];

        return _.forEach(t, function (t, i) {
          var n;
          n = _.isPlainObject(t) ? _.assign({
            icon: _this137.optionDefaultIcon
          }, t, {
            index: i
          }) : {
            index: i,
            icon: _this137.optionDefaultIcon,
            text: Ti.Types.toStr(t),
            value: t
          }, _.isEqual(n.value, _this137.value) || e.push(n);
        }), e;
      },
      theStatusIcon: function theStatusIcon() {
        return this.statusIcons[this.status];
      },
      theData: function theData() {
        return {
          index: this.index,
          icon: this.icon,
          text: this.text,
          value: this.value,
          href: this.href,
          atLast: this.atLast,
          asterisk: this.asterisk
        };
      }
    },
    methods: {
      onClickDel: function onClickDel() {
        this.$notify("remove", this.theData);
      },
      onClickOption: function onClickOption() {
        var _ref75 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref75.value,
            e = _ref75.text,
            i = _ref75.icon;

        this.$notify("change", {
          value: t,
          text: e,
          icon: i,
          index: this.index
        }), this.closeDrop();
      },
      onClickTop: function onClickTop(t) {
        this.hasOptions ? (t.stopPropagation(), this.openDrop()) : this.cancelBubble && t.stopPropagation(), this.href && this.$notify("fire", this.theData);
      },
      openDrop: function openDrop() {
        var _this138 = this;

        this.hasOptions && (this.status = "extended", this.$nextTick(function () {
          _this138.dockDrop();
        }));
      },
      closeDrop: function closeDrop() {
        this.status = "collapse", this.mouseEnter = null;
      },
      dockDrop: function dockDrop() {
        var t = this.$refs.drop,
            e = this.$el;

        if (_.isElement(t) && _.isElement(e) && "extended" == this.status) {
          var i = Ti.Rects.createBy(e);
          Ti.Dom.setStyle(t, {
            "min-width": "".concat(i.width, "px")
          }), Ti.Dom.dockTo(t, e, {
            space: {
              y: 2
            },
            posListX: ["left", "right"]
          });
        }
      }
    },
    mounted: function mounted() {
      this.dockDrop();
    }
  };
  Ti.Preload("ti/com/ti/tags/com/tags-item/tags-item.mjs", t);
}(), Ti.Preload("ti/com/ti/tags/com/tags-item/_com.json", {
  name: "tags-item",
  globally: !1,
  template: "./tags-item.html",
  mixins: ["./tags-item.mjs"],
  components: ["@com:ti/icon/text"]
}), Ti.Preload("ti/com/ti/tags/ti-tags.html", '<div class="ti-tags"\n  :class="TopClass">\n  \x3c!--\n    Loop piece\n  --\x3e\n  <tags-item v-for="tag in myTags"\n    :key="tag.index"\n    v-bind="tag"\n    :cancel-bubble="cancelItemBubble"\n    :option-default-icon="optionDefaultIcon"\n    :removable="removable"\n    :remove-icon="removeIcon"\n    :status-icons="statusIcons"\n    @change="OnItemChanged"\n    @remove="OnItemRemoved"\n    @fire="OnItemFired"/>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myTags: [],
        myValues: []
      };
    },
    props: {
      value: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      dict: {
        type: [String, Ti.Dict],
        "default": null
      },
      mapping: {
        type: Object,
        "default": void 0
      },
      itemOptions: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      cancelItemBubble: {
        type: Boolean,
        "default": !1
      },
      removable: {
        type: Boolean,
        "default": !1
      },
      itemIconBy: {
        type: [String, Function],
        "default": void 0
      },
      optionDefaultIcon: {
        type: String,
        "default": void 0
      },
      itemDefaultIcon: {
        type: String,
        "default": void 0
      },
      removeIcon: {
        type: String,
        "default": "zmdi-close"
      },
      statusIcons: {
        type: Object,
        "default": function _default() {
          return {
            collapse: "zmdi-chevron-down",
            extended: "zmdi-chevron-up"
          };
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        if (this.className) return this.className;
      },
      getTagItemIcon: function getTagItemIcon() {
        var _this139 = this;

        return _.isFunction(this.itemIconBy) ? function (t) {
          return _this139.itemIconBy(t);
        } : _.isString(this.itemIconBy) ? function (t) {
          return _.get(t, _this139.itemIconBy);
        } : function (t) {
          return null;
        };
      },
      Dict: function Dict() {
        if (this.dict) {
          if (this.dict instanceof Ti.Dict) return this.dict;

          var _Ti$DictFactory$expla5 = Ti.DictFactory.explainDictName(this.dict),
              _t114 = _Ti$DictFactory$expla5.name;

          return Ti.DictFactory.CheckDict(_t114);
        }
      }
    },
    methods: {
      OnItemChanged: function OnItemChanged() {
        var _ref76 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref76.index,
            e = _ref76.value;

        if (t >= 0) {
          var i = this.getMyValues();
          i[t] = Ti.Util.fallback(e, null), this.$notify("change", i);
        }
      },
      OnItemRemoved: function OnItemRemoved() {
        var _ref77 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref77.index;

        if (t >= 0) {
          var e = this.getMyValues();
          _.pullAt(e, t), this.$notify("change", e);
        }
      },
      OnItemFired: function OnItemFired() {
        var _ref78 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref78$index = _ref78.index,
            t = _ref78$index === void 0 ? -1 : _ref78$index;

        if (t >= 0) {
          var e = _.nth(this.theData, t);

          e && this.$notify("item:actived", e);
        }
      },
      evalMyData: function evalMyData() {
        var _this140 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee68() {
          var t, e, i, n, a, _t115;

          return regeneratorRuntime.wrap(function _callee68$(_context68) {
            while (1) {
              switch (_context68.prev = _context68.next) {
                case 0:
                  t = [];

                  if (!_.isArray(_this140.value)) {
                    _context68.next = 22;
                    break;
                  }

                  e = _this140.value.length - 1;
                  i = 0;

                case 4:
                  if (!(i < _this140.value.length)) {
                    _context68.next = 22;
                    break;
                  }

                  n = void 0, a = _this140.value[i];

                  if (!_.isPlainObject(a)) {
                    _context68.next = 10;
                    break;
                  }

                  (n = _this140.mapping ? Ti.Util.translate(a, _this140.mapping) : _.cloneDeep(a)).icon || (n.icon = _this140.getTagItemIcon(a));
                  _context68.next = 18;
                  break;

                case 10:
                  if (!_this140.Dict) {
                    _context68.next = 17;
                    break;
                  }

                  _context68.next = 13;
                  return _this140.Dict.getItem(a);

                case 13:
                  _t115 = _context68.sent;
                  n = _.defaults({
                    icon: _this140.Dict.getIcon(_t115),
                    text: _this140.Dict.getText(_t115) || a,
                    value: a
                  });
                  _context68.next = 18;
                  break;

                case 17:
                  n = {
                    text: a,
                    value: a
                  };

                case 18:
                  _.defaults(n, {
                    index: i,
                    icon: _this140.itemDefaultIcon,
                    options: _this140.itemOptions,
                    atLast: i == e
                  }), t.push(n);

                case 19:
                  i++;
                  _context68.next = 4;
                  break;

                case 22:
                  _this140.myTags = t;

                case 23:
                case "end":
                  return _context68.stop();
              }
            }
          }, _callee68);
        }))();
      },
      getMyValues: function getMyValues() {
        var t = [];

        var _iterator61 = _createForOfIteratorHelper(this.myTags),
            _step61;

        try {
          for (_iterator61.s(); !(_step61 = _iterator61.n()).done;) {
            var e = _step61.value;
            t.push(Ti.Util.fallback(e.value, null));
          }
        } catch (err) {
          _iterator61.e(err);
        } finally {
          _iterator61.f();
        }

        return t;
      }
    },
    watch: {
      value: {
        handler: "evalMyData",
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/ti/tags/ti-tags.mjs", t);
}(), Ti.Preload("ti/com/ti/tags/_com.json", {
  name: "ti-tags",
  globally: !0,
  template: "./ti-tags.html",
  mixins: ["./ti-tags.mjs"],
  components: ["./com/tags-item"]
}), Ti.Preload("ti/com/ti/text/json/ti-text-json.html", '<ti-gui\n  class="ti-text-json"\n  :class="className"\n  keep-shown-to="ti-text-json-editor"\n  :layout="TheLayout"\n  :schema="TheSchema"\n  :can-loading="true"\n  @change="OnChange"/>'), function () {
  var t = {
    props: {
      tabAt: {
        type: String,
        "default": "bottom-left",
        validator: function validator(t) {
          return /^(top|bottom)-(left|center|right)$/.test(t);
        }
      },
      value: void 0,
      valueType: {
        type: String,
        "default": "text",
        validator: function validator(t) {
          return /^(text|obj)$/.test(t);
        }
      },
      jsonIndent: {
        type: String,
        "default": "   "
      },
      tree: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      TheContent: function TheContent() {
        return Ti.Util.isNil(this.value) ? "" : this.value;
      },
      TheData: function TheData() {
        return Ti.Util.isNil(this.value) ? null : Ti.Types.safeParseJson(this.value, null);
      },
      TheSource: function TheSource() {
        return this.TheData ? JSON.stringify(this.TheData, null, "   ") : "";
      },
      TheLayout: function TheLayout() {
        return {
          type: "tabs",
          tabAt: this.tabAt,
          blocks: [{
            title: "i18n:structure",
            name: "tree",
            body: "desktop-tree"
          }, {
            title: "i18n:source-code",
            name: "source",
            body: "desktop-source"
          }]
        };
      },
      TheSchema: function TheSchema() {
        return {
          "desktop-tree": {
            comType: "ti-text-json-tree",
            comConf: _.assign({}, this.tree, {
              value: this.TheData
            })
          },
          "desktop-source": {
            comType: "ti-text-raw",
            comConf: {
              showTitle: !1,
              value: this.TheSource
            }
          }
        };
      }
    },
    methods: {
      OnChange: function OnChange(t) {
        var e = t;
        if (_.isString(t)) try {
          e = JSON.parse(t);
        } catch (t) {
          return;
        }
        "text" == this.valueType && (e = this.jsonIndent ? JSON.stringify(e, null, this.jsonIndent) : JSON.stringify(e)), this.$notify("change", e);
      }
    }
  };
  Ti.Preload("ti/com/ti/text/json/ti-text-json.mjs", t);
}(), Ti.Preload("ti/com/ti/text/json/tree/item/json-tree-item.html", '<div class="json-value"\n  :class="TopClass"\n  v-ti-activable>\n  \x3c!--\n  //  - Label   : Readonly\n  --\x3e\n  <span v-if="isLabel"\n    class="as-editing as-label">{{theLabelDisplayText}}</span>\n  \x3c!--\n  //  - Boolean : Editable boolean value\n  --\x3e\n  <ti-toggle v-else-if="\'Boolean\' == valueType"\n    class="as-editing"\n    :value="value"\n    @change="$notify(\'change\', $event)"/>\n  \x3c!--\n  //  - Integer : Editable integer value\n  //  - Float   : Editable float value\n  //  - String  : Editable string value\n  //  - Nil     : Edtiable any value\n  --\x3e\n  <ti-label v-else\n    class="as-editing is-nowrap ti-fill-parent"\n    :value="value"\n    :class-name="theValueClassName"\n    :format="theValueFormat"\n    :editable="true"\n    @change="$notify(\'change\', $event)"/>\n  \x3c!--\n    Action Menu\n  --\x3e\n  <ti-actionbar\n    v-if="showActions"\n      class="as-actions"\n      :items="theActionMenuData"\n      :status="theActionMenuStatus"/>\n</div>'), function () {
  var t = {
    data: function data() {
      return {};
    },
    props: {
      value: null,
      valueType: {
        type: String,
        "default": "Nil"
      },
      valuePath: {
        type: [String, Array],
        "default": function _default() {
          return [];
        }
      },
      showActions: {
        type: Boolean,
        "default": !1
      }
    },
    computed: {
      TopClass: function TopClass() {
        return Ti.Css.mergeClassName({
          "is-self-actived": this.isSelfActived,
          "is-actived": this.isActived
        });
      },
      isLabel: function isLabel() {
        return /^(Array|Object)$/.test(this.valueType);
      },
      isTop: function isTop() {
        return 0 == this.theValuePath.length;
      },
      theLabelDisplayText: function theLabelDisplayText() {
        return "Array" == this.valueType ? "[..]" : "Object" == this.valueType ? "{..}" : "???";
      },
      theValuePath: function theValuePath() {
        return _.isArray(this.valuePath) ? this.valuePath : _.isString(this.valuePath) ? _.without(this.valuePath.split(/[\/.]/g), "") : [];
      },
      theValueClassName: function theValueClassName() {
        return _.kebabCase("is".concat(this.valueType));
      },
      theValueFormat: function theValueFormat() {
        if ("String" == this.valueType) return function (t) {
          return t ? "\"".concat(t, "\"") : '""';
        };
      },
      theActionMenuData: function theActionMenuData() {
        var _this141 = this;

        var t = [{
          name: "jvTypeArray",
          text: "i18n:json-Array",
          type: "action",
          altDisplay: {
            icon: "zmdi-check",
            capture: !1
          },
          action: function action() {
            _this141.$notify("change", {
              jsonMutate: "ChangeValueType",
              args: "Array"
            });
          }
        }, {
          name: "jvTypeObject",
          text: "i18n:json-Object",
          type: "action",
          altDisplay: {
            icon: "zmdi-check",
            capture: !1
          },
          action: function action() {
            _this141.$notify("change", {
              jsonMutate: "ChangeValueType",
              args: "Object"
            });
          }
        }],
            e = [{
          name: "jv-add",
          type: "action",
          icon: "zmdi-plus",
          action: function action() {
            _this141.$notify("change", {
              jsonMutate: "Add"
            });
          }
        }];
        return this.isTop || (e.push({
          type: "line"
        }), e.push({
          name: "jv-remove",
          type: "action",
          icon: "zmdi-delete",
          action: function action() {
            _this141.$notify("change", {
              jsonMutate: "Remove"
            });
          }
        }), t.push({
          type: "line"
        }), t.push({
          name: "jvTypeBoolean",
          text: "i18n:json-Boolean",
          type: "action",
          altDisplay: {
            icon: "zmdi-check",
            capture: !1
          },
          action: function action() {
            _this141.$notify("change", {
              jsonMutate: "ChangeValueType",
              args: "Boolean"
            });
          }
        }), t.push({
          name: "jvTypeNumber",
          text: "i18n:json-Number",
          type: "action",
          altDisplay: {
            icon: "zmdi-check",
            capture: !1
          },
          action: function action() {
            _this141.$notify("change", {
              jsonMutate: "ChangeValueType",
              args: "Number"
            });
          }
        }), t.push({
          name: "jvTypeString",
          text: "i18n:json-String",
          type: "action",
          altDisplay: {
            icon: "zmdi-check",
            capture: !1
          },
          action: function action() {
            _this141.$notify("change", {
              jsonMutate: "ChangeValueType",
              args: "String"
            });
          }
        }), t.push({
          name: "jvTypeNil",
          text: "i18n:json-Nil",
          type: "action",
          altDisplay: {
            icon: "zmdi-check",
            capture: !1
          },
          action: function action() {
            _this141.$notify("change", {
              jsonMutate: "ChangeValueType",
              args: "Nil"
            });
          }
        })), e.push({
          type: "line"
        }), e.push({
          key: "jv-types",
          type: "group",
          icon: "zmdi-more",
          items: t
        }), e;
      },
      theActionMenuStatus: function theActionMenuStatus() {
        return {
          jvTypeBoolean: "Boolean" == this.valueType,
          jvTypeInteger: "Integer" == this.valueType,
          jvTypeFloat: "Float" == this.valueType,
          jvTypeNumber: "Number" == this.valueType,
          jvTypeString: "String" == this.valueType,
          jvTypeArray: "Array" == this.valueType,
          jvTypeObject: "Object" == this.valueType,
          jvTypeNil: "Nil" == this.valueType
        };
      }
    },
    methods: {},
    watch: {},
    mounted: function mounted() {}
  };
  Ti.Preload("ti/com/ti/text/json/tree/item/json-tree-item.mjs", t);
}(), Ti.Preload("ti/com/ti/text/json/tree/item/_com.json", {
  name: "ti-text-json-tree-item",
  globally: !0,
  template: "./json-tree-item.html",
  mixins: ["./json-tree-item.mjs"]
}), Ti.Preload("ti/com/ti/text/json/tree/ti-text-json-tree.html", '<ti-tree class="ti-text-json-tree"\n  title="i18n:name"\n  :main-width="mainWidth"\n  :class="className"\n  :border="border"\n  :keep-open-by="keepOpenBy"\n  :multi="true"\n  :data="myTreeRoot"\n  :display="TreeDisplay"\n  :auto-open="autoOpen"\n  :current-id="myTreeCurrentPathId"\n  :default-open-depth="2"\n  :fields="TreeFields"\n  @select\n  @node:item:change="OnNodeItemChange"\n  @opened-status:changed="OnOpenedStatusChanged"/>'), function () {
  var t = {
    data: function data() {
      return {
        myTreeRoot: [],
        myTreeCurrentPathId: null,
        myTreeOpenedStatus: {}
      };
    },
    props: {
      value: null,
      mainWidth: {
        type: [String, Number],
        "default": .372
      },
      border: {
        type: String,
        "default": "cell",
        validator: function validator(t) {
          return /^(row|column|cell|none)$/.test(t);
        }
      },
      keepOpenBy: {
        type: String,
        "default": null
      },
      autoOpen: {
        type: Boolean,
        "default": !1
      },
      showRoot: {
        type: Boolean,
        "default": !0
      },
      editing: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      TreeDisplay: function TreeDisplay() {
        return {
          key: "name",
          comType: "ti-label",
          comConf: function comConf(t) {
            return {
              className: _.kebabCase("is-".concat(t.nameType)),
              editable: "Key" == t.nameType,
              format: {
                Index: "[${val}]",
                Label: "i18n:json-${val}"
              }[t.nameType]
            };
          }
        };
      },
      TreeFields: function TreeFields() {
        return [{
          title: "i18n:value",
          width: .618,
          display: {
            key: "value",
            ignoreNil: !1,
            comType: "ti-text-json-tree-item",
            comConf: {
              valueType: "${valueType}",
              valuePath: "${=rowId}",
              showActions: "${=isCurrent}"
            }
          }
        }];
      }
    },
    methods: {
      evalTreeData: function evalTreeData() {
        var t = [];
        this.joinTreeTableRow(t, this.value), this.myTreeRoot = _.first(t);
      },
      getJsValueType: function getJsValueType(t) {
        return Ti.Util.isNil(t) ? "Nil" : _.isArray(t) ? "Array" : _.isNumber(t) ? "Number" : _.upperFirst(_typeof(t));
      },
      joinTreeTableRow: function joinTreeTableRow() {
        var _this142 = this;

        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var e = arguments.length > 1 ? arguments[1] : undefined;
        var i = arguments.length > 2 ? arguments[2] : undefined;
        var n,
            a = this.getJsValueType(e);

        if (_.isUndefined(i) ? (i = a, n = "Label") : n = _.isNumber(i) ? "Index" : "Key", _.isUndefined(e) ? t.push({
          nameType: n,
          valueType: a,
          name: i,
          value: void 0
        }) : _.isNull(e) && t.push({
          nameType: n,
          valueType: a,
          name: i,
          value: null
        }), _.isArray(e)) {
          var _a7 = {
            nameType: n,
            valueType: "Array",
            name: i,
            value: e,
            children: []
          };

          for (var _t116 = 0; _t116 < e.length; _t116++) {
            var _i29 = e[_t116];
            this.joinTreeTableRow(_a7.children, _i29, _t116);
          }

          t.push(_a7);
        } else if (_.isPlainObject(e)) {
          var _a8 = {
            nameType: n,
            valueType: "Object",
            name: i,
            value: e,
            children: []
          };
          _.forEach(e, function (t, e) {
            _this142.joinTreeTableRow(_a8.children, t, e);
          }), t.push(_a8);
        } else _.isBoolean(e) ? t.push({
          nameType: n,
          valueType: a,
          name: i,
          value: !!e
        }) : _.isNumber(e) ? t.push({
          nameType: n,
          valueType: a,
          name: i,
          value: 1 * e
        }) : _.isString(e) && t.push({
          nameType: n,
          valueType: a,
          name: i,
          value: e + ""
        });
      },
      doAdd: function doAdd() {
        var _arguments15 = arguments,
            _this143 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee69() {
          var t, e, i, n, a, _t117, _i30, _n18, _a9, s, _t118;

          return regeneratorRuntime.wrap(function _callee69$(_context69) {
            while (1) {
              switch (_context69.prev = _context69.next) {
                case 0:
                  t = _arguments15.length > 0 && _arguments15[0] !== undefined ? _arguments15[0] : {};
                  e = _arguments15.length > 1 && _arguments15[1] !== undefined ? _arguments15[1] : [];
                  i = Ti.Trees.getByPath(_this143.myTreeRoot, e), n = _.isEmpty(e) ? t : _.get(t, e), a = _this143.myTreeOpenedStatus[e.join("/")];

                  if (!i) {
                    _context69.next = 34;
                    break;
                  }

                  if (!(a && _.isArray(n))) {
                    _context69.next = 8;
                    break;
                  }

                  n.push(null);
                  _context69.next = 33;
                  break;

                case 8:
                  if (!(a && _.isPlainObject(n))) {
                    _context69.next = 17;
                    break;
                  }

                  _context69.next = 11;
                  return Ti.Prompt("i18n:json-new-key");

                case 11:
                  _t117 = _context69.sent;

                  if (!Ti.Util.isNil(_t117)) {
                    _context69.next = 14;
                    break;
                  }

                  return _context69.abrupt("return");

                case 14:
                  n[_t117] = null;
                  _context69.next = 33;
                  break;

                case 17:
                  if (!(e.length > 0)) {
                    _context69.next = 33;
                    break;
                  }

                  _n18 = e.slice(0, e.length - 1), _a9 = _.isEmpty(_n18) ? t : _.get(t, _n18), s = _.last(e);

                  if (!_.isArray(_a9)) {
                    _context69.next = 23;
                    break;
                  }

                  _i30 = _a9, Ti.Util.insertToArray(_a9, s + 1, null);
                  _context69.next = 30;
                  break;

                case 23:
                  if (!_.isPlainObject(_a9)) {
                    _context69.next = 30;
                    break;
                  }

                  _context69.next = 26;
                  return Ti.Prompt("i18n:json-new-key");

                case 26:
                  _t118 = _context69.sent;

                  if (!Ti.Util.isNil(_t118)) {
                    _context69.next = 29;
                    break;
                  }

                  return _context69.abrupt("return");

                case 29:
                  _i30 = Ti.Util.appendToObject(_a9, s, _defineProperty({}, _t118, null));

                case 30:
                  if (!(0 == _n18.length)) {
                    _context69.next = 32;
                    break;
                  }

                  return _context69.abrupt("return", _i30);

                case 32:
                  _.set(t, _n18, _i30);

                case 33:
                  return _context69.abrupt("return", t);

                case 34:
                case "end":
                  return _context69.stop();
              }
            }
          }, _callee69);
        }))();
      },
      doRemove: function doRemove() {
        var _this144 = this;

        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        if (_.isEmpty(e)) return;

        var i,
            n = Ti.Trees.getByPath(this.myTreeRoot, e),
            a = Ti.Trees.nextCandidate(n),
            s = e.slice(0, e.length - 1),
            o = _.isEmpty(s) ? t : _.get(t, s),
            l = _.last(e);

        if (_.isArray(o) ? (i = [], _.forEach(o, function (t, e) {
          e != l && i.push(t);
        })) : _.isPlainObject(o) && (i = {}, _.forEach(o, function (t, e) {
          e != l && (i[e] = t);
        })), a && a.node) {
          var _t119 = _.concat(a.path, a.node.name).join("/");

          this.$nextTick(function () {
            _this144.myTreeCurrentPathId = _t119;
          });
        }

        return 0 == s.length ? i : (_.set(t, s, i), t);
      },
      doChangeValueType: function doChangeValueType() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        var i = arguments.length > 2 ? arguments[2] : undefined;

        var n = _.isEmpty(e),
            a = n ? t : _.get(t, e),
            s = {
          Boolean: function Boolean(t) {
            return !!t;
          },
          Number: function Number(t) {
            var e = 1 * t;
            return isNaN(e) ? -1 : e;
          },
          Integer: function Integer(t) {
            var e = parseInt(t);
            return isNaN(e) ? -1 : e;
          },
          Float: function Float(t) {
            var e = 1 * t;
            return isNaN(e) ? -1 : e;
          },
          String: function String(t) {
            return _.isArray(t) || _.isObject(t) ? JSON.stringify(t) : t + "";
          },
          Array: function Array(t) {
            return _.isArray(t) ? void 0 : Ti.Util.isNil(t) ? [] : [t];
          },
          Object: function Object(t) {
            if (_.isArray(t)) {
              var _e41 = _.fromPairs(t),
                  _i31 = {};

              return _.forEach(_e41, function (t, e) {
                Ti.Util.isNil(e) || _.isUndefined(t) || (_i31[e] = t);
              }), _.isEmpty(_i31) && !_.isEmpty(t) && Ti.Util.merge(_i31, t), _i31;
            }

            if (!_.isPlainObject(t)) return _.isString(t) ? Ti.Types.safeParseJson(t, {
              value: t
            }) : {
              value: t
            };
          },
          Nil: function Nil(t) {
            return null;
          }
        }[i];

        if (_.isFunction(s)) {
          var _i32 = s(a);

          if (_.isUndefined(_i32)) return;
          return n ? _i32 : (_.set(t, e, _i32), t);
        }
      },
      OnNodeItemChange: function OnNodeItemChange() {
        var _arguments16 = arguments,
            _this145 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee70() {
          var _ref79, t, e, i, n, a, s, o, _t120, _t121, _n19;

          return regeneratorRuntime.wrap(function _callee70$(_context70) {
            while (1) {
              switch (_context70.prev = _context70.next) {
                case 0:
                  _ref79 = _arguments16.length > 0 && _arguments16[0] !== undefined ? _arguments16[0] : {}, t = _ref79.name, e = _ref79.value, i = _ref79.data, n = _ref79.node, a = _ref79.nodeId;

                  if (n.id) {
                    _context70.next = 3;
                    break;
                  }

                  return _context70.abrupt("return");

                case 3:
                  s = _.cloneDeep(_this145.value), o = n.path;

                  if (!(e && e.jsonMutate)) {
                    _context70.next = 13;
                    break;
                  }

                  _t120 = {
                    Add: _this145.doAdd,
                    Remove: _this145.doRemove,
                    ChangeValueType: _this145.doChangeValueType
                  }[e.jsonMutate];
                  _context70.next = 8;
                  return Ti.DoInvoke(_t120, _.concat([s, o], e.args), _this145);

                case 8:
                  s = _context70.sent;

                  if (!_.isUndefined(s)) {
                    _context70.next = 11;
                    break;
                  }

                  return _context70.abrupt("return");

                case 11:
                  _context70.next = 14;
                  break;

                case 13:
                  if ("name" == t) s = Ti.Util.setKey(s, o, e);else if ("value" == t) {
                    _t121 = {
                      Integer: function Integer(t) {
                        var e = parseInt(t);
                        return isNaN(e) ? t : e;
                      },
                      Float: function Float(t) {
                        var e = 1 * t;
                        return isNaN(e) ? t : e;
                      },
                      Number: function Number(t) {
                        var e = 1 * t;
                        return isNaN(e) ? t : e;
                      },
                      Nil: function Nil(t) {
                        return Ti.S.toJsValue(t, {
                          autoDate: !1
                        });
                      }
                    }[i.valueType], _n19 = _.isFunction(_t121) ? _t121(e) : e;

                    _.set(s, o, _n19);
                  }

                case 14:
                  _this145.$notify("change", s);

                case 15:
                case "end":
                  return _context70.stop();
              }
            }
          }, _callee70);
        }))();
      },
      OnOpenedStatusChanged: function OnOpenedStatusChanged(t) {
        this.myTreeOpenedStatus = t;
      }
    },
    watch: {
      value: function value() {
        this.evalTreeData();
      }
    },
    mounted: function mounted() {
      this.evalTreeData();
    }
  };
  Ti.Preload("ti/com/ti/text/json/tree/ti-text-json-tree.mjs", t);
}(), Ti.Preload("ti/com/ti/text/json/tree/_com.json", {
  name: "ti-text-json-tree",
  globally: !0,
  i18n: "@i18n:ti-text-json",
  template: "./ti-text-json-tree.html",
  mixins: ["./ti-text-json-tree.mjs"],
  components: ["@com:ti/tree", "@com:ti/text/json/tree/item"]
}), Ti.Preload("ti/com/ti/text/json/_com.json", {
  name: "ti-text-json",
  globally: !0,
  i18n: "@i18n:ti-text-json",
  template: "./ti-text-json.html",
  mixins: ["./ti-text-json.mjs"],
  components: ["@com:ti/gui", "@com:ti/text/raw", "@com:ti/toggle", "@com:ti/text/json/tree"]
}), Ti.Preload("ti/com/ti/text/markdown/preview/markdown-preview.html", '<div class="ti-markdown-preview"\n  :class="TopClass">\n  <article \n    :class="ThemeClass"\n    v-html="myHtml"></article>\n  \x3c!--pre>{{myHtml}}</pre--\x3e\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myHtml: null,
        myTheme: null
      };
    },
    props: {
      previewMediaSrc: {
        type: [String, Function],
        "default": void 0
      },
      value: {
        type: String,
        "default": ""
      },
      placeholder: {
        type: String,
        "default": "i18n:blank"
      },
      theme: {
        type: String,
        "default": "nice"
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      ThemeClass: function ThemeClass() {
        if (this.myTheme) return "ti-markdown-theme-".concat(this.myTheme);
      },
      ThePreviewMediaSrc: function ThePreviewMediaSrc() {
        var _this146 = this;

        var t = _.identity;
        return _.isString(this.previewMediaSrc) ? t = function t(_t122) {
          return Ti.S.renderBy(_this146.previewMediaSrc, {
            src: _t122
          });
        } : _.isFunction(this.previewMediaSrc) && (t = this.previewMediaSrc), /*#__PURE__*/function () {
          var _ref80 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee71(e) {
            return regeneratorRuntime.wrap(function _callee71$(_context71) {
              while (1) {
                switch (_context71.prev = _context71.next) {
                  case 0:
                    return _context71.abrupt("return", /^(https?:)(\/\/)/.test(e) ? e : t(e));

                  case 1:
                  case "end":
                    return _context71.stop();
                }
              }
            }, _callee71);
          }));

          return function (_x7) {
            return _ref80.apply(this, arguments);
          };
        }();
      }
    },
    methods: {
      renderMarkdown: function renderMarkdown() {
        var _this147 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee72() {
          var _t123;

          return regeneratorRuntime.wrap(function _callee72$(_context72) {
            while (1) {
              switch (_context72.prev = _context72.next) {
                case 0:
                  if (!Ti.Util.isBlank(_this147.value)) {
                    _context72.next = 4;
                    break;
                  }

                  _this147.myHtml = Ti.I18n.text(_this147.placeholder), _this147.myTheme = _this147.theme;
                  _context72.next = 9;
                  break;

                case 4:
                  _t123 = Cheap.parseMarkdown(_this147.value);
                  _context72.next = 7;
                  return _t123.toBodyInnerHtml({
                    mediaSrc: _this147.ThePreviewMediaSrc
                  });

                case 7:
                  _this147.myHtml = _context72.sent;
                  _this147.myTheme = _t123.getMeta("theme", _this147.theme);

                case 9:
                case "end":
                  return _context72.stop();
              }
            }
          }, _callee72);
        }))();
      }
    },
    watch: {
      value: {
        handler: "renderMarkdown",
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/ti/text/markdown/preview/markdown-preview.mjs", t);
}(), Ti.Preload("ti/com/ti/text/markdown/preview/_com.json", {
  name: "ti-text-markdown-preview",
  globally: !0,
  template: "./markdown-preview.html",
  mixins: ["./markdown-preview.mjs"]
}), function () {
  var t = {
    getSelection: function getSelection() {
      var _this$$editor;

      return (_this$$editor = this.$editor).getSelection.apply(_this$$editor, arguments);
    },
    setSelection: function setSelection() {
      var _this$$editor2;

      return (_this$$editor2 = this.$editor).setSelection.apply(_this$$editor2, arguments);
    },
    updateContents: function updateContents() {
      var _this$$editor3;

      return (_this$$editor3 = this.$editor).updateContents.apply(_this$$editor3, arguments);
    }
  };
  Ti.Preload("ti/com/ti/text/markdown/richeditor/ti-markdown-richeditor-delegate-methods.mjs", t);
}(), function () {
  var t = {
    mediaBase: {
      type: String,
      "default": void 0
    },
    value: {
      type: String,
      "default": ""
    },
    actions: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },
    markdownMediaSrc: {
      type: [String, Function],
      "default": void 0
    },
    previewMediaSrc: {
      type: [String, Function],
      "default": void 0
    },
    placeholder: {
      type: String,
      "default": "i18n:blank"
    },
    theme: {
      type: String,
      "default": "nice"
    },
    toolbar: {
      type: Array,
      "default": function _default() {
        return ["Heading", "|", "B", "I", "|", "Link", "Code", "|", "BlockQuote", "CodeBlock", "|", "Outdent", "Indent", "|", "UL", "OL"];
      }
    },
    toolbarAlign: {
      type: String,
      "default": "left",
      validator: function validator(t) {
        return /^(left|right|center)$/.test(t);
      }
    },
    blankAs: {
      type: Object,
      "default": function _default() {
        return {
          icon: "fas-coffee",
          text: null
        };
      }
    }
  };
  Ti.Preload("ti/com/ti/text/markdown/richeditor/ti-markdown-richeditor-props.mjs", t);
}(), Ti.Preload("ti/com/ti/text/markdown/richeditor/ti-markdown-richeditor.html", '<div class="ti-markdown-richeditor"\n  :class="TopClass">\n  \x3c!--\n    Toolbar\n  --\x3e\n  <ti-actionbar \n    v-if="hasToolbar"\n      class="as-toolbar"\n      :items="ToolbarMenuData" \n      :align="toolbarAlign"\n      :status="myToolbarStatus"\n      @change="OnToolbarChange"/>\n  \x3c!--\n    Stage\n  --\x3e\n  <div ref="stage"\n    class="as-stage"\n    spellcheck="false"\n    :class="ThemeClass"></div>\n  \x3c!--\n    Cover when nil\n  --\x3e\n  <ti-loading\n    v-if="isNilContent"\n      class="as-nil-mask as-big-mask"\n      v-bind="blankAs"/>\n</div>'), function () {
  var t = {
    "|": {
      type: "line"
    },
    B: {
      icon: "fas-bold",
      notify: "bold",
      highlight: "bold",
      disabled: "italic"
    },
    I: {
      icon: "fas-italic",
      notify: "italic",
      highlight: "italic",
      disabled: "bold"
    },
    Link: {
      icon: "fas-link",
      notify: "link",
      highlight: "link"
    },
    Code: {
      icon: "zmdi-code",
      notify: "code",
      highlight: "code"
    },
    Heading: {
      type: "group",
      icon: "fas-hashtag",
      text: "i18n:wordp-heading",
      items: [{
        text: "i18n:wordp-h1",
        notify: "header",
        highlight: "h1",
        value: 1
      }, {
        text: "i18n:wordp-h2",
        notify: "header",
        highlight: "h2",
        value: 2
      }, {
        text: "i18n:wordp-h3",
        notify: "header",
        highlight: "h3",
        value: 3
      }, {
        text: "i18n:wordp-h4",
        notify: "header",
        highlight: "h4",
        value: 4
      }, {
        text: "i18n:wordp-h5",
        notify: "header",
        highlight: "h5",
        value: 5
      }, {
        text: "i18n:wordp-h6",
        notify: "header",
        highlight: "h6",
        value: 6
      }, {
        text: "i18n:wordp-h0",
        notify: "header",
        highlight: "h0",
        value: 0
      }]
    },
    BlockQuote: {
      icon: "fas-quote-right",
      notify: "blockquote",
      highlight: "blockquote"
    },
    CodeBlock: {
      icon: "fas-code",
      notify: "code_block",
      highlight: "code-block"
    },
    Indent: {
      icon: "fas-indent",
      notify: "indent"
    },
    Outdent: {
      icon: "fas-outdent",
      notify: "outdent"
    },
    UL: {
      icon: "fas-list-ul",
      notify: "list",
      value: "bullet",
      highlight: {
        list: "bullet"
      }
    },
    OL: {
      icon: "fas-list-ol",
      notify: "list",
      value: "ordered",
      highlight: {
        list: "ordered"
      }
    }
  },
      e = {
    data: function data() {
      return {
        myMeta: {},
        syncForbid: 0,
        myToolbarStatus: {}
      };
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "nil-content": this.isNilContent,
          "has-content": !this.isNilContent
        });
      },
      ThemeClass: function ThemeClass() {
        if (this.ThemeName) return "ti-markdown-theme-".concat(this.ThemeName);
      },
      ThemeName: function ThemeName() {
        return _.get(this.myMeta, "theme") || this.theme;
      },
      hasToolbar: function hasToolbar() {
        return !_.isEmpty(this.ToolbarMenuData);
      },
      isNilContent: function isNilContent() {
        return Ti.Util.isNil(this.value);
      },
      ToolbarActions: function ToolbarActions() {
        return _.merge({}, t, this.actions);
      },
      ToolbarMenuData: function ToolbarMenuData() {
        var _this148 = this;

        var t = [];
        return _.forEach(this.toolbar, function (e) {
          var i = _.get(_this148.ToolbarActions, e);

          i && t.push(i);
        }), t;
      },
      TheMarkdownMediaSrc: function TheMarkdownMediaSrc() {
        return _.isFunction(this.markdownMediaSrc) ? this.markdownMediaSrc : _.isString(this.markdownMediaSrc) ? Ti.Util.genInvoking(this.markdownMediaSrc, {
          partial: "right"
        }) : void 0;
      },
      ThePreviewMediaSrc: function ThePreviewMediaSrc() {
        return _.isFunction(this.previewMediaSrc) ? this.previewMediaSrc : _.isString(this.previewMediaSrc) ? Ti.Util.genInvoking(this.previewMediaSrc, {
          partial: "right"
        }) : void 0;
      }
    },
    methods: {
      OnToolbarChange: function OnToolbarChange() {
        var _ref81 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref81.name,
            e = _ref81.value;

        var i = {
          bold: function bold(t, e) {
            t.format("bold", e);
          },
          italic: function italic(t, e) {
            t.format("italic", e);
          },
          code: function code(t, e) {
            t.format("code", e);
          },
          header: function header(t, e) {
            t.format("header", e);
          },
          blockquote: function blockquote(t, e) {
            t.format("blockquote", e);
          },
          code_block: function code_block(t, e) {
            t.format("code-block", e);
          },
          link: function link(t, e) {
            return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee73() {
              var i, n, _t$getFormat, a, _t$getLeaf, _t$getLeaf2, _e42, _a10, s, o, l;

              return regeneratorRuntime.wrap(function _callee73$(_context73) {
                while (1) {
                  switch (_context73.prev = _context73.next) {
                    case 0:
                      i = t.getSelection();

                      if (i) {
                        _context73.next = 5;
                        break;
                      }

                      _context73.next = 4;
                      return Ti.Toast.Open("i18n:wordp-nil-sel", "warn");

                    case 4:
                      return _context73.abrupt("return", _context73.sent);

                    case 5:
                      _t$getFormat = t.getFormat(i), a = _t$getFormat.link;

                      if (a) {
                        _t$getLeaf = t.getLeaf(i.index), _t$getLeaf2 = _slicedToArray(_t$getLeaf, 2), _e42 = _t$getLeaf2[0], _a10 = _t$getLeaf2[1];
                        n = _e42.text;
                        i = {
                          index: i.index - _a10,
                          length: n.length
                        };
                      } else n = t.getText(i);

                      s = !1;
                      /^\+/.test(n) && (n = n.substring(1), s = !0);
                      _context73.next = 11;
                      return Ti.App.Open({
                        icon: "fas-link",
                        title: "i18n:wordp-link",
                        height: "3.2rem",
                        result: {
                          text: n,
                          newtab: s,
                          link: a
                        },
                        model: {
                          prop: "data",
                          event: "change"
                        },
                        comType: "TiForm",
                        comConf: {
                          fields: [{
                            title: "i18n:link-href",
                            name: "link",
                            comType: "ti-input"
                          }, {
                            title: "i18n:link-text",
                            name: "text",
                            comType: "ti-input"
                          }, {
                            title: "i18n:open-newtab",
                            name: "newtab",
                            type: "Boolean",
                            comType: "ti-toggle"
                          }]
                        }
                      });

                    case 11:
                      o = _context73.sent;

                      if (o) {
                        _context73.next = 14;
                        break;
                      }

                      return _context73.abrupt("return");

                    case 14:
                      l = o.text;
                      o.link && o.newtab && (l = "+" + l), t.updateContents({
                        ops: [{
                          retain: i.index
                        }, {
                          "delete": i.length
                        }, {
                          insert: l,
                          attributes: {
                            link: o.link,
                            newtab: !0
                          }
                        }]
                      });

                    case 16:
                    case "end":
                      return _context73.stop();
                  }
                }
              }, _callee73);
            }))();
          },
          indent: function indent(t) {
            t.format("indent", "+1");
          },
          outdent: function outdent(t) {
            t.format("indent", "-1");
          },
          list: function list(t) {
            var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "bullet";
            t.format("list", e);
          }
        }[t];
        _.isFunction(i) && (i(this.$editor, e), this.quillUpdateFormat());
      },
      renderMarkdown: function renderMarkdown() {
        var _this149 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee74() {
          var _t124, _e43;

          return regeneratorRuntime.wrap(function _callee74$(_context74) {
            while (1) {
              switch (_context74.prev = _context74.next) {
                case 0:
                  if (!Ti.Util.isBlank(_this149.value)) {
                    _context74.next = 4;
                    break;
                  }

                  _this149.myMeta = {}, _this149.$editor.setContents([]);
                  _context74.next = 10;
                  break;

                case 4:
                  _t124 = Cheap.parseMarkdown(_this149.value);
                  window.MdDoc = _t124, _this149.myMeta = _.cloneDeep(_t124.getMeta());
                  _context74.next = 8;
                  return _t124.toDelta({
                    mediaSrc: _this149.ThePreviewMediaSrc
                  });

                case 8:
                  _e43 = _context74.sent;

                  _this149.$editor.setContents(_e43);

                case 10:
                case "end":
                  return _context74.stop();
              }
            }
          }, _callee74);
        }))();
      },
      syncMarkdown: function syncMarkdown() {
        this.syncForbid > 0 ? this.syncForbid-- : this.renderMarkdown();
      },
      quillChanged: function quillChanged(t) {
        var _this150 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee75() {
          var e, i;
          return regeneratorRuntime.wrap(function _callee75$(_context75) {
            while (1) {
              switch (_context75.prev = _context75.next) {
                case 0:
                  if (!_this150.isNilContent) {
                    _context75.next = 2;
                    break;
                  }

                  return _context75.abrupt("return");

                case 2:
                  e = Cheap.parseDelta(t);
                  e.setDefaultMeta(_this150.myMeta), _this150.myMeta = e.getMeta();
                  _context75.next = 6;
                  return e.toMarkdown({
                    mediaSrc: _this150.TheMarkdownMediaSrc
                  });

                case 6:
                  i = _context75.sent;
                  i != _this150.value && (_this150.syncForbid = 1, _this150.$notify("change", i));

                case 8:
                case "end":
                  return _context75.stop();
              }
            }
          }, _callee75);
        }))();
      },
      quillSelectionChanged: function quillSelectionChanged(t) {
        if (t) {
          var _e44 = [t.index];
          t.length > 0 && _e44.push(t.length), this.$notify("indicate", _e44.join(":")), this.quillUpdateFormat(t);
        }
      },
      quillUpdateFormat: function quillUpdateFormat(t) {
        var e = this.$editor.getFormat(t);
        e.header ? e["h".concat(e.header)] = !0 : e.h0 = !0, _.isEqual(this.myToolbarStatus, e) || (this.myToolbarStatus = e);
      },
      installQuillEditor: function installQuillEditor() {
        var _this151 = this;

        this.$editor || (!function (t) {
          if (t.__has_been_reset) return;
          var e = t["import"]("formats/indent");
          e.keyName = "li-indent", e.whitelist = [1, 2, 3, 4, 5, 6], t.__has_been_reset = !0;
        }(Quill), this.$editor = new Quill(this.$refs.stage, {
          modules: {
            syntax: !1
          },
          bounds: this.$refs.stage,
          placeholder: Ti.I18n.text(this.placeholder)
        }), this.debounceQuillChanged = _.debounce(function (t, e) {
          var i = e.compose(t);

          _this151.quillChanged(i);
        }, 1e3), this.$editor.on("text-change", function (t, e, i) {
          _this151.isNilContent || _this151.debounceQuillChanged(t, e);
        }), this.$editor.on("selection-change", function (t, e, i) {
          _this151.quillSelectionChanged(t);
        }));
      }
    },
    watch: {
      value: {
        handler: "syncMarkdown"
      },
      isNilContent: function isNilContent(t, e) {
        t && (this.syncForbid = 0);
      }
    },
    mounted: function mounted() {
      this.syncForbid = 0, this.installQuillEditor(), this.syncMarkdown();
    },
    beforeDestroy: function beforeDestroy() {
      this.syncForbid = 0;
    }
  };
  Ti.Preload("ti/com/ti/text/markdown/richeditor/ti-markdown-richeditor.mjs", e);
}(), Ti.Preload("ti/com/ti/text/markdown/richeditor/_com.json", {
  name: "ti-text-markdown-richeditor",
  globally: !0,
  i18n: "@i18n:ti-text-editor",
  css: "@deps:highlight/default.css",
  template: "./ti-markdown-richeditor.html",
  props: "./ti-markdown-richeditor-props.mjs",
  methods: "./ti-markdown-richeditor-delegate-methods.mjs",
  mixins: ["./ti-markdown-richeditor.mjs"],
  components: ["@com:wn/adaptlist"],
  deps: ["@deps:quill/quill.js", "@deps:highlight/highlight.js"]
}), Ti.Preload("ti/com/ti/text/raw/ti-text-raw.html", '<div class="ti-text-raw"\n  :class="TopClass"\n  v-ti-activable>\n  \x3c!--\n    Header\n  --\x3e\n  <div\n    v-if="isShowHead"\n      class="as-head">\n      <ti-icon :value="icon"/>\n      <span>{{title}}</span>\n  </div>\n  \x3c!--\n    Main\n  --\x3e\n  <div class="as-main">\n    <textarea ref="text" \n      spellcheck="false"\n      :placeholder="placeholder | i18n"\n      :value="myContent"\n      @compositionstart="OnInputCompositionStart"\n      @compositionend="OnInputCompositionEnd"\n      @input="OnInputing"\n      @change="OnTextChanged"></textarea>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myContent: null,
        inputCompositionstart: !1
      };
    },
    props: {
      icon: {
        type: [String, Object],
        "default": void 0
      },
      title: {
        type: String,
        "default": void 0
      },
      trimed: {
        type: Boolean,
        "default": !1
      },
      value: {
        type: String,
        "default": ""
      },
      placeholder: {
        type: String,
        "default": "i18n:blank"
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "show-title": this.showTitle,
          "hide-title": !this.showTitle,
          "is-changed": _.get(this.status, "changed")
        });
      },
      isShowHead: function isShowHead() {
        return this.title || this.icon;
      },
      hasContent: function hasContent() {
        return !Ti.Util.isNil(this.value);
      }
    },
    methods: {
      OnInputCompositionStart: function OnInputCompositionStart() {
        this.inputCompositionstart = !0;
      },
      OnInputCompositionEnd: function OnInputCompositionEnd() {
        this.inputCompositionstart = !1, this.OnTextChanged();
      },
      OnInputing: function OnInputing(t) {
        this.inputCompositionstart || this.OnTextChanged();
      },
      OnTextChanged: function OnTextChanged() {
        var t = _.get(this.$refs.text, "value");

        this.trimed && (t = _.trim(t)), this.myContent = t;
      },
      syncMyContent: function syncMyContent() {
        this.myContent = this.value;
      },
      checkMyContent: function checkMyContent() {
        this.myContent != this.value && this.$notify("change", this.myContent);
      },
      __ti_shortcut: function __ti_shortcut(t) {
        if ("CTRL+ENTER" == t) return this.myContent != this.value && this.$notify("change", this.myContent), {
          prevent: !0
        };
      }
    },
    watch: {
      value: "syncMyContent",
      myContent: function myContent() {
        this.debCheckChange();
      }
    },
    created: function created() {
      var _this152 = this;

      this.debCheckChange = _.debounce(function () {
        _this152.checkMyContent();
      }, 500);
    },
    mounted: function mounted() {
      this.syncMyContent();
    }
  };
  Ti.Preload("ti/com/ti/text/raw/ti-text-raw.mjs", t);
}(), Ti.Preload("ti/com/ti/text/raw/_com.json", {
  name: "ti-text-raw",
  globally: !0,
  template: "./ti-text-raw.html",
  mixins: ["./ti-text-raw.mjs"]
}), Ti.Preload("ti/com/ti/time/ti-time.html", '<div class="ti-col-data as-time" \n  :class="topClass" \n  :style="topStyle">\n  <ti-list v-for="list in theListGroup"\n    :key="list.key"\n    :data="list.data"\n    :display="\'text\'"\n    :current-id="list.currentId"\n    :cancelable="false"\n    @select="onListSelected(list.key, $event)"/>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      value: {
        type: [String, Number, Date, Ti.Types.Time],
        "default": null
      },
      valueUnit: {
        type: String,
        "default": "s",
        validator: function validator(t) {
          return /^(ms|s|min|hr)$/.test(t);
        }
      },
      mode: {
        type: String,
        "default": "auto",
        validator: function validator(t) {
          return /^(sec|min|auto)$/.test(t);
        }
      },
      width: {
        type: [Number, String],
        "default": null
      },
      height: {
        type: [Number, String],
        "default": 200
      }
    },
    computed: {
      topClass: function topClass() {
        return this.getTopClass();
      },
      topStyle: function topStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      theTime: function theTime() {
        return Ti.Types.toTime(this.value || 0, {
          unit: this.valueUnit
        });
      },
      theListGroup: function theListGroup() {
        var t = [this.createList("hours", 0, 24, this.theTime.hours), this.createList("minutes", 0, 60, this.theTime.minutes)];
        return /^(auto|sec)$/.test(this.mode) && t.push(this.createList("seconds", 0, 60, this.theTime.seconds)), t;
      }
    },
    methods: {
      createList: function createList(t, e, i) {
        var n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
        var a = {
          key: t,
          currentId: "R-".concat(n),
          data: []
        };

        for (var _t125 = e; _t125 < i; _t125++) {
          a.data.push({
            id: "R-".concat(_t125),
            value: _t125,
            text: _.padStart(_t125, 2, "0")
          });
        }

        return a;
      },
      onListSelected: function onListSelected(t) {
        var _ref82 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            e = _ref82.current;

        var i = this.theTime.clone();
        i[t] = _.get(e, "value") || 0, this.$notify("change", i);
      }
    }
  };
  Ti.Preload("ti/com/ti/time/ti-time.mjs", t);
}(), Ti.Preload("ti/com/ti/time/_com.json", {
  name: "ti-time",
  globally: !0,
  template: "./ti-time.html",
  mixins: ["./ti-time.mjs"],
  components: ["@com:ti/list"]
}), Ti.Preload("ti/com/ti/toggle/ti-toggle.html", '<div class="ti-toggle"\n  :class="topClass">\n  <aside @click.left="onClick"><b></b></aside>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        isOn: !1
      };
    },
    props: {
      value: !1,
      readonly: !1,
      options: {
        type: Array,
        "default": function _default() {
          return [!1, !0];
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName({
          "is-off": !this.isOn,
          "is-on": this.isOn
        }, this.className);
      }
    },
    methods: {
      onClick: function onClick() {
        if (!this.readonly) {
          var _t126 = this.isOn ? 0 : 1;

          this.$notify("change", this.options[_t126]);
        }
      }
    },
    watch: {
      value: function value() {
        this.isOn = !!this.value;
      }
    },
    mounted: function mounted() {
      this.isOn = !!this.value;
    }
  };
  Ti.Preload("ti/com/ti/toggle/ti-toggle.mjs", t);
}(), Ti.Preload("ti/com/ti/toggle/_com.json", {
  name: "ti-toggle",
  globally: !0,
  template: "./ti-toggle.html",
  mixins: ["./ti-toggle.mjs"]
}), function () {
  var t = {
    options: {
      type: [String, Array, Function, Ti.Dict],
      "default": function _default() {
        return [];
      }
    },
    valueBy: {
      type: [String, Function],
      "default": void 0
    },
    textBy: {
      type: [String, Function],
      "default": void 0
    },
    iconeBy: {
      type: [String, Function],
      "default": void 0
    },
    value: void 0,
    valueType: {
      type: String,
      "default": "id",
      validator: function validator(t) {
        return /^(id|obj|item)$/.test(t);
      }
    },
    idBy: {
      type: String,
      "default": "id"
    },
    mapping: {
      type: Object,
      "default": void 0
    },
    canComType: {
      type: String,
      "default": void 0
    },
    canComConf: {
      type: Object,
      "default": void 0
    },
    selComType: {
      type: String,
      "default": void 0
    },
    selComConf: {
      type: Object,
      "default": void 0
    },
    filter: {
      type: Boolean,
      "default": !0
    },
    fltComType: {
      type: String,
      "default": "ti-input"
    },
    fltComConf: {
      type: Object,
      "default": void 0
    },
    display: {
      type: [Object, String, Array],
      "default": void 0
    },
    assignButtons: {
      type: Object,
      "default": function _default() {
        return {
          add: "fas-angle-double-right",
          remove: "fas-angle-double-left"
        };
      }
    },
    canTitle: {
      type: String,
      "default": "i18n:candidate"
    },
    selTitle: {
      type: String,
      "default": "i18n:checked"
    },
    width: {
      type: [Number, String],
      "default": null
    },
    height: {
      type: [Number, String],
      "default": null
    }
  };
  Ti.Preload("ti/com/ti/transfer/ti-transfer-props.mjs", t);
}(), Ti.Preload("ti/com/ti/transfer/ti-transfer.html", '<div class="ti-transfer"\n  :class="TopClass"\n  :style="TopStyle">\n  \x3c!--=========================================\n    Left: Candidates\n  --\x3e\n  <div class="as-box as-can-list">\n    \x3c!--\n      Head\n    --\x3e\n    <div class="as-box-head">\n      <div class="as-list-checker"\n        @click.left="OnClickHeadChecker(can)">\n        <ti-icon :value="GetHeadCheckerIcon(can)"/>\n      </div>\n      \x3c!--Title--\x3e\n      <div class="as-title">{{canTitle|i18n}}</div>\n      \x3c!--Filter--\x3e\n      <div v-if="filter"\n        class="as-filter">\n          <component \n            :is="fltComType"\n            v-bind="FilterComConf"\n            :value="myFilterValue"\n            @change="OnFilterChanged"\n            /></div>\n    </div>\n    \x3c!--\n      component\n    --\x3e\n    <div class="as-box-list">\n      <component :is="CanListComType"\n        class="as-box-main ti-fill-parent"\n        v-bind="CanListComConf"\n        @select="OnCanListSelected"/>\n    </div>\n    \x3c!--\n      Foot\n    --\x3e\n    <div class="as-box-foot">\n      <span>{{\'total-count\'|i18n({nb:can.data.length})}}</span>\n    </div>\n  </div>\n  \x3c!--=========================================\n    Buttons\n  --\x3e\n  <div class="as-buttons">\n    \x3c!--Add--\x3e\n    <div class="as-btn is-add"\n      @click.left="canListToSel">\n      <ti-icon :value="assignButtons.add"/>\n    </div>\n    \x3c!--Remove--\x3e\n    <div class="as-btn is-remove"\n      @click.left="selListToCan">\n      <ti-icon :value="assignButtons.remove"/>\n    </div>\n  </div>\n  \x3c!--=========================================\n    Right: Checked\n  --\x3e\n  <div class="as-box as-sel-list">\n    \x3c!--\n      Head\n    --\x3e\n    <div class="as-box-head">\n      <div class="as-list-checker"\n        @click.left="OnClickHeadChecker(sel)">\n        <ti-icon :value="GetHeadCheckerIcon(sel)"/>\n      </div>\n      <div class="as-title">{{selTitle|i18n}}</div>\n      <div class="as-actions">\n        <ti-actionbar v-bind="SelActions"/>\n      </div>\n    </div>\n    \x3c!--\n      component\n    --\x3e\n    <div class="as-box-list">\n      <component :is="SelListComType"\n        class="as-box-main ti-cover-parent"\n        v-bind="SelListComConf"\n        @select="OnSelListSelected"/>\n    </div>\n    \x3c!--\n      Foot\n    --\x3e\n    <div class="as-box-foot">\n      <span>{{\'total-count\'|i18n({nb:sel.data.length})}}</span>\n    </div>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myFilterValue: null,
        myOptionsData: [],
        can: {
          data: [],
          checkedIds: []
        },
        sel: {
          data: [],
          checkedIds: []
        },
        selIdMap: {},
        loading: !0
      };
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TopStyle: function TopStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      Values: function Values() {
        return Ti.S.toArray(this.value);
      },
      CanListComType: function CanListComType() {
        return this.canComType || "ti-list";
      },
      SelListComType: function SelListComType() {
        return this.selComType || "ti-list";
      },
      CanListComConf: function CanListComConf() {
        return this.genComConf(this.canComConf, this.can);
      },
      SelListComConf: function SelListComConf() {
        return this.genComConf(this.selComConf, this.sel);
      },
      SelActions: function SelActions() {
        var _this153 = this;

        return {
          items: [{
            name: "moveUp",
            type: "action",
            icon: "zmdi-long-arrow-up",
            action: function action() {
              _this153.selMoveUp();
            }
          }, {
            name: "moveDown",
            type: "action",
            icon: "zmdi-long-arrow-down",
            action: function action() {
              _this153.selMoveDown();
            }
          }]
        };
      },
      FilterComConf: function FilterComConf() {
        return _.assign({
          trimed: !0,
          width: "100%",
          prefixIcon: this.loading ? "fas-spinner fa-spin" : "zmdi-filter-list",
          placeholder: "i18n:filter",
          hover: ["prefixIcon", "suffixText", "suffixIcon"],
          loading: this.loading
        }, this.fltComConf);
      },
      GetValueBy: function GetValueBy() {
        var _this154 = this;

        return function (t) {
          return _this154.Dict.getValue(t);
        };
      },
      ReverMapping: function ReverMapping() {
        if (this.mapping) {
          var _t127 = {};
          return _.forEach(this.mapping, function (e, i) {
            _t127[e] = i;
          }), _t127;
        }
      },
      Dict: function Dict() {
        var _this155 = this;

        var t = function t(_ref83) {
          var t = _ref83.loading;
          _this155.loading = t;
        };

        if (this.options instanceof Ti.Dict) {
          var e = this.options.duplicate();
          return e.addHooks(t), e;
        }

        if (_.isString(this.options)) {
          var _e45 = Ti.DictFactory.DictReferName(this.options);

          if (_e45) return Ti.DictFactory.CheckDict(_e45, t);
        }

        return Ti.DictFactory.CreateDict({
          data: this.options,
          getValue: Ti.Util.genGetter(this.valueBy || "value"),
          getText: Ti.Util.genGetter(this.textBy || "text|name"),
          getIcon: Ti.Util.genGetter(this.textBy || "icon")
        }, {
          hooks: t
        });
      }
    },
    methods: {
      OnCanListSelected: function OnCanListSelected(_ref84) {
        var t = _ref84.checkedIds;
        this.can.checkedIds = Ti.Util.truthyKeys(t);
      },
      OnSelListSelected: function OnSelListSelected(_ref85) {
        var t = _ref85.checkedIds;
        this.sel.checkedIds = Ti.Util.truthyKeys(t);
      },
      OnClickHeadChecker: function OnClickHeadChecker(t) {
        var e = t.data,
            i = t.checkedIds;
        if (e.length == i.length) t.checkedIds = [];else {
          var _i33 = this.rebuildIdMap(e);

          t.checkedIds = Ti.Util.truthyKeys(_i33);
        }
      },
      OnFilterChanged: function OnFilterChanged(t) {
        var _this156 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee76() {
          return regeneratorRuntime.wrap(function _callee76$(_context76) {
            while (1) {
              switch (_context76.prev = _context76.next) {
                case 0:
                  console.log("OnFilterChanged", t);
                  _this156.myFilterValue = t;
                  _context76.next = 4;
                  return _this156.Dict.queryData(t);

                case 4:
                  _this156.myOptionsData = _context76.sent;

                  _this156.evalShownCanList();

                case 6:
                case "end":
                  return _context76.stop();
              }
            }
          }, _callee76);
        }))();
      },
      GetHeadCheckerIcon: function GetHeadCheckerIcon(_ref86) {
        var t = _ref86.data,
            e = _ref86.checkedIds;

        if (t.length > 0) {
          if (t.length == e.length) return "fas-check-square";
          if (e.length > 0) return "fas-minus-square";
        }

        return "far-square";
      },
      canListToSel: function canListToSel() {
        if (_.isEmpty(this.can.checkedIds)) return;

        var _this$assignToList = this.assignToList(this.can, this.sel),
            t = _this$assignToList.src,
            e = _this$assignToList.tag;

        this.can = t, this.sel = e;
      },
      selListToCan: function selListToCan() {
        if (_.isEmpty(this.sel.checkedIds)) return;

        var _this$assignToList2 = this.assignToList(this.sel, this.can),
            t = _this$assignToList2.src,
            e = _this$assignToList2.tag;

        this.can = e, this.sel = t;
      },
      selMoveUp: function selMoveUp() {
        var _Ti$Util7;

        var _this$evalTheList = this.evalTheList(this.sel),
            t = _this$evalTheList.remains,
            e = _this$evalTheList.checks,
            i = _this$evalTheList.minIndex,
            n = _this$evalTheList.maxIndex,
            a = _this$evalTheList.checkedIds;

        !_.isEmpty(e) && i > 0 && ((_Ti$Util7 = Ti.Util).insertToArray.apply(_Ti$Util7, [t, i - 1].concat(_toConsumableArray(e))), this.sel = {
          data: t,
          checkedIds: a
        });
      },
      selMoveDown: function selMoveDown() {
        var _Ti$Util8;

        var _this$evalTheList2 = this.evalTheList(this.sel),
            t = _this$evalTheList2.remains,
            e = _this$evalTheList2.checks,
            i = _this$evalTheList2.minIndex,
            n = _this$evalTheList2.maxIndex,
            a = _this$evalTheList2.checkedIds;

        _.isEmpty(e) || (n < t.length && n++, (_Ti$Util8 = Ti.Util).insertToArray.apply(_Ti$Util8, [t, n].concat(_toConsumableArray(e))), this.sel = {
          data: t,
          checkedIds: a
        });
      },
      evalTheList: function evalTheList() {
        var _this157 = this;

        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var e = [],
            i = [],
            n = [],
            a = {},
            s = t.data.length,
            o = -1;
        return _.forEach(t.checkedIds, function (t) {
          a[t] = !0;
        }), _.forEach(t.data, function (t, l) {
          var r = _this157.GetValueBy(t);

          a[r] ? (s = Math.min(l, s), o = Math.max(l, o), n.push(r), i.push(t)) : e.push(t);
        }), {
          remains: e,
          checks: i,
          minIndex: s,
          maxIndex: o - i.length + 1,
          checkedIds: n
        };
      },
      assignToList: function assignToList(_ref87, i) {
        var _this158 = this;

        var t = _ref87.data,
            e = _ref87.checkedIds;
        var n = {};

        _.forEach(e, function (t) {
          return n[t] = !0;
        });

        var a = [],
            s = [];
        return _.forEach(t, function (t) {
          var e = _this158.Dict.getValue(t);

          n[e] ? s.push(t) : a.push(t);
        }), _.forEach(i.checkedIds, function (t) {
          return n[t] = !0;
        }), {
          src: {
            data: a,
            checkedIds: []
          },
          tag: {
            data: _.concat(i.data, s),
            checkedIds: _.keys(n)
          }
        };
      },
      genComConf: function genComConf(t, _ref88) {
        var e = _ref88.data,
            i = _ref88.checkedIds;
        return _.assign({
          idBy: this.GetValueBy,
          display: this.display || "text"
        }, t, {
          data: e,
          checkedIds: i,
          multi: !0,
          checkable: !0,
          puppetMode: !0,
          autoCheckCurrent: !1
        });
      },
      evalShownCanList: function evalShownCanList() {
        var _this159 = this;

        var t = [];
        _.forEach(this.myOptionsData, function (e) {
          var i = _this159.Dict.getValue(e);

          _this159.selIdMap[i] || t.push(e);
        }), this.can.data = t, this.can.checkedIds = [];
      },
      reloadCanList: function reloadCanList() {
        var _this160 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee77() {
          return regeneratorRuntime.wrap(function _callee77$(_context77) {
            while (1) {
              switch (_context77.prev = _context77.next) {
                case 0:
                  _context77.next = 2;
                  return _this160.Dict.queryData(_this160.myFilterValue);

                case 2:
                  _this160.myOptionsData = _context77.sent;

                  _this160.evalShownCanList();

                case 4:
                case "end":
                  return _context77.stop();
              }
            }
          }, _callee77);
        }))();
      },
      reloadSelList: function reloadSelList() {
        var _arguments17 = arguments,
            _this161 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee78() {
          var t, e, _iterator62, _step62, i, _t128, n;

          return regeneratorRuntime.wrap(function _callee78$(_context78) {
            while (1) {
              switch (_context78.prev = _context78.next) {
                case 0:
                  t = _arguments17.length > 0 && _arguments17[0] !== undefined ? _arguments17[0] : _this161.Values;
                  e = [];
                  _iterator62 = _createForOfIteratorHelper(t);
                  _context78.prev = 3;

                  _iterator62.s();

                case 5:
                  if ((_step62 = _iterator62.n()).done) {
                    _context78.next = 14;
                    break;
                  }

                  i = _step62.value;
                  _t128 = _this161.evalValue(i);
                  _context78.next = 10;
                  return _this161.Dict.getItem(_t128);

                case 10:
                  n = _context78.sent;
                  n ? e.push(n) : e.push(_t128);

                case 12:
                  _context78.next = 5;
                  break;

                case 14:
                  _context78.next = 19;
                  break;

                case 16:
                  _context78.prev = 16;
                  _context78.t0 = _context78["catch"](3);

                  _iterator62.e(_context78.t0);

                case 19:
                  _context78.prev = 19;

                  _iterator62.f();

                  return _context78.finish(19);

                case 22:
                  _this161.sel = {
                    data: e,
                    checkedIds: _.get(_this161.sel, "checkedIds") || []
                  };

                case 23:
                case "end":
                  return _context78.stop();
              }
            }
          }, _callee78, null, [[3, 16, 19, 22]]);
        }))();
      },
      rebuildIdMap: function rebuildIdMap(t) {
        var _this162 = this;

        var e = {};
        return _.forEach(t, function (t) {
          var i = _this162.Dict.getValue(t);

          e[i] = !0;
        }), e;
      },
      rebuildSelIdMap: function rebuildSelIdMap() {
        this.selIdMap = this.rebuildIdMap(this.sel.data);
      },
      evalValue: function evalValue(t) {
        var _this163 = this;

        return Ti.Util.isNil(t) ? t : {
          id: function id(t) {
            return t;
          },
          obj: function obj(t) {
            return _this163.ReverMapping && (t = Ti.Util.translate(t, _this163.ReverMapping)), _.get(t, _this163.idBy);
          },
          item: function item(t) {
            return _this163.ReverMapping && (t = Ti.Util.translate(t, _this163.ReverMapping)), _.get(t, "value");
          }
        }[this.valueType](t);
      },
      genValue: function genValue() {
        var _this164 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee81() {
          var t;
          return regeneratorRuntime.wrap(function _callee81$(_context81) {
            while (1) {
              switch (_context81.prev = _context81.next) {
                case 0:
                  t = _.keys(_this164.selIdMap);

                  if (!_.isEmpty(t)) {
                    _context81.next = 5;
                    break;
                  }

                  _context81.t0 = [];
                  _context81.next = 8;
                  break;

                case 5:
                  _context81.next = 7;
                  return {
                    id: function id(t) {
                      return t;
                    },
                    obj: function () {
                      var _obj = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee79(t) {
                        var e, _iterator63, _step63, i, _t129;

                        return regeneratorRuntime.wrap(function _callee79$(_context79) {
                          while (1) {
                            switch (_context79.prev = _context79.next) {
                              case 0:
                                e = [];
                                _iterator63 = _createForOfIteratorHelper(t);
                                _context79.prev = 2;

                                _iterator63.s();

                              case 4:
                                if ((_step63 = _iterator63.n()).done) {
                                  _context79.next = 12;
                                  break;
                                }

                                i = _step63.value;
                                _context79.next = 8;
                                return _this164.Dict.getItem(i);

                              case 8:
                                _t129 = _context79.sent;
                                _t129 && _this164.mapping && (_t129 = Ti.Util.translate(_t129, _this164.mapping)), e.push(_t129);

                              case 10:
                                _context79.next = 4;
                                break;

                              case 12:
                                _context79.next = 17;
                                break;

                              case 14:
                                _context79.prev = 14;
                                _context79.t0 = _context79["catch"](2);

                                _iterator63.e(_context79.t0);

                              case 17:
                                _context79.prev = 17;

                                _iterator63.f();

                                return _context79.finish(17);

                              case 20:
                                return _context79.abrupt("return", e);

                              case 21:
                              case "end":
                                return _context79.stop();
                            }
                          }
                        }, _callee79, null, [[2, 14, 17, 20]]);
                      }));

                      function obj(_x8) {
                        return _obj.apply(this, arguments);
                      }

                      return obj;
                    }(),
                    item: function () {
                      var _item = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee80(t) {
                        var e, _iterator64, _step64, i, _t130, n;

                        return regeneratorRuntime.wrap(function _callee80$(_context80) {
                          while (1) {
                            switch (_context80.prev = _context80.next) {
                              case 0:
                                e = [];
                                _iterator64 = _createForOfIteratorHelper(t);
                                _context80.prev = 2;

                                _iterator64.s();

                              case 4:
                                if ((_step64 = _iterator64.n()).done) {
                                  _context80.next = 13;
                                  break;
                                }

                                i = _step64.value;
                                _context80.next = 8;
                                return _this164.Dict.getItem(i);

                              case 8:
                                _t130 = _context80.sent;
                                n = {
                                  text: _this164.Dict.getText(_t130),
                                  value: _this164.Dict.getValue(_t130)
                                };
                                n && (_this164.mapping && (n = Ti.Util.translate(n, _this164.mapping)), e.push(n));

                              case 11:
                                _context80.next = 4;
                                break;

                              case 13:
                                _context80.next = 18;
                                break;

                              case 15:
                                _context80.prev = 15;
                                _context80.t0 = _context80["catch"](2);

                                _iterator64.e(_context80.t0);

                              case 18:
                                _context80.prev = 18;

                                _iterator64.f();

                                return _context80.finish(18);

                              case 21:
                                return _context80.abrupt("return", e);

                              case 22:
                              case "end":
                                return _context80.stop();
                            }
                          }
                        }, _callee80, null, [[2, 15, 18, 21]]);
                      }));

                      function item(_x9) {
                        return _item.apply(this, arguments);
                      }

                      return item;
                    }()
                  }[_this164.valueType](t);

                case 7:
                  _context81.t0 = _context81.sent;

                case 8:
                  return _context81.abrupt("return", _context81.t0);

                case 9:
                case "end":
                  return _context81.stop();
              }
            }
          }, _callee81);
        }))();
      }
    },
    watch: {
      value: function value(t, e) {
        _.isEqual(t, e) || this.reloadSelList();
      },
      options: function options(t, e) {
        _.isEqual(t, e) || this.reloadCanList();
      },
      "sel.data": function () {
        var _selData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee82() {
          var t;
          return regeneratorRuntime.wrap(function _callee82$(_context82) {
            while (1) {
              switch (_context82.prev = _context82.next) {
                case 0:
                  this.rebuildSelIdMap();
                  _context82.next = 3;
                  return this.genValue();

                case 3:
                  t = _context82.sent;
                  _.isEqual(t, this.Values) || this.$notify("change", t);

                case 5:
                case "end":
                  return _context82.stop();
              }
            }
          }, _callee82, this);
        }));

        function selData() {
          return _selData.apply(this, arguments);
        }

        return selData;
      }()
    },
    mounted: function () {
      var _mounted11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee83() {
        return regeneratorRuntime.wrap(function _callee83$(_context83) {
          while (1) {
            switch (_context83.prev = _context83.next) {
              case 0:
                _context83.next = 2;
                return this.reloadSelList();

              case 2:
                _context83.next = 4;
                return this.reloadCanList();

              case 4:
              case "end":
                return _context83.stop();
            }
          }
        }, _callee83, this);
      }));

      function mounted() {
        return _mounted11.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/ti/transfer/ti-transfer.mjs", t);
}(), Ti.Preload("ti/com/ti/transfer/_com.json", {
  name: "ti-transfer",
  globally: !0,
  template: "./ti-transfer.html",
  props: "./ti-transfer-props.mjs",
  mixins: ["./ti-transfer.mjs"]
}), Ti.Preload("ti/com/ti/tree/ti-tree.html", '<ti-table\n  class="ti-tree"\n  :class="TopClass"\n  id-by="id"\n  icon-by="icon"\n  indent-by="indent"\n  raw-data-by="rawData"\n  :fields="TableFields"\n  :data="myTreeTableData"\n  :changed-id="changedId"\n  :current-id="currentId"\n  :checked-ids="checkedIds"\n  :multi="multi"\n  :checkable="checkable"\n  :selectable="selectable"\n  :cancelable="cancelable"\n  :hoverable="hoverable"\n  :puppet-mode="puppetMode"\n  :width="width"\n  :height="height"\n  :head="TableHead"\n  :border="border"\n  :blank-as="blankAs"\n  :auto-scroll-into-view="autoScrollIntoView"\n  @icon="OnRowIconClick"\n  @open="OnRowOpen"\n  @select="OnRowSelect"\n  @cell:item:change="OnCellItemChange"/>\n  '), function () {
  var _t132;

  var t = (_t132 = {
    data: function data() {
      return {
        myTreeTableData: [],
        myOpenedNodePaths: {},
        myCurrentId: null
      };
    },
    props: {
      nodeClassName: {
        type: String,
        "default": null
      },
      data: {
        type: [Object, Array],
        "default": null
      },
      idBy: {
        type: [String, Function],
        "default": "id"
      },
      nameBy: {
        type: [String, Function],
        "default": "name"
      },
      childrenBy: {
        type: [String, Function],
        "default": "children"
      },
      leafBy: {
        type: [String, Function],
        "default": "!children"
      },
      title: {
        type: String,
        "default": "i18n:title"
      },
      mainWidth: {
        type: [String, Number],
        "default": "stretch"
      },
      display: {
        type: [String, Object, Array],
        "default": "name"
      },
      defaultOpenDepth: {
        type: Number,
        "default": 0
      },
      keepOpenBy: {
        type: String,
        "default": null
      },
      keepCurrentBy: {
        type: String,
        "default": null
      },
      changedId: {
        type: String,
        "default": null
      },
      currentId: {
        type: String,
        "default": null
      },
      checkedIds: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      openedNodePaths: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      multi: {
        type: Boolean,
        "default": !1
      },
      checkable: {
        type: Boolean,
        "default": !1
      },
      selectable: {
        type: Boolean,
        "default": !0
      },
      cancelable: {
        type: Boolean,
        "default": !0
      },
      hoverable: {
        type: Boolean,
        "default": !1
      },
      width: {
        type: [String, Number],
        "default": null
      },
      puppetMode: {
        type: Boolean,
        "default": !1
      },
      height: {
        type: [String, Number],
        "default": null
      },
      autoScrollIntoView: {
        type: Boolean,
        "default": !0
      },
      autoOpen: {
        type: Boolean,
        "default": !1
      },
      showRoot: {
        type: Boolean,
        "default": !0
      },
      nodeHandleIcons: {
        type: Array,
        "default": function _default() {
          return ["zmdi-chevron-right", "zmdi-chevron-down"];
        }
      },
      border: {
        type: String,
        "default": "column",
        validator: function validator(t) {
          return /^(row|column|cell|none)$/.test(t);
        }
      },
      fields: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      blankAs: void 0
    },
    watch: {},
    computed: {
      TopClass: function TopClass() {
        return Ti.Css.mergeClassName({
          "is-selectable": this.selectable,
          "is-hoverable": this.hoverable
        }, this.className);
      },
      getNodeId: function getNodeId() {
        var _this165 = this;

        return _.isFunction(this.idBy) ? function (t) {
          return _this165.idBy(t);
        } : function (t) {
          return _.get(t, _this165.idBy);
        };
      },
      getNodeName: function getNodeName() {
        var _this166 = this;

        return _.isFunction(this.nameBy) ? function (t) {
          return _this166.nameBy(t);
        } : function (t) {
          return _.get(t, _this166.nameBy);
        };
      },
      isNodeLeaf: function isNodeLeaf() {
        var _this167 = this;

        if (_.isFunction(this.leafBy)) return function (t) {
          return !!_this167.leafBy(t);
        };

        var t = /^(!)?(.+)$/.exec(this.leafBy),
            e = !!t[1],
            i = _.trim(t[2]);

        return function (t) {
          return _.get(t, i) ? !e : e;
        };
      },
      getNodeChildren: function getNodeChildren() {
        var _this168 = this;

        return _.isFunction(this.childrenBy) ? function (t) {
          return _this168.childrenBy(t);
        } : function (t) {
          return _.get(t, _this168.childrenBy);
        };
      },
      isTable: function isTable() {
        return _.isArray(this.fields) && !_.isEmpty(this.fields);
      },
      TableHead: function TableHead() {
        return this.isTable ? "frozen" : "none";
      },
      TableFields: function TableFields() {
        var t = {
          title: this.title,
          width: this.mainWidth,
          nowrap: !0,
          display: this.display
        };
        return this.isTable ? _.concat(t, this.fields) : [t];
      }
    },
    methods: {
      evalTreeTableData: function evalTreeTableData() {
        var _this169 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee84() {
          var t;
          return regeneratorRuntime.wrap(function _callee84$(_context84) {
            while (1) {
              switch (_context84.prev = _context84.next) {
                case 0:
                  t = [];

                  if (!_.isArray(_this169.data)) {
                    _context84.next = 6;
                    break;
                  }

                  _context84.next = 4;
                  return _this169.joinTreeTableRow(t, {}, null, _this169.data);

                case 4:
                  _context84.next = 10;
                  break;

                case 6:
                  _context84.t0 = _this169.data;

                  if (!_context84.t0) {
                    _context84.next = 10;
                    break;
                  }

                  _context84.next = 10;
                  return _this169.joinTreeTableRow(t, _this169.data, null);

                case 10:
                  _this169.myTreeTableData = t;

                case 11:
                case "end":
                  return _context84.stop();
              }
            }
          }, _callee84);
        }))();
      },
      joinTreeTableRow: function joinTreeTableRow() {
        var _arguments18 = arguments,
            _this170 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee85() {
          var t, e, i, n, a, _iterator65, _step65, _e46;

          return regeneratorRuntime.wrap(function _callee85$(_context85) {
            while (1) {
              switch (_context85.prev = _context85.next) {
                case 0:
                  t = _arguments18.length > 0 && _arguments18[0] !== undefined ? _arguments18[0] : [];
                  e = _arguments18.length > 1 && _arguments18[1] !== undefined ? _arguments18[1] : {};
                  i = _arguments18.length > 2 && _arguments18[2] !== undefined ? _arguments18[2] : [];
                  n = _arguments18.length > 3 ? _arguments18[3] : undefined;
                  a = {};
                  i ? (a.name = _this170.getNodeName(e), a.path = _.concat(i, a.name), a.pathId = a.path.join("/"), a.id = Ti.Util.fallbackNil(_this170.getNodeId(e), a.pathId), a.indent = a.path.length, a.leaf = _this170.isNodeLeaf(e), a.opened = Ti.Util.fallback(_this170.myOpenedNodePaths[a.pathId], a.indent < _this170.defaultOpenDepth), a.icon = !!a.leaf || _this170.nodeHandleIcons[a.opened ? 1 : 0]) : (a.name = _this170.getNodeName(e) || "$ROOT$", a.path = [], a.pathId = "/", a.id = Ti.Util.fallbackNil(_this170.getNodeId(e), a.pathId), a.indent = 0, a.leaf = !1, a.opened = !_this170.showRoot || Ti.Util.fallback(_this170.myOpenedNodePaths[a.pathId], a.indent < _this170.defaultOpenDepth), a.icon = !!a.leaf || _this170.nodeHandleIcons[a.opened ? 1 : 0]);
                  a.rawData = e;
                  _this170.showRoot ? t.push(a) : (a.indent--, a.indent >= 0 && t.push(a));
                  _context85.t0 = a.opened && !a.leaf;

                  if (!_context85.t0) {
                    _context85.next = 16;
                    break;
                  }

                  _context85.t1 = n;

                  if (_context85.t1) {
                    _context85.next = 15;
                    break;
                  }

                  _context85.next = 14;
                  return _this170.getNodeChildren(e);

                case 14:
                  n = _context85.sent;

                case 15:
                  _context85.t0 = _.isArray(n);

                case 16:
                  if (!_context85.t0) {
                    _context85.next = 34;
                    break;
                  }

                  _iterator65 = _createForOfIteratorHelper(n);
                  _context85.prev = 18;

                  _iterator65.s();

                case 20:
                  if ((_step65 = _iterator65.n()).done) {
                    _context85.next = 26;
                    break;
                  }

                  _e46 = _step65.value;
                  _context85.next = 24;
                  return _this170.joinTreeTableRow(t, _e46, a.path);

                case 24:
                  _context85.next = 20;
                  break;

                case 26:
                  _context85.next = 31;
                  break;

                case 28:
                  _context85.prev = 28;
                  _context85.t2 = _context85["catch"](18);

                  _iterator65.e(_context85.t2);

                case 31:
                  _context85.prev = 31;

                  _iterator65.f();

                  return _context85.finish(31);

                case 34:
                case "end":
                  return _context85.stop();
              }
            }
          }, _callee85, null, [[18, 28, 31, 34]]);
        }))();
      },
      findTableRow: function findTableRow(t) {
        if (!Ti.Util.isNil(t)) {
          var _iterator66 = _createForOfIteratorHelper(this.myTreeTableData),
              _step66;

          try {
            for (_iterator66.s(); !(_step66 = _iterator66.n()).done;) {
              var e = _step66.value;
              if (e.id == t) return e;
            }
          } catch (err) {
            _iterator66.e(err);
          } finally {
            _iterator66.f();
          }
        }
      },
      OnCellItemChange: function OnCellItemChange() {
        var _ref89 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref89.name,
            e = _ref89.value,
            i = _ref89.rowId;

        var n = this.findTableRow(i);
        n && this.$notify("node:item:change", {
          name: t,
          value: e,
          node: n,
          nodeId: i,
          data: n.rawData
        });
      },
      OnRowSelect: function OnRowSelect() {
        var _ref90 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref90.currentId,
            _ref90$checkedIds = _ref90.checkedIds,
            e = _ref90$checkedIds === void 0 ? {} : _ref90$checkedIds;

        var i,
            n,
            a = [];

        if (t) {
          var s;

          var _iterator67 = _createForOfIteratorHelper(this.myTreeTableData),
              _step67;

          try {
            for (_iterator67.s(); !(_step67 = _iterator67.n()).done;) {
              var _n20 = _step67.value;
              _n20.id == t && (s = _n20, i = _n20.rawData), e[_n20.id] && a.push(_n20.rawData);
            }
          } catch (err) {
            _iterator67.e(err);
          } finally {
            _iterator67.f();
          }

          s && this.autoOpen && this.openRow(s), this.myCurrentId = _.get(s, "id"), n = s;
        } else this.myCurrentId = null;

        this.keepCurrentBy && (this.puppetMode || Ti.Storage.session.set(this.keepCurrentBy, this.myCurrentId)), this.$notify("select", {
          node: n,
          current: i,
          selected: a,
          currentId: t,
          checkedIds: e
        });
      },
      OnRowIconClick: function OnRowIconClick() {
        var _ref91 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref91.rowId;

        var e = this.findTableRow(t);
        !e || e.leaf || e.opened ? this.closeRow(e) : this.openRow(e);
      },
      OnRowOpen: function OnRowOpen() {
        var _ref92 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref92.id;

        var e = this.findTableRow(t);
        !e || e.leaf || e.opened || this.openRow(e);
      },
      openRow: function openRow(t) {
        var e = _.isString(t) ? this.findTableRow(t) : t;
        !e || e.leaf || e.opened || (this.$set(this.myOpenedNodePaths, e.pathId, !0), this.$notify("opened", e), this.saveNodeOpenStatus());
      },
      isOpened: function isOpened(t) {
        var e = _.isString(t) ? this.findTableRow(t) : t;
        return !!e && e.opened;
      },
      closeRow: function closeRow(t) {
        var e = _.isString(t) ? this.findTableRow(t) : t;
        e && !e.leaf && e.opened && (this.$set(this.myOpenedNodePaths, e.pathId, !1), this.$notify("closed", e), this.saveNodeOpenStatus());
      },
      saveNodeOpenStatus: function saveNodeOpenStatus() {
        this.keepOpenBy && Ti.Storage.session.setObject(this.keepOpenBy, this.myOpenedNodePaths), this.$notify("opened-status:changed", this.myOpenedNodePaths);
      },
      syncOpenedNodePaths: function syncOpenedNodePaths() {
        this.myOpenedNodePaths = _.assign({}, this.openedNodePaths);
      },
      __ti_shortcut: function __ti_shortcut(t) {
        "ARROWLEFT" == t && this.closeRow(this.myCurrentId), "ARROWRIGHT" == t && this.openRow(this.myCurrentId);
      }
    }
  }, _defineProperty(_t132, "watch", {
    data: function () {
      var _data = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee86(t, e) {
        return regeneratorRuntime.wrap(function _callee86$(_context86) {
          while (1) {
            switch (_context86.prev = _context86.next) {
              case 0:
                _context86.t0 = _.isEqual(t, e);

                if (_context86.t0) {
                  _context86.next = 4;
                  break;
                }

                _context86.next = 4;
                return this.evalTreeTableData();

              case 4:
              case "end":
                return _context86.stop();
            }
          }
        }, _callee86, this);
      }));

      function data(_x10, _x11) {
        return _data.apply(this, arguments);
      }

      return data;
    }(),
    openedNodePaths: function openedNodePaths(t, e) {
      _.isEqual(t, e) || this.syncOpenedNodePaths();
    }
  }), _defineProperty(_t132, "mounted", function () {
    var _mounted12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee87() {
      var _this171 = this;

      var _t131;

      return regeneratorRuntime.wrap(function _callee87$(_context87) {
        while (1) {
          switch (_context87.prev = _context87.next) {
            case 0:
              this.syncOpenedNodePaths();
              this.keepOpenBy && (this.myOpenedNodePaths = Ti.Storage.session.getObject(this.keepOpenBy), this.puppetMode || this.$notify("opened-status:changed", this.myOpenedNodePaths));
              _context87.next = 4;
              return this.evalTreeTableData();

            case 4:
              this.$watch("myOpenedNodePaths", function () {
                _this171.evalTreeTableData();
              }, {
                deep: !0
              });

              if (!this.keepCurrentBy) {
                _context87.next = 8;
                break;
              }

              _t131 = Ti.Storage.session.get(this.keepCurrentBy);
              Ti.Util.isNil(_t131) || this.$nextTick(function () {
                _this171.$children[0].selectRow(_t131);
              });

            case 8:
            case "end":
              return _context87.stop();
          }
        }
      }, _callee87, this);
    }));

    function mounted() {
      return _mounted12.apply(this, arguments);
    }

    return mounted;
  }()), _defineProperty(_t132, "beforeDestroy", function beforeDestroy() {}), _t132);
  Ti.Preload("ti/com/ti/tree/ti-tree.mjs", t);
}(), Ti.Preload("ti/com/ti/tree/_com.json", {
  name: "ti-tree",
  globally: !0,
  template: "./ti-tree.html",
  mixins: ["./ti-tree.mjs"],
  components: ["@com:ti/table"]
}), Ti.Preload("ti/com/ti/upload/file/ti-upload-file.html", '<div class="ti-upload-file full-field"\n  :class="TopClass">\n  \x3c!--\n    Hidden input file to choose files\n  --\x3e\n  <input \n    type="file" \n    ref="file" \n    class="ti-hide"\n    @change.stop.seft="OnSelectLocalFilesToUpload">\n  \x3c!--\n    Major preview zone\n  --\x3e\n  <div ref="thumb"\n    class="thumb-con"\n    :style="ThumbStyle"\n    @click="OnClickToEdit"\n    v-drop-files.mask="OnDropFiles">\n    \x3c!--\n      Preview\n    --\x3e\n    <ti-obj-thumb \n      :preview="PreviewIcon"\n      :progress="progress"\n      :show-footer="false"/>\n    \x3c!--\n      Remove\n    --\x3e\n    <div ref="actions"\n      v-if="isShowRemoveIcon"\n        class="thumb-actions"\n        :style="ActionsStyle">\n        \x3c!--remove--\x3e\n        <div class="thumb-opt as-del"\n          @click.left.stop="OnRemove">\n          <ti-icon value="zmdi-delete"/>\n          <span class="it-text">{{\'clear\'|i18n}}</span>\n        </div>\n        \x3c!--open--\x3e\n        <div class="thumb-opt as-open"\n          @click.left.stop="OnOpen">\n          <ti-icon value="zmdi-open-in-new"/>\n          <span class="it-text">{{\'open\'|i18n}}</span>\n        </div>\n    </div>\n    \x3c!--//////--\x3e\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myArea: 0,
        myActionsWidth: 0
      };
    },
    props: {
      preview: {
        type: [String, Object],
        "default": null
      },
      uploadFile: {
        type: File,
        "default": null
      },
      progress: {
        type: Number,
        "default": -1
      },
      width: {
        type: [String, Number],
        "default": 120
      },
      height: {
        type: [String, Number],
        "default": 120
      },
      removable: {
        type: Boolean,
        "default": !0
      },
      areaSize: {
        type: Object,
        "default": function _default() {
          return {
            xs: 1e4,
            sm: 4e4,
            md: 16e4,
            lg: 36e4
          };
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass("is-area-".concat(this.AreaType));
      },
      AreaType: function AreaType() {
        var t = this.areaSize,
            e = this.myArea;
        return e <= 0 ? "nil" : _.inRange(e, 0, t.xs + 1) ? "xs" : _.inRange(e, t.xs, t.sm + 1) ? "sm" : _.inRange(e, t.sm, t.md + 1) ? "md" : _.inRange(e, t.md, t.lg + 1) ? "lg" : "xl";
      },
      ThumbStyle: function ThumbStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      ActionsStyle: function ActionsStyle() {
        if (/^(xs|sm)$/.test(this.AreaType)) return {
          right: Ti.Css.toSize(-1 * this.myActionsWidth)
        };
      },
      hasPreview: function hasPreview() {
        return !!this.preview;
      },
      isShowRemoveIcon: function isShowRemoveIcon() {
        return !(this.uploadFile || !this.hasPreview);
      },
      PreviewIcon: function PreviewIcon() {
        return this.uploadFile ? {
          type: "localFile",
          value: this.uploadFile
        } : this.preview ? this.preview : "zmdi-plus";
      }
    },
    methods: {
      OnClickToEdit: function OnClickToEdit() {
        this.$refs.file.click();
      },
      OnDropFiles: function OnDropFiles(t) {
        var _this172 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee88() {
          var e;
          return regeneratorRuntime.wrap(function _callee88$(_context88) {
            while (1) {
              switch (_context88.prev = _context88.next) {
                case 0:
                  e = _.get(t, 0);
                  e && _this172.$notify("upload", e);

                case 2:
                case "end":
                  return _context88.stop();
              }
            }
          }, _callee88);
        }))();
      },
      OnSelectLocalFilesToUpload: function OnSelectLocalFilesToUpload(t) {
        var _this173 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee89() {
          return regeneratorRuntime.wrap(function _callee89$(_context89) {
            while (1) {
              switch (_context89.prev = _context89.next) {
                case 0:
                  _context89.next = 2;
                  return _this173.OnDropFiles(t.target.files);

                case 2:
                  _this173.$refs.file.value = "";

                case 3:
                case "end":
                  return _context89.stop();
              }
            }
          }, _callee89);
        }))();
      },
      OnRemove: function OnRemove() {
        this.$notify("remove");
      },
      OnOpen: function OnOpen() {
        this.$notify("open");
      },
      recountArea: function recountArea() {
        var t = Ti.Rects.createBy(this.$refs.thumb);
        this.myArea = t.width * t.height, this.$refs.actions ? this.myActionsWidth = this.$refs.actions.getBoundingClientRect().width : this.myActionsWidth = 0;
      },
      shouldRecountArea: function shouldRecountArea() {
        var _this174 = this;

        _.delay(function () {
          _this174.recountArea();
        }, 10);
      }
    },
    watch: {
      preview: "shouldRecountArea",
      width: "shouldRecountArea",
      height: "shouldRecountArea",
      removable: "shouldRecountArea",
      areaSize: "shouldRecountArea"
    },
    created: function created() {
      var _this175 = this;

      Ti.Viewport.watch(this, {
        resize: function resize() {
          _this175.recountArea();
        }
      });
    },
    mounted: function mounted() {
      var _this176 = this;

      this.$nextTick(function () {
        return _this176.recountArea();
      });
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Viewport.unwatch(this);
    }
  };
  Ti.Preload("ti/com/ti/upload/file/ti-upload-file.mjs", t);
}(), Ti.Preload("ti/com/ti/upload/file/_com.json", {
  name: "ti-upload-file",
  globally: !0,
  template: "./ti-upload-file.html",
  mixins: ["./ti-upload-file.mjs"]
}), Ti.Preload("ti/com/ti/wall/com/wall-tile/wall-tile.html", '<div class="wall-tile"\n  :class="TopClass"\n  :style="TopStyle">\n  <div v-if="myCom"\n    class="tile-con"\n    @click.left="OnClickRow"\n    @dblclick.left="OnDblClickRow"\n    v-ti-activable>\n    <component   \n      :is="myCom.comType" \n      v-bind="myCom.comConf"/>\n  </div>\n</div>'), function () {
  var t = {
    inject: ["$wall"],
    data: function data() {
      return {
        myCom: null
      };
    },
    props: {
      display: {
        type: Object,
        "default": null
      },
      width: {
        type: [String, Number],
        "default": null
      },
      height: {
        type: [String, Number],
        "default": null
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getListItemClass();
      },
      TopStyle: function TopStyle() {
        var t = {};
        return this.width && (t.width = this.width), this.height && (t.height = this.height), Ti.Css.toStyle(t);
      }
    },
    methods: {
      evalMyDisplayCom: function evalMyDisplayCom() {
        var _this177 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee90() {
          var t, e, i;
          return regeneratorRuntime.wrap(function _callee90$(_context90) {
            while (1) {
              switch (_context90.prev = _context90.next) {
                case 0:
                  _this177.$wall.reportReady(_this177.index, !Ti.Util.isNil(_this177.myCom));

                  _context90.next = 3;
                  return _this177.evalDataForFieldDisplayItem({
                    itemData: _this177.data,
                    displayItem: _this177.display,
                    vars: _objectSpread({
                      isCurrent: _this177.isCurrent,
                      isChecked: _this177.isChecked,
                      isChanged: _this177.isChanged,
                      isActived: _this177.isActived,
                      rowId: _this177.rowId
                    }, _this177.$vars)
                  });

                case 3:
                  t = _context90.sent;
                  e = Ti.Util.pureCloneDeep(_this177.myCom);
                  i = Ti.Util.pureCloneDeep(t);
                  _.isEqual(e, i) || (_this177.myCom = t), _this177.$wall.reportReady(_this177.index, !0);

                case 7:
                case "end":
                  return _context90.stop();
              }
            }
          }, _callee90);
        }))();
      }
    },
    watch: {
      data: {
        handler: "evalMyDisplayCom",
        immediate: !0
      },
      isCurrent: "evalMyDisplayCom",
      isChecked: "evalMyDisplayCom"
    }
  };
  Ti.Preload("ti/com/ti/wall/com/wall-tile/wall-tile.mjs", t);
}(), Ti.Preload("ti/com/ti/wall/com/wall-tile/_com.json", {
  name: "wall-tile",
  globally: !1,
  template: "./wall-tile.html",
  methods: "@com:ti/support/field_display.mjs",
  mixins: ["@com:ti/support/list_item_mixins.mjs", "./wall-tile.mjs"]
}), Ti.Preload("ti/com/ti/wall/ti-wall.html", '<div class="ti-wall" \n  :class="TopClass"\n  @click="OnClickTop"\n  v-ti-activable>\n  \x3c!--\n    Blank\n  --\x3e\n  <ti-loading \n    v-if="isDataEmpty"\n      class="nil-data"\n      :class="blankClass"\n      v-bind="blankAs"/>\n  \x3c!--\n    Show tiles\n  --\x3e\n  <template v-else>\n    \x3c!--tiles--\x3e\n    <wall-tile\n      v-for="row in TheData"\n        :key="row.id"\n        :row-id="row.id"\n        :index="row.index"\n        :display="ItemDisplay"\n        :data="row.rawData"\n        :current-id="theCurrentId"\n        :checked-ids="theCheckedIds"\n        :changed-id="changedId"\n        :checkable="checkable"\n        :selectable="selectable"\n        :openable="openable"\n        :class-name="itemClassName"\n        :width="itemWidth"\n        :height="itemHeight"\n        @select="OnRowSelect"\n        @open="OnRowOpen"/>\n    \x3c!--Blank Tile--\x3e\n    <div v-for="bc in BlankCols"\n      class="wall-tile"\n      :style="bc">\n    </div>\n  </template>\n</div>'), function () {
  var t = {
    provide: function provide() {
      return {
        $wall: this
      };
    },
    data: function data() {
      return {
        myData: [],
        myColCount: 0,
        myColWidth: 0,
        isOnlyOneRow: !1,
        myCellsReport: {},
        myNeedResize: !0
      };
    },
    props: {
      itemClassName: void 0,
      display: {
        type: [Object, String],
        "default": function _default() {
          return {
            key: "..",
            comType: "ti-label"
          };
        }
      },
      border: {
        type: Boolean,
        "default": !0
      },
      spacing: {
        type: String,
        "default": "sm"
      },
      itemWidth: {
        type: [String, Number],
        "default": null
      },
      itemHeight: {
        type: [String, Number],
        "default": null
      },
      resizeDelay: {
        type: Number,
        "default": 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-hoverable": this.hoverable,
          "show-border": this.border,
          "is-only-one-row": this.isOnlyOneRow,
          "is-multi-rows": !this.isOnlyOneRow
        }, ["spacing-".concat(this.spacing)]);
      },
      ItemDisplay: function ItemDisplay() {
        return this.evalFieldDisplayItem(this.display);
      },
      TheData: function TheData() {
        return this.myData;
      },
      ListRealCount: function ListRealCount() {
        return this.TheData.length;
      },
      BlankCols: function BlankCols() {
        var t = [];

        if (!_.isEmpty(this.TheData) && this.myColCount > 0 && this.myColWidth > 1 && !this.isOnlyOneRow) {
          var e = this.ListRealCount % this.myColCount;

          if (e > 0) {
            var i = this.myColCount - e;

            for (var _e47 = 0; _e47 < i; _e47++) {
              t.push({
                width: "".concat(this.myColWidth, "px")
              });
            }
          }
        }

        return t;
      }
    },
    methods: {
      OnClickTop: function OnClickTop(t) {
        this.cancelable && Ti.Dom.hasOneClass(t.target, "ti-wall", "wall-tile") && this.cancelRow();
      },
      OnWallResize: function OnWallResize() {
        var t = Ti.Dom.findAll(":scope > .wall-tile", this.$el);
        if (_.isEmpty(t)) return;
        var e = 0,
            i = 1,
            n = -1,
            a = !0;

        var _iterator68 = _createForOfIteratorHelper(t),
            _step68;

        try {
          for (_iterator68.s(); !(_step68 = _iterator68.n()).done;) {
            var s = _step68.value;

            var _t133 = s.getBoundingClientRect();

            if (n < 0 && (n = _t133.top), n != _t133.top) {
              a = !1;
              break;
            }

            e++, i = Math.max(_t133.width, i);
          }
        } catch (err) {
          _iterator68.e(err);
        } finally {
          _iterator68.f();
        }

        i > 1 && (this.myColCount = e, this.myColWidth = i, this.isOnlyOneRow = a);
      },
      reportReady: function reportReady() {
        var _this178 = this;

        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
        var i = "R".concat(t);
        e ? delete this.myCellsReport[i] : (this.myCellsReport[i] = !1, this.myNeedResize = !0), e && _.delay(function () {
          _.isEmpty(_this178.myCellsReport) && _this178.myNeedResize && (_.delay(function () {
            _this178.OnWallResize();
          }, _this178.resizeDelay), _this178.myNeedResize = !1);
        });
      }
    },
    watch: {
      data: {
        handler: function () {
          var _handler3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee91(t, e) {
            return regeneratorRuntime.wrap(function _callee91$(_context91) {
              while (1) {
                switch (_context91.prev = _context91.next) {
                  case 0:
                    _context91.t0 = _.isEqual(t, e);

                    if (_context91.t0) {
                      _context91.next = 5;
                      break;
                    }

                    _context91.next = 4;
                    return this.evalData();

                  case 4:
                    this.myData = _context91.sent;

                  case 5:
                  case "end":
                    return _context91.stop();
                }
              }
            }, _callee91, this);
          }));

          function handler(_x12, _x13) {
            return _handler3.apply(this, arguments);
          }

          return handler;
        }(),
        immediate: !0
      }
    },
    mounted: function mounted() {
      var _this179 = this;

      Ti.Viewport.watch(this, {
        resize: _.debounce(function () {
          return _this179.OnWallResize();
        }, 20)
      });
    },
    destroyed: function destroyed() {
      Ti.Viewport.unwatch(this);
    }
  };
  Ti.Preload("ti/com/ti/wall/ti-wall.mjs", t);
}(), Ti.Preload("ti/com/ti/wall/_com.json", {
  name: "ti-wall",
  globally: !0,
  template: "./ti-wall.html",
  props: "@com:ti/support/list_props.mjs",
  methods: "@com:ti/support/field_display.mjs",
  mixins: ["@com:ti/support/list_mixins.mjs", "./ti-wall.mjs"],
  components: ["./com/wall-tile", "@com:ti/label"]
}), Ti.Preload("ti/com/ti/wizard/com/wizard-step/wizard-step.html", '<component \n  class="ti-fill-parent"\n  :is="comType"\n  v-bind="comConf"\n  @change="OnChange"/>'), function () {
  var t = {
    props: {
      index: {
        type: Number,
        "default": -1
      },
      stepKey: {
        type: String,
        "default": void 0
      },
      dataKey: {
        type: String,
        "default": void 0
      },
      title: {
        type: String,
        "default": void 0
      },
      serializer: {
        type: Function,
        "default": void 0
      },
      comType: {
        type: String,
        "default": "ti-label"
      },
      comConf: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    methods: {
      OnChange: function OnChange(t) {
        _.isFunction(this.serializer) && (t = this.serializer(t)), this.dataKey && (t = _.set({}, this.dataKey, t)), this.$emit("data:change", t);
      }
    },
    watch: {
      title: {
        handler: function handler() {
          this.$notify("change:title", this.title);
        },
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/ti/wizard/com/wizard-step/wizard-step.mjs", t);
}(), Ti.Preload("ti/com/ti/wizard/com/wizard-step/_com.json", {
  name: "wizard-step",
  globally: !0,
  template: "./wizard-step.html",
  mixins: ["./wizard-step.mjs"]
}), Ti.Preload("ti/com/ti/wizard/ti-wizard.html", '<div class="ti-wizard ti-fill-parent"\n  :class="TopClass"><div class="wizard-con">\n  \x3c!--\n    Header Indicators\n  --\x3e\n  <div class="as-head">\n    \x3c!--Title--\x3e\n    <div\n      v-if="TheTitle" \n        class="as-title">{{TheTitle | i18n}}</div>\n    \x3c!--Step indicators--\x3e\n    <ul>\n      <li v-for="(step, index) in StepHeads"\n        :key="step.stepKey"\n        :class="step.className"\n        @click.left="OnClickHeadItem(index, step)">\n        <span class="as-indicator">\n          <span class="as-line at-l"></span>\n          <span class="as-dot">{{index+1}}</span>\n          <span class="as-line at-r"></span>\n        </span>\n        <span class="as-text">{{step.title | i18n}}</span>\n      </li>\n    </ul>\n  </div>\n  \x3c!--\n    Current Step Component\n  --\x3e\n  <div class="as-main">\n    <WizardStep \n      v-bind="CurrentStep"\n      @data:change="OnDataChange"\n      @step:change="OnStepChange"\n      @change:title="OnTitleChange"/>\n  </div>\n  \x3c!--\n    Footer Default Buttons\n  --\x3e\n  <div v-if="BtnPrev || BtnNext"\n    class="as-foot">\n      \x3c!--\n        Btn: Prev\n      --\x3e\n      <div\n        v-if="BtnPrev" \n          class="as-btn is-prev"\n          :class="BtnPrev.className"\n          @click="OnClickBtnPrev">\n          <span v-if="BtnPrev.icon"\n            class="as-icon">\n            <ti-icon :value="BtnPrev.icon"/>\n          </span>\n          <span class="as-sep"></span>\n          <span class="as-text">{{BtnPrev.text|i18n}}</span>\n      </div>\n      \x3c!--Sep--\x3e\n      <div class="as-space"></div>\n      \x3c!--\n        Btn: Next\n      --\x3e\n      <div\n        v-if="BtnNext" \n          class="as-btn is-next"\n          :class="BtnNext.className"\n          @click="OnClickBtnNext">\n          <span v-if="BtnNext.icon"\n            class="as-icon">\n            <ti-icon :value="BtnNext.icon"/>\n          </span>\n          <span class="as-sep"></span>\n          <span class="as-text">{{BtnNext.text|i18n}}</span>\n      </div>\n  </div>\n</div></div>'), function () {
  var t = {
    data: function data() {
      return {
        myCurrent: void 0,
        myTitle: void 0
      };
    },
    props: {
      title: {
        type: String,
        "default": void 0
      },
      steps: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      value: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      current: {
        type: [Number, String],
        "default": 0
      },
      canClickHeadItem: {
        type: String,
        "default": void 0
      },
      evalStepConfFunc: {
        type: Boolean,
        "default": !1
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      StepList: function StepList() {
        var t = [];
        if (_.isArray(this.steps)) for (var e = 0; e < this.steps.length; e++) {
          var i = this.steps[e],
              n = i.key || "step".concat(e);
          t.push({
            index: e,
            stepKey: n,
            dataKey: i.dataKey,
            title: i.title || n,
            comType: i.comType || "ti-label",
            comConf: i.comConf,
            serializer: i.serializer,
            prev: i.prev,
            next: i.next
          });
        }
        return t;
      },
      StepHeads: function StepHeads() {
        var t = [];

        if (_.isArray(this.steps)) {
          var _iterator69 = _createForOfIteratorHelper(this.StepList),
              _step69;

          try {
            for (_iterator69.s(); !(_step69 = _iterator69.n()).done;) {
              var e = _step69.value;
              var i = [];
              this.CurrentStepIndex == e.index ? i.push("is-current") : e.index > this.CurrentStepIndex ? i.push("is-future") : i.push("is-passed"), t.push(_.assign({}, e, {
                className: i
              }));
            }
          } catch (err) {
            _iterator69.e(err);
          } finally {
            _iterator69.f();
          }
        }

        return t;
      },
      CurrentStepIndex: function CurrentStepIndex() {
        return this.CurrentStep ? this.CurrentStep.index : -1;
      },
      hasCurrentStep: function hasCurrentStep() {
        return !!this.CurrentStep;
      },
      TheTitle: function TheTitle() {
        return this.myTitle || this.title;
      },
      CurrentStep: function CurrentStep() {
        var t = Ti.Util.fallback(this.myCurrent, this.current),
            e = _.cloneDeep(this.getStep(t)),
            i = e.serializer ? Ti.Util.genInvoking(e.serializer, {
          context: this.value,
          partial: "right"
        }) : _.identity,
            n = Ti.Util.explainObj(this.value, e.comConf, {
          evalFunc: this.evalStepConfFunc
        });

        return _.assign({}, e, {
          serializer: i,
          comConf: n
        });
      },
      BtnPrev: function BtnPrev() {
        var t = _.get(this.CurrentStep, "prev");

        return this.getStepAction(t, {
          icon: "zmdi-chevron-left",
          text: "i18n:prev",
          enabled: !0
        });
      },
      BtnNext: function BtnNext() {
        var t = _.get(this.CurrentStep, "next");

        return this.getStepAction(t, {
          icon: "zmdi-chevron-right",
          text: "i18n:next",
          enabled: !0,
          reverse: !_.get(t, "icon")
        });
      }
    },
    methods: {
      OnTitleChange: function OnTitleChange(t) {
        this.myTitle = t;
      },
      OnDataChange: function OnDataChange(t) {
        var e = _.assign({}, this.value, t);

        this.$notify("change", e);
      },
      OnStepChange: function OnStepChange(t) {
        "@prev" == t ? this.gotoFromCurrent(-1) : "@next" == t ? this.gotoFromCurrent(1) : this.gotoStep(t);
      },
      OnClickHeadItem: function OnClickHeadItem(t) {
        "passed" == this.canClickHeadItem && this.CurrentStepIndex > t && this.gotoStep(t);
      },
      OnClickBtnPrev: function OnClickBtnPrev() {
        if (this.BtnPrev && this.BtnPrev.enabled) if (this.BtnPrev.handler) {
          Ti.Util.genInvoking(this.BtnPrev.handler, {
            context: this.value,
            partial: !1
          }).apply(this, [this.value]);
        } else this.gotoFromCurrent(-1);
      },
      OnClickBtnNext: function OnClickBtnNext() {
        if (this.BtnNext && this.BtnNext.enabled) if (this.BtnNext.handler) {
          Ti.Util.genInvoking(this.BtnNext.handler, {
            context: this.value,
            partial: !1
          }).apply(this, [this.value]);
        } else this.gotoFromCurrent(1);
      },
      getStep: function getStep(t) {
        if (_.isNumber(t)) {
          var e = Ti.Num.scrollIndex(t, this.StepList.length);
          if (e >= 0) return this.StepList[e];
        } else {
          var _iterator70 = _createForOfIteratorHelper(this.StepList),
              _step70;

          try {
            for (_iterator70.s(); !(_step70 = _iterator70.n()).done;) {
              var _e48 = _step70.value;
              if (_e48.stepKey == t) return _e48;
            }
          } catch (err) {
            _iterator70.e(err);
          } finally {
            _iterator70.f();
          }
        }
      },
      gotoStep: function gotoStep(t) {
        var e = this.getStep(t);

        if (e) {
          var _t134 = _.cloneDeep(this.CurrentStep);

          this.myCurrent = e.index, this.$notify("step:chanage", {
            index: e.index,
            step: e,
            oldStep: _t134
          });
        }
      },
      gotoFromCurrent: function gotoFromCurrent() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

        if (this.CurrentStep) {
          var e = this.CurrentStep.index + t;
          this.gotoStep(e);
        }
      },
      getStepAction: function getStepAction(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        if (t) {
          var i;
          return _.isBoolean(t) ? i = {} : _.isString(t) ? i = {
            text: t || dftText
          } : (i = _.assign({}, t), _.isPlainObject(i.enabled) ? i.enabled = Ti.Validate.match(this.value, i.enabled) : _.isFunction(i.enabled) && (i.enabled = i.enabled())), _.defaults(i, e), i.className = Ti.Css.mergeClassName(i.className), i.enabled && (i.className["is-enabled"] = !0), i.reverse && (i.className["is-reverse"] = !0), i;
        }
      }
    }
  };
  Ti.Preload("ti/com/ti/wizard/ti-wizard.mjs", t);
}(), Ti.Preload("ti/com/ti/wizard/_com.json", {
  name: "ti-wizard",
  globally: !0,
  template: "./ti-wizard.html",
  mixins: ["./ti-wizard.mjs"],
  components: ["./com/wizard-step"]
}), Ti.Preload("ti/com/web/auth/passwd/auth-passwd.html", '<div \n  class="web-auth-passwd web-simple-form" \n  :class="TopClass">\n  \x3c!--\n    Reset Success\n  --\x3e\n  <template v-if="doing">\n    <div class="as-ing">\n      <ti-loading class="as-hug" text="auth-reset-passwd-ing"/>\n    </div>\n  </template>\n  \x3c!--\n    Reset Success\n  --\x3e\n  <template v-else-if="myResetResult">\n    <div\n      class="as-done"\n      :class="ResetDoneClass">\n      \x3c!--Loading Icon--\x3e\n      <ti-loading\n        class="as-hug"\n        :icon="ResetDoneIcon"\n        :text="ResetDoneText"/>\n      \x3c!--Links--\x3e\n      <div class="as-links">\n        <a @click.left="OnResetAgain">{{\'auth-reset-passwd-again\'|i18n}}</a>\n      </div>\n    </div>\n  </template>\n  \x3c!--\n    Reset form\n  --\x3e\n  <template v-else>\n    \x3c!--\n      Head text\n    --\x3e\n    <header>{{ModeTitle|i18n}}</header>\n    \x3c!--\n      Main Area\n    --\x3e\n    <section>\n      \x3c!--\n        ===================================================\n        Mode: byVCode\n      --\x3e\n      <template v-if="isByVode">\n        \x3c!--\n          Input: name\n        --\x3e\n        <div class="as-input">\n          <input \n            spellcheck="false"\n            :placeholder="VCodeNameTip|i18n"\n            v-model="myForm.name"></div>\n        \x3c!--\n          Input: vcode\n        --\x3e\n        <div class="as-input">\n          <input \n            spellcheck="false"\n            :placeholder="VCodeCodeTip|i18n"\n            v-model="myForm.vcode">\n          <span>\n            <em v-if="delay>0">{{\'auth-vcode-delay\'|i18n({sec:delay})}}</em>\n            <a v-else\n              @click="OnGetVcode">{{VCodeGetTip|i18n}}</a>\n          </span>\n        </div>\n      </template>\n      \x3c!--\n        ===================================================\n        Mode: byPasswd\n      --\x3e\n      <template v-else>\n        \x3c!--\n          Passwd: old\n        --\x3e\n        <div class="as-input">\n          <input \n            spellcheck="false"\n            :type="myPassInputType"\n            :placeholder="\'auth-reset-passwd-old\'|i18n"\n            v-model="myForm.passwd_old"></div>\n      </template>\n      \x3c!--\n        ===================================================\n      --\x3e\n      \x3c!--\n        Passwd: new\n      --\x3e\n      <div class="as-input" :class="PasswdClass">\n        <input \n          spellcheck="false"\n          :type="myPassInputType"\n          :placeholder="\'auth-reset-passwd-new\'|i18n"\n          v-model="myForm.passwd_new">\n        <span \n          class="as-passwd-type-toggle"\n          @click="OnTogglePasswdInputType">\n          <ti-icon :value="PasswdInputTypeIcon"/>\n        </span>\n      </div>\n      \x3c!--\n        Passwd: Indicator\n      --\x3e\n      <div class="as-passtip">\n        \x3c!--Invalid pass--\x3e\n        <div \n          v-if="-2 == myPassTip"\n            class="is-invalid">{{\'passwd-invalid-char\'|i18n}}</div>\n        \x3c!--No password--\x3e\n        <div \n          v-else-if="-1 == myPassTip"\n            class="is-tip">{{\'passwd-tip\'|i18n}}</div>\n        \x3c!--Show tip bar--\x3e\n        <div \n          v-else\n            class="is-tipbar">\n            <span class="is-weak">{{\'i18n:passwd-sl-1\' | i18n}}</span>\n            <u\n              v-for="it in PasswdTipBar"\n                :class="it.className"></u>\n            <span class="is-strong">{{\'i18n:passwd-sl-5\' | i18n}}</span>\n        </div>\n      </div>\n      \x3c!--\n        Passwd: repeat\n      --\x3e\n      <div class="as-input" :class="PasswdClass">\n        <input \n          spellcheck="false"\n          :type="myPassInputType"\n          :placeholder="\'auth-reset-passwd-ren\'|i18n"\n          v-model="myForm.passwd_ren"></div>\n      \x3c!--\n        Submit button\n      --\x3e\n      <div class="as-btn">\n        <button \n          :class="SubmitBtnClass"\n          @click="OnSubmit">{{SubmitBtnText|i18n}}</button>\n      </div>\n      \x3c!--\n        Sublinks: switch mode / passwd-back\n      --\x3e\n      <div \n        v-if="hasAltModes"\n          class="as-links">\n          <div\n            v-for="it in AltModes"\n              class="as-item">\n              <a @click.left="OnChangeMode(it)">{{it.text|i18n}}</a>\n          </div>\n      </div>\n    </section>\n  </template>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myPassInputType: "password",
        myForm: {
          name: null,
          vcode: null,
          passwd_old: null,
          passwd_new: null,
          passwd_ren: null
        },
        myPassTip: -1,
        myMode: "passwd",
        delay: -1,
        myResetResult: null,
        doing: !1
      };
    },
    props: {
      mode: {
        type: String,
        "default": "passwd"
      },
      allowModes: {
        type: Object,
        "default": function _default() {
          return {
            passwd: !0,
            phone: !0,
            email: !0
          };
        }
      },
      captcha: {
        type: String,
        "default": null
      },
      scenes: {
        type: Object,
        "default": function _default() {
          return {
            robot: "robot",
            passwd: "resetpasswd",
            email: "resetpasswd",
            phone: "resetpasswd"
          };
        }
      },
      getDelay: {
        type: Number,
        "default": 60
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      PasswdClass: function PasswdClass() {},
      TheAllowModes: function TheAllowModes() {
        return Ti.Util.truthyKeys(this.allowModes);
      },
      isByVode: function isByVode() {
        return "passwd" != this.myMode;
      },
      ModeTitle: function ModeTitle() {
        return "i18n:auth-reset-passwd-by-".concat(this.myMode);
      },
      VCodeNameTip: function VCodeNameTip() {
        return "i18n:auth-reset-passwd-by-".concat(this.myMode, "-tip");
      },
      VCodeCodeTip: function VCodeCodeTip() {
        return "email" == this.myMode ? "i18n:auth-email-vcode" : "i18n:auth-phone-vcode";
      },
      VCodeGetTip: function VCodeGetTip() {
        return "email" == this.myMode ? "i18n:auth-email-vcode-get" : "i18n:auth-phone-vcode-get";
      },
      PasswdInputTypeIcon: function PasswdInputTypeIcon() {
        return {
          password: "fas-eye-slash",
          text: "fas-eye"
        }[this.myPassInputType];
      },
      AltModes: function AltModes() {
        var t = [];

        var _iterator71 = _createForOfIteratorHelper(this.TheAllowModes),
            _step71;

        try {
          for (_iterator71.s(); !(_step71 = _iterator71.n()).done;) {
            var e = _step71.value;
            e != this.myMode && t.push({
              text: "i18n:auth-reset-passwd-by-".concat(e),
              mode: e
            });
          }
        } catch (err) {
          _iterator71.e(err);
        } finally {
          _iterator71.f();
        }

        return t;
      },
      hasAltModes: function hasAltModes() {
        return !_.isEmpty(this.AltModes);
      },
      PasswdTipBar: function PasswdTipBar() {
        var t = [];

        for (var e = 1; e <= 5; e++) {
          t.push({
            text: "i18n:passwd-sl-".concat(e),
            className: e > this.myPassTip ? "is-off" : "is-on"
          });
        }

        return t;
      },
      FormStatus: function FormStatus() {
        if ("passwd" == this.myMode) {
          if (!_.trim(this.myForm.passwd_old) || !_.trim(this.myForm.passwd_new) || !_.trim(this.myForm.passwd_ren)) return "lack";
        } else if (!(_.trim(this.myForm.name) && _.trim(this.myForm.vcode) && _.trim(this.myForm.passwd_new) && _.trim(this.myForm.passwd_ren))) return "lack";

        return this.myForm.passwd_new.length < 6 ? "short" : this.myForm.passwd_new != this.myForm.passwd_ren ? "unmatch" : "ready";
      },
      SubmitBtnText: function SubmitBtnText() {
        return "i18n:auth-reset-passwd-btn-".concat(this.FormStatus);
      },
      SubmitBtnClass: function SubmitBtnClass() {
        return "is-".concat(this.FormStatus);
      },
      ResetOK: function ResetOK() {
        return !!_.get(this.myResetResult, "ok");
      },
      ResetDoneClass: function ResetDoneClass() {
        return this.ResetOK ? "is-ok" : "is-fail";
      },
      ResetDoneIcon: function ResetDoneIcon() {
        return this.ResetOK ? "im-check-mark-circle" : "im-warning";
      },
      ResetDoneText: function ResetDoneText() {
        return this.ResetOK ? "i18n:auth-reset-passwd-ok" : _.get(this.myResetResult, "errCode");
      }
    },
    methods: {
      OnChangeMode: function OnChangeMode(_ref93) {
        var t = _ref93.mode;
        this.myMode = t;
      },
      OnTogglePasswdInputType: function OnTogglePasswdInputType() {
        this.myPassInputType = {
          password: "text",
          text: "password"
        }[this.myPassInputType];
      },
      OnResetAgain: function OnResetAgain() {
        this.myResetResult = null, _.assign(this.myForm, {
          name: null,
          vcode: null,
          passwd_old: null,
          passwd_new: null,
          passwd_ren: null
        });
      },
      OnSubmit: function OnSubmit() {
        var _this180 = this;

        "ready" == this.FormStatus && (this.doing = !0, this.$notify("passwd:reset", {
          mode: this.myMode,
          scene: _.get(this.scenes, this.myMode),
          account: _.trim(this.myForm.name),
          vcode: _.trim(this.myForm.vcode),
          oldpwd: _.trim(this.myForm.passwd_old),
          newpwd: _.trim(this.myForm.passwd_new),
          done: function done(t) {
            _this180.doing = !1, _this180.myResetResult = t;
          }
        }));
      },
      OnGetVcode: function OnGetVcode() {
        var _this181 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee92() {
          var t, e, i, n, a;
          return regeneratorRuntime.wrap(function _callee92$(_context92) {
            while (1) {
              switch (_context92.prev = _context92.next) {
                case 0:
                  t = _.trim(_this181.myForm.name);

                  if (t) {
                    _context92.next = 3;
                    break;
                  }

                  return _context92.abrupt("return", void Ti.Toast.Open("i18n:auth-reset-passwd-lack-".concat(_this181.myMode), "warn"));

                case 3:
                  e = {
                    scene: _this181.scenes.robot,
                    account: t
                  };
                  i = Ti.S.renderBy(_this181.captcha, e);
                  _context92.next = 7;
                  return Ti.Captcha(i);

                case 7:
                  n = _context92.sent;

                  if (n) {
                    _context92.next = 10;
                    break;
                  }

                  return _context92.abrupt("return");

                case 10:
                  a = Ti.Toast.Open({
                    icon: "fas-spinner fa-spin",
                    content: "i18n:auth-sending-vcode",
                    position: "center",
                    duration: 0,
                    closer: !1
                  });

                  _this181.$notify("get:vcode", {
                    type: _this181.myMode,
                    scene: _.get(_this181.scenes, _this181.myMode),
                    account: t,
                    captcha: n,
                    done: function done() {
                      a.close(), _this181.myForm.vcode = null;
                    },
                    ok: function ok() {
                      var _ref94 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                          _ref94$duInMin = _ref94.duInMin,
                          t = _ref94$duInMin === void 0 ? 60 : _ref94$duInMin;

                      _this181.delay = _this181.getDelay, Ti.Toast.Open({
                        type: "success",
                        position: "top",
                        content: "i18n:auth-sent-ok",
                        vars: {
                          ta: Ti.I18n.get("auth-ta-".concat(_this181.myMode)),
                          by: Ti.I18n.get("auth-ta-by-".concat(_this181.myMode)),
                          min: t
                        },
                        duration: 5e3
                      });
                    },
                    fail: function fail() {
                      var _ref95 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                          t = _ref95.errCode,
                          e = _ref95.data;

                      Ti.Toast.Open({
                        type: "warn",
                        position: "top",
                        content: "i18n:".concat(t),
                        duration: 5e3
                      });
                    }
                  });

                case 12:
                case "end":
                  return _context92.stop();
              }
            }
          }, _callee92);
        }))();
      },
      evalCurrentMode: function evalCurrentMode(t) {
        if (!_.get(this.allowModes, t)) {
          if (_.isEmpty(this.TheAllowModes)) throw "mode[".concat(t, "] push me to corner!");
          return _.first(this.TheAllowModes);
        }

        return t;
      },
      updatePasswordTip: function updatePasswordTip() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.myForm.passwd_new;
        if (_.isEmpty(t) || !_.isString(t) || t.length < 6) return void (this.myPassTip = -1);
        var e = 0;
        t.length > 8 && (e += 1);
        var i = {
          a_z: 0,
          A_Z: 0,
          dig: 0,
          spe: 0
        };

        for (var _e49 = 0; _e49 < t.length; _e49++) {
          var n = t.charCodeAt(_e49);
          if (n >= 97 && n <= 122) i.a_z = 1;else if (n >= 65 && n <= 90) i.A_Z = 1;else if (n >= 48 && n <= 57) i.dig = 1;else {
            if (!(n >= 20 && n <= 128)) return void (this.myPassTip = -2);
            i.spe = 1;
          }
        }

        e += _.sum(_.values(i)), this.myPassTip = e;
      },
      syncCurrentMode: function syncCurrentMode() {
        this.myMode = this.evalCurrentMode(this.mode);
      }
    },
    watch: {
      mode: {
        handler: "syncCurrentMode"
      },
      allowModes: {
        handler: "syncCurrentMode"
      },
      "myForm.passwd_new": "updatePasswordTip"
    },
    mounted: function mounted() {
      var _this182 = this;

      this.syncCurrentMode(), this.__H = window.setInterval(function () {
        _this182.delay >= 0 && _this182.delay--;
      }, 1e3);
    },
    beforeDestroy: function beforeDestroy() {
      this.__H && window.clearInterval(this.__H);
    }
  };
  Ti.Preload("ti/com/web/auth/passwd/auth-passwd.mjs", t);
}(), Ti.Preload("ti/com/web/auth/passwd/_com.json", {
  name: "web-auth-passwd",
  globally: !0,
  template: "./auth-passwd.html",
  mixins: ["./auth-passwd.mjs"]
}), Ti.Preload("ti/com/web/auth/signup/auth-signup.html", '<div \n  class="web-auth-signup web-simple-form" \n  :class="TopClass"\n  v-ti-activable>\n  \x3c!--\n    Top Logo\n  --\x3e\n  <div \n    v-if="logo"\n      class="as-logo">\n      <ti-icon :value="logo"/>\n  </div>\n  \x3c!--\n    Head text\n  --\x3e\n  <header>{{Msgs.title|i18n}}</header>\n  \x3c!--\n    Main Area\n  --\x3e\n  <section>\n    \x3c!--\n      Input: Name\n    --\x3e\n    <div class="as-input" :class="NameClass">\n      <input \n        spellcheck="false"\n        :placeholder="Msgs.nameTip|i18n"\n        v-model="data.name"></div>\n    \x3c!--\n      Input: Password\n    --\x3e\n    <div class="as-input" :class="PasswdClass">\n      <input \n        spellcheck="false"\n        :type="PasswdInputType"\n        :placeholder="Msgs.passwdTip|i18n"\n        v-model="data.passwd">\n      <span v-if="Msgs.codeGet">\n        <em v-if="delay>0">{{\'auth-vcode-delay\'|i18n({sec:delay})}}</em>\n        <a v-else\n          @click="OnGetVcode">{{Msgs.codeGet|i18n}}</a>\n      </span>\n    </div>\n    \x3c!--\n      Submit button\n    --\x3e\n    <div class="as-btn">\n      <button @click="OnAuthSubmit">{{Msgs.btnText|i18n}}</button>\n    </div>\n    \x3c!--\n      Sublinks: switch mode / passwd-back\n    --\x3e\n    <ul \n      v-if="hasToggleMode"\n        class="as-links">\n        <li v-if="Msgs.linkLeft"\n          class="at-left">\n          <a @click="OnChangeMode">{{Msgs.linkLeft   |i18n}}</a></li>\n        <li v-if="Msgs.linkRight"\n          class="at-right">\n          <a>{{Msgs.linkRight |i18n}}</a></li>\n    </ul>\n  </section>\n  \x3c!--\n    Bottom link for oauth2\n  --\x3e\n  <template v-if="hasOAuth2">\n    <div class="as-spacing"></div>\n    <footer>\n      <a\n        v-for="it in OAuth2Items"\n          :href="it.href"\n          :title="it.tip">\n          <ti-icon :value="it.icon"/>\n      </a>\n    </footer>\n  </template>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        data: {
          name: null,
          passwd: null
        },
        guarding: !1,
        currentMode: "login_by_passwd",
        invalidField: null,
        delay: -1
      };
    },
    props: {
      mode: {
        type: String,
        "default": "login_by_passwd"
      },
      toggleMode: {
        type: String,
        "default": "login_by_phone"
      },
      captcha: {
        type: String,
        required: !0,
        "default": null
      },
      scenes: {
        type: Object,
        "default": function _default() {
          return {
            robot: "robot",
            bind_phone: "auth",
            bind_email: "auth",
            login_by_email: "auth",
            login_by_phone: "auth",
            login_by_passwd: "auth"
          };
        }
      },
      getDelay: {
        type: Number,
        "default": 60
      },
      logo: {
        type: String,
        "default": void 0
      },
      oauth2: {
        type: Array,
        "default": function _default() {
          return [];
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      Msgs: function Msgs() {
        if ("login_by_passwd" == this.currentMode) return {
          title: "i18n:auth-passwd-title",
          nameTip: "login_by_email" == this.toggleMode ? "i18n:auth-passwd-name-email-tip" : "i18n:auth-passwd-name-phone-tip",
          passwdTip: "i18n:auth-passwd-tip",
          btnText: "i18n:auth-login",
          linkLeft: "login_by_email" == this.toggleMode ? "i18n:auth-go-email" : "i18n:auth-go-phone",
          linkRight: "i18n:auth-passwd-getback",
          blankName: "i18n:auth-blank-name"
        };
        if ("login_by_phone" == this.currentMode) return {
          title: "i18n:auth-phone-title",
          nameTip: "i18n:auth-phone-tip",
          passwdTip: "i18n:auth-phone-vcode",
          codeGet: "i18n:auth-phone-vcode-get",
          btnText: "i18n:auth-login-or-signup",
          linkLeft: "i18n:auth-go-passwd",
          linkRight: "i18n:auth-vcode-lost",
          blankName: "i18n:auth-blank-phone"
        };
        if ("login_by_email" == this.currentMode) return {
          title: "i18n:auth-email-title",
          nameTip: "i18n:auth-email-tip",
          passwdTip: "i18n:auth-email-vcode",
          codeGet: "i18n:auth-email-vcode-get",
          btnText: "i18n:auth-login-or-signup",
          linkLeft: "i18n:auth-go-passwd",
          linkRight: "i18n:auth-vcode-lost",
          blankName: "i18n:auth-blank-email"
        };
        if ("bind_phone" == this.currentMode) return {
          title: "i18n:auth-bind-phone-title",
          nameTip: "i18n:auth-phone-tip",
          passwdTip: "i18n:auth-phone-vcode",
          codeGet: "i18n:auth-phone-vcode-get",
          btnText: "i18n:auth-bind",
          linkRight: "i18n:auth-vcode-lost",
          blankName: "i18n:auth-blank-phone"
        };
        if ("bind_email" == this.currentMode) return {
          title: "i18n:auth-bind-email-title",
          nameTip: "i18n:auth-email-tip",
          passwdTip: "i18n:auth-email-vcode",
          codeGet: "i18n:auth-email-vcode-get",
          btnText: "i18n:auth-bind",
          linkRight: "i18n:auth-vcode-lost",
          blankName: "i18n:auth-blank-email"
        };
        throw Ti.Err.make("e.com.combo.auth.invalid-mode", this.currentMode);
      },
      Params: function Params() {
        return _.mapValues(this.data, function (t) {
          return _.trim(t);
        });
      },
      isBlankName: function isBlankName() {
        return !this.Params.name;
      },
      isBlankNameOrPasswd: function isBlankNameOrPasswd() {
        var _this$Params = this.Params,
            t = _this$Params.name,
            e = _this$Params.passwd;
        return !t || !e;
      },
      Invalid: function Invalid() {
        return {
          name: this.isInvalid("name"),
          passwd: this.isInvalid("passwd")
        };
      },
      NameClass: function NameClass() {
        if (this.guarding && (this.Invalid.name || !this.Params.name)) return "is-invalid";
      },
      PasswdClass: function PasswdClass() {
        if (this.guarding && (this.Invalid.passwd || !this.Params.passwd)) return "is-invalid";
      },
      PasswdInputType: function PasswdInputType() {
        return "login_by_passwd" == this.currentMode ? "password" : "text";
      },
      OAuth2Items: function OAuth2Items() {
        return _.cloneDeep(this.oauth2);
      },
      hasOAuth2: function hasOAuth2() {
        return !_.isEmpty(this.OAuth2Items);
      },
      hasToggleMode: function hasToggleMode() {
        return !_.isEmpty(this.toggleMode);
      },
      ToggleModeName: function ToggleModeName() {
        return {
          login_by_phone: "i18n:auth-ta-phone",
          login_by_email: "i18n:auth-ta-email",
          bind_phone: "i18n:auth-ta-phone",
          bind_email: "i18n:auth-ta-email"
        }[this.toggleMode];
      },
      vCodeTargetName: function vCodeTargetName() {
        return {
          login_by_phone: "i18n:auth-ta-phone",
          login_by_email: "i18n:auth-ta-email",
          bind_phone: "i18n:auth-ta-phone",
          bind_email: "i18n:auth-ta-email"
        }[this.currentMode];
      },
      vCodeTargetBy: function vCodeTargetBy() {
        return {
          login_by_phone: "i18n:auth-ta-by-phone",
          login_by_email: "i18n:auth-ta-by-email",
          bind_phone: "i18n:auth-ta-by-phone",
          bind_email: "i18n:auth-ta-by-email"
        }[this.currentMode];
      },
      vCodeScene: function vCodeScene() {
        return _.get(this.scenes, this.currentMode) || "auth";
      }
    },
    methods: {
      OnChangeMode: function OnChangeMode() {
        "login_by_passwd" == this.currentMode ? this.currentMode = this.toggleMode : this.currentMode = "login_by_passwd", Ti.Be.BlinkIt(this.$el);
      },
      OnAuthSubmit: function OnAuthSubmit() {
        var _this183 = this;

        if (this.guarding = !0, this.isBlankNameOrPasswd) return Ti.Toast.Open("i18n:auth-blank-name-passwd", "warn");
        var t = Ti.Toast.Open({
          icon: "fas-spinner fa-spin",
          content: "i18n:auth-doing",
          position: "center",
          duration: 0,
          closer: !1
        });
        this.$notify("auth:send", {
          type: this.currentMode,
          name: this.Params.name,
          passwd: this.Params.passwd,
          done: function done() {
            t.close(), _this183.InvalidField = null;
          },
          ok: function ok() {
            Ti.Toast.Open({
              type: "success",
              position: "top",
              content: "i18n:auth-ok",
              duration: 2e3
            }), _this183.$notify("auth:ok");
          },
          noexist: function noexist() {
            _this183.InvalidField = "name";
          },
          invalid: function invalid() {
            _this183.InvalidField = "passwd";
          },
          others: function others() {
            _this183.InvalidField = ["name", "passwd"];
          },
          fail: function fail() {
            var _ref96 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                t = _ref96.errCode,
                e = _ref96.data;

            "e.auth.captcha.invalid" == t ? Ti.Toast.Open({
              type: "warn",
              position: "top",
              content: "i18n:e-www-invalid-captcha",
              vars: {
                ta: Ti.I18n.text(_this183.vCodeTargetName)
              },
              duration: 5e3
            }) : "e.auth.login.NoSaltedPasswd" == t ? Ti.Alert("i18n:auth-login-NoSaltedPasswd", {
              title: "i18n:e-auth-login-NoSaltedPasswd",
              icon: "zmdi-shield-security",
              textOk: "i18n:i-known",
              vars: {
                ta: Ti.I18n.text(_this183.ToggleModeName)
              }
            }) : Ti.Toast.Open({
              type: "warn",
              position: "top",
              content: "i18n:".concat(t),
              duration: 5e3
            });
          }
        });
      },
      OnGetVcode: function OnGetVcode() {
        var _this184 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee93() {
          var t, e, i, n;
          return regeneratorRuntime.wrap(function _callee93$(_context93) {
            while (1) {
              switch (_context93.prev = _context93.next) {
                case 0:
                  if (!(_this184.guarding = !0, _this184.isBlankName)) {
                    _context93.next = 2;
                    break;
                  }

                  return _context93.abrupt("return", (_this184.InvalidField = "name", void Ti.Toast.Open(_this184.Msgs.blankName, "warn")));

                case 2:
                  _this184.guarding = !1, _this184.InvalidField = null;
                  t = {
                    scene: _this184.scenes.robot,
                    account: _this184.Params.name
                  };
                  e = Ti.S.renderBy(_this184.captcha, t);
                  _context93.next = 7;
                  return Ti.Captcha(e);

                case 7:
                  i = _context93.sent;

                  if (i) {
                    _context93.next = 10;
                    break;
                  }

                  return _context93.abrupt("return");

                case 10:
                  n = Ti.Toast.Open({
                    icon: "fas-spinner fa-spin",
                    content: "i18n:auth-sending-vcode",
                    position: "center",
                    duration: 0,
                    closer: !1
                  });

                  _this184.$notify("get:vcode", {
                    type: _this184.currentMode,
                    scene: _this184.vCodeScene,
                    account: _this184.data.name,
                    captcha: i,
                    done: function done() {
                      n.close(), _this184.InvalidField = null, _this184.data.passwd = "";
                    },
                    ok: function ok() {
                      var _ref97 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                          _ref97$duInMin = _ref97.duInMin,
                          t = _ref97$duInMin === void 0 ? 60 : _ref97$duInMin;

                      _this184.delay = _this184.getDelay, Ti.Toast.Open({
                        type: "success",
                        position: "top",
                        content: "i18n:auth-sent-ok",
                        vars: {
                          ta: Ti.I18n.text(_this184.vCodeTargetName),
                          by: Ti.I18n.text(_this184.vCodeTargetBy),
                          min: t
                        },
                        duration: 5e3
                      });
                    },
                    fail: function fail() {
                      var _ref98 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                          t = _ref98.errCode,
                          e = _ref98.data;

                      Ti.Toast.Open({
                        type: "warn",
                        position: "top",
                        content: "i18n:".concat(t),
                        duration: 5e3
                      });
                    }
                  });

                case 12:
                case "end":
                  return _context93.stop();
              }
            }
          }, _callee93);
        }))();
      },
      isInvalid: function isInvalid() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
        return _.isArray(this.InvalidField) ? _.indexOf(this.InvalidField, t) >= 0 : t == this.InvalidField;
      },
      __ti_shortcut: function __ti_shortcut(t) {
        var _this185 = this;

        if ("ENTER" == t && !this.isBlankNameOrPasswd) return this.$nextTick(function () {
          _this185.OnAuthSubmit();
        }), {
          stop: !0,
          quit: !0
        };
      }
    },
    watch: {
      currentMode: function currentMode() {
        this.guarding = !1, this.data.passwd = "";
      }
    },
    mounted: function mounted() {
      var _this186 = this;

      this.mode && (this.currentMode = this.mode), this.__H = window.setInterval(function () {
        _this186.delay >= 0 && _this186.delay--;
      }, 1e3);
    },
    beforeDestroy: function beforeDestroy() {
      this.__H && window.clearInterval(this.__H);
    }
  };
  Ti.Preload("ti/com/web/auth/signup/auth-signup.mjs", t);
}(), Ti.Preload("ti/com/web/auth/signup/_com.json", {
  name: "web-auth-signup",
  globally: !0,
  template: "./auth-signup.html",
  mixins: ["./auth-signup.mjs"]
}), Ti.Preload("ti/com/web/footer/web-footer.html", '<div class="ti-web-footer">\n  I footer\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      logo: {
        type: [String, Object],
        "default": "zmdi-chevron-down"
      },
      brief: {
        type: String,
        "default": null
      },
      copyright: {
        type: String,
        "default": null
      }
    },
    computed: {}
  };
  Ti.Preload("ti/com/web/footer/web-footer.mjs", t);
}(), Ti.Preload("ti/com/web/footer/_com.json", {
  name: "web-footer",
  globally: !0,
  template: "./web-footer.html",
  mixins: ["./web-footer.mjs"]
}), Ti.Preload("ti/com/web/media/image/web-media-image.html", '<a class="web-media-image"\n  :class="TopClass"\n  :style="TopStyle"\n  :href="TheHref"\n  :target="isNewTab ? \'_blank\' : \'_self\'"\n  @mousemove="OnMouseMove"\n  @mouseleave="OnMouseLeave">\n  \x3c!--Image--\x3e\n  <img ref="img"\n    v-if="TheSrc" \n      :src="TheSrc"\n      @load="OnImageLoaded"/>\n  \x3c!--Text--\x3e\n  <div\n    v-if="TheText"\n      class="as-text">\n      <span>{{TheText}}</span>\n  </div>\n  \x3c!--Zoom len--\x3e\n  <template v-if="zoomLens">\n    \x3c!--Picker--\x3e\n    <div ref="pick"\n      class="as-zoom-pick"\n      :style="ZoomLenPickStyle"></div>\n    \x3c!--Docker--\x3e\n    <div ref="dock"\n      v-if="showZoomPick"\n        class="as-zoom-dock"\n        :style="ZoomLenDockStyle"></div>\n  </template>\n</a>'), function () {
  var t = {
    data: function data() {
      return {
        showZoomPick: !1,
        showZoomDock: !1,
        naturalWidth: -1,
        naturalHeight: -1,
        clientWidth: -1,
        clientHeight: -1,
        imgLoading: !0,
        pickRect: {}
      };
    },
    props: {
      src: {
        type: [String, Object],
        "default": void 0
      },
      preview: {
        type: Object,
        "default": void 0
      },
      text: {
        type: String,
        "default": void 0
      },
      href: {
        type: String,
        "default": void 0
      },
      newtab: {
        type: [String, Boolean],
        "default": void 0
      },
      i18n: {
        type: Boolean,
        "default": !0
      },
      width: {
        type: [String, Number],
        "default": void 0
      },
      height: {
        type: [String, Number],
        "default": void 0
      },
      zoomLens: {
        type: Object,
        "default": void 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "has-href": !!this.TheHref,
          "no-href": !this.TheHref
        });
      },
      TopStyle: function TopStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      TheZoomLens: function TheZoomLens() {
        if (!this.zoomLens || this.clientWidth <= 0 || this.clientHeight <= 0) return;

        var t = _.get(this.zoomLens, "pickWidth", .618),
            e = _.get(this.zoomLens, "pickHeight", -1),
            i = {};

        i.pickWidth = t < 1 ? this.clientWidth * t : t, i.pickHeight = e <= 0 ? i.pickWidth : e < 1 ? this.clientHeight * e : e;

        var n = _.get(this.zoomLens, "scale", 2);

        return i.dockWidth = i.pickWidth * n, i.dockHeight = i.pickHeight * n, _.defaults(i, {
          dockMode: "V",
          dockSpace: {
            x: 10,
            y: 0
          },
          dockPosListY: ["top", "bottom"]
        }), i;
      },
      ZoomLenPickStyle: function ZoomLenPickStyle() {
        if (this.zoomLens && !_.isEmpty(this.pickRect)) return Ti.Css.toStyle({
          visibility: this.showZoomPick ? "visible" : "hidden",
          top: this.pickRect.top,
          left: this.pickRect.left,
          width: this.TheZoomLens.pickWidth,
          height: this.TheZoomLens.pickHeight
        });
      },
      ZoomLenDockStyle: function ZoomLenDockStyle() {
        if (this.zoomLens && !_.isEmpty(this.pickRect)) {
          var _t135 = _.get(this.zoomLens, "scale", 2),
              e = this.clientWidth,
              i = this.clientHeight,
              n = this.pickRect.left,
              a = this.pickRect.top;

          return Ti.Css.toStyle({
            visibility: this.showZoomDock ? "visible" : "hidden",
            width: this.TheZoomLens.dockWidth,
            height: this.TheZoomLens.dockHeight,
            backgroundImage: "url(\"".concat(this.TheSrc, "\")"),
            backgroundSize: "".concat(e * _t135, "px ").concat(i * _t135, "px"),
            backgroundPosition: "".concat(n * _t135 * -1, "px ").concat(a * _t135 * -1, "px")
          });
        }
      },
      TheSrc: function TheSrc() {
        return Ti.WWW.evalObjPreviewSrc(this.src, this.preview);
      },
      TheText: function TheText() {
        if (this.text) {
          var _t136 = this.text;
          return _.isPlainObject(this.src) && (_t136 = Ti.Util.explainObj(this.src, this.text)), this.i18n && (_t136 = Ti.I18n.text(_t136)), _t136;
        }
      },
      TheHref: function TheHref() {
        if (this.href) {
          var _t137 = this.href;
          return _.isPlainObject(this.src) && (_t137 = Ti.Util.explainObj(this.src, this.href)), _t137;
        }
      },
      isNewTab: function isNewTab() {
        var t = this.newtab;
        return _.isString(t) && _.isPlainObject(this.src) && (t = Ti.Util.explainObj(this.src, this.newtab)), !!t;
      }
    },
    methods: {
      OnImageLoaded: function OnImageLoaded() {
        var t = this.$refs.img;
        t && (this.naturalWidth = t.naturalWidth, this.naturalHeight = t.naturalHeight, this.clientWidth = t.clientWidth, this.clientHeight = t.clientHeight, this.imgLoading = !1);
      },
      OnMouseMove: function OnMouseMove(t) {
        if (!_.isElement(this.$refs.img) || !_.isElement(this.$refs.pick)) return;
        var e = Ti.Rects.createBy(this.$refs.img),
            i = Ti.Rects.createBy(this.$refs.pick),
            n = t.clientX,
            a = t.clientY,
            s = Ti.Rects.create({
          x: n,
          y: a,
          width: i.width,
          height: i.height
        });
        e.wrap(s), s.relative(e), this.pickRect = s, this.showZoomPick = !0;
      },
      OnMouseLeave: function OnMouseLeave() {
        this.showZoomPick = !1, this.showZoomDock = !1;
      }
    },
    watch: {
      showZoomPick: function showZoomPick(t) {
        var _this187 = this;

        t && this.zoomLens && this.$nextTick(function () {
          Ti.Dom.dockTo(_this187.$refs.dock, _this187.$refs.img, {
            mode: _this187.TheZoomLens.dockMode,
            space: _this187.TheZoomLens.dockSpace,
            posListX: _this187.TheZoomLens.dockPosListX,
            posListY: _this187.TheZoomLens.dockPosListY
          }), _.delay(function () {
            _this187.showZoomDock = !0;
          }, 100);
        });
      }
    }
  };
  Ti.Preload("ti/com/web/media/image/web-media-image.mjs", t);
}(), Ti.Preload("ti/com/web/media/image/_com.json", {
  name: "web-media-image",
  globally: !0,
  template: "./web-media-image.html",
  mixins: ["./web-media-image.mjs"]
}), Ti.Preload("ti/com/web/media/player/web-media-player.html", '<div class="ti-web-image">\n  \n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      src: {
        type: String,
        "default": void 0
      },
      value: {
        type: [String, Number],
        "default": void 0
      },
      bgColor: {
        type: [String, Number],
        "default": "#000000"
      },
      items: {
        type: [Array],
        "default": function _default() {
          return [];
        }
      }
    },
    computed: {
      TheItems: function TheItems() {
        return _.forEach(this.items, function (t) {}), [];
      }
    }
  };
  Ti.Preload("ti/com/web/media/player/web-media-player.mjs", t);
}(), Ti.Preload("ti/com/web/media/player/_com.json", {
  name: "web-media-player",
  globally: !0,
  template: "./web-media-player.html",
  mixins: ["./web-media-player.mjs"]
}), Ti.Preload("ti/com/web/meta/article/web-meta-article.html", '<div class="web-meta-article"\n  :class="TopClass">\n  \x3c!--\n    Title\n  --\x3e\n  <h1\n    v-if="title"\n      class="as-title">{{title}}</h1>\n  \x3c!--\n    Information\n  --\x3e\n  <div\n    v-if="hasInfo"\n      class="as-info">\n      \x3c!--author--\x3e\n      <div v-if="author" class="as-author">{{author}}</div>\n      \x3c!--PubDateText--\x3e\n      <div v-if="PubDateText" class="as-pub-date">{{PubDateText}}</div>\n      \x3c!--Watch Count--\x3e\n      <div\n        v-if="watchCount > 0"\n          class="as-watch-count">\n            <i class="zmdi zmdi-eye"></i>\n            <span>{{watchCount}}</span></div>\n      \x3c!--PubDateText--\x3e\n      <div v-if="duration" class="as-duration">{{DurationText}}</div>\n  </div>\n  \x3c!--\n    Tags\n  --\x3e\n  <ul \n  v-if="hasTags"\n    class="as-tags">\n    <li\n      v-for="tag in TheTags">{{tag}}</li></ul>\n  \x3c!--\n    Brief\n  --\x3e\n  <blockquote\n    v-if="brief"\n      class="as-brief">{{brief}}</blockquote>\n  \x3c!--\n    Bottom line\n  --\x3e\n  <hr v-if="bottomLine" class="as-bottom-line">\n</div>'), function () {
  var t = {
    props: {
      title: {
        type: String,
        "default": void 0
      },
      brief: {
        type: String,
        "default": void 0
      },
      pubDate: {
        type: [String, Number, Date],
        "default": void 0
      },
      tags: {
        type: [String, Array],
        "default": void 0
      },
      dateFormat: {
        type: String,
        "default": "yyyy-MM-dd"
      },
      author: {
        type: String,
        "default": void 0
      },
      duration: {
        type: [String, Number],
        "default": void 0
      },
      watchCount: {
        type: Number,
        "default": 0
      },
      align: {
        type: String,
        "default": "center",
        validator: function validator(t) {
          return /^(left|center|right)$/.test(t);
        }
      },
      bottomLine: {
        type: Boolean,
        "default": !0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass("align-".concat(this.align));
      },
      TheTags: function TheTags() {
        return Ti.S.toArray(this.tags);
      },
      hasTags: function hasTags() {
        return !_.isEmpty(this.TheTags);
      },
      DurationText: function DurationText() {
        return _.isNumber(this.duration) ? Ti.I18n.getf("du-in-min", {
          n: this.duration
        }) : this.duration;
      },
      PubDateText: function PubDateText() {
        if (this.pubDate) return Ti.DateTime.format(this.pubDate, this.dateFormat);
      },
      hasInfo: function hasInfo() {
        return this.author || this.watchCount > 0 || this.author || this.duration;
      }
    }
  };
  Ti.Preload("ti/com/web/meta/article/web-meta-article.mjs", t);
}(), Ti.Preload("ti/com/web/meta/article/_com.json", {
  name: "web-meta-article",
  globally: !0,
  template: "./web-meta-article.html",
  mixins: ["./web-meta-article.mjs"]
}), Ti.Preload("ti/com/web/meta/commodity/web-meta-commodity.html", '<div class="web-meta-commodity"\n  :class="TopClass">\n  <div class="as-main">\n    \x3c!--\n      Left: Preview\n    --\x3e\n    <div\n      v-if="previewImageSrc"\n        class="at-left">\n      <WebMediaImage\n        :src="previewImageSrc"/>\n    </div>\n    \x3c!--\n      Right: Information\n    --\x3e\n    <div class="at-right">\n      \x3c!--Title--\x3e\n      <h1>{{MetaTitle}}</h1>\n      <div class="as-form">\n        <ti-form\n          v-bind="form"\n          :data="FormData"\n          @change="OnFormChanged"/>\n      </div>\n      <div class="as-btns">\n        \x3c!--Buy Button--\x3e\n        <a class="ti-btn" @click="OnClickBuyNow">{{actions.buy|i18n}}</a>\n      </div>\n    </div>\n  </div>\n</div>'), function () {
  var t = {
    props: {
      meta: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      previewSrc: {
        type: String,
        "default": null
      },
      titleKey: {
        type: String,
        "default": "title"
      },
      buyAmount: {
        type: Number,
        "default": 1
      },
      form: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      actions: {
        type: Object,
        "default": function _default() {
          return {
            buy: "i18n:buy-now"
          };
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      FormData: function FormData() {
        return _objectSpread({}, this.meta, {
          buyAmount: this.buyAmount
        });
      },
      previewImageSrc: function previewImageSrc() {
        if (this.previewSrc && this.meta) return Ti.S.renderBy(this.previewSrc, this.meta);
      },
      MetaTitle: function MetaTitle() {
        return this.titleKey ? _.get(this.meta, this.titleKey) : "NoTitle";
      }
    },
    methods: {
      OnClickBuyNow: function OnClickBuyNow() {
        this.$notify("buy:now");
      },
      OnFormChanged: function OnFormChanged(_ref99) {
        var t = _ref99.name,
            e = _ref99.value;
        this.$notify("meta:changed", {
          name: t,
          value: e
        });
      }
    }
  };
  Ti.Preload("ti/com/web/meta/commodity/web-meta-commodity.mjs", t);
}(), Ti.Preload("ti/com/web/meta/commodity/_com.json", {
  name: "web-meta-commodity",
  globally: !0,
  template: "./web-meta-commodity.html",
  mixins: ["./web-meta-commodity.mjs"],
  components: ["@com:web/meta/preview"]
}), Ti.Preload("ti/com/web/meta/order/com/order-item/order-item.html", '<div class="as-row order-item">\n  \x3c!--Thumb/Title--\x3e\n  <div class="as-cell">\n    <div class="as-title">\n      <ti-icon \n        :value="thumbObj" \n        width=".32rem" \n        height=".32rem"/>\n      <span class="as-text">{{title}}</span>\n    </div>\n  </div>\n  \x3c!--price--\x3e\n  <div class="as-cell as-price">\n    <span>{{price}}</span>\n  </div>\n  \x3c!--amount--\x3e\n  <div class="as-cell as-amount">\n    <span>{{amount}}</span>\n  </div>\n  \x3c!--Total--\x3e\n  <div class="as-cell as-fee">\n    <em class="ti-num is-md">{{feeText}}</em>\n  </div>\n</div>'), function () {
  var t = {
    props: {
      id: {
        type: String,
        "default": null
      },
      thumb: {
        type: String,
        "default": null
      },
      src: {
        type: String,
        "default": "/api/thumb?id:${id}"
      },
      dftIcon: {
        type: String,
        "default": "fas-cube"
      },
      title: {
        type: String,
        "default": null
      },
      price: {
        type: Number,
        "default": 1
      },
      currency: {
        type: String,
        "default": "RMB"
      },
      amount: {
        type: Number,
        "default": 1
      }
    },
    computed: {
      thumbObj: function thumbObj() {
        if (this.thumb) {
          return {
            type: "image",
            value: Ti.S.renderBy(this.src, this)
          };
        }

        return this.dftIcon;
      },
      fee: function fee() {
        return Ti.WWW.evalFee(this);
      },
      feeText: function feeText() {
        return Ti.WWW.feeText(this.fee, this.currency);
      }
    }
  };
  Ti.Preload("ti/com/web/meta/order/com/order-item/order-item.mjs", t);
}(), Ti.Preload("ti/com/web/meta/order/com/order-item/_com.json", {
  name: "order-item",
  globally: !1,
  template: "./order-item.html",
  mixins: ["./order-item.mjs"]
}), Ti.Preload("ti/com/web/meta/order/web-meta-order.html", '<div class="web-meta-order"\n  :class="TopClass">\n  \x3c!--\n    Head： Status\n  --\x3e\n  <div class="as-or-box is-head">\n    \x3c!--\n      Left: ID/status\n    --\x3e\n    <div class="at-left is-status">\n      \x3c!--ID--\x3e\n      <div class="as-or-id">\n        <span>{{\'order-k-id\'|i18n}}:</span>\n        <em>{{OrderId}}</em>\n      </div>\n      \x3c!--Status--\x3e\n      <div class="as-or-st">\n        <span :class="OrderStatus">{{OrderStatus|i18n}}</span>\n      </div>\n    </div>\n    \x3c!--\n      Right: Timestamp\n    --\x3e\n    <div class="at-right is-timestamp">\n      <div\n        v-for="it in Timestamps"\n          :class="it.className">\n          \x3c!--Item--\x3e\n          <template v-if="\'item\' == it.type">\n            <ti-icon :value="it.icon"/>\n            <div class="as-t-title">{{it.title|i18n}}</div>\n            <div class="as-t-date">{{it.dateText}}</div>\n            <div class="as-t-time">{{it.timeText}}</div>\n          </template>\n          \x3c!--Line--\x3e\n          <template v-else>\n            <ti-icon :value="it.icon"/>\n          </template>\n      </div>\n    </div>\n  </div>\n  \x3c!--\n    TODO shipping address & physical distribution\n  --\x3e\n  \x3c!--\n    Product list\n  --\x3e\n  <div class="as-or-box is-products">\n    <table>\n      <thead>\n        <tr>\n          <th>{{\'order-k-pro-title\'|i18n}}</th>\n          <th>{{\'order-k-pro-price\'|i18n}}</th>\n          <th>{{\'order-k-pro-amount\'|i18n}}</th>\n          <th>{{\'order-k-pro-subtotal\'|i18n}}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr\n          v-for="it in Products"\n            class="as-pro-it">\n            \x3c!--Title--\x3e\n            <td class="as-pro-title">\n              <a \n                :href="it.href"\n                @click.left.prevent="OnClickProduct(it)"><img :src="it.src"/></a>\n              <a \n                :href="it.href"\n                @click.left.prevent="OnClickProduct(it)">{{it.title}}</a>\n            </td>\n            \x3c!--Price--\x3e\n            <td class="as-price">{{CurrencyChar}}{{it.price}}</td>\n            \x3c!--Amount--\x3e\n            <td class="as-amount">{{it.amount}}</td>\n            \x3c!--Subtotal--\x3e\n            <td class="as-subtotal">{{CurrencyChar}}{{it.subtotal}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  \x3c!--\n    Summary\n  --\x3e\n  <div class="as-or-box is-summary">\n    <table>\n      <tr class="as-sum-price">\n        <td class="as-s-key">{{\'order-k-price\'|i18n}}:</td>\n        <td class="as-s-val">{{CurrencyChar}}{{Order.price}}</td>\n      </tr>\n      <tr class="as-sum-fee">\n        <td class="as-s-key">{{\'order-k-fee\'|i18n}}:</td>\n        <td class="as-s-val">{{CurrencyChar}}{{Order.fee}}</td>\n      </tr>\n    </table>\n  </div>\n</div>'), function () {
  var t = {
    props: {
      value: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      proThumbSrc: {
        type: String,
        "default": void 0
      },
      proHref: {
        type: String,
        "default": void 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass("is-".concat(this.OrderStatus));
      },
      Order: function Order() {
        return this.value || {};
      },
      OrderId: function OrderId() {
        var t = this.Order.id;

        if (t) {
          var e = t.indexOf(":");
          return e > 0 ? _.trim(t.substring(e + 1)) : t;
        }

        return "- unknown -";
      },
      OrderStatus: function OrderStatus() {
        return "or-st-".concat(_.toLower(this.Order.or_st));
      },
      CurrencyChar: function CurrencyChar() {
        return Ti.Bank.getCurrencyChar(this.Order.currency || "RMB");
      },
      Products: function Products() {
        var _this188 = this;

        var t = [];
        return _.forEach(this.value.products, function (e) {
          var i = _objectSpread({}, e);

          _this188.proThumbSrc && (i.src = Ti.S.renderBy(_this188.proThumbSrc, e)), _this188.proHref && (i.href = Ti.S.renderBy(_this188.proHref, e)), i.subtotal = Ti.Num.precise(e.price * e.amount), t.push(i);
        }), t;
      },
      Timestamps: function Timestamps() {
        var t = [];
        return t.push(this.genTimestampItem("fas-file-invoice-dollar", "i18n:or-st-nw", this.Order.ct)), t.push(this.genTimestampLine(this.Order.ok_at)), t.push(this.genTimestampItem("far-credit-card", "i18n:or-st-ok", this.Order.ok_at)), t.push(this.genTimestampLine(this.Order.sp_at)), t.push(this.genTimestampItem("fas-shipping-fast", "i18n:or-st-sp", this.Order.sp_at)), t.push(this.genTimestampLine(this.Order.dn_at)), t.push(this.genTimestampItem("fas-clipboard-check", "i18n:or-st-dn", this.Order.dn_at, !0)), t;
      }
    },
    methods: {
      OnClickProduct: function OnClickProduct(_ref100) {
        var t = _ref100.id;
        this.$notify("open:product", t);
      },
      genTimestampItem: function genTimestampItem(t, e, i) {
        var n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;
        var a = {
          type: "item",
          icon: t,
          title: e,
          time: i
        },
            s = i && i > 0;
        return a.className = {
          "is-item": !0,
          "is-on": s,
          "is-off": !s,
          "at-last": n
        }, s && (a.dateText = Ti.DateTime.format(i, "yyyy-MM-dd"), a.timeText = Ti.DateTime.format(i, "HH:mm:ss")), a;
      },
      genTimestampLine: function genTimestampLine(t) {
        var e = t && t > 0;
        return {
          type: "line",
          isOn: e,
          icon: e ? "fas-chevron-right" : "fas-circle",
          className: {
            "is-line": !0,
            "is-on": e,
            "is-off": !e
          }
        };
      }
    }
  };
  Ti.Preload("ti/com/web/meta/order/web-meta-order.mjs", t);
}(), Ti.Preload("ti/com/web/meta/order/_com.json", {
  name: "web-meta-order",
  globally: !0,
  template: "./web-meta-order.html",
  mixins: ["./web-meta-order.mjs"],
  components: ["./com/order-item"]
}), Ti.Preload("ti/com/web/meta/preview/web-meta-preview.html", '<div class="ti-web-preview ti-fill-parent">\n  \x3c!--\n    Top: Image\n  --\x3e\n  <div class="as-preview">\n    <ti-icon value="zmdi-image"/>\n  </div>\n  \x3c!--\n    Bottom: List\n  --\x3e\n  \n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      logo: {
        type: [String, Object],
        "default": "zmdi-chevron-down"
      },
      brief: {
        type: String,
        "default": null
      },
      copyright: {
        type: String,
        "default": null
      }
    },
    computed: {}
  };
  Ti.Preload("ti/com/web/meta/preview/web-meta-preview.mjs", t);
}(), Ti.Preload("ti/com/web/meta/preview/_com.json", {
  name: "web-meta-preview",
  globally: !0,
  template: "./web-meta-preview.html",
  mixins: ["./web-meta-preview.mjs"]
}), Ti.Preload("ti/com/web/nav/columns/nav-columns.html", '<nav class="web-nav-columns"\n  :class="TopClass">\n  \x3c!--=======================================--\x3e\n  <div v-for="it in TheItems"\n    class="as-column">\n    <div class="item-self">\n      <a\n        :key="it.index"\n        class="link-item"\n        :class="it.className"\n        :href="it.href"\n        :target="it.target"\n        @click.left="OnClickLink($event, it)">\n        \x3c!--Icon--\x3e\n        <ti-icon\n          v-if="it.icon"\n            :value="it.icon"/>\n        \x3c!--Text--\x3e\n        <span\n          v-if="it.title"\n            class="as-text">{{it.title}}</span>\n        </a>\n      </div>\n      \x3c!--===================================--\x3e\n      \x3c!--SubItems--\x3e\n      <div\n        v-if="it.items"\n          class="sub-items">\n          <div class="items-con">\n            <a\n              v-for="sub in it.items"\n                :key="sub.index"\n                class="sub-item"\n                :class="sub.className"\n                :href="sub.href"\n                :target="sub.target"\n                @click.left="OnClickLink($event, sub)">\n                \x3c!--Icon--\x3e\n                <ti-icon\n                  v-if="sub.icon"\n                    :value="sub.icon"/>\n                \x3c!--Text--\x3e\n                <span\n                  v-if="sub.title"\n                    class="as-text">{{sub.title}}</span>\n            </a>\n          </div>\n      </div>\n      \x3c!--===================================--\x3e\n  </div>\n  \x3c!--=======================================--\x3e\n</nav>'), function () {
  var t = {
    props: {
      items: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      path: {
        type: String,
        "default": null
      },
      align: {
        type: String,
        "default": "center",
        validator: function validator(t) {
          return /^(left|center|right)$/.test(t);
        }
      },
      spacing: {
        type: String,
        validator: function validator(t) {
          return /^(tiny|comfy|wide)$/.test(t);
        }
      },
      border: {
        type: String,
        "default": "solid",
        validator: function validator(t) {
          return /^(none|solid|dashed|dotted)$/.test(t);
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        var _this189 = this;

        return this.getTopClass("is-spacing-".concat(this.spacing), "is-align-".concat(this.align), function () {
          if (_this189.border) return "is-border-".concat(_this189.border);
        });
      },
      TheItems: function TheItems() {
        return this.evalItems(this.items);
      }
    },
    methods: {
      OnClickLink: function OnClickLink(t) {
        var _ref101 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            e = _ref101.type,
            i = _ref101.value,
            n = _ref101.params;

        /^(page|action)$/.test(e) && (t.preventDefault(), this.$notify("nav:to", {
          type: e,
          value: i,
          params: n
        }));
      },
      evalItems: function evalItems(t) {
        var _this190 = this;

        t = Ti.WWW.explainNavigation(t, this.base);
        var e = [];
        return _.forEach(t, function (t, i) {
          var n = _.pick(t, ["icon", "title", "type", "params", "href", "target", "value"]);

          n.index = i, _this190.path && (n.highlight = t.highlightBy(_this190.path));
          var a = !!n.href;
          n.className = {
            "has-href": a,
            "nil-href": !a,
            "is-highlight": n.highlight,
            "is-normal": !n.highlight
          }, t.items && (n.items = _this190.evalItems(t.items)), e.push(n);
        }), e;
      }
    }
  };
  Ti.Preload("ti/com/web/nav/columns/nav-columns.mjs", t);
}(), Ti.Preload("ti/com/web/nav/columns/_com.json", {
  name: "web-nav-columns",
  globally: !0,
  template: "./nav-columns.html",
  mixins: ["./nav-columns.mjs"],
  components: []
}), Ti.Preload("ti/com/web/nav/links/nav-links.html", '<nav class="web-nav-links"\n  :class="TopClass">\n  \x3c!--=======================================--\x3e\n  <a\n    v-for="it in TheItems"\n      :key="it.index"\n      class="link-item"\n      :class="it.className"\n      :href="it.href"\n      :target="it.target"\n      @click.left="OnClickLink($event, it)"\n      @mouseenter="OnItemMouseEnter(it)"\n      @mouseleave="OnItemMouseLeave(it)">\n      \x3c!--Icon--\x3e\n      <ti-icon\n        v-if="it.icon"\n          :value="it.icon"/>\n      \x3c!--Text--\x3e\n      <span\n        v-if="it.title"\n          class="as-text">{{it.title}}</span>\n      \x3c!--===================================--\x3e\n      \x3c!--SubItems--\x3e\n      <div\n        v-if="mySubItems && mySubIndex == it.index"\n          class="sub-items">\n          <div class="items-con">\n            <a\n              v-for="sub in mySubItems"\n                :key="sub.index"\n                class="sub-item"\n                :class="sub.className"\n                :href="sub.href"\n                :target="sub.target"\n                @click.left="OnClickLink($event, sub)">\n                \x3c!--Icon--\x3e\n                <ti-icon\n                  v-if="sub.icon"\n                    :value="sub.icon"/>\n                \x3c!--Text--\x3e\n                <span\n                  v-if="sub.title"\n                    class="as-text">{{sub.title}}</span>\n            </a>\n          </div>\n      </div>\n      \x3c!--===================================--\x3e\n  </a>\n  \x3c!--=======================================--\x3e\n</nav>'), function () {
  var t = {
    data: function data() {
      return {
        mySubIndex: -1,
        mySubItems: null
      };
    },
    props: {
      base: {
        type: String,
        "default": "/"
      },
      items: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      path: {
        type: String,
        "default": void 0
      },
      params: {
        type: Object,
        "default": void 0
      },
      align: {
        type: String,
        "default": "left",
        validator: function validator(t) {
          return /^(left|center|right)$/.test(t);
        }
      },
      spacing: {
        type: String,
        validator: function validator(t) {
          return /^(tiny|comfy|wide)$/.test(t);
        }
      },
      border: {
        type: String,
        "default": "solid",
        validator: function validator(t) {
          return /^(none|solid|dashed|dotted)$/.test(t);
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        var _this191 = this;

        return this.getTopClass("is-spacing-".concat(this.spacing), "is-align-".concat(this.align), function () {
          if (_this191.border) return "is-border-".concat(_this191.border);
        });
      },
      TheItems: function TheItems() {
        return this.evalItems(this.items);
      }
    },
    methods: {
      OnClickLink: function OnClickLink(t) {
        var _ref102 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            e = _ref102.type,
            i = _ref102.value,
            n = _ref102.params;

        /^(page|action)$/.test(e) && (t.preventDefault(), i && this.$notify("nav:to", {
          type: e,
          value: i,
          params: n
        }));
      },
      OnItemMouseEnter: function OnItemMouseEnter(_ref103) {
        var _this192 = this;

        var t = _ref103.index,
            e = _ref103.items;
        if (_.isEmpty(e)) return this.mySubIndex = -1, void (this.mySubItems = null);
        this.mySubItems = this.evalItems(e), this.mySubIndex = t, this.$nextTick(function () {
          return _this192.dockSub();
        });
      },
      OnItemMouseLeave: function OnItemMouseLeave(_ref104) {
        var t = _ref104.index;
        this.mySubIndex == t && (this.mySubIndex = -1, this.mySubItems = null);
      },
      dockSub: function dockSub() {
        var t = Ti.Dom.find(".sub-items", this.$el);
        if (!t) return;
        var e = t.parentNode,
            i = Ti.Rects.createBy(e),
            n = Ti.Rects.createBy(t),
            a = Ti.Css.toStyle({
          top: i.height,
          left: (i.width - n.width) / 2
        });
        Ti.Dom.setStyle(t, a);
      },
      evalItems: function evalItems(t) {
        var _this193 = this;

        t = Ti.WWW.explainNavigation(t, this.base);
        var e = [];
        return _.forEach(t, function (t, i) {
          var n = _.pick(t, ["icon", "title", "type", "params", "href", "target", "value", "items"]);

          n.index = i, _this193.path && (n.highlight = t.highlightBy(_this193.path, _this193.params));
          var a = !!n.href;
          n.className = {
            "has-href": a,
            "nil-href": !a,
            "is-highlight": n.highlight,
            "is-normal": !n.highlight
          }, e.push(n);
        }), e;
      }
    }
  };
  Ti.Preload("ti/com/web/nav/links/nav-links.mjs", t);
}(), Ti.Preload("ti/com/web/nav/links/_com.json", {
  name: "web-nav-links",
  globally: !0,
  template: "./nav-links.html",
  mixins: ["./nav-links.mjs"],
  components: []
}), Ti.Preload("ti/com/web/nav/side/com/side-item/side-item.html", '<div class="side-item" \n  :class="TopClass">\n  \x3c!--\n    Self Info\n  --\x3e\n  <div class="it-info" >\n    \x3c!--Icon--\x3e\n    <span\n      v-if="icon"\n        class="it-info-icon">\n        <ti-icon :value="icon"/>\n    </span>\n    \x3c!--Group--\x3e\n    <span\n      v-if="isGroup"\n        class="it-info-text">{{title|i18n}}</span>\n    \x3c!--Item--\x3e\n    <a\n      v-else\n        class="it-info-text"\n        :href="href"\n        @click.stop.prevent="OnClickItemInfo">{{title|i18n}}</a>\n  </div>\n  \x3c!--\n    Sub Container\n  --\x3e\n  <div \n    v-if="hasSubItems"\n      class="it-con">\n      <SideItem\n        v-for="subIt in items"\n          :key="subIt.key"\n          v-bind="subIt"/>\n  </div>\n</div>'), function () {
  var t = {
    props: {
      depth: {
        type: Number,
        "default": 0
      },
      icon: {
        type: [String, Object],
        "default": void 0
      },
      title: {
        type: String,
        "default": void 0
      },
      page: {
        type: String,
        "default": void 0
      },
      href: {
        type: String,
        "default": void 0
      },
      items: {
        type: Array,
        "default": void 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return {
          "is-top": this.isTop,
          "is-sub": !this.isTop,
          "is-group": this.isGroup,
          "is-item": !this.isGroup,
          "is-highlight": this.isHighlight
        };
      },
      isTop: function isTop() {
        return 0 == this.depth;
      },
      isGroup: function isGroup() {
        return _.isArray(this.items);
      },
      isHighlight: function isHighlight() {
        return this.id && this.id == this.highlightId;
      },
      hasSubItems: function hasSubItems() {
        return !_.isEmpty(this.items);
      }
    },
    methods: {
      OnClickItemInfo: function OnClickItemInfo() {
        this.$notify("nav:to", {
          value: this.page
        });
      }
    }
  };
  Ti.Preload("ti/com/web/nav/side/com/side-item/side-item.mjs", t);
}(), Ti.Preload("ti/com/web/nav/side/com/side-item/_com.json", {
  name: "side-item",
  template: "./side-item.html",
  mixins: ["./side-item.mjs"]
}), Ti.Preload("ti/com/web/nav/side/web-nav-side.html", '<div class="web-nav-side"\n  :class="TopClass"\n  v-ti-activable>\n  <SideItem\n    v-for="it in TheItems"\n      :key="it.key"\n        v-bind="it"/>\n</div>'), function () {
  var t = {
    props: {
      base: {
        type: String,
        "default": void 0
      },
      items: {
        type: Array,
        "default": null
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TheItems: function TheItems() {
        var _this194 = this;

        var t = [];
        return _.forEach(this.items, function (e, i) {
          t.push(_this194.evalItem(e, i, 0));
        }), t;
      }
    },
    methods: {
      evalItem: function evalItem() {
        var _this195 = this;

        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
        var n = void 0;
        _.isArray(t.items) && (n = [], _.forEach(t.items, function (t, e) {
          n.push(_this195.evalItem(t, e, i + 1));
        }), t.items = n);
        var a = t.href || t.page;
        return this.base && !/^(https?)?\/\/?/.test(a) && (a = Ti.Util.appendPath(this.base, a)), _objectSpread({}, t, {
          index: e,
          href: a,
          depth: i,
          key: "it-".concat(e)
        });
      }
    }
  };
  Ti.Preload("ti/com/web/nav/side/web-nav-side.mjs", t);
}(), Ti.Preload("ti/com/web/nav/side/_com.json", {
  name: "web-nav-side",
  globally: !0,
  template: "./web-nav-side.html",
  mixins: ["./web-nav-side.mjs"],
  components: ["./com/side-item"]
}), function () {
  var t = {
    tipIcon: {
      type: String,
      "default": "fas-clipboard-check"
    },
    tipText: {
      type: String,
      "default": "i18n:pay-checkout-tip"
    },
    items: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    currency: {
      type: String,
      "default": "RMB"
    },
    orderType: {
      type: String,
      "default": "A"
    },
    addresses: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    countries: {
      type: Object,
      "default": void 0
    }
  };
  Ti.Preload("ti/com/web/pay/checkout/web-pay-checkout-props.mjs", t);
}(), Ti.Preload("ti/com/web/pay/checkout/web-pay-checkout.html", '<div class="web-pay-checkout"\n  :class="TopClass">\n  \x3c!--\n    Blank\n  --\x3e\n  <div \n    v-if="isEmpty"\n      class="as-empty">\n    <ti-loading\n      class="as-big"\n      icon="fas-shopping-basket"\n      text="You should pick something to checkout!"/>\n  </div>\n  \x3c!--\n    List table\n  --\x3e\n  <template v-else>\n    \x3c!--\n      Tip\n    --\x3e\n    <div class="as-tip">\n      <ti-icon :value="tipIcon"/>\n      <span>{{tipText | i18n}}</span>\n    </div>\n    \x3c!--\n      List\n    --\x3e\n    <div class="as-list">\n      \x3c!--Show product in loop--\x3e\n      <table>\n        <thead>\n          <tr>\n            <th><span>{{\'pay-checkout-it-name\'     | i18n}}</span></th>\n            <th>\n              <u>{{CurrencyChar}}</u>\n              <span>{{\'pay-checkout-it-price\'      | i18n}}</span>\n            </th>\n            <th><span>{{\'pay-checkout-it-amount\'   | i18n}}</span></th>\n            <th><span>{{\'pay-checkout-it-subtotal\' | i18n}}</span></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr\n            v-for="it of TheItems"\n              class="as-item">\n              <td class="it-thumb">\n                <a\n                  v-if="it.thumbSrc" \n                    @click.prevent="OnShowProduct(it)" \n                    :href="it.href">\n                    <img :src="it.thumbSrc"/>\n                </a>\n                <div class="it-title">\n                  <a :href="it.href"\n                    @click.prevent="OnShowProduct(it)">{{it.title}}</a>\n                </div>\n              </td>\n              <td class="it-price">\n                <em>{{CurrencyChar}}{{it.price}}</em>\n              </td>\n              <td class="it-amount">\n                <span>{{it.amount}}</span>\n              </td>\n              <td class="it-subtotal">\n                <em>{{CurrencyChar}}{{it.subtotal}}</em>\n              </td>\n            </tr>\n          </tbody>\n      </table>\n    </div> \x3c!--~as-list--\x3e\n    \x3c!--\n      Summary\n    --\x3e\n    <div class="as-summary">\n      <div class="at-left">\n        \x3c!--Maybe Coupon here--\x3e\n      </div>\n      <div class="at-right">\n        <div class="as-total">\n          <span>Total:</span>\n          <em>{{CurrencyChar}}{{TotalFee}}</em>\n        </div>\n      </div>\n    </div>\n    \x3c!--\n      Address\n    --\x3e\n    <div\n      v-if="\'A\' == orderType"\n        class="as-address">\n        \x3c!--\n          Current Address\n        --\x3e\n        <div class="as-addr-current">\n          <WebTileAddress \n            :value="currentAddr"\n            title="订单收货地址"\n            :countries="countries"\n            :auto-highlight="false"\n            :can="{remove:0,edit:0,default:0,choose:1,add:1}"\n            :blank-as="{text:\'i18n:order-shipaddr-nil\',icon:\'im-location\'}"\n            @choose="OnChooseAddr"\n            @add="OnAddAddr"/>\n        </div>\n        \x3c!--\n          Address can-list\n        --\x3e\n        <transition name="ti-trans-fade">\n          <div\n            v-if="showAddrCanList"\n              class="as-can-list">\n              <WebShelfList\n                v-bind="AddrCanList"\n                @select="OnSelectAddr"/>\n              <div\n                class="as-can-hide">\n                <a @click.left="OnHideAddrCanList">\n                  <i class="fas fa-angle-double-up"></i><br>\n                  <span>{{\'i18n:close\'|i18n}}</span></a>\n                </div>\n          </div>\n        </transition>\n    </div>\n  </template>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        showAddrCanList: !1
      };
    },
    props: {
      currentAddr: {
        type: Object,
        "default": void 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      isEmpty: function isEmpty() {
        return _.isEmpty(this.items);
      },
      CurrencyChar: function CurrencyChar() {
        return Ti.Bank.getCurrencyChar(this.currency);
      },
      TheItems: function TheItems() {
        var t = [];
        return _.forEach(this.items, function (e) {
          t.push(_objectSpread({}, e, {
            subtotal: Ti.Num.precise(e.price * e.amount)
          }));
        }), t;
      },
      TotalFee: function TotalFee() {
        var t = 0;
        return _.forEach(this.TheItems, function (e) {
          return t += e.price * e.amount;
        }), Ti.Num.precise(t);
      },
      AddrCanList: function AddrCanList() {
        return {
          data: this.addresses,
          blankAs: {
            className: "ti-fill-parent",
            icon: "fas-map",
            text: "i18n:address-empty-list"
          },
          comType: "WebTileAddress",
          comConf: {
            value: "=..",
            countries: this.countries,
            can: {
              remove: !1,
              edit: !1,
              select: !1,
              "default": !1
            },
            selectable: !0,
            currentId: _.get(this.currentAddr, "id")
          }
        };
      }
    },
    methods: {
      OnShowProduct: function OnShowProduct() {
        var _ref105 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref105.id;

        this.$notify("show:product", t);
      },
      OnChooseAddr: function OnChooseAddr() {
        this.showAddrCanList = !0;
      },
      OnHideAddrCanList: function OnHideAddrCanList() {
        this.showAddrCanList = !1;
      },
      OnAddAddr: function OnAddAddr() {
        this.$notify("add:address");
      },
      OnSelectAddr: function OnSelectAddr(t) {
        this.showAddrCanList = !1, this.$emit("change", {
          address: t
        });
      }
    }
  };
  Ti.Preload("ti/com/web/pay/checkout/web-pay-checkout.mjs", t);
}(), Ti.Preload("ti/com/web/pay/checkout/_com.json", {
  name: "web-pay-checkout",
  globally: !0,
  template: "./web-pay-checkout.html",
  props: "./web-pay-checkout-props.mjs",
  mixins: ["./web-pay-checkout.mjs"]
}), function () {
  var t = {
    options: {
      type: Array,
      "default": function _default() {
        return [{
          icon: "/gu/rs/ti/icons/png/wxpay256.png",
          value: "wx.qrcode",
          text: "i18n:pay-wx"
        }, {
          icon: "/gu/rs/ti/icons/png/alipay256.png",
          value: "zfb.qrcode",
          text: "i18n:pay-zfb"
        }];
      }
    }
  };
  Ti.Preload("ti/com/web/pay/choose/web-pay-choose-props.mjs", t);
}(), Ti.Preload("ti/com/web/pay/choose/web-pay-choose.html", '<div class="web-pay-choose"\n  :class="TopClass">\n  \x3c!--Title--\x3e\n  <div class="as-title">{{\'pay-step-choose-tip\'|i18n}}</div>\n  \x3c!--Choosing--\x3e\n  <div class="as-options">\n    <div\n      v-for="op in options"\n        class="as-pay-type"\n        :class="getOptionClass(op)"\n        @click.left="OnChooseOption(op)">\n        <ti-icon :value="op.icon"/>\n        <div class="as-text">{{op.text | i18n}}</div>\n    </div>\n  </div>\n  <div class="as-tip">{{PayTypeText}}</div>\n</div>'), function () {
  var t = {
    props: {
      value: {
        type: String,
        "default": null
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      hasPayType: function hasPayType() {
        return Ti.Bank.isValidPayType(this.value);
      },
      PayTypeText: function PayTypeText() {
        return Ti.Bank.getPayTypeChooseI18nText(this.value, {
          text: "pay-step-choose-tip2",
          nil: "pay-step-choose-nil"
        });
      }
    },
    methods: {
      OnChooseOption: function OnChooseOption() {
        var _ref106 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref106.value;

        this.$emit("change", {
          payType: t
        });
      },
      getOptionClass: function getOptionClass(t) {
        return t.value == this.value ? "is-enabled" : "is-disabled";
      }
    },
    mounted: function mounted() {
      this.$notify("change:title", "pay-step-choose-title2");
    }
  };
  Ti.Preload("ti/com/web/pay/choose/web-pay-choose.mjs", t);
}(), Ti.Preload("ti/com/web/pay/choose/_com.json", {
  name: "web-pay-choose",
  globally: !0,
  template: "./web-pay-choose.html",
  props: "./web-pay-choose-props.mjs",
  mixins: ["./web-pay-choose.mjs"]
}), function () {
  var t = {
    waitIcon: {
      type: String,
      "default": "fas-spinner fa-spin"
    },
    waitText: {
      type: String,
      "default": "i18n:loading"
    },
    okIcon: {
      type: String,
      "default": "im-check-mark-circle"
    },
    okText: {
      type: String,
      "default": "i18n:pay-re-ok"
    },
    okLinks: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    failIcon: {
      type: String,
      "default": "im-warning"
    },
    failText: {
      type: String,
      "default": "i18n:pay-re-fail"
    },
    failLinks: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    doneLinks: {
      type: Array,
      "default": function _default() {
        return [];
      }
    }
  };
  Ti.Preload("ti/com/web/pay/done/web-pay-done-props.mjs", t);
}(), Ti.Preload("ti/com/web/pay/done/web-pay-done.html", '<div class="web-pay-done"\n  :class="TopClass">\n  \x3c!--\n    Icon\n  --\x3e\n  <div class="as-icon"><ti-icon :value="TheIcon"/></div>\n  \x3c!--\n    Text\n  --\x3e\n  <div class="as-text">{{TheText | i18n}}</div>\n  \x3c!--\n    errMsg\n  --\x3e\n  <div\n    v-if="errMsg" \n      class="as-error">{{errMsg | i18n}}</div>\n  \x3c!--\n    Links\n  --\x3e\n  <div\n    v-if="hasLinks"\n      class="as-links">\n      <ul>\n        <li\n          v-for="li in TheLinks">\n          <a\n            class="link-item"\n            :href="li.href"\n            @click.left.prevent="OnClickLink(li)">\n            <ti-icon\n              v-if="li.icon"\n                :value="li.icon"/>\n            <span class="it-text">{{li.text | i18n}}</span>\n          </a>\n        </li>\n      </ul>\n  </div>\n</div>'), function () {
  var t = {
    props: {
      payOk: {
        type: Boolean,
        "default": void 0
      },
      errMsg: {
        type: String,
        "default": void 0
      },
      orderId: {
        type: String,
        "default": void 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-wait": this.isWait,
          "is-ok": !this.isWait && this.payOk,
          "is-fail": !this.isWait && !this.payOk
        });
      },
      isWait: function isWait() {
        return _.isUndefined(this.payOk);
      },
      TheIcon: function TheIcon() {
        return _.isUndefined(this.payOk) ? this.waitIcon : this.payOk ? this.okIcon : this.failIcon;
      },
      TheText: function TheText() {
        return _.isUndefined(this.payOk) ? this.waitText : this.payOk ? this.okText : this.failText;
      },
      TheLinks: function TheLinks() {
        var _this196 = this;

        var t = _.cloneDeep(this.payOk ? _.concat(this.okLinks, this.doneLinks) : _.concat(this.failLinks, this.doneLinks)),
            e = [];

        return _.forEach(t, function (t) {
          e.push(_.defaults(Ti.Util.explainObj(_this196, t), {
            icon: "zmdi-chevron-right"
          }));
        }), e;
      },
      hasLinks: function hasLinks() {
        return !_.isEmpty(this.TheLinks);
      }
    },
    methods: {
      OnClickLink: function OnClickLink() {
        var _ref107 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref107.path,
            e = _ref107.params;

        t && this.$notify("nav:to", {
          value: t,
          params: e
        });
      }
    }
  };
  Ti.Preload("ti/com/web/pay/done/web-pay-done.mjs", t);
}(), Ti.Preload("ti/com/web/pay/done/_com.json", {
  name: "web-pay-done",
  globally: !0,
  template: "./web-pay-done.html",
  props: "./web-pay-done-props.mjs",
  mixins: ["./web-pay-done.mjs"]
}), function () {
  var t = {
    watchUser: {
      type: String,
      "default": null
    },
    qrcodeSize: {
      type: [String, Number],
      "default": 200
    },
    checkPaymentInterval: {
      type: Number,
      "default": 3e3
    },
    fetchOrder: {
      type: Function,
      "default": void 0
    },
    payOrder: {
      type: Function,
      "default": void 0
    },
    createOrder: {
      type: Function,
      "default": void 0
    },
    checkOrder: {
      type: Function,
      "default": void 0
    },
    returnUrl: {
      type: String,
      "default": void 0
    },
    orderTitle: {
      type: String,
      "default": void 0
    },
    orderType: {
      type: String,
      "default": "A"
    }
  };
  Ti.Preload("ti/com/web/pay/proceed/web-pay-proceed-props.mjs", t);
}(), Ti.Preload("ti/com/web/pay/proceed/web-pay-proceed.html", '<div class="web-pay-proceed">\n  \x3c!--\n    Wait for create order\n  --\x3e\n  <div \n    v-if="!hasOrder || !Payment"\n      class="as-nil-order">\n      <ti-loading\n        class="as-big"\n        :text="OrderLoadText"/>\n  </div>\n  \x3c!--\n    Show payment\n  --\x3e\n  <template\n    v-else>\n    \x3c!--QRCODE--\x3e\n    <div v-if="isQRCODE"\n      class="as-main is-qrcode">\n      <img \n        :style="QrcodeImageStyle"\n        :src="PaymentDataAsQrcodeUrl">\n    </div>\n    \x3c!--IFRAME--\x3e\n    <div v-else-if="isIFRAME"\n      class="as-main is-iframe">\n      <iframe \n        frameborder="0" \n        scrolling="no"\n        :src="PaymentData"></iframe>\n    </div>\n    \x3c!--\n      JSON\n    --\x3e\n    <div v-else-if="isJSON"\n      class="as-main is-json">\n      \x3c!--The self/approve/update/capture links for PayPal--\x3e\n      <div\n        v-if="\'paypal\' == payType"\n          class="by-paypal">\n        \x3c!--Logo--\x3e\n        <div class="paypal-logo">\n          <a \n            :href="myPaypalUrl"\n            target="_blank"><i class="fab fa-paypal"></i></a>\n        </div>\n        <div class="paypal-tip">{{\'paypal-approve-tip\'|i18n}}</div>\n      </div> \x3c!--End PayPal--\x3e\n    </div>\n    \x3c!--\n      Others\n    --\x3e\n    <div\n      v-else\n        class="as-main">{{myOrder}}</div>\n    \x3c!--\n      Check Button\n    --\x3e\n    <div class="as-check">\n      <div class="ti-btn is-huge"\n        @click.left="OnClickCheckBtn">\n        <ti-icon class="as-icon" :value="CheckBtnIcon"/>\n        <div class="as-text">{{CheckBtnText|i18n}}</div>\n      </div>\n    </div>\n  </template>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        __WS: null,
        myOrder: null,
        isChecking: !1,
        myPaypalUrl: ""
      };
    },
    props: {
      payType: {
        type: String,
        "default": null
      },
      items: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      orderId: {
        type: String,
        "default": void 0
      },
      payOk: {
        type: Boolean,
        "default": void 0
      },
      currency: {
        type: String,
        "default": "RMB"
      },
      address: {
        type: Object,
        "default": void 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "has-paytype": this.hasPayType,
          "nil-paytype": !this.hasPayType
        }, "is-".concat(this.PayTypeName));
      },
      hasPayType: function hasPayType() {
        return Ti.Bank.isValidPayType(this.payType);
      },
      PayTypeName: function PayTypeName() {
        if (_.isString(this.payType)) return this.payType.replace(".", "-");
      },
      PayTypeText: function PayTypeText() {
        return Ti.Bank.getPayTypeChooseI18nText(this.payType, {
          text: "pay-step-proceed-tip",
          nil: "pay-step-proceed-nil"
        });
      },
      OrderLoadText: function OrderLoadText() {
        return this.orderId ? "pay-step-proceed-fetch-order" : "pay-step-proceed-create-order";
      },
      hasOrder: function hasOrder() {
        return !_.isEmpty(this.myOrder);
      },
      Payment: function Payment() {
        return _.get(this.myOrder, "pay_re");
      },
      PaymentId: function PaymentId() {
        return _.get(this.Payment, "payObjId");
      },
      PaymentStatus: function PaymentStatus() {
        return _.get(this.Payment, "status");
      },
      PaymentData: function PaymentData() {
        return _.get(this.Payment, "data");
      },
      PaymentDataType: function PaymentDataType() {
        return _.get(this.Payment, "dataType");
      },
      isPaymentCreated: function isPaymentCreated() {
        return !!_.get(this.Payment, "payObjId");
      },
      isQRCODE: function isQRCODE() {
        return "QRCODE" == this.PaymentDataType;
      },
      isIFRAME: function isIFRAME() {
        return "IFRAME" == this.PaymentDataType;
      },
      isLINK: function isLINK() {
        return "LINK" == this.PaymentDataType;
      },
      isJSON: function isJSON() {
        return "JSON" == this.PaymentDataType;
      },
      isTEXT: function isTEXT() {
        return "TEXT" == this.PaymentDataType;
      },
      PaymentDataAsQrcodeUrl: function PaymentDataAsQrcodeUrl() {
        return "/gu/qrcode?d=".concat(this.PaymentData, "&s=").concat(this.qrcodeSize, "&_=").concat(Date.now());
      },
      PayPalLinksMap: function PayPalLinksMap() {
        var t = {};
        return this.hasOrder && "paypal" == this.myOrder.pay_tp && _.forEach(this.PaymentData.links, function (e) {
          t[e.rel] = e;
        }), t;
      },
      QrcodeImageStyle: function QrcodeImageStyle() {
        return Ti.Css.toStyleRem100({
          width: this.qrcodeSize,
          height: this.qrcodeSize
        });
      },
      CheckBtnIcon: function CheckBtnIcon() {
        return this.isChecking ? "fas-spinner fa-spin" : "zmdi-assignment-check";
      },
      CheckBtnText: function CheckBtnText() {
        return this.isChecking ? "i18n:pay-proceed-ing" : "i18n:pay-proceed-check";
      }
    },
    methods: {
      OnClickCheckBtn: function OnClickCheckBtn() {
        var _this197 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee94() {
          return regeneratorRuntime.wrap(function _callee94$(_context94) {
            while (1) {
              switch (_context94.prev = _context94.next) {
                case 0:
                  _context94.t0 = _.isFunction(_this197.checkOrder);

                  if (!_context94.t0) {
                    _context94.next = 7;
                    break;
                  }

                  _this197.isChecking = !0;
                  _context94.next = 5;
                  return _this197.checkOrder(_this197.orderId);

                case 5:
                  _this197.myOrder = _context94.sent;
                  _this197.isChecking = !1;

                case 7:
                case "end":
                  return _context94.stop();
              }
            }
          }, _callee94);
        }))();
      },
      checkPayment: function checkPayment() {
        var _this198 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee96() {
          return regeneratorRuntime.wrap(function _callee96$(_context96) {
            while (1) {
              switch (_context96.prev = _context96.next) {
                case 0:
                  _this198.Payment ? _this198.tryEvalPayPal() : _.delay( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee95() {
                    return regeneratorRuntime.wrap(function _callee95$(_context95) {
                      while (1) {
                        switch (_context95.prev = _context95.next) {
                          case 0:
                            _context95.next = 2;
                            return _this198.fetchOrder(_this198.orderId);

                          case 2:
                            _this198.myOrder = _context95.sent;

                            _this198.$nextTick(function () {
                              _this198.checkPayment();
                            });

                          case 4:
                          case "end":
                            return _context95.stop();
                        }
                      }
                    }, _callee95);
                  })), _this198.checkPaymentInterval);

                case 1:
                case "end":
                  return _context96.stop();
              }
            }
          }, _callee96);
        }))();
      },
      checkOrCreateOrder: function checkOrCreateOrder() {
        var _this199 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee97() {
          var _t138, e;

          return regeneratorRuntime.wrap(function _callee97$(_context97) {
            while (1) {
              switch (_context97.prev = _context97.next) {
                case 0:
                  if (!_this199.hasOrder) {
                    _context97.next = 4;
                    break;
                  }

                  _context97.next = 3;
                  return _this199.checkPayment();

                case 3:
                  return _context97.abrupt("return", _context97.sent);

                case 4:
                  if (!_this199.orderId) {
                    _context97.next = 12;
                    break;
                  }

                  _context97.t0 = _.isFunction(_this199.fetchOrder);

                  if (!_context97.t0) {
                    _context97.next = 10;
                    break;
                  }

                  _context97.next = 9;
                  return _this199.payOrder(_this199.orderId, _this199.payType);

                case 9:
                  _this199.myOrder = _context97.sent;

                case 10:
                  _context97.next = 18;
                  break;

                case 12:
                  if (!_.isFunction(_this199.createOrder)) {
                    _context97.next = 18;
                    break;
                  }

                  _t138 = _.map(_this199.items, function (t) {
                    return {
                      id: t.id,
                      amount: t.amount || 1,
                      cate: t.cate,
                      title: t.title,
                      price: t.price
                    };
                  });
                  _context97.next = 16;
                  return _this199.createOrder({
                    payType: _this199.payType,
                    items: _t138,
                    orderType: _this199.orderType,
                    orderTitle: _this199.orderTitle,
                    address: _this199.address,
                    fail: function fail(t) {
                      _this199.$emit("change", {
                        payOk: !1,
                        errMsg: t
                      }), _this199.$notify("step:change", "@next");
                    }
                  });

                case 16:
                  e = _context97.sent;
                  _this199.$emit("change", {
                    orderId: _.get(e, "id")
                  }), _this199.myOrder = e;

                case 18:
                  _context97.next = 20;
                  return _this199.checkPayment();

                case 20:
                  return _context97.abrupt("return", _context97.sent);

                case 21:
                case "end":
                  return _context97.stop();
              }
            }
          }, _callee97);
        }))();
      },
      tryEvalPayPal: function tryEvalPayPal() {
        var _this200 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee98() {
          var _t139, e, i;

          return regeneratorRuntime.wrap(function _callee98$(_context98) {
            while (1) {
              switch (_context98.prev = _context98.next) {
                case 0:
                  if (!("paypal" == _this200.payType && _this200.isPaymentCreated)) {
                    _context98.next = 7;
                    break;
                  }

                  _t139 = _.get(_this200.PayPalLinksMap, "approve.href"), e = Ti.Util.parseHref(_t139), i = "".concat(e.protocol, "://").concat(e.host).concat(e.path);
                  console.log("🤳", {
                    href: _t139,
                    link: e,
                    url: i
                  });
                  _this200.returnUrl && (e.params.returnurl = _this200.returnUrl);
                  _this200.myPaypalUrl = e.toString();
                  _context98.next = 7;
                  return Ti.Be.Open(i, {
                    params: e.params,
                    delay: 1e3
                  });

                case 7:
                case "end":
                  return _context98.stop();
              }
            }
          }, _callee98);
        }))();
      },
      watchPaymentChanged: function watchPaymentChanged() {
        var _this201 = this;

        !this.__WS && this.watchUser && this.hasOrder && this.isPaymentCreated && (console.log("【🦅】watchPaymentChanged"), this.__WS = Ti.Websocket.listenRemote({
          watchTo: {
            method: "watch",
            user: this.watchUser,
            match: {
              id: this.PaymentId
            }
          },
          received: function received(t) {
            console.log("【🦅】websocket", t), _this201.OnClickCheckBtn();
          },
          closed: function closed() {
            _this201.unwatchPaymentChanged();
          }
        }));
      },
      unwatchPaymentChanged: function unwatchPaymentChanged() {
        this.__WS && this.__WS.close();
      }
    },
    watch: {
      PaymentStatus: function PaymentStatus(t) {
        "FAIL" == t ? (this.$emit("change", {
          payOk: !1,
          errMsg: JSON.stringify(this.PaymentData)
        }), this.$notify("step:change", "@next")) : "OK" == t && (this.$emit("change", {
          payOk: !0
        }), this.$notify("step:change", "@next"));
      }
    },
    mounted: function mounted() {
      var _this202 = this;

      this.$notify("change:title", this.PayTypeText), this.$nextTick(function () {
        _this202.checkOrCreateOrder();
      });
    },
    beforeDestroy: function beforeDestroy() {
      this.unwatchPaymentChanged();
    }
  };
  Ti.Preload("ti/com/web/pay/proceed/web-pay-proceed.mjs", t);
}(), Ti.Preload("ti/com/web/pay/proceed/_com.json", {
  name: "web-pay-proceed",
  globally: !0,
  template: "./web-pay-proceed.html",
  props: "./web-pay-proceed-props.mjs",
  mixins: ["./web-pay-proceed.mjs"]
}), Ti.Preload("ti/com/web/pay/web-pay.html", '<div class="web-pay">\n  <ti-wizard\n    :current="0"\n    :title="title"\n    :steps="PaySteps"\n    :value="myPayment"\n    can-click-head-item="passed"\n    @change="OnChange"/>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myPayment: {
          payType: null,
          orderId: void 0,
          payOk: void 0,
          errMsg: null,
          address: null
        }
      };
    },
    props: {
      title: {
        type: String,
        "default": "i18n:pay-title"
      },
      payType: {
        type: String,
        "default": null
      },
      payTypeOptions: {
        type: Array,
        "default": void 0
      },
      defaultAddr: {
        type: Object,
        "default": void 0
      }
    },
    computed: {
      PaySteps: function PaySteps() {
        var _this203 = this;

        return [{
          title: "i18n:pay-step-checkout-title",
          next: {
            enabled: function enabled() {
              return !_.isEmpty(_this203.items) && ("A" != _this203.orderType || !_.isEmpty(_this203.myPayment.address));
            }
          },
          comType: "WebPayCheckout",
          comConf: {
            tipIcon: this.tipIcon,
            tipText: this.tipText,
            items: this.items,
            currency: this.currency,
            orderType: this.orderType,
            addresses: this.addresses,
            currentAddr: this.myPayment.address,
            countries: this.countries
          }
        }, {
          title: "i18n:pay-step-choose-title",
          prev: !0,
          next: {
            enabled: {
              payType: "notBlank"
            }
          },
          comType: "WebPayChoose",
          comConf: {
            options: this.options,
            value: "=payType"
          }
        }, {
          title: "i18n:pay-step-proceed-title",
          prev: !0,
          next: {
            enabled: {
              payOk: "isBoolean",
              orderId: "notBlank"
            }
          },
          comType: "WebPayProceed",
          comConf: {
            items: this.items,
            currency: this.currency,
            payType: "=payType",
            orderId: "=orderId",
            payOk: "=payOk",
            address: "=address",
            checkPaymentInterval: this.checkPaymentInterval,
            orderType: this.orderType,
            orderTitle: this.orderTitle,
            watchUser: this.watchUser,
            qrcodeSize: this.qrcodeSize,
            fetchOrder: this.fetchOrder,
            payOrder: this.payOrder,
            createOrder: this.createOrder,
            checkOrder: this.checkOrder,
            returnUrl: this.returnUrl
          }
        }, {
          title: "pay-step-done-title",
          comType: "WebPayDone",
          comConf: {
            payOk: "=payOk",
            errMsg: "=errMsg",
            orderId: "=orderId",
            okIcon: this.okIcon,
            okText: this.okText,
            okLinks: this.okLinks,
            failIcon: this.failIcon,
            failText: this.failText,
            failLinks: this.failLinks,
            doneLinks: this.doneLinks
          }
        }];
      }
    },
    methods: {
      OnChange: function OnChange(t) {
        _.assign(this.myPayment, t);
      }
    },
    watch: {
      payType: {
        handler: function handler() {
          this.myPayment.payType = this.payType;
        },
        immediate: !0
      },
      defaultAddr: {
        handler: function handler(t) {
          t && !this.myPayment.address && (this.myPayment.address = _.cloneDeep(t));
        },
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/web/pay/web-pay.mjs", t);
}(), Ti.Preload("ti/com/web/pay/_com.json", {
  name: "web-pay",
  globally: !0,
  template: "./web-pay.html",
  props: ["@com:web/pay/checkout/web-pay-checkout-props.mjs", "@com:web/pay/choose/web-pay-choose-props.mjs", "@com:web/pay/proceed/web-pay-proceed-props.mjs", "@com:web/pay/done/web-pay-done-props.mjs"],
  mixins: ["./web-pay.mjs"],
  components: ["@com:ti/wizard", "@com:web/pay/checkout", "@com:web/pay/choose", "@com:web/pay/proceed", "@com:web/pay/done"]
}), Ti.Preload("ti/com/web/shelf/free/web-shelf-free.html", '<div class="web-shelf-free"\n  :class="TopClass"\n  :style="TopStyle">\n  \x3c!--=============================--\x3e\n  <div class="free-main"\n    :style="MainStyle">\n    <div \n      v-for="it in itemList"\n        :key="it.key"\n        class="free-item"\n        :class="it.className"\n        :style="it.style">\n        <component\n          :is="it.comType"\n          v-bind="it.comConf"/>\n    </div>\n  </div>\n  \x3c!--=============================--\x3e\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        itemStyles: {},
        itemList: []
      };
    },
    props: {
      preview: {
        type: Object,
        "default": void 0
      },
      items: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      background: {
        type: String,
        "default": void 0
      },
      color: {
        type: String,
        "default": void 0
      },
      width: {
        type: [String, Number],
        "default": void 0
      },
      height: {
        type: [String, Number],
        "default": void 0
      },
      mainBackground: {
        type: String,
        "default": void 0
      },
      mainWidth: {
        type: [String, Number],
        "default": void 0
      },
      mainHeight: {
        type: [String, Number],
        "default": void 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TopStyle: function TopStyle() {
        return Ti.Css.toStyle(_objectSpread({
          width: this.width,
          height: this.height,
          color: this.color
        }, this.evalBackgroundStyle(this.background)));
      },
      MainStyle: function MainStyle() {
        return Ti.Css.toStyle(_objectSpread({
          width: this.mainWidth,
          height: this.mainHeight
        }, this.evalBackgroundStyle(this.mainBackground)));
      }
    },
    methods: {
      evalItemList: function evalItemList() {
        var _this204 = this;

        if (!_.isArray(this.items)) return void (this.itemList = []);
        var t = this,
            e = [];
        _.forEach(this.items, function (i, n) {
          var a = ["at-".concat(i.position || "free"), "i-".concat(n)];
          i.className && a.push(i.className);
          var s = "It-".concat(n),
              o = Ti.Css.toStyle(i.style),
              l = Ti.Css.toStyle(i.appear);
          _.isEmpty(l) || _.delay(function () {
            var e = _.cloneDeep(_this204.itemList[n]);

            e.style = o, t.$set(_this204.itemList, n, e);
          }, 0), e.push({
            key: s,
            index: n,
            className: Ti.Css.mergeClassName(a),
            style: _.assign({}, o, l),
            comType: i.comType || "WebTextRaw",
            comConf: i.comConf
          });
        }), this.itemList = e;
      },
      evalBackgroundStyle: function evalBackgroundStyle(t) {
        return _.isEmpty(t) ? {} : _.isObject(t) ? {
          backgroundImage: "url(\"".concat(Ti.WWW.evalObjPreviewSrc(t, this.preview), "\")")
        } : /^(#[0-9A-F]{3,6}|rgba?\([0-9, ]+\))$/.test(t) ? {
          backgroundColor: t
        } : {
          backgroundImage: "url(\"".concat(t, "\")")
        };
      }
    },
    watch: {
      items: {
        handler: function handler() {
          this.evalItemList();
        },
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/web/shelf/free/web-shelf-free.mjs", t);
}(), Ti.Preload("ti/com/web/shelf/free/_com.json", {
  name: "web-shelf-free",
  globally: !0,
  template: "./web-shelf-free.html",
  mixins: ["./web-shelf-free.mjs"]
}), Ti.Preload("ti/com/web/shelf/list/web-shelf-list.html", '<div class="web-shelf-list"\n  :class="TopClass">\n  \x3c!--\n    Blank\n  --\x3e\n  <template \n    v-if="isEmpty">\n    <ti-loading\n      v-if="showBlank"\n        class="as-big"\n        v-bind="blankAs"/>\n  </template>\n  \x3c!--\n    Each Items\n  --\x3e\n  <template v-else>\n    <div\n      v-for="it in ItemList"\n        class="list-item"\n        :key="it.key">\n        <component\n          :is="it.comType"\n          v-bind="it.comConf"/>    \n    </div>\n  </template>\n</div>'), function () {
  var t = {
    props: {
      data: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      comType: {
        type: String,
        "default": "ti-label"
      },
      comConf: {
        type: [Object, String],
        "default": function _default() {
          return {
            value: "=.."
          };
        }
      },
      blankAs: {
        type: [Object, Boolean],
        "default": function _default() {
          return {
            text: "i18n:empty",
            icon: "fas-box-open"
          };
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      ItemList: function ItemList() {
        if (!_.isArray(this.data)) return [];
        var t = [];

        for (var e = 0; e < this.data.length; e++) {
          var i = this.data[e],
              n = Ti.Util.explainObj(i, this.comConf);
          t.push({
            key: "It-".concat(e),
            comType: this.comType,
            comConf: n
          });
        }

        return t;
      },
      showBlank: function showBlank() {
        return !!this.blankAs;
      },
      isEmpty: function isEmpty() {
        return _.isEmpty(this.ItemList);
      }
    },
    methods: {}
  };
  Ti.Preload("ti/com/web/shelf/list/web-shelf-list.mjs", t);
}(), Ti.Preload("ti/com/web/shelf/list/_com.json", {
  name: "web-shelf-list",
  globally: !0,
  template: "./web-shelf-list.html",
  mixins: ["./web-shelf-list.mjs"]
}), Ti.Preload("ti/com/web/shelf/scroller/web-shelf-scroller.html", '<div class="web-shelf-scroller"\n  :class="TopClass">\n  \x3c!--=======================================--\x3e\n  <div class="scroll-btn at-left" :class="BtnLeftClass">\n    <span @click.left="OnScrollLeft"><ti-icon :value="iconLeft"/></span>\n  </div>\n  \x3c!--=======================================--\x3e\n  <div class="scroller-outer" ref="outer">\n    \x3c!--=====================================--\x3e\n    <div class="scroller-inner" ref="inner"\n      :style="InnerStyle">\n      \x3c!--===================================--\x3e\n      <div\n        v-for="it in ItemList"\n          class="scroller-tile"\n          :key="it.key"\n          :style="ItemStyle"\n          :class="it.className"\n          @mouseenter="OnEnterTile(it.rawData)"\n          @mouseleave="OnLeaveTile(it.rawData)">\n          <component\n            :is="it.comType"\n            v-bind="it.comConf"/>\n      </div>\n      \x3c!--===================================--\x3e\n    </div>\n    \x3c!--=====================================--\x3e\n  </div>\n  \x3c!--=======================================--\x3e\n  <div class="scroll-btn at-right" :class="BtnRightClass">\n    <span @click.left="OnScrollRight"><ti-icon :value="iconRight"/></span>\n  </div>\n  \x3c!--=======================================--\x3e\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myScrollLeft: 0,
        myMaxScroll: 0,
        myScrollWidth: 0
      };
    },
    props: {
      data: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      cols: {
        type: Number,
        "default": 4
      },
      itemWidth: {
        type: [String, Number],
        "default": void 0
      },
      comType: {
        type: String,
        "default": "ti-label"
      },
      comConf: {
        type: [Object, String],
        "default": function _default() {
          return {
            value: "=.."
          };
        }
      },
      iconLeft: {
        type: String,
        "default": "zmdi-chevron-left"
      },
      iconRight: {
        type: String,
        "default": "zmdi-chevron-right"
      },
      enterItem: {
        type: [String, Function],
        "default": void 0
      },
      leaveItem: {
        type: [String, Function],
        "default": void 0
      },
      keepScrolling: {
        type: Boolean,
        "default": !1
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      InnerStyle: function InnerStyle() {
        return {
          left: Ti.Css.toSize(this.myScrollLeft)
        };
      },
      ItemStyle: function ItemStyle() {
        return Ti.Util.isNil(this.itemWidth) ? this.cols > 0 ? {
          width: Ti.Types.toPercent(1 / this.cols)
        } : void 0 : Ti.Css.toSizeRem100({
          width: this.itemWidth
        });
      },
      isLeftEnabled: function isLeftEnabled() {
        return this.myScrollLeft < 0;
      },
      isRightEnabled: function isRightEnabled() {
        return this.myScrollLeft + this.myMaxScroll > this.myScrollWidth;
      },
      BtnLeftClass: function BtnLeftClass() {
        return {
          "is-enabled": this.isLeftEnabled,
          "is-disabled": !this.isLeftEnabled
        };
      },
      BtnRightClass: function BtnRightClass() {
        return {
          "is-enabled": this.isRightEnabled,
          "is-disabled": !this.isRightEnabled
        };
      },
      ItemList: function ItemList() {
        if (!_.isArray(this.data)) return [];
        var t = [];

        for (var e = 0; e < this.data.length; e++) {
          var i = this.data[e],
              n = Ti.Util.explainObj(i, this.comConf);
          t.push({
            key: "It-".concat(e),
            className: i.className,
            rawData: i,
            comType: this.comType,
            comConf: n
          });
        }

        return t;
      }
    },
    methods: {
      OnScrollLeft: function OnScrollLeft() {
        if (!this.isLeftEnabled) return;
        var t = Math.abs(this.myScrollLeft);
        t = Math.min(this.myScrollWidth, t), this.myScrollLeft += t;
      },
      OnScrollRight: function OnScrollRight() {
        if (!this.isRightEnabled) return;
        var t = this.myMaxScroll + this.myScrollLeft - this.myScrollWidth,
            e = Math.min(this.myScrollWidth, t);
        this.myScrollLeft -= e;
      },
      OnEnterTile: function OnEnterTile(t) {
        _.isFunction(this.enterItem) ? this.enterItem(t) : _.isString(this.enterItem) && this.$notify(this.enterItem, t);
      },
      OnLeaveTile: function OnLeaveTile(t) {
        _.isFunction(this.leaveItem) ? this.leaveItem(t) : _.isString(this.leaveItem) && this.$notify(this.leaveItem, t);
      },
      evalScrolling: function evalScrolling() {
        this.myMaxScroll = this.$refs.inner.scrollWidth, this.myScrollWidth = this.$refs.inner.getBoundingClientRect().width, this.myScrollLeft = 0;
      }
    },
    watch: {
      data: {
        handler: function handler(t, e) {
          var _this205 = this;

          var i = _.size(t),
              n = _.size(e);

          this.keepScrolling && this.myScrollWidth && i == n || this.$nextTick(function () {
            _this205.evalScrolling();
          });
        },
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/web/shelf/scroller/web-shelf-scroller.mjs", t);
}(), Ti.Preload("ti/com/web/shelf/scroller/_com.json", {
  name: "web-shelf-scroller",
  globally: !0,
  template: "./web-shelf-scroller.html",
  mixins: ["./web-shelf-scroller.mjs"]
}), Ti.Preload("ti/com/web/shelf/slide/web-shelf-slide.html", '<div class="web-shelf-slide"\n  :class="TopClass"\n  :style="TopStyle">\n  \x3c!--\n    Main\n  --\x3e\n  <div class="as-main">\n    <div\n      v-for="it in ItemList"\n        :key="it.key"\n        class="as-con"\n        :class="it.className">\n        <component :is="it.comType" v-bind="it.comConf"/>\n    </div>\n  </div>\n  \x3c!--\n    Item List\n  --\x3e\n  <div class="as-indicator">\n    <div\n      v-for="it in ItemList"\n        class="as-item"\n        :class="it.className"\n        @click.left.stop="OnClickIndicator(it)">\n    </div>\n  </div>\n  \x3c!--\n    Btn: Prev\n  --\x3e\n  <div class="as-btn is-prev" @click.left="prevItem">\n    <i class="im im-angle-left"></i>\n  </div>\n  \x3c!--\n    Btn: Next\n  --\x3e\n  <div class="as-btn is-next" @click.left="nextItem">\n    <i class="im im-angle-right"></i>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myCurrentIndex: 0
      };
    },
    props: {
      data: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      comType: {
        type: String,
        "default": "ti-label"
      },
      comConf: {
        type: [Object, String],
        "default": function _default() {
          return {
            value: "=.."
          };
        }
      },
      interval: {
        type: Number,
        "default": 0
      },
      idBy: {
        type: String,
        "default": "id"
      },
      width: {
        type: [Number, String],
        "default": void 0
      },
      height: {
        type: [Number, String],
        "default": void 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TopStyle: function TopStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      isLeftEnabled: function isLeftEnabled() {
        return !0;
      },
      isRightEnabled: function isRightEnabled() {
        return !0;
      },
      BtnLeftClass: function BtnLeftClass() {
        return {
          "is-enabled": this.isLeftEnabled,
          "is-disabled": !this.isLeftEnabled
        };
      },
      BtnRightClass: function BtnRightClass() {
        return {
          "is-enabled": this.isRightEnabled,
          "is-disabled": !this.isRightEnabled
        };
      },
      ItemList: function ItemList() {
        if (!_.isArray(this.data)) return [];
        var t = [];

        for (var e = 0; e < this.data.length; e++) {
          var i = this.data[e],
              n = e == this.myCurrentIndex ? "is-current" : null,
              a = Ti.Util.explainObj(i, this.comConf);
          t.push({
            key: this.getItemKey(i, e),
            index: e,
            className: n,
            comType: this.comType,
            comConf: a
          });
        }

        return t;
      }
    },
    methods: {
      OnClickIndicator: function OnClickIndicator(_ref109) {
        var t = _ref109.index;
        this.myCurrentIndex = t;
      },
      getItemKey: function getItemKey(t, e) {
        return _.get(t, this.idBy) || "It-".concat(e);
      },
      prevItem: function prevItem() {
        var t = Ti.Num.scrollIndex(this.myCurrentIndex - 1, this.ItemList.length);
        this.myCurrentIndex = t;
      },
      nextItem: function nextItem() {
        var t = Ti.Num.scrollIndex(this.myCurrentIndex + 1, this.ItemList.length);
        this.myCurrentIndex = t;
      },
      autoPlayNextItem: function autoPlayNextItem() {
        var _this206 = this;

        this.interval > 0 && _.delay(function () {
          _this206.mousein || _this206.nextItem(), _this206.autoPlayNextItem();
        }, 1e3 * this.interval);
      }
    },
    watch: {
      interval: function interval(t) {
        t > 0 && this.autoPlayNextItem();
      }
    },
    mounted: function mounted() {
      this.autoPlayNextItem();
    }
  };
  Ti.Preload("ti/com/web/shelf/slide/web-shelf-slide.mjs", t);
}(), Ti.Preload("ti/com/web/shelf/slide/_com.json", {
  name: "web-shelf-slide",
  globally: !0,
  template: "./web-shelf-slide.html",
  mixins: ["./web-shelf-slide.mjs"]
}), Ti.Preload("ti/com/web/shelf/wall/web-shelf-wall.html", '<div class="web-shelf-wall"\n  :class="TopClass">\n  \x3c!--\n    Blank\n  --\x3e\n  <ti-loading\n    v-if="isEmpty"\n      class="as-big"\n      v-bind="blankAs"/>\n  \x3c!--\n    Each Items\n  --\x3e\n  <template v-else>\n    <div v-for="wr in WallList"\n      class="wall-group"\n      :key="wr.key">\n      \x3c!--\n        ===========================================\n        Items in row\n      --\x3e\n      <template v-for="it in wr.items">\n        \x3c!--\n          Blank\n        --\x3e\n        <div\n          v-if="it.blank"\n            class="wall-tile is-blank"\n            :style="ItemStyle"></div>\n        \x3c!--\n          Normal Item\n        --\x3e\n        <div\n          v-else\n            class="wall-tile is-com"\n            :style="ItemStyle">\n            <component\n              :is="it.comType"\n              v-bind="it.comConf"/>\n        </div>\n      </template> \x3c!-- End item--\x3e\n    </div> \x3c!--End Row--\x3e\n  </template>\n</div>'), function () {
  var t = {
    props: {
      data: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      cols: {
        type: Number,
        "default": 4,
        validator: function validator(t) {
          return t > 0 && parseInt(t) == t;
        }
      },
      comType: {
        type: String,
        "default": "ti-label"
      },
      comConf: {
        type: [Object, String],
        "default": function _default() {
          return {
            value: "=.."
          };
        }
      },
      blankAs: {
        type: Object,
        "default": function _default() {
          return {
            text: "i18n:empty",
            icon: "fas-box-open"
          };
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      ItemStyle: function ItemStyle() {
        return {
          width: Ti.Types.toPercent(1 / this.cols)
        };
      },
      WallList: function WallList() {
        if (!_.isArray(this.data)) return [];
        var t = [],
            e = [],
            i = 1;

        for (var n = 0; n < this.data.length; n++) {
          var a = this.data[n],
              s = Ti.Util.explainObj(a, this.comConf);
          e.push({
            key: "It-".concat(n),
            comType: this.comType,
            comConf: s
          }), i >= this.cols ? (i = 1, t.push({
            key: "Row-".concat(t.length),
            items: e
          }), e = []) : i++;
        }

        if (!_.isEmpty(e)) {
          for (var _t140 = e.length; _t140 < this.cols; _t140++) {
            e.push({
              key: "It-".concat(_t140),
              blank: !0
            });
          }

          t.push({
            key: "Row-".concat(t.length),
            items: e
          });
        }

        return t;
      },
      isEmpty: function isEmpty() {
        return _.isEmpty(this.WallList);
      }
    },
    methods: {}
  };
  Ti.Preload("ti/com/web/shelf/wall/web-shelf-wall.mjs", t);
}(), Ti.Preload("ti/com/web/shelf/wall/_com.json", {
  name: "web-shelf-wall",
  globally: !0,
  template: "./web-shelf-wall.html",
  mixins: ["./web-shelf-wall.mjs"]
}), Ti.Preload("ti/com/web/text/heading/web-text-heading.html", '<div class="web-text-heading"\n  :class="TopClass">\n  \x3c!--Icon--\x3e\n  <div\n    v-if="icon"\n      class="as-icon"><ti-icon :value="icon"/></div>\n  \x3c!--Title--\x3e\n  <div\n    v-if="title"\n      class="as-title"\n      :class="TitleClass"\n      :style="TitleStyle"\n      @click.left="OnClickTitle"><span>{{title|i18n}}</span></div>\n  \x3c!--Comments--\x3e\n  <div\n    v-if="comment"\n      class="as-comment"><span>{{comment|i18n}}</span></div>\n  \x3c!--View more--\x3e\n  <div\n    v-if="more"\n      class="as-more"\n      @click.left="OnClickMore"><span>{{more|i18n}}</span></div>\n</div>'), function () {
  var t = {
    props: {
      icon: {
        type: String,
        "default": null
      },
      title: {
        type: String,
        "default": null
      },
      titleClass: {
        type: [String, Array, Object],
        "default": void 0
      },
      titleStyle: {
        type: Object,
        "default": void 0
      },
      comment: {
        type: String,
        "default": null
      },
      more: {
        type: String,
        "default": null
      },
      value: null
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TitleClass: function TitleClass() {
        return Ti.Css.mergeClassName(this.titleClass);
      },
      TitleStyle: function TitleStyle() {
        return Ti.Css.toStyle(this.titleStyle);
      }
    },
    methods: {
      OnClickTitle: function OnClickTitle() {
        this.$notify("fire", this.value);
      },
      OnClickMore: function OnClickMore() {
        this.$notify("more", this.value);
      }
    }
  };
  Ti.Preload("ti/com/web/text/heading/web-text-heading.mjs", t);
}(), Ti.Preload("ti/com/web/text/heading/_com.json", {
  name: "web-text-heading",
  globally: !0,
  template: "./web-text-heading.html",
  mixins: ["./web-text-heading.mjs"]
}), Ti.Preload("ti/com/web/text/raw/web-text-raw.html", '<div class="web-text-raw" :class="TopClass">\n  \x3c!--\n    Icon\n  --\x3e\n  <ti-icon \n    v-if="icon"\n      :value="icon"/>\n  \x3c!--\n    Value As Text\n  --\x3e\n  <div\n    v-if="hasValue"\n      class="as-text">\n      <template v-if="i18n">\n        <div v-for="li in TheValue">{{li | i18n}}</div>\n      </template>\n      <template v-else>\n        <div v-for="li in TheValue">{{li}}</div>\n      </template>\n  </div>\n</div>'), function () {
  var t = {
    props: {
      icon: {
        type: [String, Object],
        "default": void 0
      },
      value: {
        type: [String, Number, Boolean, Array],
        "default": void 0
      },
      lineSeperater: {
        type: String,
        "default": "\n"
      },
      i18n: {
        type: Boolean,
        "default": !1
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      hasValue: function hasValue() {
        return !Ti.Util.isNil(this.value);
      },
      TheValue: function TheValue() {
        if (_.isString(this.value)) {
          if (this.lineSeperater) {
            var _t141 = this.value.split(this.lineSeperater);

            return _.map(_t141, function (t) {
              return _.trim(t);
            }), _t141;
          }

          return [this.value];
        }

        return _.isArray(this.value) ? this.value : [this.value];
      }
    }
  };
  Ti.Preload("ti/com/web/text/raw/web-text-raw.mjs", t);
}(), Ti.Preload("ti/com/web/text/raw/_com.json", {
  name: "web-text-raw",
  globally: !0,
  template: "./web-text-raw.html",
  mixins: ["./web-text-raw.mjs"]
}), Ti.Preload("ti/com/web/tile/address/web-tile-address.html", '<div class="web-tile-address"\n  :class="TopClass"\n  @click.left="OnClickTop">\n  \x3c!--\n    Center\n  --\x3e\n  <div class="at-center">\n    \x3c!--Has Value--\x3e\n    <template v-if="hasValue">\n      <div class="is-info">\n        <div\n          v-if="Item.consignee">\n            <span>{{\'address-consignee\'|i18n}}:</span>\n            <em>{{Item.consignee}}</em></div>\n        <div\n          v-if="Item.phone">\n            <span>{{\'address-k-phone\'|i18n}}:</span>\n            <em>{{Item.phone}}</em></div>\n        <div\n          v-if="Item.email">\n            <span>{{\'address-k-email\'|i18n}}:</span>\n            <em>{{Item.email}}</em></div>\n      </div>\n      <div class="is-big">\n        <span class="as-street">{{Item.street}}</span>\n        <span class="as-door">{{Item.door}}</span>\n      </div>\n    </template>\n    \x3c!--Blank--\x3e\n    <ti-loading\n      v-else \n        class="as-big ti-fill-parent"\n        style="padding:0"\n        v-bind="blankAs"/>\n  </div>\n  \x3c!--\n    Left top\n  --\x3e\n  <div class="at-left-top is-float">\n    <template v-if="title">\n      <span class="is-bold">{{title | i18n}}</span>\n    </template>\n    <template v-else>\n      <a \n        v-if="can.default && !Item.dftaddr"\n          @click="OnSetDefault">{{\'address-set-dft\'|i18n}}</a>\n      <span\n        v-else-if="Item.dftaddr"\n          class="is-bold">{{\'address-is-dft\'|i18n}}</span>\n    </template>\n  </div>\n  \x3c!--\n    Left-bottom\n  --\x3e\n  <div class="at-left-bottom is-float">\n    <span\n      v-if="Item.city">{{Item.city}}</span>\n    <span\n      v-if="Item.province">{{Item.province}}</span>\n    <span\n      v-if="showCountry && Item.countryName">{{Item.countryName}}</span>\n  </div>\n  \x3c!--\n    Right-top\n  --\x3e\n  <div\n    v-if="can.remove || can.edit || can.choose" \n      class="at-right-top is-float">\n      <a v-if="can.remove" @click="OnRemove">{{\'del\'|i18n}}</a>\n      <a v-if="can.edit" @click="OnEdit">{{\'edit\'|i18n}}</a>\n      <a v-if="can.choose" @click="OnChoose">{{\'choose\'|i18n}}</a>\n      <a v-if="can.add" @click="OnAdd">{{\'address-shipping-add\'|i18n}}</a>\n  </div>  \n</div>'), function () {
  var t = {
    props: {
      value: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      mapping: {
        type: Object,
        "default": function _default() {
          return {
            id: "id",
            country: "country",
            postcode: "postcode",
            province: "province",
            city: "city",
            street: "street",
            door: "door",
            consignee: "consignee",
            phone: "phone",
            email: "email",
            dftaddr: "dftaddr"
          };
        }
      },
      countries: {
        type: Object,
        "default": void 0
      },
      showCountry: {
        type: Boolean,
        "default": !0
      },
      title: {
        type: String,
        "default": void 0
      },
      can: {
        type: Object,
        "default": function _default() {
          return {
            remove: !0,
            edit: !0,
            "default": !0,
            choose: !1,
            add: !1
          };
        }
      },
      emitRawValue: {
        type: Boolean,
        "default": !0
      },
      autoHighlight: {
        type: Boolean,
        "default": !0
      },
      currentId: {
        type: String,
        "default": void 0
      },
      blankAs: {
        type: Object,
        "default": function _default() {
          return {
            icon: "im-location",
            text: "i18n:address-nil"
          };
        }
      },
      selectable: {
        type: Boolean,
        "default": !1
      }
    },
    computed: {
      TopClass: function TopClass() {
        var t = !1;
        return _.isUndefined(this.currentId) ? this.autoHighlight && this.Item.dftaddr && (t = !0) : t = this.currentId == this.Item.id, this.getTopClass({
          "is-highlight": t,
          "is-selectable": this.selectable
        });
      },
      hasValue: function hasValue() {
        return !_.isEmpty(this.value);
      },
      Item: function Item() {
        var t = Ti.Util.translate(this.value, this.mapping) || {};
        return this.countries ? t.countryName = this.countries[t.country] : t.countryName = t.country, t;
      }
    },
    methods: {
      OnClickTop: function OnClickTop() {
        if (this.selectable) {
          var _t142 = this.getEmitValue();

          this.$notify("select", _t142);
        }
      },
      OnRemove: function OnRemove() {
        var t = this.getEmitValue();
        this.$notify("remove", t);
      },
      OnSetDefault: function OnSetDefault() {
        var t = this.getEmitValue();
        this.$notify("set:default", t);
      },
      OnEdit: function OnEdit() {
        var t = this.getEmitValue();
        this.$notify("edit", t);
      },
      OnChoose: function OnChoose() {
        var t = this.getEmitValue();
        this.$notify("choose", t);
      },
      OnAdd: function OnAdd() {
        var t = this.getEmitValue();
        this.$notify("add", t);
      },
      getEmitValue: function getEmitValue() {
        var t = this.emitRawValue ? this.value : this.Item;
        return _.cloneDeep(t);
      }
    }
  };
  Ti.Preload("ti/com/web/tile/address/web-tile-address.mjs", t);
}(), Ti.Preload("ti/com/web/tile/address/_com.json", {
  name: "web-tile-address",
  globally: !0,
  template: "./web-tile-address.html",
  mixins: ["./web-tile-address.mjs"]
}), Ti.Preload("ti/com/web/tile/comment/web-tile-comment.html", '<div class="web-tile-comment"\n  :class="TopClass">\n  \x3c!--\n    Left: User Avator\n  --\x3e\n  <div class="at-left">\n    <ti-icon :value="AvatarIcon"/>\n  </div>\n  \x3c!--\n    Right: Comment\n  --\x3e\n  <div class="at-right">\n      \x3c!--Head--\x3e\n      <div class="as-head">\n        <span class="as-u-name">{{Post.userName}}</span>\n        <span class="as-time">{{CreateTimeText}}</span>\n      </div>\n      \x3c!--Content--\x3e\n      <div class="as-content">{{Post.content}}</div>\n  </div>\n</div>'), function () {
  var t = {
    props: {
      value: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      mapping: {
        type: Object,
        "default": function _default() {
          return {
            userId: "uid",
            userName: "unm",
            avatar: "avatar",
            content: "brief",
            createTime: "ct"
          };
        }
      },
      avatarSrc: {
        type: String,
        "default": void 0
      },
      userIcon: {
        type: [String, Object],
        "default": "fas-user"
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      Post: function Post() {
        return Ti.Util.translate(this.value, this.mapping) || {};
      },
      AvatarIcon: function AvatarIcon() {
        return _.get(this.Post, "avatar") && this.avatarSrc ? {
          type: "image",
          value: Ti.S.renderBy(this.avatarSrc, this.Post)
        } : this.userIcon;
      },
      CreateTimeText: function CreateTimeText() {
        if (this.Post.createTime) return Ti.DateTime.timeText(this.Post.createTime);
      }
    },
    methods: {}
  };
  Ti.Preload("ti/com/web/tile/comment/web-tile-comment.mjs", t);
}(), Ti.Preload("ti/com/web/tile/comment/_com.json", {
  name: "web-tile-comment",
  globally: !0,
  template: "./web-tile-comment.html",
  mixins: ["./web-tile-comment.mjs"]
}), Ti.Preload("ti/com/web/tile/order/web-tile-order.html", '<div class="web-tile-order"\n  :class="TopClass">\n  \x3c!--\n    Summary\n  --\x3e\n  <div class="as-summary">\n    \x3c!--ID--\x3e\n    <div class="or-field as-id">\n      <span>{{\'order-k-id\'|i18n}}</span>\n      <a \n        v-if="OrderHref"\n          :href="OrderHref"\n          @click.left.prevent="OnClickOrder">{{OrderId}}</a>\n      <em\n        v-else>{{OrderId}}</em>\n    </div>\n    \x3c!--Date--\x3e\n    <div class="or-field as-datetime">\n      <span>{{\'wn-key-ct\'|i18n}}</span>\n      <em>{{Order.ct|datetime}}</em>\n    </div>\n    \x3c!--Fee--\x3e\n    <div class="or-field as-price">\n      <span>{{\'order-k-fee\'|i18n}}</span>\n      <em>{{CurrencyChar}}{{Order.fee}}</em>\n    </div>\n    \x3c!--Payment--\x3e\n    <div class="or-field as-pay_tp">\n      <span>{{\'order-k-pay_tp\'|i18n}}</span>\n      <em>{{\'pay-by-\'+Order.pay_tp|i18n}}</em>\n    </div>\n    \x3c!--Status--\x3e\n    <div class="or-field as-st">\n      <span>{{\'order-k-st\'|i18n}}</span>\n      <em>{{OrderStatus|i18n}}</em>\n    </div>\n  </div>\n  \x3c!--\n    Product list\n  --\x3e\n  <div class="as-products">\n    <table>\n      <tr\n        v-for="it in Products"\n          class="as-pro-it">\n          \x3c!--Thumb--\x3e\n          <td><a \n              :href="it.href"\n              @click.left.prevent="OnClickProduct(it)"><img :src="it.src"/></a></td>\n          \x3c!--Title--\x3e\n          <td>\n              <a \n                :href="it.href"\n                @click.left.prevent="OnClickProduct(it)">{{it.title}}</a>\n          </td>\n          \x3c!--Price--\x3e\n          <td class="as-price">{{CurrencyChar}}{{it.price}}</td>\n          \x3c!--Amount--\x3e\n          <td class="as-amount">x{{it.amount}}</td>\n          \x3c!--Subtotal--\x3e\n          <td class="as-subtotal">{{CurrencyChar}}{{it.subtotal}}</td>\n      </tr>\n    </table>\n  </div>\n</div>'), function () {
  var t = {
    props: {
      value: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      proThumbSrc: {
        type: String,
        "default": void 0
      },
      proHref: {
        type: String,
        "default": void 0
      },
      href: {
        type: String,
        "default": void 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass("is-".concat(this.OrderStatus));
      },
      Order: function Order() {
        return this.value || {};
      },
      OrderId: function OrderId() {
        var t = this.Order.id;

        if (t) {
          var e = t.indexOf(":");
          return e > 0 ? _.trim(t.substring(e + 1)) : t;
        }

        return "- unknown -";
      },
      OrderStatus: function OrderStatus() {
        return "or-st-".concat(_.toLower(this.Order.or_st));
      },
      OrderHref: function OrderHref() {
        if (this.href) return Ti.S.renderBy(this.href, this.Order);
      },
      CurrencyChar: function CurrencyChar() {
        return Ti.Bank.getCurrencyChar(this.Order.currency || "RMB");
      },
      Products: function Products() {
        var _this207 = this;

        var t = [];
        return _.forEach(this.value.products, function (e) {
          var i = _objectSpread({}, e);

          _this207.proThumbSrc && (i.src = Ti.S.renderBy(_this207.proThumbSrc, e)), _this207.proHref && (i.href = Ti.S.renderBy(_this207.proHref, e)), i.subtotal = Ti.Num.precise(e.price * e.amount), t.push(i);
        }), t;
      }
    },
    methods: {
      OnClickOrder: function OnClickOrder() {
        this.Order.id && this.$notify("show:order", this.Order.id);
      },
      OnClickProduct: function OnClickProduct(_ref110) {
        var t = _ref110.id;
        t && this.$notify("open:product", t);
      }
    }
  };
  Ti.Preload("ti/com/web/tile/order/web-tile-order.mjs", t);
}(), Ti.Preload("ti/com/web/tile/order/_com.json", {
  name: "web-tile-order",
  globally: !0,
  template: "./web-tile-order.html",
  mixins: ["./web-tile-order.mjs"]
}), Ti.Preload("ti/com/web/widget/frame/widget-frame.html", '<div class="web-widget-frame"\n  :class="TopClass">\n  <template v-if="hasFrameSrce">\n    <iframe :src="FrameSrce" class="ti-fill-parent" :style="FrameStyle"></iframe>\n  </template>\n</div>'), function () {
  var t = {
    props: {
      src: {
        type: String,
        "default": void 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      FrameSrce: function FrameSrce() {
        return _.trim(this.src);
      },
      hasFrameSrce: function hasFrameSrce() {
        return !!this.FrameSrce;
      },
      FrameStyle: function FrameStyle() {
        return {
          border: 0
        };
      }
    },
    methods: {}
  };
  Ti.Preload("ti/com/web/widget/frame/widget-frame.mjs", t);
}(), Ti.Preload("ti/com/web/widget/frame/_com.json", {
  name: "web-widget-frame",
  globally: !0,
  template: "./widget-frame.html",
  mixins: ["./widget-frame.mjs"],
  components: []
}), Ti.Preload("ti/com/web/widget/input/text/widget-input-text.html", '<div class="web-widget-input-text" \n  :class="TopClass" \n  :style="TopStyle"\n  v-ti-activable>\n  \x3c!--\n    Title\n  --\x3e\n  <div\n    v-if="hasTitle"\n      class="as-title">\n      <span>{{title|i18n}}</span>\n      <template v-if="total">\n        <i class="far fa-comments"></i>\n        <em>{{total}}</em>\n      </template>\n  </div>\n  \x3c!--\n    Text\n  --\x3e\n  <div class="as-text">\n    <textarea\n      ref="text"\n      spellcheck="false"\n      :placeholder="placeholder | i18n"\n      :value="TextValue"\n      @change="OnTextChange"></textarea>\n    \x3c!--\n      Bottom Bar\n    --\x3e\n    <div class="as-bar">\n      \x3c!--\n        Left\n      --\x3e\n      <div class="at-left">\n        <div class="as-btn btn-emoji"\n          @click.left="OnBtnEmojiClick">\n          <ti-icon \n            v-if="emojiBtnIcon"\n              :value="emojiBtnIcon"/>\n          <span>{{emojiBtnText|i18n}}</span>\n        </div>\n      </div> \x3c!--Left--\x3e\n      \x3c!--\n        Right\n      --\x3e\n      <div class="at-right">\n        <div class="as-btn btn-post"\n          @click.left="OnBtnPostClick">\n          <ti-icon \n            v-if="postBtnIcon"\n              :value="postBtnIcon"/>\n          <span>{{postBtnText|i18n}}</span>\n        </div>\n      </div> \x3c!-- Right --\x3e\n    </div> \x3c!-- Bottom Bar--\x3e\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myText: void 0
      };
    },
    props: {
      title: {
        type: String,
        "default": "i18n:comments"
      },
      value: {
        type: String,
        "default": void 0
      },
      total: {
        type: Number,
        "default": void 0
      },
      trimed: {
        type: Boolean,
        "default": !0
      },
      resetAfterPost: {
        type: Boolean,
        "default": !1
      },
      placeholder: {
        type: [String, Number],
        "default": void 0
      },
      hideBorder: {
        type: Boolean,
        "default": !1
      },
      emojiBtnIcon: {
        type: String,
        "default": "far-smile"
      },
      emojiBtnText: {
        type: String,
        "default": "i18n:emoji"
      },
      postBtnIcon: {
        type: String,
        "default": "fas-paper-plane"
      },
      postBtnText: {
        type: String,
        "default": "i18n:post"
      },
      width: {
        type: [Number, String],
        "default": "100%"
      },
      height: {
        type: [Number, String],
        "default": "2.6rem"
      }
    },
    computed: {
      TopClass: function TopClass() {
        return Ti.Css.mergeClassName(this.className, {
          "is-self-actived": this.isSelfActived,
          "show-border": !this.hideBorder,
          "hide-border": this.hideBorder
        });
      },
      TopStyle: function TopStyle() {
        return Ti.Css.toStyle({
          width: this.width,
          height: this.height
        });
      },
      hasTitle: function hasTitle() {
        return !!this.title;
      },
      TextValue: function TextValue() {
        return Ti.Util.fallbackNil(this.myText, this.value);
      }
    },
    methods: {
      OnTextChange: function OnTextChange() {
        var t = this.$refs.text.value;
        this.myText = this.formatValue(t);
      },
      OnBtnEmojiClick: function OnBtnEmojiClick() {
        var _this208 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee99() {
          var t, e, i, n, a, s;
          return regeneratorRuntime.wrap(function _callee99$(_context99) {
            while (1) {
              switch (_context99.prev = _context99.next) {
                case 0:
                  t = _this208.$refs.text.selectionStart;
                  e = _this208.$refs.text.selectionEnd;
                  _context99.next = 4;
                  return Ti.App.Open({
                    title: "i18n:emoji",
                    width: "6.4rem",
                    height: "4.8rem",
                    textOk: null,
                    changeToClose: !0,
                    comType: "TiSheetEmoji",
                    comConf: {}
                  });

                case 4:
                  i = _context99.sent;

                  if (i) {
                    _context99.next = 7;
                    break;
                  }

                  return _context99.abrupt("return");

                case 7:
                  n = _this208.$refs.text.value, a = n.substring(0, t), s = n.substring(e);
                  _this208.myText = a + i + s;

                case 9:
                case "end":
                  return _context99.stop();
              }
            }
          }, _callee99);
        }))();
      },
      OnBtnPostClick: function OnBtnPostClick() {
        var t = this.formatValue(this.$refs.text.value);
        t && t.length > 10 ? (this.$notify("post", t), this.resetAfterPost && (this.myText = "")) : Ti.Toast.Open("i18n:post-content-blank", "warn");
      },
      formatValue: function formatValue(t) {
        return t && this.trimed ? _.trim(t) : t;
      }
    }
  };
  Ti.Preload("ti/com/web/widget/input/text/widget-input-text.mjs", t);
}(), Ti.Preload("ti/com/web/widget/input/text/_com.json", {
  name: "web-widget-input-text",
  globally: !0,
  template: "./widget-input-text.html",
  mixins: ["./widget-input-text.mjs"],
  components: ["@com:ti/sheet/emoji"]
}), Ti.Preload("ti/com/web/widget/sharebar/widget-sharebar.html", '<div class="web-widget-sharebar"\n  :class="TopClass">\n  \x3c!--\n    Title\n  --\x3e\n  <div\n    v-if="title"\n      class="as-title">{{title|i18n}}</div>\n  \x3c!--\n    Items\n  --\x3e\n  <div class="as-items">\n    <a\n      v-for="it in TheItems"\n        class="bar-item">\n      <i :class="it.iconClass"></i>\n    </a>\n  </div>\n</div>'), function () {
  var t = {
    props: {
      title: {
        type: String,
        "default": null
      },
      items: {
        type: Array,
        "default": function _default() {
          return [];
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TheItems: function TheItems() {
        return this.evalItems(this.items);
      }
    },
    methods: {
      evalItems: function evalItems(t) {
        var e = [];
        return _.forEach(t, function (t, i) {
          var n = {
            facebook: {
              iconClass: "fab fa-facebook-f"
            },
            twitter: {
              iconClass: "fab fa-twitter"
            },
            instagram: {
              iconClass: "fab fa-instagram"
            },
            tumblr: {
              iconClass: "fab fa-tumblr"
            }
          }[t];
          n && e.push(n);
        }), e;
      }
    }
  };
  Ti.Preload("ti/com/web/widget/sharebar/widget-sharebar.mjs", t);
}(), Ti.Preload("ti/com/web/widget/sharebar/_com.json", {
  name: "web-widget-sharebar",
  globally: !0,
  template: "./widget-sharebar.html",
  mixins: ["./widget-sharebar.mjs"],
  components: []
}), Ti.Preload("ti/com/web/widget/summary/widget-summary.html", '<div class="web-widget-summary"\n  :class="TopClass">\n  \x3c!--\n    Title\n  --\x3e\n  <div\n    v-if="title"\n      class="as-title">{{title|i18n}}</div>\n  \x3c!--\n    Items\n  --\x3e\n  <div class="as-list">\n    <div\n      v-for="it in TheItems"\n        class="as-item">\n      \x3c!--Icon--\x3e\n      <ti-icon\n        v-if="it.icon"\n          :value="it.icon"/>\n      \x3c!--Value--\x3e\n      <div class="as-value">{{it.value}}</div>\n      \x3c!--Text--\x3e\n      <div\n        v-if="it.text"\n          class="as-text">{{it.text|i18n}}</div>\n    </div>\n  </div>\n</div>'), function () {
  var t = {
    props: {
      title: {
        type: String,
        "default": void 0
      },
      items: {
        type: Array,
        "default": function _default() {
          return [];
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TheItems: function TheItems() {
        var t = [];
        return _.forEach(this.items, function (e, i) {
          t.push({
            key: "it-".concat(i),
            index: i,
            icon: e.icon,
            text: e.text,
            value: e.value || 0
          });
        }), t;
      }
    }
  };
  Ti.Preload("ti/com/web/widget/summary/widget-summary.mjs", t);
}(), Ti.Preload("ti/com/web/widget/summary/_com.json", {
  name: "web-widget-summary",
  globally: !0,
  template: "./widget-summary.html",
  mixins: ["./widget-summary.mjs"],
  components: []
}), Ti.Preload("ti/com/web/widget/user/widget-user.html", '<div class="web-widget-user"\n  :class="TopClass">\n  \x3c!--\n    Avatar\n  --\x3e\n  <div class="as-avatar">\n    <ti-icon :value="TheAvatar"/>\n  </div>\n  \x3c!--\n    Nickname\n  --\x3e\n  <div class="as-title">\n    <div class="as-nickname">{{TheNickname}}</div>\n  </div>\n  \x3c!--\n    Action bar\n  --\x3e\n  <div class="as-actions">\n    <div \n      class="ti-btn reset-passwd"\n      @click="$notify(\'go:passwd:reset\')">{{\'passwd-reset\'|i18n}}</div>\n    <div\n      class="ti-btn edit-profile"\n      @click="$notify(\'go:my:profile\')">{{\'profile-edit\'|i18n}}</div>\n  </div>\n</div>'), function () {
  var t = {
    props: {
      me: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      avatarSrc: {
        type: String,
        "default": void 0
      },
      avatarIcons: {
        type: Object,
        "default": function _default() {
          return {
            unknown: "far-user",
            male: "im-user-male",
            female: "im-user-female"
          };
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TheAvatar: function TheAvatar() {
        var t = this.me || {};
        return this.avatarSrc && t.thumb ? {
          type: "image",
          value: Ti.S.renderVars(t.thumb, this.avatarSrc)
        } : 1 == t.sex ? this.avatarIcons.male : 2 == t.sex ? this.avatarIcons.female : this.avatarIcons.unknown || "far-user";
      },
      TheNickname: function TheNickname() {
        var t = this.me || {};
        return t.nickname || t.email || t.phone || t.nm || t.id || "Anonymity";
      }
    },
    methods: {}
  };
  Ti.Preload("ti/com/web/widget/user/widget-user.mjs", t);
}(), Ti.Preload("ti/com/web/widget/user/_com.json", {
  name: "web-widget-user",
  globally: !0,
  template: "./widget-user.html",
  mixins: ["./widget-user.mjs"],
  components: []
}), function () {
  var t = {
    doCreate: function doCreate() {
      var _this209 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee100() {
        var _yield$Wn$Sys$exec, t, e, i, n, _t143, _e50;

        return regeneratorRuntime.wrap(function _callee100$(_context100) {
          while (1) {
            switch (_context100.prev = _context100.next) {
              case 0:
                _context100.next = 2;
                return Wn.Sys.exec("ti creation -cqn id:".concat(_this209.meta.id), {
                  as: "json"
                });

              case 2:
                _yield$Wn$Sys$exec = _context100.sent;
                t = _yield$Wn$Sys$exec.types;
                e = _yield$Wn$Sys$exec.typeNames;
                i = _yield$Wn$Sys$exec.freeCreate;
                _context100.next = 8;
                return Ti.App.Open({
                  title: "i18n:create",
                  type: "success",
                  position: "top",
                  width: 640,
                  height: "61.8%",
                  comType: "wn-obj-creation",
                  comConf: {
                    types: t,
                    freeCreate: i
                  },
                  components: ["@com:wn/obj/creation"]
                });

              case 8:
                n = _context100.sent;

                if (!(n && n.name)) {
                  _context100.next = 32;
                  break;
                }

                if (!(n.name.search(/[%;:"'*?`\t^<>\/\\]/) >= 0)) {
                  _context100.next = 14;
                  break;
                }

                _context100.next = 13;
                return Ti.Alert("i18n:wn-create-invalid");

              case 13:
                return _context100.abrupt("return", _context100.sent);

              case 14:
                if (!(n.length > 256)) {
                  _context100.next = 18;
                  break;
                }

                _context100.next = 17;
                return Ti.Alert("i18n:wn-create-too-long");

              case 17:
                return _context100.abrupt("return", _context100.sent);

              case 18:
                n.race = n.race || "FILE", "folder" == n.type && (n.type = void 0), "FILE" == n.race && (n.type || (n.type = Ti.Util.getSuffixName(n.name)), n.name.endsWith(n.type) || (n.name += ".".concat(n.type)));
                _t143 = JSON.stringify({
                  nm: n.name,
                  tp: n.type,
                  race: n.race,
                  mime: n.mime
                });
                _context100.next = 22;
                return Wn.Sys.exec2("obj id:".concat(_this209.meta.id, " -cqno -new '").concat(_t143, "'"), {
                  as: "json"
                });

              case 22:
                _e50 = _context100.sent;

                if (!(_e50 instanceof Error)) {
                  _context100.next = 27;
                  break;
                }

                Ti.Toast.Open("i18n:wn-create-fail", "error");
                _context100.next = 32;
                break;

              case 27:
                Ti.Toast.Open("i18n:wn-create-ok", "success");
                _context100.next = 30;
                return _this209._run("reload");

              case 30:
                _this209.myCheckedIds = [_e50.id];
                _this209.myCurrentId = _e50.id;

              case 32:
              case "end":
                return _context100.stop();
            }
          }
        }, _callee100);
      }))();
    },
    doRename: function doRename() {
      var _this210 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee101() {
        var t, e, i, n, a;
        return regeneratorRuntime.wrap(function _callee101$(_context101) {
          while (1) {
            switch (_context101.prev = _context101.next) {
              case 0:
                t = _this210.getCurrentItem();

                if (t) {
                  _context101.next = 5;
                  break;
                }

                _context101.next = 4;
                return Ti.Toast.Open("i18n:wn-rename-none", "warn");

              case 4:
                return _context101.abrupt("return", _context101.sent);

              case 5:
                _this210.setItemStatus(t.id, "renaming");

                _context101.prev = 6;
                _context101.next = 9;
                return Ti.Prompt({
                  text: "i18n:wn-rename",
                  vars: {
                    name: t.nm
                  }
                }, {
                  title: "i18n:rename",
                  placeholder: t.nm,
                  value: t.nm
                });

              case 9:
                e = _context101.sent;

                if (!e) {
                  _context101.next = 31;
                  break;
                }

                if (!(e.search(/[%;:"'*?`\t^<>\/\\]/) >= 0)) {
                  _context101.next = 15;
                  break;
                }

                _context101.next = 14;
                return Ti.Alert("i18n:wn-rename-invalid");

              case 14:
                return _context101.abrupt("return", _context101.sent);

              case 15:
                if (!(e.length > 256)) {
                  _context101.next = 19;
                  break;
                }

                _context101.next = 18;
                return Ti.Alert("i18n:wn-rename-too-long");

              case 18:
                return _context101.abrupt("return", _context101.sent);

              case 19:
                i = Ti.Util.getSuffix(t.nm), n = Ti.Util.getSuffix(e);

                if (!(i && i != n)) {
                  _context101.next = 26;
                  break;
                }

                _context101.next = 23;
                return Ti.Confirm("i18n:wn-rename-suffix-changed");

              case 23:
                _context101.t0 = _context101.sent;

                if (!_context101.t0) {
                  _context101.next = 26;
                  break;
                }

                e += i;

              case 26:
                _this210.setItemStatus(t.id, "loading");

                _context101.next = 29;
                return Wn.Sys.exec2("obj id:".concat(t.id, " -cqno -u 'nm:\"").concat(e, "\"'"), {
                  as: "json"
                });

              case 29:
                a = _context101.sent;
                a instanceof Error ? Ti.Toast.Open("i18n:wn-rename-fail", "error") : (Ti.Toast.Open("i18n:wn-rename-ok", "success"), _this210.setItem(a)), _this210.setItemStatus({
                  id: t.id,
                  status: {
                    loading: !1
                  }
                });

              case 31:
                _context101.prev = 31;

                _this210.setItemStatus(t.id, null);

                return _context101.finish(31);

              case 34:
              case "end":
                return _context101.stop();
            }
          }
        }, _callee101, null, [[6,, 31, 34]]);
      }))();
    },
    doDelete: function doDelete() {
      var _this211 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee102() {
        var t, e, i, _iterator72, _step72, n, _t145, _t144, _e51;

        return regeneratorRuntime.wrap(function _callee102$(_context102) {
          while (1) {
            switch (_context102.prev = _context102.next) {
              case 0:
                t = _this211.getCheckedItems();

                if (!_.isEmpty(t)) {
                  _context102.next = 5;
                  break;
                }

                _context102.next = 4;
                return Ti.Toast.Open("i18n:wn-del-none", "warn");

              case 4:
                return _context102.abrupt("return", _context102.sent);

              case 5:
                console.log("haha!!!");
                e = 0, i = {};
                _context102.prev = 7;
                _iterator72 = _createForOfIteratorHelper(t);
                _context102.prev = 9;

                _iterator72.s();

              case 11:
                if ((_step72 = _iterator72.n()).done) {
                  _context102.next = 39;
                  break;
                }

                n = _step72.value;

                if (!(!n || !n.id || !n.nm)) {
                  _context102.next = 15;
                  break;
                }

                return _context102.abrupt("continue", 37);

              case 15:
                if (!(n.__is && (n.__is.loading || n.__is.removed))) {
                  _context102.next = 17;
                  break;
                }

                return _context102.abrupt("continue", 37);

              case 17:
                if (!i[n.id]) {
                  _context102.next = 19;
                  break;
                }

                return _context102.abrupt("continue", 37);

              case 19:
                if (!(_this211.setItemStatus(n.id, "loading"), "DIR" == n.race)) {
                  _context102.next = 31;
                  break;
                }

                _context102.next = 22;
                return Wn.Sys.exec("count -A id:".concat(n.id));

              case 22:
                _t145 = _context102.sent;
                _context102.t0 = (_t145 = parseInt(_t145)) > 0;

                if (!_context102.t0) {
                  _context102.next = 28;
                  break;
                }

                _context102.next = 27;
                return Ti.Confirm({
                  text: "i18n:wn-del-no-empty-folder",
                  vars: {
                    nm: n.nm
                  }
                });

              case 27:
                _context102.t0 = !_context102.sent;

              case 28:
                if (!_context102.t0) {
                  _context102.next = 31;
                  break;
                }

                _this211.setItemStatus(n.id, null);

                return _context102.abrupt("continue", 37);

              case 31:
                _context102.next = 33;
                return Wn.Sys.exec("rm ".concat("DIR" == n.race ? "-r" : "", " id:").concat(n.id));

              case 33:
                _this211.setItemStatus(n.id, "removed");

                _t144 = /^id:(.+)$/.exec(n.videoc_dir);

                if (_t144) {
                  _e51 = _t144[1];
                  i[_e51] = !0, _this211.setItemStatus(_e51, "removed");
                }

                e++;

              case 37:
                _context102.next = 11;
                break;

              case 39:
                _context102.next = 44;
                break;

              case 41:
                _context102.prev = 41;
                _context102.t1 = _context102["catch"](9);

                _iterator72.e(_context102.t1);

              case 44:
                _context102.prev = 44;

                _iterator72.f();

                return _context102.finish(44);

              case 47:
                _context102.next = 49;
                return _this211._run("reload");

              case 49:
                _context102.prev = 49;
                Ti.Toast.Open("i18n:wn-del-ok", {
                  N: e
                }, "success");
                return _context102.finish(49);

              case 52:
              case "end":
                return _context102.stop();
            }
          }
        }, _callee102, null, [[7,, 49, 52], [9, 41, 44, 47]]);
      }))();
    },
    doUpload: function doUpload() {
      var _arguments19 = arguments,
          _this212 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee103() {
        var t, e, i, _iterator73, _step73, _loop;

        return regeneratorRuntime.wrap(function _callee103$(_context104) {
          while (1) {
            switch (_context104.prev = _context104.next) {
              case 0:
                t = _arguments19.length > 0 && _arguments19[0] !== undefined ? _arguments19[0] : [];
                _context104.t0 = _.isFunction(_this212.beforeUpload);

                if (!_context104.t0) {
                  _context104.next = 5;
                  break;
                }

                _context104.next = 5;
                return _this212.beforeUpload();

              case 5:
                e = _.map(t, function (t, e) {
                  return {
                    id: "U".concat(e, "_").concat(Ti.Random.str(6)),
                    file: t,
                    total: t.size,
                    current: 0
                  };
                });
                _this212.myUploadigFiles = e;
                i = {};
                _iterator73 = _createForOfIteratorHelper(e);
                _context104.prev = 9;
                _loop = /*#__PURE__*/regeneratorRuntime.mark(function _loop() {
                  var t, e, _yield$Wn$Io$uploadFi, n, a;

                  return regeneratorRuntime.wrap(function _loop$(_context103) {
                    while (1) {
                      switch (_context103.prev = _context103.next) {
                        case 0:
                          t = _step73.value;
                          e = t.file;
                          _context103.next = 4;
                          return Wn.Io.uploadFile(e, {
                            target: "id:".concat(_this212.meta.id),
                            progress: function progress(e) {
                              t.current = e.loaded;
                            }
                          });

                        case 4:
                          _yield$Wn$Io$uploadFi = _context103.sent;
                          n = _yield$Wn$Io$uploadFi.ok;
                          a = _yield$Wn$Io$uploadFi.data;
                          n && (i[a.id] = !0);

                        case 8:
                        case "end":
                          return _context103.stop();
                      }
                    }
                  }, _loop);
                });

                _iterator73.s();

              case 12:
                if ((_step73 = _iterator73.n()).done) {
                  _context104.next = 16;
                  break;
                }

                return _context104.delegateYield(_loop(), "t1", 14);

              case 14:
                _context104.next = 12;
                break;

              case 16:
                _context104.next = 21;
                break;

              case 18:
                _context104.prev = 18;
                _context104.t2 = _context104["catch"](9);

                _iterator73.e(_context104.t2);

              case 21:
                _context104.prev = 21;

                _iterator73.f();

                return _context104.finish(21);

              case 24:
                _.delay(function () {
                  _this212.myUploadigFiles = [];
                }, 1e3);

                Ti.Toast.Open("i18n:upload-done", "success");
                _context104.next = 28;
                return _this212._run("reload");

              case 28:
                _this212.myCheckedIds = i;
                _this212.myCurrentId = null;

              case 30:
              case "end":
                return _context104.stop();
            }
          }
        }, _callee103, null, [[9, 18, 21, 24]]);
      }))();
    },
    doDownload: function doDownload() {
      var _this213 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee104() {
        var t, _iterator74, _step74, e, _t146;

        return regeneratorRuntime.wrap(function _callee104$(_context105) {
          while (1) {
            switch (_context105.prev = _context105.next) {
              case 0:
                t = _this213.getCheckedItems();

                if (!_.isEmpty(t)) {
                  _context105.next = 5;
                  break;
                }

                _context105.next = 4;
                return Ti.Toast.Open("i18n:wn-download-none", "warn");

              case 4:
                return _context105.abrupt("return", _context105.sent);

              case 5:
                _context105.t0 = !(t.length > 5);

                if (_context105.t0) {
                  _context105.next = 10;
                  break;
                }

                _context105.next = 9;
                return Ti.Confirm({
                  text: "i18n:wn-download-too-many",
                  vars: {
                    N: t.length
                  }
                });

              case 9:
                _context105.t0 = _context105.sent;

              case 10:
                if (!_context105.t0) {
                  _context105.next = 34;
                  break;
                }

                _iterator74 = _createForOfIteratorHelper(t);
                _context105.prev = 12;

                _iterator74.s();

              case 14:
                if ((_step74 = _iterator74.n()).done) {
                  _context105.next = 26;
                  break;
                }

                e = _step74.value;

                if (!("FILE" != e.race)) {
                  _context105.next = 22;
                  break;
                }

                _context105.next = 19;
                return Ti.Confirm({
                  text: "i18n:wn-download-dir",
                  vars: e
                }, {
                  textYes: "i18n:continue",
                  textNo: "i18n:terminate"
                });

              case 19:
                if (_context105.sent) {
                  _context105.next = 21;
                  break;
                }

                return _context105.abrupt("return");

              case 21:
                return _context105.abrupt("continue", 24);

              case 22:
                _t146 = Wn.Util.getDownloadLink(e);
                Ti.Be.OpenLink(_t146);

              case 24:
                _context105.next = 14;
                break;

              case 26:
                _context105.next = 31;
                break;

              case 28:
                _context105.prev = 28;
                _context105.t1 = _context105["catch"](12);

                _iterator74.e(_context105.t1);

              case 31:
                _context105.prev = 31;

                _iterator74.f();

                return _context105.finish(31);

              case 34:
              case "end":
                return _context105.stop();
            }
          }
        }, _callee104, null, [[12, 28, 31, 34]]);
      }))();
    }
  };
  Ti.Preload("ti/com/wn/adaptlist/wn-adaptlist-methods.mjs", t);
}(), function () {
  var t = {
    meta: {
      type: Object,
      "default": null
    },
    data: {
      type: [Object, Array],
      "default": null
    },
    changedId: {
      type: String,
      "default": null
    },
    status: {
      type: Object,
      "default": function _default() {
        return {
          reloading: !1
        };
      }
    },
    droppable: {
      type: Boolean,
      "default": !0
    },
    multi: {
      type: Boolean,
      "default": !0
    },
    checkable: {
      type: Boolean,
      "default": !0
    },
    blurable: {
      type: Boolean,
      "default": !0
    },
    selectable: {
      type: Boolean,
      "default": !0
    },
    spacing: {
      type: String,
      "default": "sm"
    },
    keeyHiddenBy: {
      type: String,
      "default": "wn-list-adaptview-expose-hidden"
    },
    routers: {
      type: Object,
      "default": function _default() {
        return {
          reload: "dispatch:current/reload"
        };
      }
    },
    listConf: {
      type: Object,
      "default": void 0
    },
    itemClassName: {
      type: String,
      "default": null
    },
    beforeUpload: {
      type: Function,
      "default": void 0
    }
  };
  Ti.Preload("ti/com/wn/adaptlist/wn-adaptlist-props.mjs", t);
}(), Ti.Preload("ti/com/wn/adaptlist/wn-adaptlist.html", '<div class="wn-adaptlist" \n  :class="TopClass"\n  v-ti-activable>\n  <div\n    class="list-con ti-fill-parent"\n    v-drop-files.mask="OnDropFiles">\n    \x3c!--==================================\n      Show Loading\n    --\x3e\n    <ti-loading\n      v-if="isReloading"\n        class="as-reloading as-mid-tip"\n        text="i18n:reloading"/>\n    \x3c!--==================================\n      Data List\n    --\x3e\n    <ti-wall\n      v-else\n        class="ti-fill-parent"\n        :data="WallDataList"\n        :spacing="spacing"\n        :changed-id="changedId"\n        :current-id="myCurrentId"\n        :checked-ids="myCheckedIds"\n        :multi="multi"\n        :checkable="checkable"\n        :blurable="blurable"\n        :selectable="selectable"\n        :display="WallItemDisplay"\n        :puppet-mode="true"\n        v-bind="listConf"\n        :on-init="OnListInit"\n        @select="OnItemSelecteItem"\n        @open="OnItemOpen"/>\n    \x3c!--==================================\n      Hidden file upload control\n    --\x3e\n    <input \n      type="file" \n      ref="file" \n      class="ti-hide"\n      multiple\n      @change.stop.seft="OnSelectLocalFilesToUpload">\n    \x3c!--==================================\n      Uploading Pannel\n    --\x3e\n    <div\n      class="wal-uploading"\n      :class="UploadingClass">\n      <header>\n        <ti-icon value="fas-spinner fa-pulse"/>\n        <span>{{\'uploading\'|i18n}}</span>\n      </header>\n      <section>\n        <ti-wall \n          :data="TheUploadingList"\n          :spacing="spacing"\n          :selectable="false"\n          :multi="false"\n          :checkable="false"\n          :blurable="false"\n          :display="UploadingItemDisplay"\n          :puppet-mode="true"/>\n      </section>\n    </div>\n    \x3c!--==================================--\x3e\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myCurrentId: null,
        myCheckedIds: {},
        myUploadigFiles: [],
        myItemStatus: {},
        myExposeHidden: !0,
        myData: null
      };
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      isReloading: function isReloading() {
        return _.get(this.status, "reloading");
      },
      WallItemDisplay: function WallItemDisplay() {
        return {
          key: "..",
          comType: "ti-obj-thumb",
          comConf: {
            "...": "${=value}"
          }
        };
      },
      UploadingItemDisplay: function UploadingItemDisplay() {
        return {
          key: "..",
          comType: "ti-obj-thumb",
          comConf: {
            "...": "${=value}"
          }
        };
      },
      hasDataList: function hasDataList() {
        return this.myData && _.isArray(this.myData.list);
      },
      WallDataList: function WallDataList() {
        if (!this.myData || _.isEmpty(this.myData.list)) return [];
        var t = [];

        var _iterator75 = _createForOfIteratorHelper(this.myData.list),
            _step75;

        try {
          for (_iterator75.s(); !(_step75 = _iterator75.n()).done;) {
            var e = _step75.value;

            if (!this.isHiddenItem(e)) {
              var i = Wn.Util.getObjThumbInfo(e, {
                status: this.myItemStatus,
                exposeHidden: this.myExposeHidden
              });
              t.push(i);
            }
          }
        } catch (err) {
          _iterator75.e(err);
        } finally {
          _iterator75.f();
        }

        return t;
      },
      TheUploadingList: function TheUploadingList() {
        var t = this.myUploadigFiles,
            e = [];

        if (_.isArray(t)) {
          var _iterator76 = _createForOfIteratorHelper(t),
              _step76;

          try {
            for (_iterator76.s(); !(_step76 = _iterator76.n()).done;) {
              var i = _step76.value;

              var _t147 = void 0,
                  n = i.file.type,
                  a = Ti.Util.getSuffixName(i.file.name);

              _t147 = /^image\//.test(n) ? {
                type: "localFile",
                value: i.file
              } : Ti.Icons.get({
                tp: a,
                mime: n
              }), e.push({
                id: i.id,
                title: i.file.name,
                preview: _t147,
                progress: i.current / i.total
              });
            }
          } catch (err) {
            _iterator76.e(err);
          } finally {
            _iterator76.f();
          }
        }

        return e;
      },
      hasUploading: function hasUploading() {
        return this.myUploadigFiles.length > 0;
      },
      UploadingClass: function UploadingClass() {
        return this.hasUploading ? "up-show" : "up-hide";
      }
    },
    methods: {
      OnListInit: function OnListInit(t) {
        this.$innerList = t;
      },
      OnItemSelecteItem: function OnItemSelecteItem(_ref111) {
        var t = _ref111.currentId,
            e = _ref111.checkedIds,
            i = _ref111.currentIndex;
        this.myCurrentId = t, this.myCheckedIds = e;
        var n = {
          current: this.getCurrentItem(),
          checked: this.getCheckedItems(),
          checkedIds: e,
          currentId: t,
          currentIndex: i
        };
        return this.$notify("select", n), {
          stop: !0
        };
      },
      OnItemOpen: function OnItemOpen() {
        var t = this.getCurrentItem();
        t && this.$notify("open", t);
      },
      OnDropFiles: function OnDropFiles(t) {
        var _this214 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee105() {
          var e;
          return regeneratorRuntime.wrap(function _callee105$(_context106) {
            while (1) {
              switch (_context106.prev = _context106.next) {
                case 0:
                  if (_this214.droppable) {
                    _context106.next = 2;
                    break;
                  }

                  return _context106.abrupt("return");

                case 2:
                  e = _toConsumableArray(t);
                  _context106.next = 5;
                  return _this214.doUpload(e);

                case 5:
                  _this214.$nextTick(function () {
                    var t = [];
                    _this214.hasDataList && _.forEach(_this214.myData.list, function (e) {
                      _this214.myCheckedIds[e.id] && t.push(e);
                    }), _this214.$notify("uploaded", t);
                  });

                case 6:
                case "end":
                  return _context106.stop();
              }
            }
          }, _callee105);
        }))();
      },
      OnSelectLocalFilesToUpload: function OnSelectLocalFilesToUpload(t) {
        var _this215 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee106() {
          return regeneratorRuntime.wrap(function _callee106$(_context107) {
            while (1) {
              switch (_context107.prev = _context107.next) {
                case 0:
                  _context107.next = 2;
                  return _this215.OnDropFiles(t.target.files);

                case 2:
                  _this215.$refs.file.value = "";

                case 3:
                case "end":
                  return _context107.stop();
              }
            }
          }, _callee106);
        }))();
      },
      getCurrentItem: function getCurrentItem() {
        var _this216 = this;

        if (this.myCurrentId && this.hasDataList) return _.find(this.myData.list, function (t) {
          return t.id == _this216.myCurrentId;
        });
      },
      getCheckedItems: function getCheckedItems() {
        var _this217 = this;

        return this.hasDataList ? _.filter(this.myData.list, function (t) {
          return _this217.myCheckedIds[t.id];
        }) : [];
      },
      setItem: function setItem(t) {
        if (t && this.hasDataList) {
          var e = _.map(this.myData.list, function (e) {
            return e.id == t.id ? t : e;
          });

          this.myData.list = e;
        }
      },
      setItemStatus: function setItemStatus(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "loading";
        this.myItemStatus = _.assign({}, this.myItemStatus, _defineProperty({}, t, e));
      },
      invokeList: function invokeList(t) {
        console.log("methodName"), Ti.InvokeBy(this.$innerList, t);
      },
      isHiddenItem: function isHiddenItem(t) {
        return !(!t.nm.startsWith(".") || this.myExposeHidden);
      },
      _run: function _run(t, e) {
        var _this218 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee107() {
          var i, _t148;

          return regeneratorRuntime.wrap(function _callee107$(_context108) {
            while (1) {
              switch (_context108.prev = _context108.next) {
                case 0:
                  i = (_this218.routers || {})[t];

                  if (!_.isFunction(i)) {
                    _context108.next = 6;
                    break;
                  }

                  _context108.next = 4;
                  return i();

                case 4:
                  _context108.next = 11;
                  break;

                case 6:
                  if (!i) {
                    _context108.next = 11;
                    break;
                  }

                  _t148 = Ti.App(_this218);
                  _context108.next = 10;
                  return _t148.exec(i, e);

                case 10:
                  return _context108.abrupt("return", _context108.sent);

                case 11:
                case "end":
                  return _context108.stop();
              }
            }
          }, _callee107);
        }))();
      },
      toggleExposeHidden: function toggleExposeHidden() {
        var t = !this.myExposeHidden;
        this.myExposeHidden = t, this.keeyHiddenBy && Ti.Storage.session.set(this.keeyHiddenBy, t);
      },
      openLocalFileSelectdDialog: function openLocalFileSelectdDialog() {
        this.$refs.file.click();
      },
      openCurrentMeta: function openCurrentMeta() {
        var _this219 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee108() {
          var t, e, _t149, i;

          return regeneratorRuntime.wrap(function _callee108$(_context109) {
            while (1) {
              switch (_context109.prev = _context109.next) {
                case 0:
                  t = _this219.getCurrentItem() || _this219.meta;

                  if (t) {
                    _context109.next = 3;
                    break;
                  }

                  return _context109.abrupt("return", Ti.Toast.Open("i18n:nil-obj"));

                case 3:
                  _context109.next = 5;
                  return Wn.EditObjMeta(t, {
                    fields: "auto"
                  });

                case 5:
                  e = _context109.sent;

                  if (e) {
                    _t149 = e.updates, i = e.data;

                    _this219.setItem(i);
                  }

                case 7:
                case "end":
                  return _context109.stop();
              }
            }
          }, _callee108);
        }))();
      },
      syncMyData: function syncMyData() {
        this.myData = _.cloneDeep(this.data) || {
          list: [],
          pager: {}
        }, this.myItemStatus = {};
      }
    },
    watch: {
      data: {
        handler: "syncMyData",
        immediate: !0
      },
      myExposeHidden: function myExposeHidden(t) {
        this.$notify("expose-hidden", t);
      }
    },
    mounted: function mounted() {
      var _this220 = this;

      Ti.Fuse.getOrCreate().add({
        key: "wn-list-adaptview-check-uploading",
        everythingOk: function everythingOk() {
          return !_this220.hasUploading;
        },
        fail: function fail() {
          Ti.Toast.Open("i18n:upload-nofinished", "warn");
        }
      }), this.keeyHiddenBy && (this.myExposeHidden = Ti.Storage.session.getBoolean(this.keeyHiddenBy));
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Fuse.get().remove("wn-list-adaptview-check-uploading");
    }
  };
  Ti.Preload("ti/com/wn/adaptlist/wn-adaptlist.mjs", t);
}(), Ti.Preload("ti/com/wn/adaptlist/_com.json", {
  name: "wn-adaptlist",
  globally: !0,
  template: "./wn-adaptlist.html",
  props: "./wn-adaptlist-props.mjs",
  methods: "./wn-adaptlist-methods.mjs",
  mixins: ["./wn-adaptlist.mjs"],
  components: ["@com:ti/obj/thumb", "@com:ti/wall"]
}), Ti.Preload("ti/com/wn/chart/combo/wn-chart-combo.html", '<div class="wn-chart-combo"\n  :class="TopClass">\n  \x3c!--\n    Chart List\n  --\x3e\n  <div class="as-main">\n    <TiChartCombo\n      v-for="li of TheChartList" \n        :key="li.index"\n        v-bind="li"\n        :data="getChartData(li.index)"\n        @change:chart:name="OnChangeChartName(li, $event)"\n        @change:chart:type="OnChangeChartType(li, $event)"\n        @change:chart:datespan="OnChangeChartDateSpan(li, $event)"\n        @reload:data="OnReloadChartData(li, $event)"/>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myCharts: [],
        myShowChartNames: [],
        myChartData: {},
        myDate: void 0,
        mySpan: void 0,
        myChartComConf: {}
      };
    },
    props: {
      chartDefines: {
        type: Object,
        "default": void 0
      },
      chartOptions: {
        type: Object,
        "default": void 0
      },
      charts: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      showCharts: {
        type: [String, Array],
        "default": void 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-multi-chart": this.TheChartList.length > 1
        });
      },
      TheShowChartNames: function TheShowChartNames() {
        return _.isEmpty(this.myShowChartNames) ? this.showCharts : this.myShowChartNames;
      },
      TheChartNameList: function TheChartNameList() {
        var t = [];
        return _.forEach(this.charts, function (e) {
          t.push(_.pick(e, "name", "title", "icon"));
        }), t;
      },
      TheChartMap: function TheChartMap() {
        var t = {};
        return _.forEach(this.charts, function (e) {
          t[e.name] = e;
        }), t;
      },
      TheChartList: function TheChartList() {
        var _this221 = this;

        var t = _.concat(this.TheShowChartNames),
            e = [];

        return _.forEach(t, function (t, i) {
          var n = _.get(_this221.TheChartMap, t);

          if (!n) return;

          var a = _.nth(_this221.myCharts, i) || {},
              s = _.cloneDeep(a),
              o = _.cloneDeep(_this221.chartOptions);

          o = _.merge(o, n.chartOptions), _.defaults(s, {
            chartDefines: _this221.chartDefines,
            nameList: _this221.TheChartNameList,
            index: i,
            name: n.name,
            chartTypes: n.types,
            type: n.type,
            chartOptions: o
          }), s.type && _.indexOf(s.chartTypes, s.type) < 0 && (s.type = n.type), e.push(s);
        }), e;
      }
    },
    methods: {
      OnReloadChartData: function OnReloadChartData(_ref112, _ref113) {
        var _this222 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee109() {
          var t, e, i, n;
          return regeneratorRuntime.wrap(function _callee109$(_context110) {
            while (1) {
              switch (_context110.prev = _context110.next) {
                case 0:
                  t = _ref112.index;
                  e = _ref113.force, i = _ref113.cleanCache, n = _ref113.done;
                  _context110.next = 4;
                  return _this222.reloadChartData(t, {
                    force: e,
                    cleanCache: i
                  });

                case 4:
                  _.isFunction(n) && n();

                case 5:
                case "end":
                  return _context110.stop();
              }
            }
          }, _callee109);
        }))();
      },
      OnChangeChartName: function OnChangeChartName(_ref114, e) {
        var _this223 = this;

        var t = _ref114.index;
        this.$set(this.myShowChartNames, t, e), this.$set(this.myChartData, t, []), this.$nextTick(function () {
          _this223.reloadChartData(t);
        });
      },
      OnChangeChartType: function OnChangeChartType(_ref115, e) {
        var t = _ref115.index;
        this.setMyChart(t, {
          type: e
        });
      },
      OnChangeChartDateSpan: function OnChangeChartDateSpan(_ref116, _ref117) {
        var _this224 = this;

        var t = _ref116.index;
        var e = _ref117.date,
            i = _ref117.span;
        this.setMyChart(t, {
          date: e,
          span: i
        }), this.$nextTick(function () {
          _this224.reloadChartData(t);
        });
      },
      setMyChart: function setMyChart(t, e) {
        var i = _.nth(this.myCharts, t) || {};
        i = _.assign({}, i, e), this.$set(this.myCharts, t, i);
      },
      getChartData: function getChartData(t) {
        return _.get(this.myChartData, t);
      },
      reloadChartData: function reloadChartData(t) {
        var _arguments20 = arguments,
            _this225 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee110() {
          var _ref118, _ref118$force, e, _ref118$cleanCache, i, n, a, s, o, l, r, _ref119, d, c, h, m, p;

          return regeneratorRuntime.wrap(function _callee110$(_context111) {
            while (1) {
              switch (_context111.prev = _context111.next) {
                case 0:
                  _ref118 = _arguments20.length > 1 && _arguments20[1] !== undefined ? _arguments20[1] : {}, _ref118$force = _ref118.force, e = _ref118$force === void 0 ? !1 : _ref118$force, _ref118$cleanCache = _ref118.cleanCache, i = _ref118$cleanCache === void 0 ? !1 : _ref118$cleanCache;
                  n = _.nth(_this225.TheShowChartNames, t), a = _.get(_this225.TheChartMap, n);

                  if (a) {
                    _context111.next = 4;
                    break;
                  }

                  return _context111.abrupt("return");

                case 4:
                  s = a.name, o = a.agg, l = a.sum, r = a.sumOptions, _ref119 = _.nth(_this225.myCharts, t) || {}, d = _ref119.date, c = _ref119.span, h = ["statistics sum '".concat(l, "' -json -cqn")];
                  d && h.push("-date '".concat(d, "'")), c && h.push("-span '".concat(c, "'")), o && (h.push("-agg '".concat(o, "'")), i && h.push("-agg-force")), e && h.push("-force"), _.forEach(r, function (t, e) {
                    var i;
                    i = _.isString(t) || _.isNumber(t) || _.isBoolean(t) ? t : JSON.stringify(t), h.push("-".concat(e, " '").concat(i, "'"));
                  });
                  m = h.join(" ");
                  _context111.next = 9;
                  return Wn.Sys.exec2(m, {
                    as: "json"
                  });

                case 9:
                  p = _context111.sent;
                  p && _.isArray(p) && _this225.$set(_this225.myChartData, t, p);

                case 11:
                case "end":
                  return _context111.stop();
              }
            }
          }, _callee110);
        }))();
      },
      preloadChartData: function preloadChartData() {
        if (!_.isEmpty(this.showCharts)) for (var _t150 = 0; _t150 < this.showCharts.length; _t150++) {
          this.reloadChartData(_t150);
        }
      }
    },
    watch: {
      showCharts: {
        handler: function handler(t, e) {
          this.myShowChartNames = _.cloneDeep(this.showCharts), _.isEqual(t, e) || this.preloadChartData();
        },
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/wn/chart/combo/wn-chart-combo.mjs", t);
}(), Ti.Preload("ti/com/wn/chart/combo/_com.json", {
  name: "wn-chart-combo",
  globally: !0,
  template: "./wn-chart-combo.html",
  mixins: ["./wn-chart-combo.mjs"],
  components: ["@com:ti/chart/combo"],
  deps: []
}), Ti.Preload("ti/com/wn/cmd/panel/wn-cmd-panel.html", '<pre class="wn-cmd-panel"\n  :class="TopClass"><div  \n    v-for="(line, index) in lines"\n      :key="index"\n      class="as-line">{{line}}</div>\n</pre>'), function () {
  var t = {
    data: function data() {
      return {
        lines: []
      };
    },
    props: {
      value: {
        type: String,
        "default": void 0
      },
      vars: {
        type: Object,
        "default": void 0
      },
      as: {
        type: String,
        "default": "text"
      },
      emitName: {
        type: String,
        "default": void 0
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      }
    },
    methods: {
      clear: function clear() {
        this.lines = [];
      },
      runCommand: function runCommand() {
        var _this226 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee111() {
          var t;
          return regeneratorRuntime.wrap(function _callee111$(_context112) {
            while (1) {
              switch (_context112.prev = _context112.next) {
                case 0:
                  if (_this226.value) {
                    _context112.next = 2;
                    break;
                  }

                  return _context112.abrupt("return");

                case 2:
                  _this226.lines.push("---------------------------------"), _this226.lines.push(Ti.I18n.get("run-welcome")), _this226.lines.push("> " + _this226.value), _this226.lines.push("---------------------------------");
                  _context112.next = 5;
                  return Wn.Sys.exec(_this226.value, {
                    as: _this226.as,
                    vars: _this226.vars,
                    eachLine: function eachLine(t) {
                      _this226.lines.push(t);
                    }
                  });

                case 5:
                  t = _context112.sent;
                  _this226.lines.push("---------------------------------"), _this226.lines.push("> " + _this226.value), _this226.lines.push(Ti.I18n.get("run-finished")), _this226.lines.push("---------------------------------"), _this226.emitName && _this226.$notify(_this226.emitName, t);

                case 7:
                case "end":
                  return _context112.stop();
              }
            }
          }, _callee111);
        }))();
      }
    },
    watch: {
      value: {
        handler: "runCommand",
        immediate: !0
      },
      lines: function lines() {
        this.$el.scrollTop = 2 * this.$el.scrollHeight;
      }
    }
  };
  Ti.Preload("ti/com/wn/cmd/panel/wn-cmd-panel.mjs", t);
}(), Ti.Preload("ti/com/wn/cmd/panel/_com.json", {
  name: "wn-cmd-panel",
  globally: !0,
  template: "./wn-cmd-panel.html",
  mixins: ["./wn-cmd-panel.mjs"]
}), Ti.Preload("ti/com/wn/combo/edit-com/wn-combo-edit-com.html", '<ti-label\n  class="wn-combo-edit-com"\n  :class="className"\n  :placeholder="placeholder"\n  :prefix-icon="ComIcon"\n  :value="ComTitle"\n  :suffix-icon="\'zmdi-delete\'"\n  @click:value="OnClickValue"\n  @suffix:icon="OnClickSuffixIcon"/>\n  '), function () {
  var t = {
    data: function data() {
      return {
        myCom: null
      };
    },
    props: {
      value: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      placeholder: {
        type: String,
        "default": "i18n:wn-edit-com-nil"
      }
    },
    computed: {
      Dict: function Dict() {
        return Wn.Dict.hMakerComponents();
      },
      ComIcon: function ComIcon() {
        return _.get(this.myCom, "icon");
      },
      ComTitle: function ComTitle() {
        return _.get(this.myCom, "title");
      }
    },
    methods: {
      OnClickValue: function OnClickValue() {
        var _this227 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee112() {
          var t;
          return regeneratorRuntime.wrap(function _callee112$(_context113) {
            while (1) {
              switch (_context113.prev = _context113.next) {
                case 0:
                  _context113.next = 2;
                  return Wn.EditTiComponent(_this227.value);

                case 2:
                  t = _context113.sent;
                  t && _this227.notifyChange(t);

                case 4:
                case "end":
                  return _context113.stop();
              }
            }
          }, _callee112);
        }))();
      },
      OnClickSuffixIcon: function OnClickSuffixIcon() {
        this.notifyChange({});
      },
      notifyChange: function notifyChange() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        t.comType || (t.comType = void 0, t.comConf = void 0), this.$notify("change", t);
      },
      reloadMyCom: function reloadMyCom() {
        var _this228 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee113() {
          var _t151;

          return regeneratorRuntime.wrap(function _callee113$(_context114) {
            while (1) {
              switch (_context114.prev = _context114.next) {
                case 0:
                  if (!_.isEmpty(_this228.value)) {
                    _context114.next = 4;
                    break;
                  }

                  _this228.myCom = null;
                  _context114.next = 8;
                  break;

                case 4:
                  _t151 = _this228.value.comType;
                  _context114.next = 7;
                  return _this228.Dict.getItem(_t151);

                case 7:
                  _this228.myCom = _context114.sent;

                case 8:
                case "end":
                  return _context114.stop();
              }
            }
          }, _callee113);
        }))();
      }
    },
    watch: {
      value: {
        handler: "reloadMyCom",
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/wn/combo/edit-com/wn-combo-edit-com.mjs", t);
}(), Ti.Preload("ti/com/wn/combo/edit-com/_com.json", {
  name: "wn-combo-edit-com",
  globally: !0,
  template: "./wn-combo-edit-com.html",
  mixins: "./wn-combo-edit-com.mjs"
}), Ti.Preload("ti/com/wn/combo/input/wn-combo-input.html", '<ti-combo-input v-bind="this"\n  \n  :options="OptionsDict"\n  :drop-com-type="DropComType"\n  :prefix-icon="ThePrefixIcon"\n  :drop-display="TheDropDisplay"\n  \n  @change="$notify(\'change\', $event)"/>\n  '), function () {
  var t = {
    data: function data() {
      return {
        loading: !1
      };
    },
    props: {
      itemBy: {
        type: [String, Function],
        "default": void 0
      },
      findBy: {
        type: [String, Function],
        "default": void 0
      },
      loadingIcon: {
        type: String,
        "default": "zmdi-settings zmdi-hc-spin"
      },
      canInput: {
        type: Boolean,
        "default": !0
      },
      autoCollapse: {
        type: Boolean,
        "default": !1
      }
    },
    computed: {
      DropComType: function DropComType() {
        return this.dropComType || "wn-list";
      },
      ThePrefixIcon: function ThePrefixIcon() {
        return this.loading ? this.loadingIcon : this.prefixIcon;
      },
      OptionsDict: function OptionsDict() {
        var _this229 = this;

        return Wn.Dict.evalOptionsDict(this, function (_ref120) {
          var t = _ref120.loading;
          _this229.loading = t;
        });
      },
      TheDropDisplay: function TheDropDisplay() {
        return this.dropDisplay || ["@<thumb>", "title|text"];
      }
    }
  };
  Ti.Preload("ti/com/wn/combo/input/wn-combo-input.mjs", t);
}(), Ti.Preload("ti/com/wn/combo/input/_com.json", {
  name: "wn-combo-input",
  globally: !0,
  template: "./wn-combo-input.html",
  props: ["@com:ti/input/ti-input-props.mjs", "@com:ti/combo/input/ti-combo-input-props.mjs"],
  mixins: "./wn-combo-input.mjs",
  components: ["@com:ti/combo/input", "@com:wn/list", "@com:wn/obj/icon"]
}), Ti.Preload("ti/com/wn/combo/multi-input/wn-combo-multi-input.html", '<ti-combo-multi-input v-bind="this"\n\n  :options="OptionsDict"\n  :tag-mapping="TheTagMapping"\n  :drop-com-type="DropComType"\n  :prefix-icon="ThePrefixIcon"\n  :tag-item-icon-by="TheTagItemIconBy"\n  :drop-display="TheDropDisplay"\n  \n  @change="$notify(\'change\', $event)"/>\n  '), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        loading: !1
      };
    },
    props: {
      itemBy: {
        type: [String, Function],
        "default": void 0
      },
      findBy: {
        type: [String, Function],
        "default": void 0
      },
      loadingIcon: {
        type: String,
        "default": "zmdi-settings zmdi-hc-spin"
      }
    },
    computed: {
      DropComType: function DropComType() {
        return this.dropComType || "wn-list";
      },
      ThePrefixIcon: function ThePrefixIcon() {
        return this.loading && this.prefixIcon ? this.loadingIcon : this.prefixIcon;
      },
      OptionsDict: function OptionsDict() {
        var _this230 = this;

        return Wn.Dict.evalOptionsDict(this, function (_ref121) {
          var t = _ref121.loading;
          _this230.loading = t;
        });
      },
      TheTagMapping: function TheTagMapping() {
        return _.isEmpty(this.tagMapping) ? {
          text: "title|nm",
          icon: "icon",
          value: "id"
        } : this.tagMapping;
      },
      TheTagItemIconBy: function TheTagItemIconBy() {
        return this.tagItemIconBy || function (t) {
          return Wn.Util.getObjIcon(t);
        };
      },
      TheDropDisplay: function TheDropDisplay() {
        return this.dropDisplay || ["@<thumb>", "title", "nm"];
      }
    }
  };
  Ti.Preload("ti/com/wn/combo/multi-input/wn-combo-multi-input.mjs", t);
}(), Ti.Preload("ti/com/wn/combo/multi-input/_com.json", {
  name: "wn-combo-multi-input",
  globally: !0,
  template: "./wn-combo-multi-input.html",
  props: ["@com:ti/input/ti-input-props.mjs", "@com:ti/input/tags/ti-input-tags-props.mjs", "@com:ti/combo/input/ti-combo-input-props.mjs"],
  mixins: "./wn-combo-multi-input.mjs",
  components: ["@com:ti/combo/multi-input", "@com:wn/list", "@com:wn/obj/icon"]
}), Ti.Preload("ti/com/wn/droplist/wn-droplist.html", '<component \n  :is="ComType"\n  v-bind="this"\n  :can-input="false"\n  :must-in-list="true"\n  :auto-collapse="true"\n  @change="$notify(\'change\', $event)"/>'), function () {
  var t = {
    props: {
      multi: {
        type: Boolean,
        "default": !1
      }
    },
    computed: {
      ComType: function ComType() {
        return this.multi ? "wn-combo-multi-input" : "wn-combo-input";
      }
    }
  };
  Ti.Preload("ti/com/wn/droplist/wn-droplist.mjs", t);
}(), Ti.Preload("ti/com/wn/droplist/_com.json", {
  name: "wn-droplist",
  globally: !0,
  template: "./wn-droplist.html",
  props: ["@com:ti/input/ti-input-props.mjs", "@com:ti/input/tags/ti-input-tags-props.mjs", "@com:ti/combo/input/ti-combo-input-props.mjs"],
  mixins: ["./wn-droplist.mjs"],
  components: ["@com:wn/combo/input", "@com:wn/combo/multi-input"]
}), Ti.Preload("ti/com/wn/entity/history/wn-entity-history.html", '<ti-gui\n  class="wn-entity-history"\n  :class="TopClass"\n  :layout="Layout"\n  :schema="Schema"\n  :shown="myShown"\n  :can-loading="true"\n  :loading-as="loading"\n  @block:shown="OnShownChange"\n  @filter::change="OnFilterChange"\n  @sorter::change="OnSorterChange"\n  @pager::change="OnPagerChange"\n  @list::select="OnSelect"/>'), function () {
  var t = {
    data: function data() {
      return {
        myShown: {},
        myList: [],
        myHisRecord: null,
        myFilterKeyword: null,
        myFilterMatch: {},
        mySort: {
          ct: -1
        },
        myPager: {
          pn: 1,
          pgsz: 20
        },
        loading: !1
      };
    },
    props: {
      prefix: {
        type: String,
        "default": "~/.domain/history"
      },
      meta: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      HistoryItems: function HistoryItems() {
        if (!this.meta) return [];

        if (this.prefix) {
          if (!Wn.Io.getFormedPath(this.meta).startsWith(this.prefix)) return [];
        }

        var t = [];
        return _.forEach(this.data.list, function (e) {
          if ("FILE" != e.race || !e.nm.endsWith(".json")) return;
          var i = Ti.Util.getMajorName(e.nm),
              n = e.title;
          n || (n = "_history" == i ? "i18n:default" : i), t.push({
            name: i,
            title: n
          });
        }), _.isEmpty(t) || (this.myShown = _.assign(_defineProperty({}, _.first(t).name, !0), this.myShown)), t;
      },
      CurrentHistory: function CurrentHistory() {
        return _.first(Ti.Util.truthyKeys(this.myShown));
      },
      Layout: function Layout() {
        var t = [];

        var _iterator77 = _createForOfIteratorHelper(this.HistoryItems),
            _step77;

        try {
          for (_iterator77.s(); !(_step77 = _iterator77.n()).done;) {
            var e = _step77.value;
            t.push({
              type: "cols",
              title: e.title,
              name: e.name,
              border: !0,
              blocks: [{
                type: "rows",
                size: "65%",
                blocks: [{
                  type: "cols",
                  size: ".44rem",
                  blocks: [{
                    name: "filter",
                    flex: "both",
                    body: "filter"
                  }, {
                    name: "sorter",
                    flex: "none",
                    body: "sorter"
                  }]
                }, {
                  name: "list",
                  size: "stretch",
                  overflow: "cover",
                  body: "list"
                }, {
                  name: "pager",
                  size: "auto",
                  body: "pager"
                }]
              }, {
                name: "form",
                body: "form"
              }]
            });
          }
        } catch (err) {
          _iterator77.e(err);
        } finally {
          _iterator77.f();
        }

        return {
          type: "tabs",
          blocks: t
        };
      },
      Schema: function Schema() {
        return {
          filter: {
            comType: "TiComboFilter",
            comConf: {
              placeholder: "i18n:wn-en-his-flt-tip",
              dropWidth: -500,
              form: {
                fields: [{
                  title: "i18n:wn-en-his-ct",
                  name: "ct",
                  comType: "ti-input-daterange",
                  comConf: {
                    valueType: "ms-range"
                  }
                }, {
                  title: "i18n:wn-en-his-utp",
                  name: "utp",
                  comType: "ti-input"
                }, {
                  title: "i18n:wn-en-his-tid",
                  name: "tid",
                  comType: "ti-input"
                }, {
                  title: "i18n:wn-en-his-tnm",
                  name: "tnm",
                  comType: "ti-input"
                }, {
                  title: "i18n:wn-en-his-ttp",
                  name: "ttp",
                  comType: "ti-input"
                }, {
                  title: "i18n:wn-en-his-opt",
                  name: "opt",
                  comType: "ti-input"
                }]
              },
              value: {
                keyword: this.myFilterKeyword,
                match: this.myFilterMatch
              }
            }
          },
          sorter: {
            comType: "TiComboSorter",
            comConf: {
              dropWidth: 200,
              options: [{
                value: "ct",
                text: "i18n:wn-en-his-ct"
              }, {
                value: "utp",
                text: "i18n:wn-en-his-utp"
              }, {
                value: "ttp",
                text: "i18n:wn-en-his-ttp"
              }],
              value: this.mySort
            }
          },
          list: {
            comType: "TiTable",
            comConf: {
              data: this.myList,
              fields: [{
                title: "i18n:wn-en-his-ct",
                display: {
                  key: "ct",
                  transformer: "Ti.DateTime.format"
                }
              }, {
                title: "i18n:wn-en-his-usr",
                display: ["utp:$${val}:", "unm|uid"]
              }, {
                title: "i18n:wn-en-his-opt",
                display: "opt"
              }, {
                title: "i18n:wn-en-his-tar",
                display: ["ttp:$${val}:", "tnm|tid"]
              }]
            }
          },
          pager: {
            comType: "TiPagingJumper",
            comConf: {
              value: this.myPager
            }
          },
          form: {
            comType: "TiForm",
            comConf: {
              data: this.myHisRecord,
              autoShowBlank: !0,
              fields: [{
                title: "ID",
                name: "id"
              }, {
                title: "i18n:wn-en-his-uid",
                name: "uid"
              }, {
                title: "i18n:wn-en-his-unm",
                name: "unm"
              }, {
                title: "i18n:wn-en-his-utp",
                name: "utp"
              }, {
                title: "i18n:wn-en-his-ct",
                name: "ct",
                type: "AMS"
              }, {
                title: "i18n:wn-en-his-tid",
                name: "tid"
              }, {
                title: "i18n:wn-en-his-tnm",
                name: "tnm"
              }, {
                title: "i18n:wn-en-his-ttp",
                name: "ttp"
              }, {
                title: "i18n:wn-en-his-opt",
                name: "opt"
              }, {
                title: "i18n:wn-en-his-mor",
                name: "mor"
              }]
            }
          }
        };
      }
    },
    methods: {
      OnShownChange: function OnShownChange(t) {
        this.myShown = t;
      },
      OnSelect: function OnSelect(_ref122) {
        var t = _ref122.current;
        this.myHisRecord = t;
      },
      OnFilterChange: function OnFilterChange() {
        var _arguments21 = arguments,
            _this231 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee114() {
          var _ref123, t, e;

          return regeneratorRuntime.wrap(function _callee114$(_context115) {
            while (1) {
              switch (_context115.prev = _context115.next) {
                case 0:
                  _ref123 = _arguments21.length > 0 && _arguments21[0] !== undefined ? _arguments21[0] : {}, t = _ref123.match, e = _ref123.keyword;
                  _this231.myFilterMatch = t;
                  _this231.myFilterKeyword = e;
                  _context115.next = 5;
                  return _this231.reloadList();

                case 5:
                case "end":
                  return _context115.stop();
              }
            }
          }, _callee114);
        }))();
      },
      OnSorterChange: function OnSorterChange(t) {
        var _this232 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee115() {
          return regeneratorRuntime.wrap(function _callee115$(_context116) {
            while (1) {
              switch (_context116.prev = _context116.next) {
                case 0:
                  _this232.mySort = t;
                  _context116.next = 3;
                  return _this232.reloadList();

                case 3:
                case "end":
                  return _context116.stop();
              }
            }
          }, _callee115);
        }))();
      },
      OnPagerChange: function OnPagerChange(t) {
        var _this233 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee116() {
          return regeneratorRuntime.wrap(function _callee116$(_context117) {
            while (1) {
              switch (_context117.prev = _context117.next) {
                case 0:
                  _.assign(_this233.myPager, t);

                  _context117.next = 3;
                  return _this233.reloadList();

                case 3:
                case "end":
                  return _context117.stop();
              }
            }
          }, _callee116);
        }))();
      },
      reloadList: function reloadList() {
        var _this234 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee117() {
          var t, e, _t152, i, n, a;

          return regeneratorRuntime.wrap(function _callee117$(_context118) {
            while (1) {
              switch (_context118.prev = _context118.next) {
                case 0:
                  t = _this234.CurrentHistory;

                  if (t) {
                    _context118.next = 3;
                    break;
                  }

                  return _context118.abrupt("return", (_this234.myList = [], void (_this234.myPager = {})));

                case 3:
                  "_history" == t && (t = "");
                  e = ["history ".concat(t, " query")];

                  if (!_.isEmpty(_this234.mySort)) {
                    _t152 = JSON.stringify(_this234.mySort);
                    e.push("-sort '".concat(_t152, "'"));
                  }

                  e.push("-pn ".concat(_this234.myPager.pn)), e.push("-pgsz ".concat(_this234.myPager.pgsz)), e.push("-cqn");
                  i = _.assign({}, _this234.myFilterMatch);
                  _this234.myFilterKeyword && (Wn.Io.isFullObjId(_this234.myFilterKeyword) ? i.uid = _this234.myFilterKeyword : i.unm = _this234.myFilterKeyword);
                  n = JSON.stringify(i);
                  _this234.loading = !0;
                  _context118.next = 13;
                  return Wn.Sys.exec2(e.join(" "), {
                    input: n,
                    as: "json"
                  });

                case 13:
                  a = _context118.sent;
                  _this234.myList = a.list, _this234.myPager = a.pager, _this234.loading = !1;

                case 15:
                case "end":
                  return _context118.stop();
              }
            }
          }, _callee117);
        }))();
      }
    },
    watch: {
      CurrentHistory: function CurrentHistory() {
        this.reloadList();
      }
    }
  };
  Ti.Preload("ti/com/wn/entity/history/wn-entity-history.mjs", t);
}(), Ti.Preload("ti/com/wn/entity/history/_com.json", {
  name: "wn-entity-history",
  globally: !0,
  template: "./wn-entity-history.html",
  mixins: ["./wn-entity-history.mjs"],
  components: ["@com:ti/input/daterange", "@com:ti/combo/filter", "@com:ti/paging/jumper"]
}), Ti.Preload("ti/com/wn/explorer/wn-explorer.html", '<div class="wn-explorer"\n  v-drop-off\n  :class="topClass">\n  \x3c!--\n    Sky\n  --\x3e\n  <div v-if="show.sky"\n    class="explorer-sky">\n    \x3c!--Logo--\x3e\n    <div v-if="show.logo"\n      class="sky-logo ti-flex-center">\n      <slot name="logo"></slot>\n    </div>\n    \x3c!--Title/Crumb--\x3e\n    <div v-if="!noTitle"\n      class="sky-title">\n      <slot name="title">\n        <ul class="as-address-bar">\n          <li v-for="an in ancestors" :key="an.id">\n            <a :href="getObjLink(an)"\n              @click.prevent="$notify(\'main:open\', an)">{{getObjTitle(an)}}</a>\n            <ti-icon class="center" value="chevron_right"/>\n          </li>\n          <li v-if="meta">\n            <b>{{getObjTitle(meta)}}</b>\n            <span v-if="status.changed"\n              class="ti-mark-changed">*</span>\n          </li>\n        </ul>\n      </slot>\n    </div>\n    \x3c!--Actions--\x3e\n    <div v-if="show.action"\n      class="sky-action ti-flex-right">\n      <slot name="action"></slot>\n    </div>\n  </div>\n  \x3c!--\n    Aside\n  --\x3e\n  <div v-if="show.aside"\n    class="explorer-aside">\n    <slot name="aside"></slot>\n  </div>\n  \x3c!--\n    Main Arena\n  --\x3e\n  <div class="explorer-arena">\n    <slot name="arena"></slot>\n  </div>\n  \x3c!--\n    Footer\n  --\x3e\n  <div v-if="show.footer"\n    class="explorer-footer">\n    <slot name="footer"></slot>\n  </div>\n  <div v-if="loading" class="exploer-loading-mask"></div>\n</div>'), function () {
  var t = {
    props: {
      loading: {
        type: Boolean,
        "default": !1
      },
      noTitle: {
        type: Boolean,
        "default": !1
      },
      meta: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      ancestors: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      children: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      status: {
        type: Object,
        "default": function _default() {
          return {
            changed: !1
          };
        }
      }
    },
    computed: {
      show: function show() {
        var t = {
          logo: !!this.$slots.logo,
          action: !!this.$slots.action,
          aside: !!this.$slots.aside,
          footer: !!this.$slots.footer
        };
        return t.sky = !(this.noTitle && !t.logo && !t.action), t;
      },
      topClass: function topClass() {
        return {
          "no-sky": !this.show.sky,
          "no-aside": !this.show.aside,
          "no-footer": !this.show.footer
        };
      }
    },
    methods: {
      getObjTitle: function getObjTitle(t) {
        var e = t.title || t.nm;
        return Ti.I18n.text(e);
      },
      getObjLink: function getObjLink(t) {
        return Wn.Util.getAppLink(t).toString();
      }
    },
    mounted: function mounted() {}
  };
  Ti.Preload("ti/com/wn/explorer/wn-explorer.mjs", t);
}(), Ti.Preload("ti/com/wn/explorer/_com.json", {
  name: "wn-explorer",
  globally: !0,
  template: "./wn-explorer.html",
  mixins: ["./wn-explorer.mjs"]
}), Ti.Preload("ti/com/wn/gui/arena/wn-gui-arena.html", '<div class="wn-gui-arena">\n  <component \n    :is="comType"\n      class="ti-cover-parent"\n      v-bind="comConf"/>\n</div>'), function () {
  var t = {
    props: {
      meta: {
        type: Object,
        "default": null
      },
      comType: {
        type: String,
        "default": "ti-loading"
      },
      comConf: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    }
  };
  Ti.Preload("ti/com/wn/gui/arena/wn-gui-arena.mjs", t);
}(), Ti.Preload("ti/com/wn/gui/arena/_com.json", {
  name: "wn-gui-arena",
  globally: !0,
  template: "./wn-gui-arena.html",
  mixins: ["./wn-gui-arena.mjs"]
}), Ti.Preload("ti/com/wn/gui/footer/wn-gui-footer.html", '<div class="wn-gui-footer">\n  \x3c!--\n    Info\n  --\x3e\n  <div class="as-info ti-flex-center">\n    <ti-icon v-if="infoIcon"\n      :value="infoIcon"/>\n    <span v-if="infoText"\n      >{{infoText|i18n}}</span>\n  </div>\n  \x3c!--\n    Message\n  --\x3e\n  <div class="as-msg ti-flex-center">\n    {{message}}\n  </div>\n  \x3c!--\n    Indicator\n  --\x3e\n  <div class="as-indi">\n    {{indicator}}\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      infoIcon: {
        type: [String, Object],
        "default": void 0
      },
      infoText: {
        type: String,
        "default": void 0
      },
      message: {
        type: String,
        "default": void 0
      },
      indicator: {
        type: String,
        "default": void 0
      }
    }
  };
  Ti.Preload("ti/com/wn/gui/footer/wn-gui-footer.mjs", t);
}(), Ti.Preload("ti/com/wn/gui/footer/_com.json", {
  name: "wn-gui-footer",
  globally: !0,
  template: "./wn-gui-footer.html",
  mixins: ["./wn-gui-footer.mjs"]
}), Ti.Preload("ti/com/wn/gui/side/nav/com/side-nav-item/side-nav-item.html", '<div class="side-nav-item" :class="topClass">\n  \x3c!--\n    Self Info\n  --\x3e\n  <div class="it-info" >\n    \x3c!--Icon--\x3e\n    <span v-if="icon" class="it-info-icon">\n      <ti-icon :value="icon" size=".16rem"/>\n    </span>\n    \x3c!--Group--\x3e\n    <span v-if="isGroup"\n      class="it-info-text"\n      @click.stop.prevent="onClickGroupInfo">{{title|i18n}}</span>\n    \x3c!--Item--\x3e\n    <a v-else\n      class="it-info-text"\n      :href="href"\n      @click.stop.prevent="onClickItemInfo">\n      {{title|i18n}}\n    </a>\n  </div>\n  \x3c!--\n    Sub Container\n  --\x3e\n  <div class="it-con" v-if="items && items.length > 0">\n      <side-nav-item v-for="subIt in items"\n        :key="subIt.key"\n        :group-status-store-key="subIt.key"\n        :highlight-id="highlightId"\n        v-bind="subIt"\n        @item:actived="$notify(\'item:actived\', $event)"/>\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        collapse: !0
      };
    },
    props: {
      groupStatusStoreKey: {
        type: String,
        "default": null
      },
      highlightId: {
        type: String,
        "default": null
      },
      id: {
        type: String,
        "default": null
      },
      depth: {
        type: Number,
        "default": 0
      },
      icon: {
        type: [String, Object],
        "default": null
      },
      title: {
        type: String,
        "default": null
      },
      path: {
        type: String,
        "default": null
      },
      view: {
        type: String,
        "default": null
      },
      href: {
        type: String,
        "default": null
      },
      items: {
        type: Array,
        "default": function _default() {
          return [];
        }
      }
    },
    computed: {
      topClass: function topClass() {
        return {
          "is-top": this.isTop,
          "is-sub": !this.isTop,
          "is-group": this.isGroup,
          "is-item": !this.isGroup,
          "is-collapse": this.collapse,
          "is-expend": !this.collapse,
          "is-highlight": this.isHighlight
        };
      },
      isTop: function isTop() {
        return 0 == this.depth;
      },
      isGroup: function isGroup() {
        return _.isArray(this.items);
      },
      isHighlight: function isHighlight() {
        return this.id && this.id == this.highlightId;
      }
    },
    methods: {
      onClickGroupInfo: function onClickGroupInfo() {
        this.isGroup && (this.collapse = !this.collapse, this.groupStatusStoreKey && Ti.Storage.session.set(this.groupStatusStoreKey, this.collapse));
      },
      onClickItemInfo: function onClickItemInfo() {
        this.$notify("item:actived", {
          id: this.id,
          title: this.title,
          path: this.path,
          href: this.href,
          view: this.view
        });
      }
    },
    mounted: function mounted() {
      this.isGroup && (this.isTop ? this.collapse = !1 : this.collapse = !0, this.groupStatusStoreKey && (this.collapse = Ti.Storage.session.getBoolean(this.groupStatusStoreKey, this.collapse)));
    }
  };
  Ti.Preload("ti/com/wn/gui/side/nav/com/side-nav-item/side-nav-item.mjs", t);
}(), Ti.Preload("ti/com/wn/gui/side/nav/com/side-nav-item/_com.json", {
  name: "side-nav-item",
  template: "./side-nav-item.html",
  mixins: ["./side-nav-item.mjs"]
}), Ti.Preload("ti/com/wn/gui/side/nav/wn-gui-side-nav.html", '<div class="wn-gui-side-nav"\n  :class="TopClass"\n  v-ti-activable>\n  <side-nav-item v-for="it in TheItems"\n    :key="it.key"\n    v-bind="it"\n    @item:actived="onItemActived"/>\n</div>'), function () {
  var t = {
    props: {
      items: {
        type: Array,
        "default": null
      },
      highlightItemId: {
        type: String,
        "default": null
      },
      highlightItemPath: {
        type: String,
        "default": null
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TheItems: function TheItems() {
        var t = [];

        if (_.isArray(this.items)) {
          var _iterator78 = _createForOfIteratorHelper(this.items),
              _step78;

          try {
            for (_iterator78.s(); !(_step78 = _iterator78.n()).done;) {
              var e = _step78.value;
              t.push(this.evalItem(e));
            }
          } catch (err) {
            _iterator78.e(err);
          } finally {
            _iterator78.f();
          }
        }

        return t;
      },
      theHighlightItemId: function theHighlightItemId() {
        var t = this.joinHighlightItems([], this.items);
        if (t.length > 0) return t.sort(function (t, e) {
          return t.score - e.score;
        }), _.first(t).id;
      }
    },
    methods: {
      evalItem: function evalItem() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var e = null;

        if (_.isArray(t.items)) {
          e = [];

          var _iterator79 = _createForOfIteratorHelper(t.items),
              _step79;

          try {
            for (_iterator79.s(); !(_step79 = _iterator79.n()).done;) {
              var i = _step79.value;
              e.push(this.evalItem(i));
            }
          } catch (err) {
            _iterator79.e(err);
          } finally {
            _iterator79.f();
          }
        }

        return _.assign(_.pick(t, ["id", "key", "depth", "icon", "title", "path", "view"]), {
          items: e,
          groupStatusStoreKey: t.key,
          highlightId: this.theHighlightItemId,
          href: t.id ? Wn.Util.getAppLink(t.id) + "" : null
        });
      },
      joinHighlightItems: function joinHighlightItems() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

        if (this.highlightItemId && _.isArray(e) && e.length > 0) {
          var _iterator80 = _createForOfIteratorHelper(e),
              _step80;

          try {
            for (_iterator80.s(); !(_step80 = _iterator80.n()).done;) {
              var i = _step80.value;
              if (i.id == this.highlightItemId) t.push({
                score: 0,
                id: i.id
              });else if (i.path && i.id && this.highlightItemPath && this.highlightItemPath.startsWith(i.path)) {
                var _e52 = this.highlightItemPath.length - i.path.length;

                t.push({
                  score: 1 + _e52,
                  id: i.id
                });
              }
              i.items && this.joinHighlightItems(t, i.items);
            }
          } catch (err) {
            _iterator80.e(err);
          } finally {
            _iterator80.f();
          }
        }

        return t;
      },
      onItemActived: function onItemActived() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        this.$notify("item:active", t);
      }
    }
  };
  Ti.Preload("ti/com/wn/gui/side/nav/wn-gui-side-nav.mjs", t);
}(), Ti.Preload("ti/com/wn/gui/side/nav/_com.json", {
  name: "wn-gui-side-nav",
  globally: !0,
  template: "./wn-gui-side-nav.html",
  mixins: ["./wn-gui-side-nav.mjs"],
  components: ["./com/side-nav-item"]
}), Ti.Preload("ti/com/wn/gui/side/tree/wn-gui-side-tree.html", '<ti-tree\n  class="ti-fill-parent wn-gui-side-tree"\n  id-by="value"\n  name-by="name"\n  :display="TreeDisplay"\n  :data="myTreeData"\n  :current-id="highlightItemId"\n  :checked-ids="CheckedIds"\n  keep-open-by="wn-gui-side-tree"\n  :auto-open="true"\n  :default-open-depth="2"\n  :show-root="false"\n  :puppet-mode="true"\n  @select="onItemActived"/>'), function () {
  var t = {
    data: function data() {
      return {
        myItems: [],
        myTreeData: []
      };
    },
    props: {
      items: {
        type: Array,
        "default": null
      },
      highlightItemId: {
        type: String,
        "default": null
      },
      highlightItemPath: {
        type: String,
        "default": null
      }
    },
    computed: {
      TreeDisplay: function TreeDisplay() {
        return ["<icon>", {
          key: "text",
          comConf: {
            className: "is-nowrap",
            href: "(value)?/a/open/wn.manager?ph=id:${value}"
          }
        }];
      },
      HighlightItemId: function HighlightItemId() {
        var t = this.joinHighlightItems([], this.items);
        if (t.length > 0) return t.sort(function (t, e) {
          return t.score - e.score;
        }), _.first(t).id;
      },
      CheckedIds: function CheckedIds() {
        return this.HighlightItemId ? [this.HighlightItemId] : [];
      }
    },
    methods: {
      evalTreeData: function evalTreeData() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        this.myItems = _.cloneDeep(t);
        var e = [];

        if (_.isArray(t)) {
          var _iterator81 = _createForOfIteratorHelper(t),
              _step81;

          try {
            for (_iterator81.s(); !(_step81 = _iterator81.n()).done;) {
              var i = _step81.value;
              e.push(this.evalItemToTreeNode(i));
            }
          } catch (err) {
            _iterator81.e(err);
          } finally {
            _iterator81.f();
          }
        }

        this.myTreeData = e;
      },
      evalItemToTreeNode: function evalItemToTreeNode() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var e = null;

        if (_.isArray(t.items)) {
          e = [];

          var _iterator82 = _createForOfIteratorHelper(t.items),
              _step82;

          try {
            for (_iterator82.s(); !(_step82 = _iterator82.n()).done;) {
              var i = _step82.value;
              e.push(this.evalItemToTreeNode(i));
            }
          } catch (err) {
            _iterator82.e(err);
          } finally {
            _iterator82.f();
          }
        }

        return {
          name: t.key,
          text: t.title,
          icon: t.icon,
          value: t.id,
          children: e
        };
      },
      joinHighlightItems: function joinHighlightItems() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

        if (this.highlightItemId && _.isArray(e) && e.length > 0) {
          var _iterator83 = _createForOfIteratorHelper(e),
              _step83;

          try {
            for (_iterator83.s(); !(_step83 = _iterator83.n()).done;) {
              var i = _step83.value;
              if (i.id == this.highlightItemId) t.push({
                score: 0,
                id: i.id
              });else if (i.path && i.id && this.highlightItemPath && this.highlightItemPath.startsWith(i.path)) {
                var _e53 = this.highlightItemPath.length - i.path.length;

                t.push({
                  score: 1 + _e53,
                  id: i.id
                });
              }
              i.items && this.joinHighlightItems(t, i.items);
            }
          } catch (err) {
            _iterator83.e(err);
          } finally {
            _iterator83.f();
          }
        }

        return t;
      },
      onItemActived: function onItemActived() {
        var _ref124 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref124$current = _ref124.current,
            t = _ref124$current === void 0 ? {} : _ref124$current;

        t.value && this.$notify("item:active", {
          id: t.value
        });
      }
    },
    watch: {
      items: {
        handler: function handler(t, e) {
          _.isEqual(t, this.myItems) || this.evalTreeData(t);
        },
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/wn/gui/side/tree/wn-gui-side-tree.mjs", t);
}(), Ti.Preload("ti/com/wn/gui/side/tree/_com.json", {
  name: "wn-gui-side-tree",
  globally: !0,
  template: "./wn-gui-side-tree.html",
  mixins: ["./wn-gui-side-tree.mjs"],
  components: ["@com:ti/tree"]
}), Ti.Preload("ti/com/wn/gui/test.json", {
  layout: {
    type: "cols",
    border: !0,
    blocks: [{
      name: "C0",
      icon: "im-award",
      title: "Test C0",
      closer: !0,
      actions: [{
        type: "group",
        icon: "zmdi-more-vert",
        items: [{
          key: "show-P1",
          text: "show P1",
          type: "action",
          action: "main:showBlock(P1)"
        }, {
          key: "hide-P1",
          text: "hide P1",
          type: "action",
          action: "main:hideBlock(P1)"
        }]
      }],
      size: "20%",
      type: "rows",
      border: !0,
      blocks: [{
        name: "C0-1",
        size: 100,
        body: {
          comType: "ti-label",
          comConf: {
            value: "C0-1 content"
          }
        }
      }, {
        name: "C0-2",
        body: {
          comType: "ti-label",
          comConf: {
            value: "C0-2 content"
          }
        }
      }, {
        name: "C0-3",
        body: {
          comType: "ti-label",
          comConf: {
            value: "C0-3 content"
          }
        }
      }]
    }, {
      name: "C1",
      icon: "im-award",
      title: "Test C1",
      actions: [{
        type: "group",
        icon: "zmdi-more-vert",
        items: [{
          key: "show-P1",
          text: "show P1",
          type: "action",
          action: "main:showBlock(P1)"
        }, {
          key: "hide-P1",
          text: "hide P1",
          type: "action",
          action: "main:hideBlock(P1)"
        }]
      }],
      size: "stretch",
      type: "tabs",
      blocks: [{
        name: "C1-1",
        size: 100,
        body: {
          comType: "ti-label",
          comConf: {
            value: "C1-1 content"
          }
        }
      }, {
        name: "C1-2",
        body: {
          comType: "ti-label",
          comConf: {
            value: "C1-2 content"
          }
        }
      }, {
        name: "C1-3",
        body: {
          comType: "ti-label",
          comConf: {
            value: "C1-3 content"
          }
        }
      }]
    }, {
      name: "C2",
      body: "C2",
      size: 260
    }],
    panels: [{
      name: "P1",
      closer: "right",
      position: "left-top",
      width: "50%",
      height: "50%",
      mask: !0,
      body: {
        comType: "ti-label",
        comConf: {
          value: "P1"
        }
      }
    }]
  },
  schema: {
    C1: {
      comType: "ti-label",
      comConf: {
        value: "I am C11"
      }
    },
    C2: {
      comType: "ti-label",
      comConf: {
        value: "I am C22"
      }
    }
  },
  actions: [{
    key: "reloading",
    type: "action",
    icon: "zmdi-refresh",
    text: "i18n:refresh",
    altDisplay: {
      icon: "zmdi-refresh zmdi-hc-spin",
      text: "i18n:loading"
    },
    action: "dispatch:main/reload",
    shortcut: "CTRL+R"
  }, {
    key: "show-P1",
    text: "show P1",
    type: "action",
    action: "main:showBlock(P1)"
  }, {
    key: "hide-P1",
    text: "hide P1",
    type: "action",
    action: "main:hideBlock(P1)"
  }]
}), Ti.Preload("ti/com/wn/gui/wn-gui.html", '<ti-gui\n  v-bind="layout"\n  :schema="schema"\n  :shown="shown"\n  @block:show="showBlock"\n  @block:hide="hideBlock"/>'), function () {
  var t = {
    inheritAttrs: !1,
    data: function data() {
      return {
        shown: {}
      };
    },
    props: {
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      layout: function layout() {
        return this.data ? this.data.layout : {};
      },
      schema: function schema() {
        return this.data ? this.data.schema : {};
      }
    },
    watch: {
      "data.actions": function dataActions() {}
    },
    methods: {
      showBlock: function showBlock(t) {
        this.shown = this.createGuiBlockShown(this.shown, t, !0);
      },
      hideBlock: function hideBlock(t) {
        this.shown = this.createGuiBlockShown(this.shown, t, !1);
      }
    }
  };
  Ti.Preload("ti/com/wn/gui/wn-gui.mjs", t);
}(), Ti.Preload("ti/com/wn/gui/_com.json", {
  name: "wn-gui",
  globally: !0,
  template: "./wn-gui.html",
  methods: "@com:ti/gui/ti-gui-methods.mjs",
  mixins: ["./wn-gui.mjs"],
  components: ["@com:ti/gui"]
}), Ti.Preload("ti/com/wn/imgfile/wn-imgfile.html", '<ti-imgfile\n  :src="imageSrc"\n  :width="width"\n  :height="height"\n  :progress="progress"\n  :upload-file="uploadFile"\n  :removable="removable"\n  @upload="onUpload"\n  @remove="onRemove"\n  @open="onOpen"/>'), function () {
  var t = {
    data: function data() {
      return {
        src_ts: null,
        oImage: null,
        uploadFile: null,
        progress: -1
      };
    },
    props: {
      value: {
        type: String,
        "default": null
      },
      width: {
        type: [String, Number],
        "default": void 0
      },
      height: {
        type: [String, Number],
        "default": void 0
      },
      removable: {
        type: Boolean,
        "default": !0
      },
      target: {
        type: String,
        required: !0,
        "default": null
      },
      supportTypes: {
        type: [String, Array],
        "default": function _default() {
          return ["png", "jpg", "jpeg", "gif"];
        }
      },
      supportMimes: {
        type: [String, Array],
        "default": function _default() {
          return ["image/png", "image/jpeg", "image/gif"];
        }
      },
      filter: {
        type: [Array, String],
        "default": null
      },
      quality: {
        type: Number,
        "default": 0
      }
    },
    computed: {
      acceptTypes: function acceptTypes() {
        return _.isString(this.supportTypes) ? this.supportTypes.split(",") : this.supportTypes;
      },
      acceptMimes: function acceptMimes() {
        return _.isString(this.supportMimes) ? this.supportMimes.split(",") : this.supportMimes;
      },
      imageFilter: function imageFilter() {
        return this.filter ? [].concat(this.filter) : [];
      },
      imageSrc: function imageSrc() {
        if (this.oImage) {
          var _t153 = ["/o/content?str=id:", this.oImage.id];
          return this.src_ts && (_t153.push("&_t="), _t153.push(this.src_ts)), _t153.join("");
        }
      }
    },
    methods: {
      assertListHas: function assertListHas(t, e, i, n) {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee118() {
          var _n21, _iterator84, _step84, _i34;

          return regeneratorRuntime.wrap(function _callee118$(_context119) {
            while (1) {
              switch (_context119.prev = _context119.next) {
                case 0:
                  if (_.isEmpty(t)) {
                    _context119.next = 24;
                    break;
                  }

                  _n21 = !0;
                  _iterator84 = _createForOfIteratorHelper(t);
                  _context119.prev = 3;

                  _iterator84.s();

                case 5:
                  if ((_step84 = _iterator84.n()).done) {
                    _context119.next = 12;
                    break;
                  }

                  _i34 = _step84.value;

                  if (!(_i34 == e)) {
                    _context119.next = 10;
                    break;
                  }

                  _n21 = !1;
                  return _context119.abrupt("break", 12);

                case 10:
                  _context119.next = 5;
                  break;

                case 12:
                  _context119.next = 17;
                  break;

                case 14:
                  _context119.prev = 14;
                  _context119.t0 = _context119["catch"](3);

                  _iterator84.e(_context119.t0);

                case 17:
                  _context119.prev = 17;

                  _iterator84.f();

                  return _context119.finish(17);

                case 20:
                  if (!_n21) {
                    _context119.next = 24;
                    break;
                  }

                  _context119.next = 23;
                  return Ti.Alert(i, {
                    type: "warn",
                    icon: "zmdi-alert-triangle"
                  });

                case 23:
                  return _context119.abrupt("return", !1);

                case 24:
                  return _context119.abrupt("return", !0);

                case 25:
                case "end":
                  return _context119.stop();
              }
            }
          }, _callee118, null, [[3, 14, 17, 20]]);
        }))();
      },
      onOpen: function onOpen() {
        var _this235 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee119() {
          var _t154;

          return regeneratorRuntime.wrap(function _callee119$(_context120) {
            while (1) {
              switch (_context120.prev = _context120.next) {
                case 0:
                  if (!_this235.oImage) {
                    _context120.next = 4;
                    break;
                  }

                  _t154 = Wn.Util.getAppLink(_this235.oImage);
                  _context120.next = 4;
                  return Ti.Be.Open(_t154.url, {
                    params: _t154.params
                  });

                case 4:
                case "end":
                  return _context120.stop();
              }
            }
          }, _callee119);
        }))();
      },
      onRemove: function onRemove() {
        var _this236 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee120() {
          return regeneratorRuntime.wrap(function _callee120$(_context121) {
            while (1) {
              switch (_context121.prev = _context121.next) {
                case 0:
                  _context121.t0 = _this236.oImage;

                  if (!_context121.t0) {
                    _context121.next = 4;
                    break;
                  }

                  _context121.next = 4;
                  return Wn.Sys.exec2("rm id:".concat(_this236.oImage.id));

                case 4:
                  _this236.$notify("change", null);

                case 5:
                case "end":
                  return _context121.stop();
              }
            }
          }, _callee120);
        }))();
      },
      onUpload: function onUpload(t) {
        var _this237 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee121() {
          var e, _yield$Wn$Io$uploadFi2, i, n, a, _t155, _e54;

          return regeneratorRuntime.wrap(function _callee121$(_context122) {
            while (1) {
              switch (_context122.prev = _context122.next) {
                case 0:
                  e = Ti.Util.getSuffixName(t.name);
                  _context122.next = 3;
                  return _this237.assertListHas(_this237.acceptTypes, e, {
                    text: "i18n:wn-invalid-types",
                    vars: {
                      current: e,
                      supports: _this237.acceptTypes.join(", ")
                    }
                  });

                case 3:
                  if (_context122.sent) {
                    _context122.next = 5;
                    break;
                  }

                  return _context122.abrupt("return");

                case 5:
                  _context122.next = 7;
                  return _this237.assertListHas(_this237.acceptMimes, t.type, {
                    text: "i18n:wn-invalid-mimes",
                    vars: {
                      current: t.type,
                      supports: _this237.acceptMimes.join(", ")
                    }
                  });

                case 7:
                  if (_context122.sent) {
                    _context122.next = 9;
                    break;
                  }

                  return _context122.abrupt("return");

                case 9:
                  _this237.uploadFile = t, _this237.progress = 0;
                  _context122.next = 12;
                  return Wn.Io.uploadFile(t, {
                    target: _this237.target,
                    mode: "r",
                    progress: function progress(t) {
                      _this237.progress = t.loaded / t.total;
                    }
                  });

                case 12:
                  _yield$Wn$Io$uploadFi2 = _context122.sent;
                  i = _yield$Wn$Io$uploadFi2.ok;
                  n = _yield$Wn$Io$uploadFi2.msg;
                  a = _yield$Wn$Io$uploadFi2.data;

                  if (!(_this237.uploadFile = null, _this237.progress = -1, i)) {
                    _context122.next = 26;
                    break;
                  }

                  if (_.isEmpty(_this237.imageFilter)) {
                    _context122.next = 23;
                    break;
                  }

                  _t155 = ["imagic", "id:".concat(a.id), "-filter \"".concat(_this237.imageFilter.join(" "), "\"")];
                  _this237.quality > 0 && _this237.quality <= 1 && _t155.push("-qa ".concat(_this237.quality)), _t155.push("-out inplace");
                  _e54 = _t155.join(" ");
                  _context122.next = 23;
                  return Wn.Sys.exec2(_e54);

                case 23:
                  _this237.src_ts = Date.now(), _this237.oImage = a, _this237.$notify("change", a);
                  _context122.next = 28;
                  break;

                case 26:
                  _context122.next = 28;
                  return Ti.Alert("i18n:".concat(n), {
                    type: "warn",
                    icon: "zmdi-alert-triangle"
                  });

                case 28:
                case "end":
                  return _context122.stop();
              }
            }
          }, _callee121);
        }))();
      },
      reload: function reload() {
        var _this238 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee122() {
          return regeneratorRuntime.wrap(function _callee122$(_context123) {
            while (1) {
              switch (_context123.prev = _context123.next) {
                case 0:
                  if (!_this238.value) {
                    _context123.next = 6;
                    break;
                  }

                  _context123.next = 3;
                  return Wn.Io.loadMeta(_this238.value);

                case 3:
                  _this238.oImage = _context123.sent;
                  _context123.next = 7;
                  break;

                case 6:
                  _this238.oImage = null;

                case 7:
                case "end":
                  return _context123.stop();
              }
            }
          }, _callee122);
        }))();
      }
    },
    watch: {
      value: function value() {
        this.reload();
      }
    },
    mounted: function () {
      var _mounted13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee123() {
        return regeneratorRuntime.wrap(function _callee123$(_context124) {
          while (1) {
            switch (_context124.prev = _context124.next) {
              case 0:
                _context124.next = 2;
                return this.reload();

              case 2:
              case "end":
                return _context124.stop();
            }
          }
        }, _callee123, this);
      }));

      function mounted() {
        return _mounted13.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/wn/imgfile/wn-imgfile.mjs", t);
}(), Ti.Preload("ti/com/wn/imgfile/_com.json", {
  name: "wn-imgfile",
  globally: !0,
  template: "./wn-imgfile.html",
  mixins: ["./wn-imgfile.mjs"],
  components: ["@com:ti/imgfile"]
}), Ti.Preload("ti/com/wn/label/wn-label.html", '<ti-label\n  :class-name="className"\n  v-bind="this"\n  :value-clickable="ValueClickable"\n  @click:value="OnClickValue"/>'), function () {
  var t = {
    props: {
      openRefer: {
        type: Object,
        "default": void 0
      }
    },
    computed: {
      ValueClickable: function ValueClickable() {
        return !!this.openRefer;
      }
    },
    methods: {
      OnClickValue: function OnClickValue() {
        var _this239 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee124() {
          var t, e;
          return regeneratorRuntime.wrap(function _callee124$(_context125) {
            while (1) {
              switch (_context125.prev = _context125.next) {
                case 0:
                  if (!(!_this239.openRefer || !_this239.value)) {
                    _context125.next = 2;
                    break;
                  }

                  return _context125.abrupt("return");

                case 2:
                  _context125.next = 4;
                  return Wn.Io.loadMetaBy(_this239.value);

                case 4:
                  t = _context125.sent;
                  console.log(t);
                  e = _.assign({
                    title: "i18n:info",
                    width: 640,
                    height: 480,
                    textOk: null,
                    textCancel: "i18n:close",
                    result: t
                  }, _this239.openRefer);
                  _context125.next = 9;
                  return Ti.App.Open(e);

                case 9:
                case "end":
                  return _context125.stop();
              }
            }
          }, _callee124);
        }))();
      }
    }
  };
  Ti.Preload("ti/com/wn/label/wn-label.mjs", t);
}(), Ti.Preload("ti/com/wn/label/_com.json", {
  name: "wn-label",
  globally: !0,
  template: "./wn-label.html",
  props: ["@com:ti/label/ti-label-props.mjs"],
  mixins: ["./wn-label.mjs"],
  components: ["@com:ti/label"]
}), Ti.Preload("ti/com/wn/list/wn-list.html", '<ti-list\n  v-bind="this"\n  :display="DisplayItems"\n  :on-init="OnSubListInit"\n  @select="OnSelected"\n  @open="$notify(\'open\', $event)"/>'), function () {
  var t = {
    data: function data() {
      return {
        isAllChecked: !1,
        hasChecked: !1,
        theCurrentId: !1,
        theCheckedIds: !1
      };
    },
    props: {
      iconBy: {
        type: [String, Function],
        "default": void 0
      },
      indentBy: {
        type: [String, Function],
        "default": void 0
      },
      itemClassName: void 0,
      display: {
        type: [Object, String, Array],
        "default": function _default() {
          return {
            key: "..",
            comType: "ti-label"
          };
        }
      },
      border: {
        type: Boolean,
        "default": !0
      },
      autoScrollIntoView: {
        type: Boolean,
        "default": !0
      }
    },
    computed: {
      DisplayItems: function DisplayItems() {
        return this.explainDisplayItems(this.display);
      }
    },
    methods: {
      OnSubListInit: function OnSubListInit(t) {
        this.$list = t;
      },
      OnSelected: function OnSelected() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        this.theCheckedIds = t.checkedIds, this.theCurrentId = t.currentId, this.syncCheckStatus(), this.$notify("select", t);
      },
      syncCheckStatus: function syncCheckStatus() {
        this.isAllChecked = this.$list.isAllChecked, this.hasChecked = this.$list.hasChecked;
      },
      selectPrevRow: function selectPrevRow(t) {
        this.$list.selectPrevRow(t);
      },
      selectNextRow: function selectNextRow(t) {
        this.$list.selectNextRow(t);
      },
      getCurrentRow: function getCurrentRow(t) {
        return this.$list.getCurrentRow(t);
      },
      getCheckedRow: function getCheckedRow(t) {
        return this.$list.getCheckedRow(t);
      },
      getCurrent: function getCurrent(t) {
        return this.$list.getCurrent(t);
      },
      getChecked: function getChecked(t) {
        return this.$list.getChecked(t);
      },
      selectRow: function selectRow(t) {
        this.$list.selectRow(t);
      },
      checkRow: function checkRow(t) {
        this.$list.checkRow(t);
      },
      cancelRow: function cancelRow(t) {
        this.$list.cancelRow(t);
      }
    },
    watch: {
      data: function data() {
        this.syncCheckStatus();
      },
      checkedIds: function checkedIds() {
        this.syncCheckStatus();
      }
    }
  };
  Ti.Preload("ti/com/wn/list/wn-list.mjs", t);
}(), Ti.Preload("ti/com/wn/list/_com.json", {
  name: "wn-list",
  globally: !0,
  template: "./wn-list.html",
  props: ["@com:ti/support/list_props.mjs"],
  mixins: ["@com:wn/support/wn_list_wrapper_mixins.mjs", "./wn-list.mjs"],
  components: ["@com:ti/table"]
}), Ti.Preload("ti/com/wn/obj/creation/wn-obj-creation.html", '<div class="wn-obj-creation"\n  :class="TopClass">\n  \x3c!--\n    Side type list\n  --\x3e\n  <div class="oc-types"\n    v-if="hasTypes">\n    <ul>\n      <li\n        v-for="li of TypeList"\n          :class="li.className"\n          @click="setCurrentType(li.name)">\n          \x3c!--Icon--\x3e\n          <ti-icon\n            v-if="li.icon"\n              :value="li.icon"/>\n          \x3c!--Text--\x3e\n          <span class="as-text">{{li.text|i18n}}</span>\n          \x3c!--Suffix--\x3e\n          <em v-if="li.suffix">({{li.suffix}})</em>\n      </li>\n    </ul>\n  </div>\n  \x3c!--\n    Main Area\n  --\x3e\n  <div class="oc-main">\n    \x3c!--\n      Type Brief\n    --\x3e\n    <div v-if="hasCurrentType"\n      class="oc-info">\n      <div class="oc-thumb">\n        <ti-icon :value="CurrentType.thumb"/>\n      </div>\n      <div class="oc-text">{{CurrentType.text | i18n}}</div>\n      <div v-if="!CurrentIsDIR"\n        class="oc-name">*.{{CurrentType.name}}</div>\n      <div class="oc-brief"\n        v-if="CurrentType.brief">{{CurrentType.brief}}</div>\n    </div>\n    \x3c!--\n      Free create\n    --\x3e\n    <div v-else\n      class="oc-free">\n      <span>{{\'wn-oc-free\'|i18n}}</span>\n    </div>\n    \x3c!--\n      Input value\n    --\x3e\n    <div class="oc-input">\n      <input\n        ref="input" \n        :value="value.name"\n        :placeholder="\'wn-oc-tip\'|i18n" \n        @change="OnInputChange" \n        spellcheck="false">\n    </div>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myCurrentType: void 0
      };
    },
    props: {
      types: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      value: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      trimed: {
        type: Boolean,
        "default": !0
      },
      freeCreate: {
        type: Boolean,
        "default": !1
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      hasTypes: function hasTypes() {
        return !_.isEmpty(this.types);
      },
      CurrentTypeName: function CurrentTypeName() {
        var t = this.myCurrentType || this.value.type;
        return t || this.freeCreate ? t : _.get(_.first(this.types), "name");
      },
      TypeList: function TypeList() {
        var _this240 = this;

        var t = [];

        if (this.freeCreate) {
          var e = Ti.Util.isNil(this.CurrentTypeName);
          t.push({
            name: null,
            text: "i18n:wn-oc-auto-type",
            type: null,
            icon: "far-file",
            thumb: "far-file",
            suffix: "*.*",
            current: e,
            className: {
              "is-current": e
            },
            race: "FILE",
            mime: "text/plain"
          });
        }

        return _.forEach(this.types, function (e) {
          var i = _.cloneDeep(e);

          i.thumb = i.thumb || i.icon, i.suffix = "*.".concat(i.name), i.current = i.name == _this240.CurrentTypeName, i.className = {
            "is-current": i.current
          }, t.push(i);
        }), t;
      },
      CurrentType: function CurrentType() {
        return _.find(this.TypeList, function (t) {
          return t.current;
        });
      },
      CurrentIsDIR: function CurrentIsDIR() {
        return "DIR" == _.get(this.CurrentType, "race");
      },
      hasCurrentType: function hasCurrentType() {
        return !!this.CurrentType;
      }
    },
    methods: {
      setCurrentType: function setCurrentType(t) {
        this.myCurrentType = t;
      },
      OnInputChange: function OnInputChange() {
        var t = this.$refs.input.value;
        this.trimed && (t = _.trim(t));

        var e = _.assign({
          name: "txt",
          mime: "text/plain",
          race: "FILE"
        }, this.CurrentType);

        if (Ti.Util.isNil(e.name)) {
          var i = Ti.Util.getSuffixName(t);

          if (i) {
            var _iterator85 = _createForOfIteratorHelper(this.types),
                _step85;

            try {
              for (_iterator85.s(); !(_step85 = _iterator85.n()).done;) {
                var _t156 = _step85.value;

                if (i == _t156.name) {
                  e = _t156;
                  break;
                }
              }
            } catch (err) {
              _iterator85.e(err);
            } finally {
              _iterator85.f();
            }
          }
        }

        this.$notify("change", {
          name: t,
          type: e.name,
          mime: e.mime,
          race: e.race
        });
      }
    }
  };
  Ti.Preload("ti/com/wn/obj/creation/wn-obj-creation.mjs", t);
}(), Ti.Preload("ti/com/wn/obj/creation/_com.json", {
  name: "wn-obj-creation",
  globally: !0,
  template: "./wn-obj-creation.html",
  mixins: ["./wn-obj-creation.mjs"]
}), Ti.Preload("ti/com/wn/obj/form/wn-obj-form.html", '<ti-form \n  v-bind="this"\n  :auto-show-blank="isAutoShowBlank"\n  :class-name="className"\n  @field:change="OnFieldChange"\n  @change="OnChange"\n  @invalid="OnInvalid"/>'), function () {
  var t = {
    props: {
      fuse: {
        type: Object,
        "default": function _default() {
          return {
            key: "wn-obj-form",
            noti: null
          };
        }
      },
      setDataBy: {
        type: [String, Object, Boolean],
        "default": null
      },
      updateBy: {
        type: [String, Object, Boolean],
        "default": null
      },
      setFieldStatusBy: {
        type: [String, Object, Boolean],
        "default": null
      }
    },
    computed: {
      isAutoShowBlank: function isAutoShowBlank() {
        return Ti.Util.fallback(this.autoShowBlank, !0);
      }
    },
    methods: {
      doAction: function doAction(t, e, i) {
        _.isPlainObject(e) ? Ti.App(this)[e.method](e.target, i) : _.isString(e) ? Ti.App(this).exec(e, i) : e && this.$notify(t, i);
      },
      OnFieldChange: function OnFieldChange() {
        var _ref125 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref125.name,
            e = _ref125.value;

        this.doAction("field:change", this.updateBy, {
          name: t,
          value: e
        });
      },
      OnChange: function OnChange(t) {
        this.doAction("change", this.setDataBy, t);
      },
      OnInvalid: function OnInvalid(t) {
        var e = {
          name: t.name,
          message: [t.errMessage, t.value].join(" :: "),
          status: "warn"
        };
        this.doAction("invalid", this.setFieldStatusBy, e);
      }
    }
  };
  Ti.Preload("ti/com/wn/obj/form/wn-obj-form.mjs", t);
}(), Ti.Preload("ti/com/wn/obj/form/_com.json", {
  name: "wn-obj-form",
  globally: !0,
  template: "./wn-obj-form.html",
  props: "@com:ti/form/ti-form-props.mjs",
  mixins: ["./wn-obj-form.mjs"],
  components: ["@com:ti/form", "@com:wn/transfer", "@com:wn/droplist", "@com:wn/combo/input", "@com:wn/imgfile", "@com:wn/combo/multi-input"]
}), Ti.Preload("ti/com/wn/obj/icon/wn-obj-icon.html", '<ti-icon \n  class="wn-obj-icon" \n  :class="topClass"\n  :value="theIcon"/>'), function () {
  var t = {
    inheritAttrs: !1,
    props: {
      icon: {
        type: String,
        "default": null
      },
      thumb: {
        type: String,
        "default": null
      },
      mime: {
        type: String,
        "default": null
      },
      type: {
        type: String,
        "default": null
      },
      race: {
        type: String,
        "default": null
      },
      candidateIcon: {
        type: String,
        "default": null
      },
      timestamp: {
        type: Number,
        "default": 0
      }
    },
    computed: {
      topClass: function topClass() {
        return Ti.Css.mergeClassName(this.className);
      },
      theIcon: function theIcon() {
        return Wn.Util.getObjThumbIcon({
          candidateIcon: this.candidateIcon,
          timestamp: this.timestamp,
          thumb: this.thumb,
          icon: this.icon,
          mime: this.mime,
          type: this.type,
          race: this.race
        }, "fas-cube");
      }
    },
    methods: {}
  };
  Ti.Preload("ti/com/wn/obj/icon/wn-obj-icon.mjs", t);
}(), Ti.Preload("ti/com/wn/obj/icon/_com.json", {
  name: "wn-obj-icon",
  globally: !0,
  template: "./wn-obj-icon.html",
  mixins: ["./wn-obj-icon.mjs"]
}), Ti.Preload("ti/com/wn/obj/json/wn-obj-json.html", '<div class="wn-obj-json">\n  \x3c!--\n    Show Text Editor\n  --\x3e\n  <ti-text-json v-if="hasMeta"\n    class="ti-fill-parent"\n    :value="value"\n    :data="data"\n    @change="onChangeContent"/>\n  \x3c!--\n    Empty Data\n  --\x3e\n  <ti-loading v-else/>\n</div>'), function () {
  var t = {
    props: {
      meta: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      value: {
        type: String,
        "default": null
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      hasMeta: function hasMeta() {
        return !!this.meta;
      }
    },
    methods: {
      onChangeContent: function onChangeContent(t) {
        this.$notify("change", t);
      }
    },
    mounted: function mounted() {
      var _this241 = this;

      Ti.Fuse.getOrCreate().add({
        key: "wn-obj-json",
        everythingOk: function everythingOk() {
          return !_this241.status.changed;
        },
        fail: function fail() {
          Ti.Toast.Open("i18n:wn-obj-nosaved", "warn");
        }
      });
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Fuse.get().remove("wn-obj-json");
    }
  };
  Ti.Preload("ti/com/wn/obj/json/wn-obj-json.mjs", t);
}(), Ti.Preload("ti/com/wn/obj/json/_com.json", {
  name: "wn-obj-json",
  globally: !0,
  template: "./wn-obj-json.html",
  mixins: ["./wn-obj-json.mjs"],
  components: ["@com:ti/text/json"]
}), function () {
  var t = {
    meta: {
      type: [Object, String],
      "default": null
    },
    mediaSrcMode: {
      type: String,
      "default": "path",
      validator: function validator(t) {
        return /^(path|fullPath|idPath|id)$/.test(t);
      }
    },
    keepLastBy: {
      type: String,
      "default": "wn-markdown-richeditor-last-open"
    },
    defaultMediaDir: {
      type: String,
      "default": "~"
    }
  };
  Ti.Preload("ti/com/wn/obj/markdown/richeditor/wn-markdown-richeditor-props.mjs", t);
}(), Ti.Preload("ti/com/wn/obj/markdown/richeditor/wn-markdown-richeditor.html", '<TiTextMarkdownRicheditor\n  v-bind="this"\n  :actions="ToolbarActions"\n  :markdown-media-src="TheMarkdownMediaSrc"\n  :preview-media-src="ThePreviewMediaSrc"\n  :value="TheValue"\n  :on-init="OnEditorInit"/>'), function () {
  var t = {
    computed: {
      ToolbarActions: function ToolbarActions() {
        var _this242 = this;

        return _.merge({
          Media: {
            icon: "fas-photo-video",
            action: function action() {
              return _this242.OnInsertMedia();
            }
          }
        }, this.actions);
      },
      TheValue: function TheValue() {
        return this.value;
      },
      TheMarkdownMediaSrc: function TheMarkdownMediaSrc() {
        var _this243 = this;

        return this.markdownMediaSrc ? this.markdownMediaSrc : /*#__PURE__*/function () {
          var _ref126 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee125(t) {
            var e, _t157;

            return regeneratorRuntime.wrap(function _callee125$(_context126) {
              while (1) {
                switch (_context126.prev = _context126.next) {
                  case 0:
                    e = /^\/o\/content\?str=id:(.+)$/.exec(t);

                    if (!e) {
                      _context126.next = 7;
                      break;
                    }

                    _context126.next = 4;
                    return Wn.Io.loadMetaById(e[1]);

                  case 4:
                    _t157 = _context126.sent;

                    if (!_t157) {
                      _context126.next = 7;
                      break;
                    }

                    return _context126.abrupt("return", Wn.Io.formatObjPath(_t157, _this243.mediaSrcMode, _this243.meta));

                  case 7:
                    return _context126.abrupt("return", t);

                  case 8:
                  case "end":
                    return _context126.stop();
                }
              }
            }, _callee125);
          }));

          return function (_x14) {
            return _ref126.apply(this, arguments);
          };
        }();
      },
      ThePreviewMediaSrc: function ThePreviewMediaSrc() {
        var _this244 = this;

        return this.previewMediaSrc ? this.previewMediaSrc : /*#__PURE__*/function () {
          var _ref127 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee126(t) {
            var e;
            return regeneratorRuntime.wrap(function _callee126$(_context127) {
              while (1) {
                switch (_context127.prev = _context127.next) {
                  case 0:
                    if (!/^(https?:)(\/\/)/.test(t)) {
                      _context127.next = 2;
                      break;
                    }

                    return _context127.abrupt("return", t);

                  case 2:
                    _context127.next = 4;
                    return Wn.Io.loadMetaBy(t, _this244.meta);

                  case 4:
                    e = _context127.sent;
                    return _context127.abrupt("return", e ? "/o/content?str=id:".concat(e.id) : t);

                  case 6:
                  case "end":
                    return _context127.stop();
                }
              }
            }, _callee126);
          }));

          return function (_x15) {
            return _ref127.apply(this, arguments);
          };
        }();
      }
    },
    methods: {
      OnEditorInit: function OnEditorInit(t) {
        this.$editor = t;
      },
      OnInsertMedia: function OnInsertMedia() {
        var _this245 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee127() {
          var t, e, _t158, i, n, _iterator86, _step86, _t159;

          return regeneratorRuntime.wrap(function _callee127$(_context128) {
            while (1) {
              switch (_context128.prev = _context128.next) {
                case 0:
                  t = _this245.meta || _this245.defaultMediaDir;
                  _this245.keepLastBy && (t = Ti.Storage.local.getString(_this245.keepLastBy) || t);
                  _context128.next = 4;
                  return Wn.OpenObjSelector(t, {
                    fallbackPath: _this245.defaultMediaDir
                  });

                case 4:
                  e = _context128.sent;

                  if (e && !_.isEmpty(e)) {
                    if (_this245.keepLastBy) {
                      _t158 = _.first(e), i = Ti.Util.getParentPath(_t158.ph), n = Wn.Session.getFormedPath(i);
                      Ti.Storage.local.set(_this245.keepLastBy, n);
                    }

                    _iterator86 = _createForOfIteratorHelper(e);

                    try {
                      for (_iterator86.s(); !(_step86 = _iterator86.n()).done;) {
                        _t159 = _step86.value;

                        _this245.insertMediaObj(_t159);
                      }
                    } catch (err) {
                      _iterator86.e(err);
                    } finally {
                      _iterator86.f();
                    }
                  }

                case 6:
                case "end":
                  return _context128.stop();
              }
            }
          }, _callee127);
        }))();
      },
      insertMediaObj: function insertMediaObj() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var e = t.mime;
        if (!e) return;
        var i = "/o/content?str=id:".concat(t.id);
        e.startsWith("video/") ? this.insertMedia("video", i, {
          controls: !1,
          autoplay: !1
        }) : e.startsWith("image/") && this.insertMedia("image", i);
      },
      insertMedia: function insertMedia() {
        var _n$insert;

        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "image";
        var e = arguments.length > 1 ? arguments[1] : undefined;
        var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        if (!e) return;
        var n = new (Quill["import"]("delta"))(),
            a = this.$editor.getSelection();
        a || (this.$editor.setSelection(0), a = {
          index: 0,
          length: 0
        });
        var _a11 = a,
            s = _a11.index,
            o = _a11.length;
        n.retain(s), o > 0 && n["delete"](o), n.insert((_n$insert = {}, _defineProperty(_n$insert, t, e), _defineProperty(_n$insert, "attributes", i), _n$insert)), this.$editor.updateContents(n), this.$editor.setSelection(s + 1);
      }
    }
  };
  Ti.Preload("ti/com/wn/obj/markdown/richeditor/wn-markdown-richeditor.mjs", t);
}(), Ti.Preload("ti/com/wn/obj/markdown/richeditor/_com.json", {
  name: "wn-obj-markdown-richeditor",
  globally: !0,
  template: "./wn-markdown-richeditor.html",
  props: ["@com:ti/text/markdown/richeditor/ti-markdown-richeditor-props.mjs", "./wn-markdown-richeditor-props.mjs"],
  methods: "@com:ti/text/markdown/richeditor/ti-markdown-richeditor-delegate-methods.mjs",
  mixins: ["./wn-markdown-richeditor.mjs"],
  components: ["@com:ti/text/markdown/richeditor"]
}), Ti.Preload("ti/com/wn/obj/picker/wn-obj-picker.html", '<div class="wn-obj-picker"\n  :class="TopClass">\n  \x3c!--\n    Empty Items\n  --\x3e\n  <div\n    v-if="!hasItems"\n      class="as-empty">\n      <div class="as-empty-item"\n        @click.left.stop="OnPickItem">\n        <i class="im im-plus"></i>\n      </div>\n  </div>\n  \x3c!--\n    Show Items\n  --\x3e\n  <div ref="itemsCon"\n    v-else\n      class="as-items-con"\n      @click.left="OnClickItemsCon">\n      <div \n        v-for="(it, index) in DisplayItems"\n          :key="it._key"\n          class="as-item">\n          <TiObjThumb \n              v-bind="it"\n              @remove="OnRemoveItem"/>        \n      </div>\n      \x3c!--For multi--\x3e\n      <div\n        v-if="multi" \n          class="as-empty-item"\n          @click.left.stop="OnPickItem">\n          <i class="im im-plus"></i>\n      </div>\n  </div>\n  \x3c!--\n    Loading\n  --\x3e\n  <ti-loading\n    v-if="loading"\n      class="as-mid-tip-mask"/>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        loading: !1,
        dragging: !1,
        skipReload: !1,
        myItems: []
      };
    },
    props: {
      empty: {
        type: Object,
        "default": function _default() {
          return {
            text: "i18n:no-selected",
            value: void 0
          };
        }
      },
      value: {
        type: [Object, String, Array],
        "default": null
      },
      valueType: {
        type: String,
        "default": "idPath",
        validator: function validator(t) {
          return /^(obj|path|fullPath|idPath|id)$/.test(t);
        }
      },
      base: {
        type: [Object, String],
        "default": "~"
      },
      multi: {
        type: Boolean,
        "default": !1
      },
      textBy: {
        type: [String, Array],
        "default": null
      },
      filterBy: {
        type: [Object, String, Function, Boolean],
        "default": function _default() {
          return {
            race: ["isEqual", "FILE"]
          };
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-multi": this.multi,
          "is-single": !this.multi,
          "is-dragging": this.dragging
        });
      },
      DisplayItems: function DisplayItems() {
        var _this246 = this;

        var t = [];

        for (var e = 0; e < this.myItems.length; e++) {
          var i = this.myItems[e],
              n = Wn.Util.getObjThumbInfo(i, {
            exposeHidden: !0,
            badges: {
              NW: ["href", "fas-link"],
              SE: ["newtab", "fas-external-link-alt"]
            }
          });
          n.index = e, n._key = "".concat(n.id, "_").concat(n.index), n.removeIcon = "im-x-mark", n.onTitle = function (t) {
            _this246.OnEditItem(t);
          }, t.push(n);
        }

        return t;
      },
      FirstItem: function FirstItem() {
        return _.first(this.myItems);
      },
      hasItems: function hasItems() {
        return !_.isEmpty(this.myItems);
      },
      theChooseIcon: function theChooseIcon() {
        return _.isEmpty(this.myItems) ? this.chooseIcon : null;
      }
    },
    methods: {
      OnPickItem: function OnPickItem() {
        var _this247 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee128() {
          var t, e, i, n;
          return regeneratorRuntime.wrap(function _callee128$(_context129) {
            while (1) {
              switch (_context129.prev = _context129.next) {
                case 0:
                  t = _this247.FirstItem;
                  t = !t || _.isEmpty(t) ? _this247.base || "~" : "id:".concat(t.id);
                  _context129.t0 = _.isPlainObject(t) && !t.pid;

                  if (!_context129.t0) {
                    _context129.next = 7;
                    break;
                  }

                  _context129.next = 6;
                  return Wn.Io.loadMetaById(t.id);

                case 6:
                  t = _context129.sent;

                case 7:
                  console.log("hahha");
                  _this247.filterBy && (e = Ti.Validate.compile(_this247.filterBy));
                  _context129.next = 11;
                  return Wn.OpenObjSelector(t, {
                    multi: _this247.multi,
                    selected: _this247.myItems,
                    filter: e
                  });

                case 11:
                  i = _context129.sent;

                  if (!_.isEmpty(i)) {
                    _context129.next = 14;
                    break;
                  }

                  return _context129.abrupt("return");

                case 14:
                  n = _this247.multi ? _.concat(_this247.myItems, i) : i, _this247.notifyChange(n);

                case 15:
                case "end":
                  return _context129.stop();
              }
            }
          }, _callee128);
        }))();
      },
      OnClickItemsCon: function OnClickItemsCon() {
        this.OnPickItem();
      },
      OnRemoveItem: function OnRemoveItem() {
        var _ref128 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref128.id,
            e = _ref128.index;

        var i = [];

        for (var _t160 = 0; _t160 < this.myItems.length; _t160++) {
          var n = this.myItems[_t160];
          e != _t160 && i.push(n);
        }

        this.notifyChange(i);
      },
      OnClearItems: function OnClearItems() {
        this.notifyChange([]);
      },
      OnEditItem: function OnEditItem(_ref129) {
        var _this248 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee129() {
          var t, e, i, n;
          return regeneratorRuntime.wrap(function _callee129$(_context130) {
            while (1) {
              switch (_context130.prev = _context130.next) {
                case 0:
                  t = _ref129.index;
                  e = _this248.myItems[t];
                  _context130.next = 4;
                  return Ti.App.Open({
                    title: "i18n:edit",
                    width: 640,
                    height: 480,
                    result: _.pick(e, "title", "href", "newtab"),
                    model: {
                      prop: "data",
                      event: "change"
                    },
                    comType: "ti-form",
                    comConf: {
                      fields: [{
                        title: "i18n:title",
                        name: "title",
                        comType: "ti-input"
                      }, {
                        title: "i18n:href",
                        name: "href",
                        comType: "ti-input"
                      }, {
                        title: "i18n:newtab",
                        name: "newtab",
                        type: "Boolean",
                        comType: "ti-toggle"
                      }]
                    }
                  });

                case 4:
                  i = _context130.sent;

                  if (!_.isUndefined(i)) {
                    _context130.next = 7;
                    break;
                  }

                  return _context130.abrupt("return");

                case 7:
                  (e = _.cloneDeep(e)).title = i.title, e.href = i.href, e.newtab = i.newtab;
                  n = _.cloneDeep(_this248.myItems);
                  n.splice(t, 1, e), _this248.myItems = n, _this248.skipReload = !0, _this248.notifyChange(), _.delay(function () {
                    _this248.skipReload = !1;
                  }, 100);

                case 10:
                case "end":
                  return _context130.stop();
              }
            }
          }, _callee129);
        }))();
      },
      notifyChange: function notifyChange() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.myItems;
        var e = null,
            i = ["id", "nm", "thumb", "title", "mime", "tp", "sha1", "len", "href", "newtab"];

        if (this.multi) {
          e = [];

          var _iterator87 = _createForOfIteratorHelper(t),
              _step87;

          try {
            for (_iterator87.s(); !(_step87 = _iterator87.n()).done;) {
              var n = _step87.value;

              var _t161 = Wn.Io.formatObjPath(n, this.valueType, i);

              e.push(_t161);
            }
          } catch (err) {
            _iterator87.e(err);
          } finally {
            _iterator87.f();
          }
        } else _.isEmpty(t) || (e = Wn.Io.formatObjPath(t[0], this.valueType, i));

        this.$notify("change", e);
      },
      switchItem: function switchItem(t, e) {
        if (t != e) {
          var i = _.cloneDeep(this.myItems),
              n = i[t];

          (i = _.filter(i, function (e, i) {
            return i != t;
          })).splice(e, 0, n), this.myItems = i, this.notifyChange();
        }
      },
      initSortable: function initSortable() {
        var _this249 = this;

        this.multi && this.$refs.itemsCon && new Sortable(this.$refs.itemsCon, {
          animation: 300,
          filter: ".as-empty-item",
          onStart: function onStart() {
            _this249.dragging = !0;
          },
          onEnd: function onEnd(_ref130) {
            var t = _ref130.oldIndex,
                e = _ref130.newIndex;
            _this249.dragging = !1, _this249.skipReload = !0, _this249.switchItem(t, e), _.delay(function () {
              _this249.skipReload = !1;
            }, 100);
          }
        });
      },
      reload: function reload() {
        var _this250 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee130() {
          return regeneratorRuntime.wrap(function _callee130$(_context131) {
            while (1) {
              switch (_context131.prev = _context131.next) {
                case 0:
                  _this250.loading = !0;
                  _context131.next = 3;
                  return _this250.doReload();

                case 3:
                  _this250.loading = !1;

                case 4:
                case "end":
                  return _context131.stop();
              }
            }
          }, _callee130);
        }))();
      },
      doReload: function doReload() {
        var _this251 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee131() {
          var t, e, _iterator88, _step88, i, _t162;

          return regeneratorRuntime.wrap(function _callee131$(_context132) {
            while (1) {
              switch (_context132.prev = _context132.next) {
                case 0:
                  t = _this251.value ? [].concat(_this251.value) : [], e = [];
                  _iterator88 = _createForOfIteratorHelper(t);
                  _context132.prev = 2;

                  _iterator88.s();

                case 4:
                  if ((_step88 = _iterator88.n()).done) {
                    _context132.next = 13;
                    break;
                  }

                  i = _step88.value;
                  _context132.next = 8;
                  return _this251.reloadItem(i);

                case 8:
                  _t162 = _context132.sent;

                  if (!(_t162 && e.push(_t162), !_this251.multi && e.length > 0)) {
                    _context132.next = 11;
                    break;
                  }

                  return _context132.abrupt("break", 13);

                case 11:
                  _context132.next = 4;
                  break;

                case 13:
                  _context132.next = 18;
                  break;

                case 15:
                  _context132.prev = 15;
                  _context132.t0 = _context132["catch"](2);

                  _iterator88.e(_context132.t0);

                case 18:
                  _context132.prev = 18;

                  _iterator88.f();

                  return _context132.finish(18);

                case 21:
                  _this251.myItems = e;

                case 22:
                case "end":
                  return _context132.stop();
              }
            }
          }, _callee131, null, [[2, 15, 18, 21]]);
        }))();
      },
      reloadItem: function reloadItem(t) {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee132() {
          return regeneratorRuntime.wrap(function _callee132$(_context133) {
            while (1) {
              switch (_context133.prev = _context133.next) {
                case 0:
                  if (!(!t || _.isEmpty(t))) {
                    _context133.next = 2;
                    break;
                  }

                  return _context133.abrupt("return", null);

                case 2:
                  if (!_.isString(t)) {
                    _context133.next = 6;
                    break;
                  }

                  _context133.next = 5;
                  return Wn.Io.loadMetaBy(t);

                case 5:
                  return _context133.abrupt("return", _context133.sent);

                case 6:
                  if (!t.id) {
                    _context133.next = 8;
                    break;
                  }

                  return _context133.abrupt("return", t);

                case 8:
                  throw Ti.Err.make("e-wn-obj-picker-unsupported-value-form", t);

                case 9:
                case "end":
                  return _context133.stop();
              }
            }
          }, _callee132);
        }))();
      }
    },
    watch: {
      value: function value(t, e) {
        _.isEqual(t, e) || this.skipReload || this.reload();
      },
      hasItems: function hasItems(t, e) {
        var _this252 = this;

        t && !e && this.$nextTick(function () {
          _this252.initSortable();
        });
      }
    },
    mounted: function () {
      var _mounted14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee133() {
        return regeneratorRuntime.wrap(function _callee133$(_context134) {
          while (1) {
            switch (_context134.prev = _context134.next) {
              case 0:
                _context134.next = 2;
                return this.reload();

              case 2:
              case "end":
                return _context134.stop();
            }
          }
        }, _callee133, this);
      }));

      function mounted() {
        return _mounted14.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/wn/obj/picker/wn-obj-picker.mjs", t);
}(), Ti.Preload("ti/com/wn/obj/picker/_com.json", {
  name: "wn-obj-picker",
  globally: !0,
  template: "./wn-obj-picker.html",
  mixins: ["./wn-obj-picker.mjs"],
  components: ["@com:wn/adaptlist"],
  deps: ["@deps:sortable.js"]
}), Ti.Preload("ti/com/wn/obj/preview/com/preview-info-field/preview-info-field.html", '<div class="info-field">\n  <div class="as-name" :style="theNameStyle">\n    <ti-icon v-if="icon" class="it-icon" :value="icon"/>\n    <span class="it-text">{{title|i18n}}</span>\n  </div>\n  <div class="as-value" :style="theValueStyle">{{theValue}}</div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        theValue: null
      };
    },
    props: {
      icon: {
        type: String,
        "default": null
      },
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      type: {
        type: String,
        "default": "String"
      },
      title: {
        type: String,
        "default": null
      },
      name: {
        type: String,
        "default": null
      },
      dict: {
        type: String,
        "default": null
      },
      nameWidth: {
        type: [String, Number],
        "default": 50
      },
      valueWidth: {
        type: [String, Number],
        "default": 200
      },
      transformer: {
        type: [String, Object, Function],
        "default": null
      }
    },
    watch: {
      data: function () {
        var _data2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee134() {
          return regeneratorRuntime.wrap(function _callee134$(_context135) {
            while (1) {
              switch (_context135.prev = _context135.next) {
                case 0:
                  _context135.next = 2;
                  return this.evalTheValue();

                case 2:
                  this.theValue = _context135.sent;

                case 3:
                case "end":
                  return _context135.stop();
              }
            }
          }, _callee134, this);
        }));

        function data() {
          return _data2.apply(this, arguments);
        }

        return data;
      }(),
      name: function () {
        var _name = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee135() {
          return regeneratorRuntime.wrap(function _callee135$(_context136) {
            while (1) {
              switch (_context136.prev = _context136.next) {
                case 0:
                  _context136.next = 2;
                  return this.evalTheValue();

                case 2:
                  this.theValue = _context136.sent;

                case 3:
                case "end":
                  return _context136.stop();
              }
            }
          }, _callee135, this);
        }));

        function name() {
          return _name.apply(this, arguments);
        }

        return name;
      }()
    },
    computed: {
      theTransformer: function theTransformer() {
        var t = this.transformer || "Ti.Types." + Ti.Types.getFuncByType(this.type || "String", "transformer");
        return Ti.Util.genInvoking(t, {
          context: this.data,
          partial: "right"
        });
      },
      theNameStyle: function theNameStyle() {
        return Ti.Css.toStyle({
          width: this.nameWidth
        });
      },
      theValueStyle: function theValueStyle() {
        return Ti.Css.toStyle({
          width: this.valueWidth
        });
      }
    },
    methods: {
      evalTheValue: function evalTheValue() {
        var _this253 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee136() {
          var t;
          return regeneratorRuntime.wrap(function _callee136$(_context137) {
            while (1) {
              switch (_context137.prev = _context137.next) {
                case 0:
                  t = _.get(_this253.data, _this253.name);
                  _context137.t0 = _this253.dict;

                  if (!_context137.t0) {
                    _context137.next = 6;
                    break;
                  }

                  _context137.next = 5;
                  return wn.Dict.get(_this253.dict, t);

                case 5:
                  t = _context137.sent;

                case 6:
                  _.isFunction(_this253.theTransformer) && (t = _this253.theTransformer(t));
                  return _context137.abrupt("return", t);

                case 8:
                case "end":
                  return _context137.stop();
              }
            }
          }, _callee136);
        }))();
      }
    },
    mounted: function () {
      var _mounted15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee137() {
        return regeneratorRuntime.wrap(function _callee137$(_context138) {
          while (1) {
            switch (_context138.prev = _context138.next) {
              case 0:
                _context138.next = 2;
                return this.evalTheValue();

              case 2:
                this.theValue = _context138.sent;

              case 3:
              case "end":
                return _context138.stop();
            }
          }
        }, _callee137, this);
      }));

      function mounted() {
        return _mounted15.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/wn/obj/preview/com/preview-info-field/preview-info-field.mjs", t);
}(), Ti.Preload("ti/com/wn/obj/preview/com/preview-info-field/_com.json", {
  name: "wn-obj-preview-info-field",
  globally: !0,
  template: "./preview-info-field.html",
  mixins: ["./preview-info-field.mjs"]
}), Ti.Preload("ti/com/wn/obj/preview/wn-obj-preview.html", '<div class="wn-obj-preview" :class="TopClass">\n  \x3c!--\n    With content\n  --\x3e\n  <div class="wop-con" v-if="hasMeta">\n    \x3c!--Main View--\x3e\n    <component class="as-main"\n      :is="PreviewComType"\n      :icon="DataIcon"\n      :title="DataTitle"\n      :src="DataSource"/>\n    \x3c!--ActionBar at top--\x3e\n    <div class="as-abar">\n      <ul>\n        <li v-for="it in TheActions"\n          @click.left="OnAction(it.action)">\n          <ti-icon class="it-icon" :value="it.icon"/>\n        </li>\n      </ul>\n    </div>\n    \x3c!--Meta at bottom--\x3e\n    <div class="as-info" v-if="isShowInfo">\n      \x3c!--\n        Head\n      --\x3e\n      <div class="info-head">\n        \x3c!--Pin Status Icon--\x3e\n        <span class="it-icon" @click.left="toggleInfoFloat">\n          <ti-icon :value="PreviewInfoPinIcon"/>\n        </span>\n        \x3c!--Head text--\x3e\n        <span class="it-text">{{\'i18n:info\'|i18n}}</span>\n        \x3c!--Edit Button--\x3e\n        <span class="it-edit"\n          @click.left="OnEditInfo">{{\'i18n:edit\'|i18n}}</span>\n      </div>\n      \x3c!--\n        Fields\n      --\x3e\n      <div class="info-field-con">\n        <wn-obj-preview-info-field\n          v-for="fld in PrevewInfoFields"\n          :key="fld.name"\n          v-bind="fld"\n          :data="meta"/>\n      </div>\n    </div>\n  </div>\n  \x3c!--\n    Empty \n  --\x3e\n  <div v-else\n    class="ti-blank is-big">\n    <ti-icon value="fas-file-image"/>\n    <span>{{\'nil-obj\'|i18n}}</span>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        isInFullScreen: !1,
        isShowInfo: !1,
        isFloatInfo: !1
      };
    },
    props: {
      meta: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      actions: {
        type: Array,
        "default": function _default() {
          return ["fullscreen", "newtab", "download", "info"];
        }
      },
      showInfo: {
        type: Boolean,
        "default": !1
      },
      floatInfo: {
        type: Boolean,
        "default": !1
      },
      editInfoBy: {
        type: [Function, String],
        "default": null
      },
      infoPosition: {
        type: String,
        "default": "bottom",
        validator: function validator(t) {
          return /^(bottom|left)$/.test(t);
        }
      },
      infoNameWidth: {
        type: [String, Number],
        "default": 50
      },
      infoValueWidth: {
        type: [String, Number],
        "default": 200
      },
      infoFields: {
        type: Array,
        "default": function _default() {
          return ["nm", "tp", "mime", "width", "height", "len", "duration"];
        }
      },
      stateLocalKey: {
        type: String,
        "default": null
      }
    },
    computed: {
      hasMeta: function hasMeta() {
        return !_.isEmpty(this.meta);
      },
      TopClass: function TopClass() {
        return _defineProperty({
          "is-fullscreen": this.isInFullScreen,
          "is-show-info": this.isShowInfo,
          "is-float-info": this.isFloatInfo
        }, "is-info-at-".concat(this.infoPosition), !0);
      },
      PreviewComType: function PreviewComType() {
        if (this.meta) {
          var _t163 = this.meta.mime || "";

          return _t163.startsWith("video/") ? "ti-media-video" : _t163.startsWith("image/") ? "ti-media-image" : "ti-media-binary";
        }
      },
      PreviewInfoPinIcon: function PreviewInfoPinIcon() {
        return this.isFloatInfo ? "fas-thumbtack" : "zmdi-layers";
      },
      PrevewInfoFields: function PrevewInfoFields() {
        var _this254 = this;

        return Wn.Obj.evalFields(this.meta, this.infoFields, function (t) {
          if (!t.quickName || !_.isUndefined(t.value)) return "Group" == t.type ? t : _.defaults(t, {
            nameWidth: _this254.infoNameWidth,
            valueWidth: _this254.infoValueWidth
          });
        });
      },
      TheActions: function TheActions() {
        var _this255 = this;

        var t = [];
        return this.hasMeta && _.forEach(this.actions, function (e) {
          "fullscreen" == e ? _this255.isInFullScreen ? t.push({
            icon: "zmdi-fullscreen-exit",
            text: "i18n:wop-fullscreen-quit",
            action: function action() {
              return _this255.exitFullscreen();
            }
          }) : t.push({
            icon: "zmdi-fullscreen",
            text: "i18n:wop-fullscreen-enter",
            action: function action() {
              return _this255.enterFullscreen();
            }
          }) : "newtab" == e ? t.push({
            icon: "zmdi-open-in-new",
            text: "i18n:open-newtab",
            action: function action() {
              return _this255.openInNewTab();
            }
          }) : "download" == e ? t.push({
            icon: "zmdi-download",
            text: "i18n:download-to-local",
            action: function action() {
              return _this255.download();
            }
          }) : "info" == e ? _this255.isShowInfo ? t.push({
            icon: "zmdi-info-outline",
            text: "i18n:info",
            action: function action() {
              return _this255.doHideInfo();
            }
          }) : t.push({
            icon: "zmdi-info",
            text: "i18n:info",
            action: function action() {
              return _this255.doShowInfo();
            }
          }) : _.isPlainObject(e) && e.action && t.push(e);
        }), t;
      },
      DataSource: function DataSource() {
        if (!this.meta) return "";
        return Wn.Util.getDownloadLink(this.meta, {
          mode: "auto"
        }).toString();
      },
      DataIcon: function DataIcon() {
        return Wn.Util.getIconObj(this.meta);
      },
      DataTitle: function DataTitle() {
        return Wn.Util.getObjDisplayName(this.meta);
      }
    },
    methods: {
      OnAction: function OnAction(t) {
        _.isString(t) ? Ti.App(this).exec(actionName) : _.isFunction(t) && t();
      },
      OnEditInfo: function OnEditInfo() {
        this.meta && (_.isString(this.editInfoBy) ? Ti.App(this).exec(this.editInfoBy, this.meta) : _.isFunction(this.editInfoBy) ? this.editInfoBy(this.meta) : Wn.EditObjMeta(this.meta));
      },
      enterFullscreen: function enterFullscreen() {
        this.isInFullScreen = !0, this.resizeMediaViewport();
      },
      exitFullscreen: function exitFullscreen() {
        this.isInFullScreen = !1, this.resizeMediaViewport();
      },
      doShowInfo: function doShowInfo() {
        this.isShowInfo = !0, this.saveStateToLocal(), this.resizeMediaViewport();
      },
      doHideInfo: function doHideInfo() {
        this.isShowInfo = !1, this.saveStateToLocal(), this.resizeMediaViewport();
      },
      toggleInfoFloat: function toggleInfoFloat() {
        this.isFloatInfo = !this.isFloatInfo, this.saveStateToLocal(), this.resizeMediaViewport();
      },
      resizeMediaViewport: function resizeMediaViewport() {
        var _this256 = this;

        var _iterator89 = _createForOfIteratorHelper(this.$children),
            _step89;

        try {
          var _loop2 = function _loop2() {
            var t = _step89.value;
            _.isFunction(t.onResizeViewport) && _this256.$nextTick(function () {
              t.onResizeViewport();
            });
          };

          for (_iterator89.s(); !(_step89 = _iterator89.n()).done;) {
            _loop2();
          }
        } catch (err) {
          _iterator89.e(err);
        } finally {
          _iterator89.f();
        }
      },
      openInNewTab: function openInNewTab() {
        var t = Wn.Util.getAppLink(this.meta);
        Ti.Be.OpenLink(t);
      },
      download: function download() {
        var t = Wn.Util.getDownloadLink(this.meta);
        Ti.Be.OpenLink(t);
      },
      saveStateToLocal: function saveStateToLocal() {
        this.stateLocalKey && Ti.Storage.session.mergeObject(this.stateLocalKey, {
          isShowInfo: this.isShowInfo,
          isFloatInfo: this.isFloatInfo
        });
      },
      loadStateFromLocal: function loadStateFromLocal() {
        if (this.stateLocalKey) {
          var _t164 = Ti.Storage.session.getObject(this.stateLocalKey);

          _.defaults(_t164, {
            isShowInfo: this.isShowInfo,
            isFloatInfo: this.isFloatInfo
          }), this.isShowInfo = _t164.isShowInfo, this.isFloatInfo = _t164.isFloatInfo;
        }
      }
    },
    watch: {
      showInfo: function showInfo(t) {
        console.log("showInfo watched"), this.isShowInfo = t;
      },
      floatInfo: function floatInfo(t) {
        console.log("floatInfo watched"), this.isFloatInfo = t;
      }
    },
    mounted: function mounted() {
      var _this257 = this;

      this.isShowInfo = this.showInfo, this.isFloatInfo = this.floatInfo, this.$nextTick(function () {
        _this257.loadStateFromLocal();
      });
    }
  };
  Ti.Preload("ti/com/wn/obj/preview/wn-obj-preview.mjs", t);
}(), Ti.Preload("ti/com/wn/obj/preview/_com.json", {
  name: "wn-obj-preview",
  globally: !0,
  i18n: "@i18n:wn-obj-preview",
  template: "./wn-obj-preview.html",
  mixins: ["./wn-obj-preview.mjs"],
  components: ["./com/preview-info-field", "@com:ti/media/binary", "@com:ti/media/image", "@com:ti/media/video"]
}), Ti.Preload("ti/com/wn/obj/puretext/wn-obj-puretext.html", '<div class="wn-obj-puretext">\n  \x3c!--\n    Show Text Editor\n  --\x3e\n  <ti-text-raw v-if="hasMeta"\n    class="ti-fill-parent"\n    :icon="theIcon"\n    :title="theTitle"\n    :show-title="showTitle"\n    :value="content"\n    :content-is-changed="status.changed"\n    :blank-text="blankText"\n    @change="onChangeContent"/>\n  \x3c!--\n    Empty Data\n  --\x3e\n  <div v-else\n    class="ti-blank is-big">\n    <ti-icon value="zmdi-alert-circle-o"/>\n    <span>{{"empty-data"|i18n}}</span>\n  </div>\n</div>'), function () {
  var t = {
    inheritAttrs: !0,
    props: {
      meta: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      content: {
        type: String,
        "default": null
      },
      savedContent: {
        type: String,
        "default": null
      },
      contentType: {
        type: String,
        "default": null
      },
      showTitle: {
        type: Boolean,
        "default": !0
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      blankText: {
        type: String,
        "default": "i18n:blank"
      }
    },
    computed: {
      theIcon: function theIcon() {
        return this.meta ? Wn.Util.getIconObj(this.meta) : Ti.Icons.get();
      },
      theTitle: function theTitle() {
        return this.meta ? this.meta.title || this.meta.nm : "no-title";
      },
      hasMeta: function hasMeta() {
        return !!this.meta;
      }
    },
    methods: {
      onChangeContent: function onChangeContent(t) {
        this.$notify("change", {
          content: t
        });
      }
    },
    mounted: function mounted() {
      var _this258 = this;

      Ti.Fuse.getOrCreate().add({
        key: "wn-obj-puretext",
        everythingOk: function everythingOk() {
          return !_this258.status.changed;
        },
        fail: function fail() {
          Ti.Toast.Open("i18n:wn-obj-nosaved", "warn");
        }
      });
    },
    beforeDestroy: function beforeDestroy() {
      Ti.Fuse.get().remove("wn-obj-puretext");
    }
  };
  Ti.Preload("ti/com/wn/obj/puretext/wn-obj-puretext.mjs", t);
}(), Ti.Preload("ti/com/wn/obj/puretext/_com.json", {
  name: "wn-obj-puretext",
  globally: !0,
  template: "./wn-obj-puretext.html",
  mixins: ["./wn-obj-puretext.mjs"],
  components: ["@com:ti/text/raw"]
}), Ti.Preload("ti/com/wn/obj/uploader/wn-obj-uploader.html", '<ti-uploader\n  :value="formedValue"/>'), function () {
  var t = {
    props: {
      value: {
        type: [String, Object, Array],
        "default": null
      },
      multi: {
        type: Boolean,
        "default": !0
      },
      removable: {
        type: Boolean,
        "default": !0
      },
      remained: {
        type: Number,
        "default": 0
      },
      target: {
        type: String,
        "default": null
      },
      nameTransformer: {
        type: [Function, String, Object],
        "default": null
      },
      supportTypes: {
        type: [Array, String],
        "default": null
      },
      imageFilter: {
        type: [Array, String],
        "default": null
      },
      imageQuality: {
        type: Number,
        "default": 0
      }
    },
    computed: {
      formedValue: function formedValue() {
        return null;
      }
    },
    methods: {
      getObj: function getObj(t) {
        t && _.isString(t);
      }
    }
  };
  Ti.Preload("ti/com/wn/obj/uploader/wn-obj-uploader.mjs", t);
}(), Ti.Preload("ti/com/wn/obj/uploader/_com.json", {
  name: "wn-obj-uploader",
  globally: !0,
  template: "./wn-obj-uploader.html",
  mixins: ["./wn-obj-uploader.mjs"],
  components: ["@com:ti/uploader"]
}), Ti.Preload("ti/com/wn/session/badge/wn-session-badge.html", '<div class="wn-session-badge"\n  :class="TopClass">\n  \x3c!--\n    Ti Session Badge\n  --\x3e\n  <div class="as-info" ref="info">\n    <TiSessionBadge\n      :me="me"\n      :login-icon="TheLoginIcon"\n      avatar-key="thumb"\n      name-keys="nickname|nm"\n      name-event="show:more"\n      :auto-sign-link="false"\n      @show:more="OnShowMore"/>\n  </div>\n  \x3c!--\n    More Information\n  --\x3e\n  <template v-if="!collapse">\n    \x3c!--Mask--\x3e\n    <div class="as-mask" @click="collapse=true"></div>\n    \x3c!--Drop--\x3e\n    <div ref="drop" class="as-drop" :style="DropStyle">\n      \x3c!--\n        Avatar\n      --\x3e\n      <div class="as-avatar">\n        <ti-icon :value="TheLoginIcon"/>\n        <div class="as-name">\n          <span>{{me.nickname}}</span>\n          <span>{{me.nm}}</span>\n        </div>\n      </div>\n      \x3c!--\n        Language\n      --\x3e\n      <div class="as-lang">\n        <div\n          v-for="la in LangList"\n            class="lang-item"\n            :class="la.className"\n            @click.left="OnChangeLang(la.lang)">\n            <img :src="la.src"/>\n            <div>{{la.text}}</div>\n        </div>\n      </div>\n      \x3c!--\n        Foot: resetpasswd + logout\n      --\x3e\n      <div class="as-foot">\n        <a @click.left="OnResetPassword">{{\'passwd-reset\' | i18n}}</a>\n        <a @click.left="$notify(\'do:logout\')">{{\'logout\' | i18n}}</a>\n      </div>\n    </div>\n  </template>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        collapse: !0,
        dropReady: !1
      };
    },
    props: {
      me: {
        type: Object,
        "default": null
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      MySex: function MySex() {
        return _.get(this.me, "sex") || 0;
      },
      MyLang: function MyLang() {
        return _.get(this.me, "LANG") || "zh-cn";
      },
      hasSession: function hasSession() {
        return !!this.me;
      },
      LangList: function LangList() {
        return [{
          lang: "zh-cn",
          text: "中文",
          className: {
            "is-current": "zh-cn" == this.MyLang
          },
          src: "/gu/rs/ti/icons/png/lang-zh-cn.png"
        }, {
          lang: "en-us",
          text: "English",
          className: {
            "is-current": "en-us" == this.MyLang
          },
          src: "/gu/rs/ti/icons/png/lang-en-us.png"
        }];
      },
      TheLoginIcon: function TheLoginIcon() {
        return 2 == this.MySex ? "im-user-female" : 1 == this.MySex ? "im-user-male" : "im-user-circle";
      },
      DropStyle: function DropStyle() {
        if (this.dropReady) return {
          visibility: "visible"
        };
      }
    },
    methods: {
      OnResetPassword: function OnResetPassword() {
        this.collapse = !0, Ti.App(this).dispatch("session/openResetPasswd");
      },
      OnShowMore: function OnShowMore() {
        this.collapse = !1;
      },
      OnChangeLang: function OnChangeLang(t) {
        var _this259 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee138() {
          return regeneratorRuntime.wrap(function _callee138$(_context139) {
            while (1) {
              switch (_context139.prev = _context139.next) {
                case 0:
                  _context139.t0 = _this259.MyLang != t;

                  if (!_context139.t0) {
                    _context139.next = 5;
                    break;
                  }

                  _context139.next = 4;
                  return Wn.Sys.exec("me -set LANG=".concat(t));

                case 4:
                  window.location.reload();

                case 5:
                case "end":
                  return _context139.stop();
              }
            }
          }, _callee138);
        }))();
      },
      dockDrop: function dockDrop() {
        var _this260 = this;

        var t = this.$refs.drop,
            e = this.$refs.info;
        _.isElement(t) && _.isElement(e) && !this.collapse && (Ti.Dom.dockTo(t, e, {
          space: {
            y: 2
          }
        }), _.delay(function () {
          _this260.dropReady = !0;
        }, 10));
      }
    },
    watch: {
      collapse: {
        handler: function handler(t, e) {
          var _this261 = this;

          t || t == e ? t && (this.dropReady = !1) : _.delay(function () {
            _this261.dockDrop();
          }, 0);
        },
        immediate: !0
      }
    }
  };
  Ti.Preload("ti/com/wn/session/badge/wn-session-badge.mjs", t);
}(), Ti.Preload("ti/com/wn/session/badge/_com.json", {
  name: "wn-session-badge",
  globally: !0,
  template: "./wn-session-badge.html",
  mixins: ["./wn-session-badge.mjs"],
  components: ["@com:ti/session/badge"]
}), function () {
  var t = {
    methods: {
      explainDisplayItems: function explainDisplayItems() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

        var e = _.concat(t),
            i = [];

        return _.forEach(e, function (t) {
          if (!Ti.Util.isNil(t)) {
            if (_.isString(t)) {
              var _e55 = /^@<thumb(:([^>]*))?>$/.exec(t);

              if (_e55) {
                var _t165 = _e55[2] || void 0;

                return void i.push({
                  key: ["icon", "thumb", "tp", "mime", "race", "__updated_time"],
                  type: "Object",
                  transformer: {
                    name: "Ti.Types.toObject",
                    args: {
                      icon: "icon",
                      thumb: "thumb",
                      type: "tp",
                      mime: "mime",
                      race: "race",
                      timestamp: "__updated_time"
                    }
                  },
                  comType: "wn-obj-icon",
                  comConf: {
                    "...": "${=value}",
                    candidateIcon: _t165
                  }
                });
              }
            }

            i.push(t);
          }
        }), i;
      }
    }
  };
  Ti.Preload("ti/com/wn/support/wn_list_wrapper_mixins.mjs", t);
}(), Ti.Preload("ti/com/wn/table/wn-table.html", '<ti-table\n  v-bind="this"\n  :fields="TheFields"\n  :on-init="OnSubListInit"\n  @select="OnSelected"\n  @open="$notify(\'open\', $event)"/>'), function () {
  var t = {
    data: function data() {
      return {
        isAllChecked: !1,
        hasChecked: !1,
        theCurrentId: !1,
        theCheckedIds: !1
      };
    },
    computed: {
      TheFields: function TheFields() {
        var t = [];

        var _iterator90 = _createForOfIteratorHelper(this.fields),
            _step90;

        try {
          for (_iterator90.s(); !(_step90 = _iterator90.n()).done;) {
            var e = _step90.value;

            var i = _.assign({}, e);

            i.display = this.explainDisplayItems(e.display), t.push(i);
          }
        } catch (err) {
          _iterator90.e(err);
        } finally {
          _iterator90.f();
        }

        return t;
      }
    },
    methods: {
      OnSubListInit: function OnSubListInit(t) {
        this.$list = t;
      },
      OnSelected: function OnSelected() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        this.theCheckedIds = t.checkedIds, this.theCurrentId = t.currentId, this.syncCheckStatus(), this.$notify("select", t);
      },
      syncCheckStatus: function syncCheckStatus() {
        this.isAllChecked = this.$list.isAllChecked, this.hasChecked = this.$list.hasChecked;
      },
      selectPrevRow: function selectPrevRow(t) {
        this.$list.selectPrevRow(t);
      },
      selectNextRow: function selectNextRow(t) {
        this.$list.selectNextRow(t);
      },
      getCurrentRow: function getCurrentRow(t) {
        return this.$list.getCurrentRow(t);
      },
      getCheckedRow: function getCheckedRow(t) {
        return this.$list.getCheckedRow(t);
      },
      getCurrent: function getCurrent(t) {
        return this.$list.getCurrent(t);
      },
      getChecked: function getChecked(t) {
        return this.$list.getChecked(t);
      },
      selectRow: function selectRow(t) {
        this.$list.selectRow(t);
      },
      checkRow: function checkRow(t) {
        this.$list.checkRow(t);
      },
      cancelRow: function cancelRow(t) {
        this.$list.cancelRow(t);
      }
    },
    watch: {
      data: function data() {
        this.syncCheckStatus();
      },
      checkedIds: function checkedIds() {
        this.syncCheckStatus();
      }
    }
  };
  Ti.Preload("ti/com/wn/table/wn-table.mjs", t);
}(), Ti.Preload("ti/com/wn/table/_com.json", {
  name: "wn-table",
  globally: !0,
  template: "./wn-table.html",
  props: ["@com:ti/support/list_props.mjs", "@com:ti/table/ti-table-props.mjs"],
  mixins: ["@com:wn/support/wn_list_wrapper_mixins.mjs", "./wn-table.mjs"],
  components: ["@com:ti/table"]
}), Ti.Preload("ti/com/wn/thing/manager/com/thing-creator/thing-creator.html", '<div class="thing-creator ti-box-relative">\n  <ti-form\n    :fields="fields"\n    :only-fields="onlyFields"\n    :fixed="fixed"\n    :data="TheData"\n    :on-init="OnFormInit"\n    @field:change="OnFormFieldChange"\n    @change="OnFormChange"\n    @submit="OnSubmit"/>\n  <hr class="no-space">\n  <div class="ti-flex-center ti-padding-10">\n    <div class="ti-btn is-big" \n      @click="OnCreate">\n      <span>{{\'create-now\'|i18n}}</span>\n    </div>\n  </div>\n  <div v-if="creating"\n    class="ti-box-mask as-thin ti-flex-center">\n    <ti-loading text="i18n:creating"/>\n  </div>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        myData: void 0,
        creating: !1
      };
    },
    props: {
      fields: {
        type: Array,
        "default": function _default() {
          return [];
        }
      },
      data: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      onlyFields: {
        type: Boolean,
        "default": !1
      },
      fixed: {
        type: Object,
        "default": void 0
      }
    },
    computed: {
      TheData: function TheData() {
        return this.myData || this.data;
      }
    },
    methods: {
      OnFormInit: function OnFormInit(t) {
        this.$form = t;
      },
      OnFormFieldChange: function OnFormFieldChange() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        this.myData = this.$form.getData(t);
      },
      OnFormChange: function OnFormChange(t) {
        this.myData = t;
      },
      OnCreate: function OnCreate() {
        var _this262 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee139() {
          var t;
          return regeneratorRuntime.wrap(function _callee139$(_context140) {
            while (1) {
              switch (_context140.prev = _context140.next) {
                case 0:
                  _this262.creating = !0;
                  _context140.next = 3;
                  return Ti.App(_this262).dispatch("main/create", _this262.myData);

                case 3:
                  t = _context140.sent;
                  _this262.creating = !1, !t || t instanceof Error || _this262.$notify("block:hide", "creator");

                case 5:
                case "end":
                  return _context140.stop();
              }
            }
          }, _callee139);
        }))();
      },
      OnSubmit: function OnSubmit() {
        var _this263 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee140() {
          return regeneratorRuntime.wrap(function _callee140$(_context141) {
            while (1) {
              switch (_context141.prev = _context141.next) {
                case 0:
                  _this263.$nextTick(function () {
                    _this263.OnCreate();
                  });

                case 1:
                case "end":
                  return _context141.stop();
              }
            }
          }, _callee140);
        }))();
      }
    },
    mounted: function mounted() {
      this.myData = this.$form.getData();
    }
  };
  Ti.Preload("ti/com/wn/thing/manager/com/thing-creator/thing-creator.mjs", t);
}(), Ti.Preload("ti/com/wn/thing/manager/com/thing-creator/_com.json", {
  name: "wn-thing-creator",
  globally: !0,
  template: "./thing-creator.html",
  mixins: ["./thing-creator.mjs"],
  components: []
}), function () {
  var t = {
    dirName: {
      type: String,
      "default": void 0
    },
    dataHome: {
      type: String,
      "default": void 0
    },
    files: {
      type: Object,
      "default": void 0
    },
    preview: {
      type: Object,
      "default": void 0
    },
    previewEdit: {
      type: Object,
      "default": void 0
    },
    actions: {
      type: Array,
      "default": function _default() {
        return [{
          name: "reloading",
          type: "action",
          icon: "zmdi-refresh",
          tip: "i18n:refresh",
          altDisplay: {
            icon: "zmdi-refresh zmdi-hc-spin"
          },
          action: "$parent:reloadData"
        }, {
          type: "line"
        }, {
          name: "deleting",
          type: "action",
          icon: "zmdi-delete",
          text: "i18n:del",
          altDisplay: {
            icon: "zmdi-refresh zmdi-hc-spin",
            text: "i18n:del-ing"
          },
          action: "$parent:doDeleteSelected"
        }, {
          type: "line"
        }, {
          name: "upload",
          type: "action",
          icon: "zmdi-cloud-upload",
          text: "i18n:upload",
          action: "$parent:doUploadFiles"
        }];
      }
    },
    stateLocalKey: {
      type: String,
      "default": null
    },
    dirNameTip: {
      type: String,
      "default": void 0
    },
    dirNameComType: {
      type: String,
      "default": "ti-droplist"
    },
    dirNameOptions: {
      type: Array,
      "default": function _default() {
        return [{
          icon: "zmdi-collection-image",
          text: "i18n:media",
          value: "media"
        }, {
          icon: "zmdi-attachment-alt",
          text: "i18n:attachment",
          value: "attachment"
        }];
      }
    },
    nilIcon: {
      type: String,
      "default": "fas-braille"
    },
    nilText: {
      type: String,
      "default": null
    }
  };
  Ti.Preload("ti/com/wn/thing/manager/com/thing-files/thing-files-props.mjs", t);
}(), Ti.Preload("ti/com/wn/thing/manager/com/thing-files/thing-files.html", '<div class="wn-thing-files"\n  :class="TopClass">\n  \x3c!--\n    With Data Home\n  --\x3e\n  <template v-if="dataHome">\n    \x3c!--\n      Head bar for switch dir and actions\n    --\x3e\n    <div class="as-header">\n      <div v-if="dirNameTip"\n        class="as-tip">\n        <span>{{dirNameTip|i18n}}</span>\n      </div>\n      \x3c!--Left: select files home dirName--\x3e\n      <div class="as-name">\n        <component \n          :is="dirNameComType"\n          height=".3rem"\n          :allow-empty="false"\n          :options="dirNameOptions"\n          :value="dirName"\n          :prefix-icon-for-clean="false"\n          @change="OnDirNameChanged"/>\n      </div>\n      \x3c!--Right: Common Actions--\x3e\n      <div class="as-menu">\n        <ti-actionbar \n          :items="actions"\n          :status="myStatus"/>\n      </div>\n    </div>\n    \x3c!--\n      File Preview\n    --\x3e\n    <div class="as-preview">\n      <wn-obj-preview\n        class="ti-fill-parent"\n        v-bind="ThePreview"\n        :meta="CurrentFile"/>\n    </div>\n    \x3c!--\n      File List\n    --\x3e\n    <div class="as-list">\n      <wn-adaptlist\n        class="ti-fill-parent"\n        v-bind="TheFiles"\n        :data="myData"\n        :meta="myDataDirObj"\n        :status="myStatus"\n        :before-upload="checkDataDir"\n        @uploaded="OnFileUploaded"\n        @select="OnFileSelect"\n        @open="OnFileOpen"\n        :on-init="OnAdaptListInit"/>\n    </div>\n  </template>\n  \x3c!--\n    Without Data Home\n  --\x3e\n  <ti-loading\n    v-else\n      class="nil-datahome as-big-mask"\n      :text="nilText"\n      :icon="nilIcon"/>\n</div>'), function () {
  var t = {
    inject: ["$ThingManager"],
    data: function data() {
      return {
        myDataDirObj: null,
        myData: {},
        myStatus: {
          reloading: !1
        },
        myCurrentId: null
      };
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      hasDataHome: function hasDataHome() {
        return !!this.dataHome;
      },
      CurrentFile: function CurrentFile() {
        if (this.myCurrentId && this.myData.list) {
          var _iterator91 = _createForOfIteratorHelper(this.myData.list),
              _step91;

          try {
            for (_iterator91.s(); !(_step91 = _iterator91.n()).done;) {
              var _t166 = _step91.value;
              if (this.myCurrentId == _t166.id) return _t166;
            }
          } catch (err) {
            _iterator91.e(err);
          } finally {
            _iterator91.f();
          }
        }
      },
      ThePreview: function ThePreview() {
        var _this264 = this;

        var t = Ti.Util.getFallback(this.preview, this.dirName, "@default") || this.preview || {};
        return _objectSpread({
          showInfo: !1,
          floatInfo: !1,
          infoPosition: "left",
          infoNameWidth: 40,
          infoValueWidth: 120,
          stateLocalKey: this.getStateLocalKey("preview")
        }, t, {
          editInfoBy: function editInfoBy() {
            _this264.editPreviewInfo();
          }
        });
      },
      TheFiles: function TheFiles() {
        var _this265 = this;

        return _.assign({}, this.files, {
          routers: {
            reload: function () {
              var _reload = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee141() {
                return regeneratorRuntime.wrap(function _callee141$(_context142) {
                  while (1) {
                    switch (_context142.prev = _context142.next) {
                      case 0:
                        _context142.next = 2;
                        return _this265.reloadData();

                      case 2:
                      case "end":
                        return _context142.stop();
                    }
                  }
                }, _callee141);
              }));

              function reload() {
                return _reload.apply(this, arguments);
              }

              return reload;
            }()
          }
        });
      }
    },
    methods: {
      OnAdaptListInit: function OnAdaptListInit(t) {
        this.$adaptlist = t;
      },
      OnDirNameChanged: function OnDirNameChanged(t) {
        var _this266 = this;

        Ti.App(this).commit("main/setCurrentDataDir", t), this.$nextTick(function () {
          _this266.reloadData();
        });
      },
      OnFileSelect: function OnFileSelect(_ref132) {
        var t = _ref132.currentId;
        this.myCurrentId = t;
      },
      OnFileOpen: function OnFileOpen(t) {
        this.$notify("file:open", t);
      },
      OnFileUploaded: function OnFileUploaded() {
        var _arguments22 = arguments,
            _this267 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee142() {
          var t, e;
          return regeneratorRuntime.wrap(function _callee142$(_context143) {
            while (1) {
              switch (_context143.prev = _context143.next) {
                case 0:
                  t = _arguments22.length > 0 && _arguments22[0] !== undefined ? _arguments22[0] : [];
                  e = _.first(t);
                  e && (_this267.$adaptlist.myCurrentId = e.id, _this267.myCurrentId = e.id);
                  _context143.next = 5;
                  return Ti.App(_this267).dispatch("main/autoSyncCurrentFilesCount");

                case 5:
                case "end":
                  return _context143.stop();
              }
            }
          }, _callee142);
        }))();
      },
      getStateLocalKey: function getStateLocalKey(t) {
        if (this.stateLocalKey && t) return "".concat(this.stateLocalKey, "_").concat(t);
      },
      doDeleteSelected: function doDeleteSelected() {
        var _this268 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee143() {
          return regeneratorRuntime.wrap(function _callee143$(_context144) {
            while (1) {
              switch (_context144.prev = _context144.next) {
                case 0:
                  _context144.next = 2;
                  return _this268.$adaptlist.doDelete();

                case 2:
                  _context144.next = 4;
                  return Ti.App(_this268).dispatch("main/autoSyncCurrentFilesCount");

                case 4:
                case "end":
                  return _context144.stop();
              }
            }
          }, _callee143);
        }))();
      },
      checkDataDir: function checkDataDir() {
        var _this269 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee144() {
          var _t167, e, i, n, a, s;

          return regeneratorRuntime.wrap(function _callee144$(_context145) {
            while (1) {
              switch (_context145.prev = _context145.next) {
                case 0:
                  if (!(_this269.hasDataHome && !_this269.myDataDirObj)) {
                    _context145.next = 12;
                    break;
                  }

                  _t167 = _this269.dataHome.indexOf("/");
                  e = _this269.dataHome.substring(0, _t167);
                  i = {
                    race: "DIR",
                    nm: Ti.Util.appendPath(_this269.dataHome.substring(_t167 + 1), _this269.dirName)
                  };
                  n = "obj \"".concat(e, "\" -IfNoExists -new '").concat(JSON.stringify(i), "' -cqno");
                  _context145.next = 7;
                  return Wn.Sys.exec2(n, {
                    as: "json"
                  });

                case 7:
                  a = _context145.sent;
                  _context145.next = 10;
                  return Wn.Io.loadMetaBy(_this269.dataHome);

                case 10:
                  s = _context145.sent;
                  Ti.App(_this269).commit("main/setCurrentDataHomeObj", s), _this269.myDataDirObj = a;

                case 12:
                case "end":
                  return _context145.stop();
              }
            }
          }, _callee144);
        }))();
      },
      doUploadFiles: function doUploadFiles() {
        var _this270 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee145() {
          return regeneratorRuntime.wrap(function _callee145$(_context146) {
            while (1) {
              switch (_context146.prev = _context146.next) {
                case 0:
                  _context146.next = 2;
                  return _this270.checkDataDir();

                case 2:
                  if (_this270.myDataDirObj) {
                    _context146.next = 4;
                    break;
                  }

                  throw "Impossible!!!";

                case 4:
                  _this270.$adaptlist.openLocalFileSelectdDialog();

                case 5:
                case "end":
                  return _context146.stop();
              }
            }
          }, _callee145);
        }))();
      },
      editPreviewInfo: function editPreviewInfo() {
        var _this271 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee146() {
          var _t168, e;

          return regeneratorRuntime.wrap(function _callee146$(_context147) {
            while (1) {
              switch (_context147.prev = _context147.next) {
                case 0:
                  if (!_this271.CurrentFile) {
                    _context147.next = 6;
                    break;
                  }

                  _t168 = _.get(_this271.previewEdit, _this271.dirName);
                  _context147.next = 4;
                  return Wn.EditObjMeta(_this271.CurrentFile, _t168);

                case 4:
                  e = _context147.sent;
                  e && e.data && _this271.updateItemInDataList(e.data);

                case 6:
                case "end":
                  return _context147.stop();
              }
            }
          }, _callee146);
        }))();
      },
      updateItemInDataList: function updateItemInDataList(t) {
        t && this.myData && _.isArray(this.myData.list) && (this.myData.list = _.map(this.myData.list, function (e) {
          return e.id == t.id ? t : e;
        }));
      },
      reloadData: function reloadData() {
        var _this272 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee147() {
          var _t169, e, _t170;

          return regeneratorRuntime.wrap(function _callee147$(_context148) {
            while (1) {
              switch (_context148.prev = _context148.next) {
                case 0:
                  if (!(_this272.dataHome && _this272.dirName)) {
                    _context148.next = 17;
                    break;
                  }

                  _this272.myStatus.reloading = !0;
                  _t169 = Ti.Util.appendPath(_this272.dataHome, _this272.dirName);
                  _context148.next = 5;
                  return Wn.Io.loadMeta(_t169);

                case 5:
                  e = _context148.sent;

                  if (!e) {
                    _context148.next = 13;
                    break;
                  }

                  _context148.next = 9;
                  return Wn.Io.loadChildren(e);

                case 9:
                  _t170 = _context148.sent;
                  _this272.myDataDirObj = e, _this272.myData = _t170;
                  _context148.next = 14;
                  break;

                case 13:
                  _this272.myDataDirObj = null, _this272.myData = {};

                case 14:
                  _.delay(function () {
                    _this272.myStatus.reloading = !1;
                  }, 100);

                  _context148.next = 18;
                  break;

                case 17:
                  _this272.myDataDirObj = null, _this272.myData = {};

                case 18:
                case "end":
                  return _context148.stop();
              }
            }
          }, _callee147);
        }))();
      }
    },
    watch: {
      dirName: {
        handler: "reloadData",
        immediate: !0
      }
    },
    mounted: function mounted() {
      this.$ThingManager.$files = this;
    }
  };
  Ti.Preload("ti/com/wn/thing/manager/com/thing-files/thing-files.mjs", t);
}(), Ti.Preload("ti/com/wn/thing/manager/com/thing-files/_com.json", {
  name: "wn-thing-files",
  globally: !0,
  template: "./thing-files.html",
  props: "./thing-files-props.mjs",
  mixins: ["./thing-files.mjs"],
  components: ["@com:wn/adaptlist"]
}), Ti.Preload("ti/com/wn/thing/manager/com/thing-filter/thing-filter.html", '<div class="wn-thing-filter"\n  :class="TopClass">\n  \x3c!--\n    Icon: Recycle Bin\n  --\x3e\n  <div\n    v-if="isInRecycleBin"\n      class="as-recyclebin"\n      @click="OnLeaveRecycleBin"><div>\n        \x3c!--Icon--\x3e\n        <div class="it-icon">\n          <ti-icon value="fas-recycle"/>\n          <ti-icon value="far-arrow-alt-circle-left"/>\n        </div>\n        \x3c!--text--\x3e\n        <div class="it-text">{{\'i18n:thing-recycle-bin\'|i18n}}</div>\n  </div></div>\n  \x3c!--\n    Keyword\n  --\x3e\n  <TiComboFilter\n    class="as-filter"\n    v-bind="filter"\n    :placeholder="placeholder"\n    :value="value.filter"\n    @change="OnFilterChange"/>\n  \x3c!--\n    Sorter\n  --\x3e\n  <TiComboSorter\n    v-if="hasSorter"\n      class="as-sorter"\n      v-bind="sorter"\n      :value="value.sorter"\n      @change="OnSorterChange"/>\n</div>'), function () {
  var t = {
    data: function data() {
      return {
        keywordFocus: !1
      };
    },
    props: {
      filter: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      sorter: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      placeholder: {
        type: String,
        "default": "i18n:find-data"
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      value: {
        type: Object,
        "default": function _default() {
          return {};
        }
      }
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "in-recyclebin": this.isInRecycleBin
        });
      },
      hasSorter: function hasSorter() {
        return !_.isEmpty(this.sorter);
      },
      isInRecycleBin: function isInRecycleBin() {
        return this.status.inRecycleBin;
      }
    },
    methods: {
      OnFilterChange: function OnFilterChange(t) {
        this.$notify("filter::change", t);
      },
      OnSorterChange: function OnSorterChange(t) {
        this.$notify("sorter::change", t);
      },
      OnLeaveRecycleBin: function OnLeaveRecycleBin() {
        Ti.App(this).dispatch("main/toggleInRecycleBin");
      }
    }
  };
  Ti.Preload("ti/com/wn/thing/manager/com/thing-filter/thing-filter.mjs", t);
}(), Ti.Preload("ti/com/wn/thing/manager/com/thing-filter/_com.json", {
  name: "wn-thing-filter",
  globally: !0,
  template: "./thing-filter.html",
  mixins: ["./thing-filter.mjs"],
  components: ["@com:ti/combo/filter", "@com:ti/combo/sorter"]
}), Ti.Preload("ti/com/wn/thing/manager/com/thing-markdown-editor/_com.json", {
  name: "wn-thing-markdown-richeditor",
  globally: !0,
  template: "./thing-markdown-richeditor.html",
  mixins: ["./thing-markdown-richeditor.mjs"],
  components: []
}), function () {
  var t = {
    batchUpdate: function batchUpdate() {
      var _this273 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee148() {
        var t, e, i, _t171, _t172, _t173, n, a, s;

        return regeneratorRuntime.wrap(function _callee148$(_context149) {
          while (1) {
            switch (_context149.prev = _context149.next) {
              case 0:
                if (!_.isEmpty(_this273.checkedItems)) {
                  _context149.next = 2;
                  break;
                }

                return _context149.abrupt("return", Ti.Toast.Open("i18n:batch-none", "warn"));

              case 2:
                t = _.first(_this273.checkedItems), e = _.get(_this273.config, "schema.behavior.batch") || {};
                _.defaults(e, {
                  comType: "wn-obj-form",
                  comConf: {},
                  fields: "schema.meta.comConf.fields",
                  names: null,
                  valueKey: "data"
                }), e.comType = _.kebabCase(e.comType), /^(ti-|wn-obj-)(form)$/.test(e.comType) && _.defaults(e.comConf, {
                  autoShowBlank: !1,
                  updateBy: !0,
                  setDataBy: !0
                });
                if (_.isString(e.names)) {
                  if (e.names.startsWith("^")) {
                    _t171 = new RegExp(e.names);

                    i = function i(e) {
                      return _t171.test(e.name);
                    };
                  } else if (e.names.startsWith("!^")) {
                    _t172 = new RegExp(e.names.substring(1));

                    i = function i(e) {
                      return !_t172.test(e.name);
                    };
                  } else {
                    _t173 = Ti.S.toArray(e.names);

                    i = function i(e) {
                      return _t173.indexOf(e.name) >= 0;
                    };
                  }
                } else i = _.isArray(e.names) && !_.isEmpty(e.names) ? function (t) {
                  return e.name.indexOf(t) >= 0;
                } : function (t) {
                  return !/^(wn-upload-file|wn-imgfile)$/.test(t.comType);
                };
                n = _.get(_this273.config, e.fields);

                a = function a() {
                  var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
                  var e = arguments.length > 1 ? arguments[1] : undefined;
                  var i = [];

                  var _iterator92 = _createForOfIteratorHelper(t),
                      _step92;

                  try {
                    for (_iterator92.s(); !(_step92 = _iterator92.n()).done;) {
                      var _n22 = _step92.value;

                      if (_.isArray(_n22.fields)) {
                        var _t174 = _.cloneDeep(_n22);

                        _t174.fields = a(_n22.fields, e), _.isEmpty(_t174.fields) || i.push(_t174);
                      } else e(_n22) && i.push(_n22);
                    }
                  } catch (err) {
                    _iterator92.e(err);
                  } finally {
                    _iterator92.f();
                  }

                  return i;
                };

                n = a(n, i);
                _context149.next = 10;
                return Ti.App.Open({
                  title: "i18n:batch-update",
                  width: 640,
                  height: "90%",
                  position: "top",
                  comType: "inner-body",
                  components: [{
                    name: "inner-body",
                    globally: !1,
                    data: {
                      update: {},
                      value: t,
                      innerComConf: _objectSpread({}, e.comConf, {
                        fields: n
                      })
                    },
                    template: "<".concat(e.comType, "\n          v-bind=\"innerComConf\"\n          :").concat(e.valueKey, "=\"value\"\n          @field:change=\"OnFieldChange\"\n          @change=\"OnChange\"/>"),
                    methods: {
                      OnFieldChange: function OnFieldChange(_ref133) {
                        var t = _ref133.name,
                            e = _ref133.value;
                        _.set(this.update, t, e), this.$notify("change", this.update);
                      },
                      OnChange: function OnChange(t) {
                        this.value = t;
                      }
                    }
                  }]
                });

              case 10:
                s = _context149.sent;
                _context149.t0 = _.isEmpty(s);

                if (_context149.t0) {
                  _context149.next = 15;
                  break;
                }

                _context149.next = 15;
                return Ti.App(_this273).dispatch("main/batchUpdateMetas", s);

              case 15:
              case "end":
                return _context149.stop();
            }
          }
        }, _callee148);
      }))();
    },
    changeShown: function changeShown() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      Ti.App(this).dispatch("main/doChangeShown", t);
    },
    showBlock: function showBlock(t) {
      "creator" == t && this.status.inRecycleBin ? Ti.Alert("i18n:thing-create-in-recyclebin", {
        title: "i18n:warn",
        icon: "im-warning",
        type: "warn"
      }) : ("files" == t ? Ti.App(this).dispatch("main/reloadFiles") : "content" == t && Ti.App(this).dispatch("main/current/reload"), Ti.App(this).dispatch("main/doChangeShown", _defineProperty({}, t, !0)));
    },
    hideBlock: function hideBlock(t) {
      Ti.App(this).dispatch("main/doChangeShown", _defineProperty({}, t, !1));
    },
    toggleBlock: function toggleBlock(t) {
      Ti.App(this).dispatch("main/doChangeShown", _defineProperty({}, t, !this.TheShown[t]));
    },
    invoke: function invoke(t) {
      var _this274 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee149() {
        var e;
        return regeneratorRuntime.wrap(function _callee149$(_context150) {
          while (1) {
            switch (_context150.prev = _context150.next) {
              case 0:
                e = _.get(_this274.SchemaMethods, t);

                if (!_.isFunction(e)) {
                  _context150.next = 5;
                  break;
                }

                _context150.next = 4;
                return e.apply(_this274, []);

              case 4:
                return _context150.abrupt("return", _context150.sent);

              case 5:
                throw Ti.Err.make("e.thing.fail-to-invoke", t);

              case 6:
              case "end":
                return _context150.stop();
            }
          }
        }, _callee149);
      }))();
    }
  };
  Ti.Preload("ti/com/wn/thing/manager/wn-thing-manager-methods.mjs", t);
}(), Ti.Preload("ti/com/wn/thing/manager/wn-thing-manager.html", '<ti-gui\n  class="wn-thing"\n  :class="TopClass"\n  v-ti-activable\n  :layout="TheLayout"\n  :schema="TheSchema"\n  :shown="TheShown"\n  :can-loading="true"\n  :loading-as="GuiLoadingAs"\n  :action-status="status"/>'), function () {
  var t = {
    provide: function provide() {
      return {
        $ThingManager: this
      };
    },
    data: function data() {
      return {
        myRouting: {}
      };
    },
    props: {
      meta: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      currentDataHome: {
        type: String,
        "default": void 0
      },
      currentDataHomeObj: {
        type: Object,
        "default": void 0
      },
      currentDataDir: {
        type: String,
        "default": void 0
      },
      status: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      config: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      search: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      current: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      files: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      preview: {
        type: Object,
        "default": function _default() {
          return {};
        }
      },
      emitChange: {
        type: Boolean,
        "default": !1
      },
      keepLastSelection: {
        type: Boolean,
        "default": !0
      }
    },
    computed: _objectSpread({}, Vuex.mapGetters("main/search", ["currentItem", "checkedItems"]), {
      TopClass: function TopClass() {
        return this.getTopClass();
      },
      TheShown: function TheShown() {
        return _.get(this.config, "shown") || {};
      },
      TheKeepLastKey: function TheKeepLastKey() {
        if (this.keepLastSelection) return _.get(this.meta, "id") + ":currentId";
      },
      CurrentIsDead: function CurrentIsDead() {
        return -1 == _.get(this.current, "meta.th_live");
      },
      CurrentHeadClass: function CurrentHeadClass() {
        if (this.CurrentIsDead) return "current-in-recyclebin";
      },
      TheLayout: function TheLayout() {
        return Ti.Util.explainObj(this, this.config.layout);
      },
      TheSchema: function TheSchema() {
        return Ti.Util.explainObj(this, this.config.schema);
      },
      TheLoadingAs: function TheLoadingAs() {
        return _.assign({
          reloading: {
            icon: "fas-spinner fa-spin",
            text: "i18n:loading"
          },
          saving: {
            icon: "zmdi-settings fa-spin",
            text: "i18n:saving"
          },
          deleting: {
            icon: "zmdi-refresh fa-spin",
            text: "i18n:del-ing"
          },
          publishing: {
            icon: "zmdi-settings zmdi-hc-spin",
            text: "i18n:publishing"
          },
          restoring: {
            icon: "zmdi-time-restore zmdi-hc-spin",
            text: "i18n:thing-restoring"
          },
          cleaning: {
            icon: "zmdi-settings zmdi-hc-spin",
            text: "i18n:thing-cleaning"
          }
        }, _.get(this.TheSchema, "loadingAs"));
      },
      ChangedRowId: function ChangedRowId() {
        if (this.currentItem && this.current.status.changed) return this.currentItem.id;
      },
      GuiLoadingAs: function GuiLoadingAs() {
        var t = _.findKey(this.status, function (t) {
          return t;
        });

        return _.get(this.TheLoadingAs, t);
      },
      curentThumbTarget: function curentThumbTarget() {
        if (this.currentItem) {
          return "id:".concat(this.meta.id, "/data/").concat(this.currentItem.id, "/thumb.jpg");
        }

        return "";
      },
      SchemaMethods: function SchemaMethods() {
        return this.TheSchema && this.TheSchema.methods ? Ti.Util.merge({}, this.TheSchema.methods) : {};
      },
      EventRouting: function EventRouting() {
        return _.assign({
          "block:show": "showBlock",
          "block:hide": "hideBlock",
          "block:shown": "changeShown",
          "filter::change": "OnFilterChange",
          "sorter::change": "OnSorterChange",
          "list::select": "OnListSelect",
          "list::open": "OnListOpen",
          "content::change": "OnContentChange",
          "pager::change": "OnPagerChange"
        }, _.get(this.TheSchema, "events"), this.myRouting);
      }
    }),
    methods: {
      OnFilterChange: function OnFilterChange(t) {
        var _this275 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee150() {
          return regeneratorRuntime.wrap(function _callee150$(_context151) {
            while (1) {
              switch (_context151.prev = _context151.next) {
                case 0:
                  Ti.App(_this275).commit("main/search/setFilter", t);
                  _context151.next = 3;
                  return Ti.App(_this275).dispatch("main/reloadSearch");

                case 3:
                case "end":
                  return _context151.stop();
              }
            }
          }, _callee150);
        }))();
      },
      OnSorterChange: function OnSorterChange() {
        var _arguments23 = arguments,
            _this276 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee151() {
          var t;
          return regeneratorRuntime.wrap(function _callee151$(_context152) {
            while (1) {
              switch (_context152.prev = _context152.next) {
                case 0:
                  t = _arguments23.length > 0 && _arguments23[0] !== undefined ? _arguments23[0] : {};
                  Ti.App(_this276).commit("main/search/setSorter", t);
                  _context152.next = 4;
                  return Ti.App(_this276).dispatch("main/reloadSearch");

                case 4:
                case "end":
                  return _context152.stop();
              }
            }
          }, _callee151);
        }))();
      },
      OnListSelect: function OnListSelect(_ref134) {
        var t = _ref134.current,
            e = _ref134.currentId,
            i = _ref134.checkedIds,
            n = _ref134.checked;
        Ti.App(this).dispatch("main/setCurrentThing", {
          meta: t,
          currentId: e,
          checkedIds: i
        }), this.emitChange && this.$emit("change", {
          current: t,
          currentId: e,
          checkedIds: i,
          checked: n
        });
      },
      OnListOpen: function OnListOpen(_ref135) {
        var t = _ref135.rawData;
        var e = Ti.App(this);
        e.dispatch("main/config/updateShown", this.config.listOpen), e.dispatch("main/setCurrentThing", {
          meta: t
        });
      },
      OnContentChange: function OnContentChange(t) {
        var e = Ti.App(this);
        e.dispatch("main/current/changeContent", t), e.commit("main/syncStatusChanged");
      },
      OnPagerChange: function OnPagerChange() {
        var _ref136 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref136.pn,
            e = _ref136.pgsz;

        Ti.App(this).dispatch("main/search/reloadPage", {
          pn: t,
          pgsz: e
        });
      },
      OnViewCurrentSource: function OnViewCurrentSource() {
        this.viewCurrentSource();
      },
      addEventRouting: function addEventRouting(t, e) {
        this.$set(this.myRouting, t, e);
      },
      removeEventRouting: function removeEventRouting() {
        for (var _len5 = arguments.length, t = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
          t[_key5] = arguments[_key5];
        }

        var e = _.omitBy(this.myRouting, function (e, i) {
          return t.indexOf(i) >= 0;
        });

        this.myRouting = e;
      },
      __on_events: function __on_events(t) {
        var e = _.get(this.EventRouting, t);

        return e || (e = this.$tiEventTryFallback(t, this.EventRouting)), _.isString(e) ? _.get(this, e) : e;
      },
      __ti_shortcut: function __ti_shortcut(t) {
        "ESCAPE" == t && this.TheShown.creator && this.hideBlock("creator");
      }
    },
    mounted: function mounted() {
      this.THING_MANAGER_ROOT = !0;

      var t = _.get(this.config, "actions");

      _.isArray(t) && this.$notify("actions:update", t);
    }
  };
  Ti.Preload("ti/com/wn/thing/manager/wn-thing-manager.mjs", t);
}(), Ti.Preload("ti/com/wn/thing/manager/_com.json", {
  name: "wn-thing-manager",
  globally: !0,
  i18n: "@i18n:wn-thing",
  template: "./wn-thing-manager.html",
  methods: "./wn-thing-manager-methods.mjs",
  mixins: ["./wn-thing-manager.mjs"],
  components: ["./com/thing-files", "./com/thing-filter", "./com/thing-creator", "./com/thing-files", "@com:ti/gui", "@com:ti/combo/filter", "@com:ti/paging/jumper", "@com:wn/table", "@com:wn/obj/icon", "@com:wn/obj/puretext", "@com:wn/obj/preview", "@com:wn/obj/form", "@com:wn/upload/file"]
}), Ti.Preload("ti/com/wn/thing/markdown/richeditor/thing-markdown-richeditor.html", '<WnObjMarkdownRicheditor\n  v-bind="this"\n  :on-init="OnEditorInit"/>'), function () {
  var t = {
    inject: ["$ThingManager"],
    props: {
      listenMedia: {
        type: String,
        "default": "file:open"
      }
    },
    methods: {
      OnEditorInit: function OnEditorInit(t) {
        this.$editor = t;
      }
    },
    mounted: function mounted() {
      var _this277 = this;

      this.listenMedia && this.$ThingManager.addEventRouting(this.listenMedia, function (t) {
        console.log("oMedia", t), _this277.$editor.insertMediaObj(t);
      });
    },
    beforeDestroy: function beforeDestroy() {
      this.listenMedia && this.$ThingManager.removeEventRouting(this.listenMedia);
    }
  };
  Ti.Preload("ti/com/wn/thing/markdown/richeditor/thing-markdown-richeditor.mjs", t);
}(), Ti.Preload("ti/com/wn/thing/markdown/richeditor/_com.json", {
  name: "wn-thing-markdown-richeditor",
  globally: !0,
  template: "./thing-markdown-richeditor.html",
  props: ["@com:ti/text/markdown/richeditor/ti-markdown-richeditor-props.mjs", "@com:wn/obj/markdown/richeditor/wn-markdown-richeditor-props.mjs"],
  mixins: ["./thing-markdown-richeditor.mjs"],
  components: ["@com:wn/obj/markdown/richeditor"]
}), Ti.Preload("ti/com/wn/transfer/wn-transfer.html", '<ti-transfer v-bind="this"\n  \n  :options="OptionsDict"\n  :can-com-type="TheCanComType"\n  :sel-com-type="TheSelComType"\n  :display="TheDisplay"\n\n  @change="$notify(\'change\', $event)"/>'), function () {
  var t = {
    data: function data() {
      return {};
    },
    props: {
      itemBy: {
        type: [String, Function],
        "default": void 0
      },
      findBy: {
        type: [String, Function],
        "default": void 0
      }
    },
    computed: {
      TheCanComType: function TheCanComType() {
        return this.canComType || "wn-list";
      },
      TheSelComType: function TheSelComType() {
        return this.selComType || "wn-list";
      },
      TheDisplay: function TheDisplay() {
        return this.display || ["@<thumb>", "title", "nm"];
      },
      OptionsDict: function OptionsDict() {
        return Wn.Dict.evalOptionsDict(this);
      }
    }
  };
  Ti.Preload("ti/com/wn/transfer/wn-transfer.mjs", t);
}(), Ti.Preload("ti/com/wn/transfer/_com.json", {
  name: "wn-transfer",
  globally: !0,
  template: "./wn-transfer.html",
  props: "@com:ti/transfer/ti-transfer-props.mjs",
  mixins: ["./wn-transfer.mjs"],
  components: ["@com:ti/transfer"]
}), Ti.Preload("ti/com/wn/upload/file/wn-upload-file.html", '<TiUploadFile\n  :preview="PreviewIcon"\n  :width="width"\n  :height="height"\n  :progress="progress"\n  :upload-file="uploadFile"\n  :removable="removable"\n  @upload="onUpload"\n  @remove="onRemove"\n  @open="onOpen"/>'), function () {
  var t = {
    data: function data() {
      return {
        src_ts: null,
        oFile: null,
        uploadFile: null,
        progress: -1
      };
    },
    props: {
      value: {
        type: String,
        "default": null
      },
      valueType: {
        type: String,
        "default": "obj",
        validator: function validator(t) {
          return /^(obj|path|fullPath|idPath|id)$/.test(t);
        }
      },
      width: {
        type: [String, Number],
        "default": void 0
      },
      height: {
        type: [String, Number],
        "default": void 0
      },
      removable: {
        type: Boolean,
        "default": !0
      },
      target: {
        type: String,
        "default": null
      },
      supportTypes: {
        type: [String, Array],
        "default": function _default() {
          return [];
        }
      },
      supportMimes: {
        type: [String, Array],
        "default": function _default() {
          return [];
        }
      },
      filter: {
        type: [Array, String],
        "default": null
      },
      quality: {
        type: Number,
        "default": 0
      }
    },
    computed: {
      AcceptTypes: function AcceptTypes() {
        return _.isString(this.supportTypes) ? this.supportTypes.split(",") : this.supportTypes;
      },
      AcceptMimes: function AcceptMimes() {
        return _.isString(this.supportMimes) ? this.supportMimes.split(",") : this.supportMimes;
      },
      ImageFilter: function ImageFilter() {
        return this.filter ? [].concat(this.filter) : [];
      },
      PreviewIcon: function PreviewIcon() {
        if (this.oFile) {
          if (Wn.Obj.isMime(this.oFile, /^(image\/)/)) {
            var _t175 = ["/o/content?str=id:", this.oFile.id];
            return this.src_ts && (_t175.push("&_t="), _t175.push(this.src_ts)), {
              type: "image",
              value: _t175.join("")
            };
          }

          if (Wn.Obj.isMime(this.oFile, /^(video\/)/)) {
            var _t176 = ["/o/content?str=id:", this.oFile.video_cover];
            return this.src_ts && (_t176.push("&_t="), _t176.push(this.src_ts)), {
              type: "image",
              value: _t176.join("")
            };
          }

          return Wn.Util.getObjIcon(this.oFile);
        }
      }
    },
    methods: {
      assertListHas: function assertListHas(t, e, i, n) {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee152() {
          var _a12, _iterator93, _step93, _i35;

          return regeneratorRuntime.wrap(function _callee152$(_context153) {
            while (1) {
              switch (_context153.prev = _context153.next) {
                case 0:
                  if (_.isEmpty(t)) {
                    _context153.next = 24;
                    break;
                  }

                  _a12 = !0;
                  _iterator93 = _createForOfIteratorHelper(t);
                  _context153.prev = 3;

                  _iterator93.s();

                case 5:
                  if ((_step93 = _iterator93.n()).done) {
                    _context153.next = 12;
                    break;
                  }

                  _i35 = _step93.value;

                  if (!(_i35 == e)) {
                    _context153.next = 10;
                    break;
                  }

                  _a12 = !1;
                  return _context153.abrupt("break", 12);

                case 10:
                  _context153.next = 5;
                  break;

                case 12:
                  _context153.next = 17;
                  break;

                case 14:
                  _context153.prev = 14;
                  _context153.t0 = _context153["catch"](3);

                  _iterator93.e(_context153.t0);

                case 17:
                  _context153.prev = 17;

                  _iterator93.f();

                  return _context153.finish(17);

                case 20:
                  if (!_a12) {
                    _context153.next = 24;
                    break;
                  }

                  _context153.next = 23;
                  return Ti.Alert(i, {
                    type: "warn",
                    icon: "zmdi-alert-triangle",
                    vars: n
                  });

                case 23:
                  return _context153.abrupt("return", !1);

                case 24:
                  return _context153.abrupt("return", !0);

                case 25:
                case "end":
                  return _context153.stop();
              }
            }
          }, _callee152, null, [[3, 14, 17, 20]]);
        }))();
      },
      onOpen: function onOpen() {
        var _this278 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee153() {
          var _t177;

          return regeneratorRuntime.wrap(function _callee153$(_context154) {
            while (1) {
              switch (_context154.prev = _context154.next) {
                case 0:
                  if (!_this278.oFile) {
                    _context154.next = 4;
                    break;
                  }

                  _t177 = Wn.Util.getAppLink(_this278.oFile);
                  _context154.next = 4;
                  return Ti.Be.Open(_t177.url, {
                    params: _t177.params
                  });

                case 4:
                case "end":
                  return _context154.stop();
              }
            }
          }, _callee153);
        }))();
      },
      onRemove: function onRemove() {
        var _this279 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee154() {
          return regeneratorRuntime.wrap(function _callee154$(_context155) {
            while (1) {
              switch (_context155.prev = _context155.next) {
                case 0:
                  _context155.t0 = _this279.oFile;

                  if (!_context155.t0) {
                    _context155.next = 4;
                    break;
                  }

                  _context155.next = 4;
                  return Wn.Sys.exec2("rm id:".concat(_this279.oFile.id));

                case 4:
                  _this279.$notify("change", null);

                case 5:
                case "end":
                  return _context155.stop();
              }
            }
          }, _callee154);
        }))();
      },
      onUpload: function onUpload(t) {
        var _this280 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee155() {
          var e, i, _yield$Wn$Io$uploadFi3, n, a, s, _t178, _e56, o;

          return regeneratorRuntime.wrap(function _callee155$(_context156) {
            while (1) {
              switch (_context156.prev = _context156.next) {
                case 0:
                  e = Ti.Util.getSuffixName(t.name);
                  _context156.next = 3;
                  return _this280.assertListHas(_this280.AcceptTypes, e, "i18n:wn-invalid-types", {
                    current: e,
                    supports: _this280.AcceptTypes.join(", ")
                  });

                case 3:
                  if (_context156.sent) {
                    _context156.next = 5;
                    break;
                  }

                  return _context156.abrupt("return");

                case 5:
                  _context156.next = 7;
                  return _this280.assertListHas(_this280.AcceptMimes, t.type, "i18n:wn-invalid-mimes", {
                    current: t.type,
                    supports: _this280.AcceptMimes.join(", ")
                  });

                case 7:
                  if (_context156.sent) {
                    _context156.next = 9;
                    break;
                  }

                  return _context156.abrupt("return");

                case 9:
                  i = Ti.S.renderBy(_this280.target, {
                    type: e,
                    name: t.name,
                    majorName: Ti.Util.getMajorName(t.name)
                  });
                  _this280.uploadFile = t, _this280.progress = 0;
                  _context156.next = 13;
                  return Wn.Io.uploadFile(t, {
                    target: i,
                    mode: "r",
                    progress: function progress(t) {
                      _this280.progress = t.loaded / t.total;
                    }
                  });

                case 13:
                  _yield$Wn$Io$uploadFi3 = _context156.sent;
                  n = _yield$Wn$Io$uploadFi3.ok;
                  a = _yield$Wn$Io$uploadFi3.msg;
                  s = _yield$Wn$Io$uploadFi3.data;

                  if (!(_this280.uploadFile = null, _this280.progress = -1, !n)) {
                    _context156.next = 21;
                    break;
                  }

                  _context156.next = 20;
                  return Ti.Alert("i18n:".concat(a), {
                    type: "warn",
                    icon: "zmdi-alert-triangle"
                  });

                case 20:
                  return _context156.abrupt("return", void _context156.sent);

                case 21:
                  if (_.isEmpty(_this280.ImageFilter)) {
                    _context156.next = 27;
                    break;
                  }

                  _t178 = ["imagic", "id:".concat(s.id), "-filter \"".concat(_this280.ImageFilter.join(" "), "\"")];
                  _this280.quality > 0 && _this280.quality <= 1 && _t178.push("-qa ".concat(_this280.quality)), _t178.push("-out inplace");
                  _e56 = _t178.join(" ");
                  _context156.next = 27;
                  return Wn.Sys.exec2(_e56);

                case 27:
                  _this280.src_ts = Date.now(), _this280.oFile = s;
                  o = Wn.Io.formatObjPath(s, _this280.valueType);

                  _this280.$notify("change", o);

                case 30:
                case "end":
                  return _context156.stop();
              }
            }
          }, _callee155);
        }))();
      },
      reload: function reload() {
        var _this281 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee156() {
          return regeneratorRuntime.wrap(function _callee156$(_context157) {
            while (1) {
              switch (_context157.prev = _context157.next) {
                case 0:
                  if (!_.isString(_this281.value)) {
                    _context157.next = 6;
                    break;
                  }

                  _context157.next = 3;
                  return Wn.Io.loadMetaBy(_this281.value);

                case 3:
                  _this281.oFile = _context157.sent;
                  _context157.next = 7;
                  break;

                case 6:
                  "FILE" == _.get(_this281.value, "race") ? _this281.oFile = _.cloneDeep(_this281.value) : _this281.oFile = null;

                case 7:
                case "end":
                  return _context157.stop();
              }
            }
          }, _callee156);
        }))();
      }
    },
    watch: {
      value: function value() {
        this.reload();
      }
    },
    mounted: function () {
      var _mounted16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee157() {
        return regeneratorRuntime.wrap(function _callee157$(_context158) {
          while (1) {
            switch (_context158.prev = _context158.next) {
              case 0:
                _context158.next = 2;
                return this.reload();

              case 2:
              case "end":
                return _context158.stop();
            }
          }
        }, _callee157, this);
      }));

      function mounted() {
        return _mounted16.apply(this, arguments);
      }

      return mounted;
    }()
  };
  Ti.Preload("ti/com/wn/upload/file/wn-upload-file.mjs", t);
}(), Ti.Preload("ti/com/wn/upload/file/_com.json", {
  name: "wn-upload-file",
  globally: !0,
  template: "./wn-upload-file.html",
  mixins: ["./wn-upload-file.mjs"],
  components: ["@com:ti/upload/file"]
}), function () {
  var t = {
    reload: function reload(_ref137, i) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee158() {
        var t, e;
        return regeneratorRuntime.wrap(function _callee158$(_context159) {
          while (1) {
            switch (_context159.prev = _context159.next) {
              case 0:
                t = _ref137.state, e = _ref137.commit;
                !t.status.reloading && t.status.saving;

              case 2:
              case "end":
                return _context159.stop();
            }
          }
        }, _callee158);
      }))();
    }
  };
  Ti.Preload("ti/mod/hmaker/website/mod/site-config/site-config-actions.mjs", t);
}(), Ti.Preload("ti/mod/hmaker/website/mod/site-config/site-config.json", {
  meta: null,
  desktop: {
    mapping: {
      paths: {
        "site-state.json": "desktopSiteStateView"
      },
      types: {},
      mimes: {
        "application/json": "desktopJsonView",
        "text/*, application/*": "desktopTextView"
      },
      races: {
        DIR: "desktopAdaptList",
        FILE: "desktopObjPreview"
      }
    }
  },
  tablet: "desktop",
  phone: "desktop",
  views: {
    desktopSiteStateView: {
      comType: "hmaker-site-state",
      comConf: {
        home: "=home",
        content: "=currentContent"
      },
      actions: [{
        key: "saving",
        type: "action",
        icon: "zmdi-floppy",
        text: "i18n:save-change",
        altDisplay: {
          icon: "fas-spinner fa-pulse",
          text: "i18n:saving"
        },
        enableBy: "changed",
        action: "dispatch:main/saveCurrent",
        shortcut: "CTRL+S"
      }, {
        key: "reloading",
        type: "action",
        icon: "zmdi-rotate-right",
        text: "i18n:revoke-change",
        altDisplay: {
          icon: "zmdi-refresh zmdi-hc-spin",
          text: "i18n:loading"
        },
        action: "dispatch:main/reloadCurrent"
      }, {
        type: "Group",
        icon: "zmdi-more-vert",
        items: [{
          type: "action",
          icon: "zmdi-info-outline",
          text: "i18n:properties",
          action: "main:editCurrentObjMeta"
        }]
      }]
    },
    desktopTextView: {
      comType: "ti-text-raw",
      comConf: {
        showTitle: !1,
        content: "=currentContent",
        contentIsChanged: "=status.changed"
      },
      actions: [{
        key: "saving",
        type: "action",
        icon: "zmdi-floppy",
        text: "i18n:save-change",
        altDisplay: {
          icon: "fas-spinner fa-pulse",
          text: "i18n:saving"
        },
        enableBy: "changed",
        action: "dispatch:main/saveCurrent",
        shortcut: "CTRL+S"
      }, {
        key: "reloading",
        type: "action",
        icon: "zmdi-rotate-right",
        text: "i18n:revoke-change",
        altDisplay: {
          icon: "zmdi-refresh zmdi-hc-spin",
          text: "i18n:loading"
        },
        action: "dispatch:main/reloadCurrent"
      }, {
        type: "Group",
        icon: "zmdi-more-vert",
        items: [{
          type: "action",
          icon: "zmdi-info-outline",
          text: "i18n:properties",
          action: "main:editCurrentObjMeta"
        }]
      }]
    },
    desktopJsonView: {
      comType: "ti-text-json",
      comConf: {
        data: "=currentData"
      },
      actions: [{
        key: "saving",
        type: "action",
        icon: "zmdi-floppy",
        text: "i18n:save-change",
        altDisplay: {
          icon: "fas-spinner fa-pulse",
          text: "i18n:saving"
        },
        enableBy: "changed",
        action: "dispatch:main/saveCurrent",
        shortcut: "CTRL+S"
      }, {
        key: "reloading",
        type: "action",
        icon: "zmdi-rotate-right",
        text: "i18n:revoke-change",
        altDisplay: {
          icon: "zmdi-refresh zmdi-hc-spin",
          text: "i18n:loading"
        },
        action: "dispatch:main/reloadCurrent"
      }, {
        type: "Group",
        icon: "zmdi-more-vert",
        items: [{
          type: "action",
          icon: "zmdi-info-outline",
          text: "i18n:properties",
          action: "main:editCurrentObjMeta"
        }]
      }]
    },
    desktopAdaptList: {
      comType: "wn-adaptlist",
      comConf: {
        list: "=currentData.list"
      }
    },
    desktopObjPreview: {
      comType: "wn-obj-preview",
      comConf: {
        meta: "=currentMeta"
      }
    }
  },
  status: {
    reloading: !1
  }
}), function () {
  var t = {
    mutations: {
      setMeta: function setMeta(t, e) {
        t.meta = e;
      },
      setStatus: function setStatus(t, e) {
        t.status = _.assign({}, t.status, e);
      }
    }
  };
  Ti.Preload("ti/mod/hmaker/website/mod/site-config/site-config.mjs", t);
}(), Ti.Preload("ti/mod/hmaker/website/mod/site-config/_mod.json", {
  name: "hmaker-site-config",
  namespaced: !0,
  state: "./site-config.json",
  actions: "./site-config-actions.mjs",
  mixins: "./site-config.mjs"
}), function () {
  var t = {
    appendNode: function appendNode(_ref138, n) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee159() {
        var t, e, i;
        return regeneratorRuntime.wrap(function _callee159$(_context160) {
          while (1) {
            switch (_context160.prev = _context160.next) {
              case 0:
                t = _ref138.state, e = _ref138.commit, i = _ref138.dispatch;
                console.log("TODO appendNode", n);

              case 2:
              case "end":
                return _context160.stop();
            }
          }
        }, _callee159);
      }))();
    },
    reloadNode: function reloadNode(_ref139) {
      var _arguments24 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee161() {
        var t, e, i, _ref140, n, a, _ref140$self, s, _ref140$force, o, _ref140$depth, l, r, d, c, _t179, h;

        return regeneratorRuntime.wrap(function _callee161$(_context162) {
          while (1) {
            switch (_context162.prev = _context162.next) {
              case 0:
                t = _ref139.state, e = _ref139.commit, i = _ref139.dispatch;
                _ref140 = _arguments24.length > 1 && _arguments24[1] !== undefined ? _arguments24[1] : {}, n = _ref140.id, a = _ref140.path, _ref140$self = _ref140.self, s = _ref140$self === void 0 ? !1 : _ref140$self, _ref140$force = _ref140.force, o = _ref140$force === void 0 ? !1 : _ref140$force, _ref140$depth = _ref140.depth, l = _ref140$depth === void 0 ? 1 : _ref140$depth;
                d = _.cloneDeep(t.root), c = !1;

                if (r = _.isUndefined(n) ? Ti.Trees.getNodeByPath(d, a) : Ti.Trees.getNodeById(d, n)) {
                  _context162.next = 5;
                  break;
                }

                return _context162.abrupt("return");

              case 5:
                if (!s) {
                  _context162.next = 10;
                  break;
                }

                _context162.next = 8;
                return Wn.Io.loadMetaById(r.id);

              case 8:
                _t179 = _context162.sent;
                r.rawData = _t179, c = !0;

              case 10:
                h = /*#__PURE__*/function () {
                  var _ref141 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee160(t, e) {
                    var _i36, _yield$Wn$Io$loadChil, _n23, _iterator94, _step94, _t180, _n24;

                    return regeneratorRuntime.wrap(function _callee160$(_context161) {
                      while (1) {
                        switch (_context161.prev = _context161.next) {
                          case 0:
                            if (!(e > 0 && !t.leaf && (e--, o || _.isEmpty(t.children)))) {
                              _context161.next = 26;
                              break;
                            }

                            _i36 = [];
                            _context161.next = 4;
                            return Wn.Io.loadChildren(t.rawData);

                          case 4:
                            _yield$Wn$Io$loadChil = _context161.sent;
                            _n23 = _yield$Wn$Io$loadChil.list;
                            _iterator94 = _createForOfIteratorHelper(_n23);
                            _context161.prev = 7;

                            _iterator94.s();

                          case 9:
                            if ((_step94 = _iterator94.n()).done) {
                              _context161.next = 17;
                              break;
                            }

                            _t180 = _step94.value;
                            _n24 = Wn.Util.wrapTreeNode(_t180);
                            _context161.next = 14;
                            return h(_n24, e);

                          case 14:
                            _i36.push(_n24);

                          case 15:
                            _context161.next = 9;
                            break;

                          case 17:
                            _context161.next = 22;
                            break;

                          case 19:
                            _context161.prev = 19;
                            _context161.t0 = _context161["catch"](7);

                            _iterator94.e(_context161.t0);

                          case 22:
                            _context161.prev = 22;

                            _iterator94.f();

                            return _context161.finish(22);

                          case 25:
                            return _context161.abrupt("return", (t.children = _i36, !0));

                          case 26:
                            return _context161.abrupt("return", !1);

                          case 27:
                          case "end":
                            return _context161.stop();
                        }
                      }
                    }, _callee160, null, [[7, 19, 22, 25]]);
                  }));

                  return function h(_x16, _x17) {
                    return _ref141.apply(this, arguments);
                  };
                }();

                _context162.t0 = c;
                _context162.next = 14;
                return h(r, l);

              case 14:
                _context162.t1 = c = _context162.t0 |= _context162.sent;

                if (!_context162.t1) {
                  _context162.next = 17;
                  break;
                }

                e("setRoot", d);

              case 17:
              case "end":
                return _context162.stop();
            }
          }
        }, _callee161);
      }))();
    },
    reloadRoot: function reloadRoot(_ref142, n) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee162() {
        var t, e, i, _e57, _iterator95, _step95, _n25, _e58;

        return regeneratorRuntime.wrap(function _callee162$(_context163) {
          while (1) {
            switch (_context163.prev = _context163.next) {
              case 0:
                t = _ref142.state, e = _ref142.commit, i = _ref142.dispatch;
                e("setRoot", Wn.Util.wrapTreeNode(n));
                _context163.next = 4;
                return i("reloadNode");

              case 4:
                if (_.isEmpty(t.root.children)) {
                  _context163.next = 26;
                  break;
                }

                _e57 = _.keys(t.openedNodePaths).sort();
                _iterator95 = _createForOfIteratorHelper(_e57);
                _context163.prev = 7;

                _iterator95.s();

              case 9:
                if ((_step95 = _iterator95.n()).done) {
                  _context163.next = 18;
                  break;
                }

                _n25 = _step95.value;
                _e58 = Ti.Trees.getByPath(t.root, _n25);
                _context163.t0 = _e58 && !_e58.node.leaf;

                if (!_context163.t0) {
                  _context163.next = 16;
                  break;
                }

                _context163.next = 16;
                return i("reloadNode", {
                  path: _e58.path
                });

              case 16:
                _context163.next = 9;
                break;

              case 18:
                _context163.next = 23;
                break;

              case 20:
                _context163.prev = 20;
                _context163.t1 = _context163["catch"](7);

                _iterator95.e(_context163.t1);

              case 23:
                _context163.prev = 23;

                _iterator95.f();

                return _context163.finish(23);

              case 26:
              case "end":
                return _context163.stop();
            }
          }
        }, _callee162, null, [[7, 20, 23, 26]]);
      }))();
    }
  };
  Ti.Preload("ti/mod/hmaker/website/mod/site-tree/site-tree-actions.mjs", t);
}(), Ti.Preload("ti/mod/hmaker/website/mod/site-tree/site-tree.json", {
  root: {},
  currentId: null,
  openedNodePaths: {}
}), function () {
  var t = {
    mutations: {
      setRoot: function setRoot(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
        _.isEqual(t.root, e) || (t.root = e);
      },
      setCurrentId: function setCurrentId(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
        t.currentId = e;
      },
      setOpenedNodePaths: function setOpenedNodePaths(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        t.openedNodePaths = _.cloneDeep(e);
      }
    }
  };
  Ti.Preload("ti/mod/hmaker/website/mod/site-tree/site-tree.mjs", t);
}(), Ti.Preload("ti/mod/hmaker/website/mod/site-tree/_mod.json", {
  name: "hmaker-site-tree",
  namespaced: !0,
  state: "./site-tree.json",
  actions: "./site-tree-actions.mjs",
  mixins: "./site-tree.mjs"
}), function () {
  var t = {
    setTreeOpenedNodePaths: function setTreeOpenedNodePaths(_ref143) {
      var t = _ref143.getters,
          e = _ref143.commit;
      var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      t.TREE_OPEND_KEY && (e("tree/setOpenedNodePaths", i = _.pickBy(i, function (t) {
        return t;
      })), Ti.Storage.session.setObject(t.TREE_OPEND_KEY, i));
    },
    setTreeSelected: function setTreeSelected(_ref144) {
      var _arguments25 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee163() {
        var t, e, i, n, _a13;

        return regeneratorRuntime.wrap(function _callee163$(_context164) {
          while (1) {
            switch (_context164.prev = _context164.next) {
              case 0:
                t = _ref144.getters, e = _ref144.commit, i = _ref144.dispatch;
                n = _arguments25.length > 1 && _arguments25[1] !== undefined ? _arguments25[1] : null;

                if (!t.TREE_SELECTED_KEY) {
                  _context164.next = 14;
                  break;
                }

                e("tree/setCurrentId", n), Ti.Storage.session.set(t.TREE_SELECTED_KEY, n), e("setStatus", {
                  reloading: !0
                });
                _a13 = null;
                _context164.t0 = n;

                if (!_context164.t0) {
                  _context164.next = 10;
                  break;
                }

                _context164.next = 9;
                return Wn.Io.loadMetaById(n);

              case 9:
                _a13 = _context164.sent;

              case 10:
                _context164.next = 12;
                return i("current/reload", _a13);

              case 12:
                e("setStatus", {
                  reloading: !1
                });
                e("syncStatusChanged");

              case 14:
              case "end":
                return _context164.stop();
            }
          }
        }, _callee163);
      }))();
    },
    onCurrentChanged: function onCurrentChanged(_ref145, i) {
      var t = _ref145.commit,
          e = _ref145.dispatch;
      e("current/onChanged", i), t("syncStatusChanged");
    },
    saveCurrent: function saveCurrent(_ref146) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee164() {
        var t, e, i;
        return regeneratorRuntime.wrap(function _callee164$(_context165) {
          while (1) {
            switch (_context165.prev = _context165.next) {
              case 0:
                t = _ref146.state, e = _ref146.commit, i = _ref146.dispatch;
                _context165.t0 = t.current.meta;

                if (!_context165.t0) {
                  _context165.next = 8;
                  break;
                }

                e("setStatus", {
                  saving: !0
                });
                _context165.next = 6;
                return i("current/save");

              case 6:
                e("setStatus", {
                  saving: !1
                });
                e("syncStatusChanged");

              case 8:
              case "end":
                return _context165.stop();
            }
          }
        }, _callee164);
      }))();
    },
    reloadCurrent: function reloadCurrent(_ref147, i) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee165() {
        var t, e;
        return regeneratorRuntime.wrap(function _callee165$(_context166) {
          while (1) {
            switch (_context166.prev = _context166.next) {
              case 0:
                t = _ref147.commit, e = _ref147.dispatch;
                t("setStatus", {
                  reloading: !0
                });
                _context166.next = 4;
                return e("current/reload", i);

              case 4:
                t("setStatus", {
                  reloading: !1
                });
                t("syncStatusChanged");

              case 6:
              case "end":
                return _context166.stop();
            }
          }
        }, _callee165);
      }))();
    },
    reloadConfig: function reloadConfig(_ref148) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee166() {
        var t, e;
        return regeneratorRuntime.wrap(function _callee166$(_context167) {
          while (1) {
            switch (_context167.prev = _context167.next) {
              case 0:
                t = _ref148.state, e = _ref148.dispatch;
                _context167.next = 3;
                return e("config/reload");

              case 3:
              case "end":
                return _context167.stop();
            }
          }
        }, _callee166);
      }))();
    },
    reloadTree: function reloadTree(_ref149) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee167() {
        var t, e, i, n, _e59;

        return regeneratorRuntime.wrap(function _callee167$(_context168) {
          while (1) {
            switch (_context168.prev = _context168.next) {
              case 0:
                t = _ref149.getters, e = _ref149.state, i = _ref149.commit, n = _ref149.dispatch;

                if (t.TREE_OPEND_KEY) {
                  i("tree/setOpenedNodePaths", Ti.Storage.session.getObject(t.TREE_OPEND_KEY));
                }

                _context168.next = 4;
                return n("tree/reloadRoot", e.home);

              case 4:
                if (!t.TREE_SELECTED_KEY) {
                  _context168.next = 11;
                  break;
                }

                _e59 = Ti.Storage.session.getString(t.TREE_SELECTED_KEY);
                i("tree/setCurrentId", _e59);
                _context168.t0 = _e59;

                if (!_context168.t0) {
                  _context168.next = 11;
                  break;
                }

                _context168.next = 11;
                return n("setTreeSelected", _e59);

              case 11:
              case "end":
                return _context168.stop();
            }
          }
        }, _callee167);
      }))();
    },
    reloadTreeNode: function reloadTreeNode(_ref150, i) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee168() {
        var t, e;
        return regeneratorRuntime.wrap(function _callee168$(_context169) {
          while (1) {
            switch (_context169.prev = _context169.next) {
              case 0:
                t = _ref150.commit, e = _ref150.dispatch;
                t("setStatus", {
                  reloading: !0
                });
                _context169.next = 4;
                return e("tree/reloadNode", i);

              case 4:
                t("setStatus", {
                  reloading: !1
                });

              case 5:
              case "end":
                return _context169.stop();
            }
          }
        }, _callee168);
      }))();
    },
    reload: function reload(_ref151, n) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee169() {
        var t, e, i;
        return regeneratorRuntime.wrap(function _callee169$(_context170) {
          while (1) {
            switch (_context170.prev = _context170.next) {
              case 0:
                t = _ref151.state, e = _ref151.commit, i = _ref151.dispatch;
                n ? e("setHome", n) : n = t.home;
                e("setStatus", {
                  reloading: !0
                });
                _context170.next = 5;
                return i("reloadConfig");

              case 5:
                _context170.next = 7;
                return i("reloadTree");

              case 7:
                e("setStatus", {
                  reloading: !1
                });

              case 8:
              case "end":
                return _context170.stop();
            }
          }
        }, _callee169);
      }))();
    }
  };
  Ti.Preload("ti/mod/hmaker/website/website-actions.mjs", t);
}(), Ti.Preload("ti/mod/hmaker/website/website.json", {
  home: null,
  status: {
    reloading: !1,
    doing: !1,
    saving: !1,
    deleting: !1,
    changed: !1,
    publishing: !1,
    exposeHidden: !1
  }
}), function () {
  var t = {
    getters: {
      TREE_OPEND_KEY: function TREE_OPEND_KEY(t) {
        if (t.home) return "website_tree_openeds_".concat(t.home.id);
      },
      TREE_SELECTED_KEY: function TREE_SELECTED_KEY(t) {
        if (t.home) return "website_tree_selected_".concat(t.home.id);
      }
    },
    mutations: {
      setHome: function setHome(t, e) {
        t.home = e;
      },
      setStatus: function setStatus(t, e) {
        t.status = _.assign({}, t.status, e);
      },
      setExposeHidden: function setExposeHidden(t, e) {
        t.status.exposeHidden = e;
      },
      syncStatusChanged: function syncStatusChanged(t) {
        t.current && (t.status.changed = t.current.status.changed);
      }
    }
  };
  Ti.Preload("ti/mod/hmaker/website/website.mjs", t);
}(), Ti.Preload("ti/mod/hmaker/website/_mod.json", {
  name: "hmaker-website",
  namespaced: !0,
  state: "./website.json",
  actions: "./website-actions.mjs",
  mixins: "./website.mjs",
  modules: {
    tree: "./mod/site-tree",
    config: "./mod/site-config",
    current: "@mod:wn/obj-current"
  }
}), Ti.Preload("ti/mod/ti/viewport/ti-viewport.json", {
  mode: "desktop",
  activedIds: []
}), function () {
  var t = {
    getters: {
      viewportMode: function viewportMode(t) {
        return t.mode;
      },
      viewportActivedComIds: function viewportActivedComIds(t) {
        return t.activedIds;
      },
      isViewportModeDesktop: function isViewportModeDesktop(t) {
        return "desktop" == t.mode;
      },
      isViewportModeTablet: function isViewportModeTablet(t) {
        return "tablet" == t.mode;
      },
      isViewportModePhone: function isViewportModePhone(t) {
        return "phone" == t.mode;
      },
      isViewportModeDesktopOrTablet: function isViewportModeDesktopOrTablet(t) {
        return "desktop" == t.mode || "tablet" == t.mode;
      },
      isViewportModePhoneOrTablet: function isViewportModePhoneOrTablet(t) {
        return "phone" == t.mode || "tablet" == t.mode;
      }
    },
    mutations: {
      setMode: function setMode(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "desktop";
        t.mode = e;
      },
      setActivedIds: function setActivedIds(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        t.activedIds = _.cloneDeep(e);
      }
    }
  };
  Ti.Preload("ti/mod/ti/viewport/ti-viewport.mjs", t);
}(), Ti.Preload("ti/mod/ti/viewport/_mod.json", {
  state: "./ti-viewport.json",
  mixins: "./ti-viewport.mjs"
}), function () {
  var t = {
    onChanged: function onChanged(_ref152, e) {
      var t = _ref152.dispatch;
      t("changeContent", e);
    },
    changeContent: function changeContent(_ref153, e) {
      var t = _ref153.commit;
      t("setContent", e), t("syncStatusChanged");
    },
    changeMeta: function changeMeta(_ref154) {
      var t = _ref154.commit;

      var _ref155 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          e = _ref155.name,
          i = _ref155.value;

      if (e) {
        t("mergeMeta", _.set({}, e, i)), t("syncStatusChanged");
      }
    },
    updateContent: function updateContent(_ref156, i) {
      var t = _ref156.state,
          e = _ref156.commit;
      e("setContent", i), t.meta && "FILE" == t.meta.race && e("setSavedContent", i), e("syncStatusChanged");
    },
    openMetaEditor: function openMetaEditor(_ref157) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee170() {
        var t, e, i;
        return regeneratorRuntime.wrap(function _callee170$(_context171) {
          while (1) {
            switch (_context171.prev = _context171.next) {
              case 0:
                t = _ref157.state, e = _ref157.dispatch;

                if (t.meta) {
                  _context171.next = 5;
                  break;
                }

                _context171.next = 4;
                return Ti.Toast.Open("i18n:empty-data", "warn");

              case 4:
                return _context171.abrupt("return", _context171.sent);

              case 5:
                _context171.next = 7;
                return Wn.EditObjMeta(t.meta, {
                  fields: "auto"
                });

              case 7:
                i = _context171.sent;
                _context171.t0 = _.isUndefined(i);

                if (_context171.t0) {
                  _context171.next = 14;
                  break;
                }

                _context171.t1 = i.saved;

                if (!_context171.t1) {
                  _context171.next = 14;
                  break;
                }

                _context171.next = 14;
                return e("reload", i.data);

              case 14:
              case "end":
                return _context171.stop();
            }
          }
        }, _callee170);
      }))();
    },
    openContentEditor: function openContentEditor(_ref158) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee171() {
        var t, e, i;
        return regeneratorRuntime.wrap(function _callee171$(_context172) {
          while (1) {
            switch (_context172.prev = _context172.next) {
              case 0:
                t = _ref158.state, e = _ref158.dispatch;

                if (t.meta) {
                  _context172.next = 5;
                  break;
                }

                _context172.next = 4;
                return Ti.Toast.Open("i18n:empty-data", "warn");

              case 4:
                return _context172.abrupt("return", _context172.sent);

              case 5:
                _context172.next = 7;
                return Wn.EditObjContent(t.meta, {
                  content: t.content
                });

              case 7:
                i = _context172.sent;
                _context172.t0 = _.isUndefined(i);

                if (_context172.t0) {
                  _context172.next = 12;
                  break;
                }

                _context172.next = 12;
                return e("changeContent", i);

              case 12:
              case "end":
                return _context172.stop();
            }
          }
        }, _callee171);
      }))();
    },
    updateMeta: function updateMeta(_ref159) {
      var _arguments26 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee172() {
        var t, e, _ref160, i, n, a;

        return regeneratorRuntime.wrap(function _callee172$(_context173) {
          while (1) {
            switch (_context173.prev = _context173.next) {
              case 0:
                t = _ref159.commit, e = _ref159.dispatch;
                _ref160 = _arguments26.length > 1 && _arguments26[1] !== undefined ? _arguments26[1] : {}, i = _ref160.name, n = _ref160.value;
                a = Ti.Types.toObjByPair({
                  name: i,
                  value: n
                });
                _context173.next = 5;
                return e("updateMetas", a);

              case 5:
              case "end":
                return _context173.stop();
            }
          }
        }, _callee172);
      }))();
    },
    updateMetas: function updateMetas(_ref161) {
      var _arguments27 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee173() {
        var t, e, i, n, a, s, o;
        return regeneratorRuntime.wrap(function _callee173$(_context174) {
          while (1) {
            switch (_context174.prev = _context174.next) {
              case 0:
                t = _ref161.state, e = _ref161.commit;
                i = _arguments27.length > 1 && _arguments27[1] !== undefined ? _arguments27[1] : {};

                if (!_.isMatchWith(t.meta, i, _.isEqual)) {
                  _context174.next = 4;
                  break;
                }

                return _context174.abrupt("return");

              case 4:
                _.forEach(i, function (t, i) {
                  e("setFieldStatus", {
                    name: i,
                    type: "spinning",
                    text: "i18n:saving"
                  });
                });

                n = JSON.stringify(i);
                a = "thing ".concat(t.meta.th_set, " update ").concat(t.meta.id, " -fields -cqn");
                _context174.next = 9;
                return Wn.Sys.exec2(a, {
                  input: n,
                  as: "json"
                });

              case 9:
                s = _context174.sent;
                o = s instanceof Error;
                o || Ti.Util.isNil(s) || e("setMeta", s), _.forEach(i, function (t, i) {
                  o ? e("setFieldStatus", {
                    name: i,
                    type: "warn",
                    text: s.message || "i18n:fail"
                  }) : (e("setFieldStatus", {
                    name: i,
                    type: "ok",
                    text: "i18n:ok"
                  }), _.delay(function () {
                    e("clearFieldStatus", i);
                  }, 500));
                });

              case 12:
              case "end":
                return _context174.stop();
            }
          }
        }, _callee173);
      }))();
    },
    save: function save(_ref162) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee174() {
        var t, e, i, n, a;
        return regeneratorRuntime.wrap(function _callee174$(_context175) {
          while (1) {
            switch (_context175.prev = _context175.next) {
              case 0:
                t = _ref162.state, e = _ref162.commit;

                if (!(t.status.saving || !t.status.changed)) {
                  _context175.next = 3;
                  break;
                }

                return _context175.abrupt("return");

              case 3:
                e("setStatus", {
                  saving: !0
                });
                i = t.meta;
                n = t.content;
                _context175.next = 8;
                return Wn.Io.saveContentAsText(i, n);

              case 8:
                a = _context175.sent;
                return _context175.abrupt("return", (e("setStatus", {
                  saving: !1
                }), e("setMeta", a), e("setSavedContent", n), e("syncStatusChanged"), a));

              case 10:
              case "end":
                return _context175.stop();
            }
          }
        }, _callee174);
      }))();
    },
    reload: function reload(_ref163, n) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee175() {
        var t, e, i, a;
        return regeneratorRuntime.wrap(function _callee175$(_context176) {
          while (1) {
            switch (_context176.prev = _context176.next) {
              case 0:
                t = _ref163.state, e = _ref163.commit, i = _ref163.dispatch;

                if (!(t.status.reloading || t.status.saving)) {
                  _context176.next = 3;
                  break;
                }

                return _context176.abrupt("return");

              case 3:
                _.isUndefined(n) && (n = t.meta);
                _context176.t0 = _.isString(n);

                if (!_context176.t0) {
                  _context176.next = 9;
                  break;
                }

                _context176.next = 8;
                return Wn.Io.loadMeta(n);

              case 8:
                n = _context176.sent;

              case 9:
                if (n) {
                  _context176.next = 11;
                  break;
                }

                return _context176.abrupt("return", (e("setMeta", null), void e("setContent", null)));

              case 11:
                a = null;
                e("setStatus", {
                  reloading: !0
                });

                if (!("FILE" == n.race)) {
                  _context176.next = 19;
                  break;
                }

                _context176.next = 16;
                return Wn.Io.loadContent(n);

              case 16:
                a = _context176.sent;
                _context176.next = 24;
                break;

              case 19:
                _context176.t1 = "DIR" == n.race;

                if (!_context176.t1) {
                  _context176.next = 24;
                  break;
                }

                _context176.next = 23;
                return Wn.Io.loadChildren(n);

              case 23:
                a = _context176.sent;

              case 24:
                e("setStatus", {
                  reloading: !1
                });
                e("setMeta", n);
                e("clearFieldStatus");
                i("updateContent", a);

              case 28:
              case "end":
                return _context176.stop();
            }
          }
        }, _callee175);
      }))();
    }
  };
  Ti.Preload("ti/mod/wn/obj-current/m-obj-current-actions.mjs", t);
}(), Ti.Preload("ti/mod/wn/obj-current/m-obj-current.json", {
  meta: null,
  content: null,
  data: null,
  __saved_content: null,
  status: {
    changed: !1,
    saving: !1,
    reloading: !1
  },
  fieldStatus: {}
}), function () {
  var t = {
    mutations: {
      setMeta: function setMeta(t, e) {
        t.meta = e;
      },
      assignMeta: function assignMeta(t, e) {
        t.meta = _.assign({}, t.meta, e);
      },
      mergeMeta: function mergeMeta(t, e) {
        t.meta = _.merge({}, t.meta, e);
      },
      setContent: function setContent(t, e) {
        var i = t.meta;
        if (!i || Ti.Util.isNil(e)) return t.content = null, t.data = null, t.__saved_content = null, void (t.status.changed = !1);
        if ("DIR" == i.race) t.content = null, t.__saved_content = null, t.data = e;else if ("FILE" == i.race) if (_.isString(e)) {
          if (t.content = e, Wn.Util.isMimeJson(i.mime)) try {
            t.data = JSON.parse(e);
          } catch (e) {
            t.data = null;
          } else Wn.Util.isMimeText(i.mime) && (t.data = null);
        } else t.content = JSON.stringify(e, null, "  "), Wn.Util.isMimeJson(i.mime) ? t.data = e : Wn.Util.isMimeText(i.mime) && (t.data = null);
      },
      setData: function setData(t, e) {
        t.data = e;
      },
      setSavedContent: function setSavedContent(t, e) {
        t.__saved_content = e;
      },
      setStatus: function setStatus(t, e) {
        t.status = _.assign({}, t.status, e);
      },
      syncStatusChanged: function syncStatusChanged(t) {
        Ti.Util.isNil(t.content) && Ti.Util.isNil(t.__saved_content) ? t.status.changed = !1 : t.status.changed = !_.isEqual(t.content, t.__saved_content);
      },
      setFieldStatus: function setFieldStatus(t) {
        var _ref164 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            e = _ref164.name,
            i = _ref164.type,
            n = _ref164.text;

        if (e) {
          var _a14 = _.concat(e).join("-");

          Vue.set(t.fieldStatus, _a14, {
            type: i,
            text: n
          });
        }
      },
      clearFieldStatus: function clearFieldStatus(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        _.isEmpty(e) ? t.fieldStatus = {} : t.fieldStatus = _.omit(t.fieldStatus, e);
      }
    }
  };
  Ti.Preload("ti/mod/wn/obj-current/m-obj-current.mjs", t);
}(), Ti.Preload("ti/mod/wn/obj-current/_mod.json", {
  name: "wn-obj-current",
  namespaced: !0,
  state: "./m-obj-current.json",
  actions: "./m-obj-current-actions.mjs",
  mixins: "./m-obj-current.mjs"
}), function () {
  var t = {
    updateMeta: function updateMeta(_ref165) {
      var _arguments28 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee176() {
        var t, e, _ref166, i, n, a, s, o, l;

        return regeneratorRuntime.wrap(function _callee176$(_context177) {
          while (1) {
            switch (_context177.prev = _context177.next) {
              case 0:
                t = _ref165.state, e = _ref165.commit;
                _ref166 = _arguments28.length > 1 && _arguments28[1] !== undefined ? _arguments28[1] : {}, i = _ref166.name, n = _ref166.value;
                a = Ti.Types.toObjByPair({
                  name: i,
                  value: n
                });

                if (!_.isMatchWith(t.meta, a, _.isEqual)) {
                  _context177.next = 5;
                  break;
                }

                return _context177.abrupt("return");

              case 5:
                e("setStatus", {
                  saving: !0
                }), e("setFieldStatus", {
                  name: i,
                  status: "spinning"
                });
                s = JSON.stringify(a);
                o = "obj 'id:".concat(t.meta.id, "' -ocqn -u");
                _context177.next = 10;
                return Wn.Sys.exec2(o, {
                  input: s,
                  as: "json"
                });

              case 10:
                l = _context177.sent;
                return _context177.abrupt("return", (e("setMeta", l), e("clearFieldStatus", i), e("setStatus", {
                  saving: !1
                }), l));

              case 12:
              case "end":
                return _context177.stop();
            }
          }
        }, _callee176);
      }))();
    },
    loadMetaById: function loadMetaById(_ref167, e) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee177() {
        var t;
        return regeneratorRuntime.wrap(function _callee177$(_context178) {
          while (1) {
            switch (_context178.prev = _context178.next) {
              case 0:
                t = _ref167.dispatch;
                t("loadMeta", "id:".concat(e));

              case 2:
              case "end":
                return _context178.stop();
            }
          }
        }, _callee177);
      }))();
    },
    loadMeta: function loadMeta(_ref168, i) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee178() {
        var t, e;
        return regeneratorRuntime.wrap(function _callee178$(_context179) {
          while (1) {
            switch (_context179.prev = _context179.next) {
              case 0:
                t = _ref168.state, e = _ref168.commit;

                if (!i) {
                  _context179.next = 11;
                  break;
                }

                e("setStatus", {
                  reloading: !0
                });
                _context179.t0 = e;
                _context179.next = 6;
                return Wn.Io.loadMeta(i);

              case 6:
                _context179.t1 = _context179.sent;
                (0, _context179.t0)("setMeta", _context179.t1);
                e("setStatus", {
                  reloading: !1
                });
                _context179.next = 12;
                break;

              case 11:
                e("reset");

              case 12:
              case "end":
                return _context179.stop();
            }
          }
        }, _callee178);
      }))();
    },
    loadAncestors: function loadAncestors(_ref169) {
      var _arguments29 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee179() {
        var t, e, i, n, a;
        return regeneratorRuntime.wrap(function _callee179$(_context180) {
          while (1) {
            switch (_context180.prev = _context180.next) {
              case 0:
                t = _ref169.state, e = _ref169.commit;
                i = _arguments29.length > 1 && _arguments29[1] !== undefined ? _arguments29[1] : t.meta;
                e("setStatus", {
                  reloading: !0
                });
                _context180.next = 5;
                return Wn.Io.loadAncestors("id:" + i.id);

              case 5:
                n = _context180.sent;
                a = _.last(n);
                e("setMeta", i), e("setParent", a), e("setAncestors", n), e("setStatus", {
                  reloading: !1
                });

              case 8:
              case "end":
                return _context180.stop();
            }
          }
        }, _callee179);
      }))();
    },
    reload: function () {
      var _reload2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee180(_ref170, i) {
        var t, e;
        return regeneratorRuntime.wrap(function _callee180$(_context181) {
          while (1) {
            switch (_context181.prev = _context181.next) {
              case 0:
                t = _ref170.state, e = _ref170.dispatch;

                if (!_.isString(i)) {
                  _context181.next = 8;
                  break;
                }

                _context181.next = 4;
                return e("loadMeta", i);

              case 4:
                _context181.next = 6;
                return e("loadAncestors");

              case 6:
                _context181.next = 12;
                break;

              case 8:
                _context181.t0 = _.isPlainObject(i);

                if (!_context181.t0) {
                  _context181.next = 12;
                  break;
                }

                _context181.next = 12;
                return e("loadAncestors", i);

              case 12:
                return _context181.abrupt("return", t.meta);

              case 13:
              case "end":
                return _context181.stop();
            }
          }
        }, _callee180);
      }));

      function reload(_x18, _x19) {
        return _reload2.apply(this, arguments);
      }

      return reload;
    }()
  };
  Ti.Preload("ti/mod/wn/obj-meta/m-obj-meta-actions.mjs", t);
}(), Ti.Preload("ti/mod/wn/obj-meta/m-obj-meta.json", {
  ancestors: [],
  parent: null,
  meta: null,
  status: {
    changed: !1,
    saving: !1,
    reloading: !1
  },
  fieldStatus: {}
}), function () {
  var t = {
    getters: {
      get: function get(t) {
        return t;
      },
      getHome: function getHome(t) {
        var e = t.meta,
            i = t.ancestors;

        if (_.isEmpty(i)) {
          if (e && "root" == e.nm) return e;
        } else {
          if (1 == i.length && "home" == i[0].nm) return e;
          if ("home" == i[0].nm) return i[1];
        }

        return null;
      },
      hasParent: function hasParent(t) {
        return !!t.parent;
      },
      parentIsHome: function parentIsHome(t) {
        return !(_.isEmpty(t.ancestors) || !t.parent || !t.meta || !/^\/home\//.test(t.meta.ph)) && t.parent.pid == t.ancestors[0].id;
      },
      isHome: function isHome(t) {
        return !(_.isEmpty(t.ancestors) || !t.meta || !/^\/home\//.test(t.meta.ph)) && t.meta.pid == t.ancestors[0].id;
      }
    },
    mutations: {
      reset: function reset(t) {
        _.assign(t, {
          ancestors: [],
          parent: null,
          meta: null,
          status: {
            changed: !1,
            saving: !1,
            reloading: !1
          },
          fieldStatus: {}
        });
      },
      setAncestors: function setAncestors(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        t.ancestors = _.concat(e);
      },
      setParent: function setParent(t, e) {
        t.parent = e;
      },
      setMeta: function setMeta(t, e) {
        t.meta = e;
      },
      setFieldStatus: function setFieldStatus(t) {
        var _ref171 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            e = _ref171.name,
            i = _ref171.message,
            n = _ref171.status;

        if (e) {
          var _a15 = n ? {
            status: n,
            message: i
          } : null,
              s = _.concat(e).join("-");

          Vue.set(t.fieldStatus, s, _a15);
        }
      },
      clearFieldStatus: function clearFieldStatus(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        _.isEmpty(e) ? t.fieldStatus = {} : t.fieldStatus = _.omit(t.fieldStatus, e);
      },
      setStatus: function setStatus(t, e) {
        t.status = _.assign({}, t.status, e);
      }
    }
  };
  Ti.Preload("ti/mod/wn/obj-meta/m-obj-meta.mjs", t);
}(), Ti.Preload("ti/mod/wn/obj-meta/_mod.json", {
  state: "./m-obj-meta.json",
  actions: "./m-obj-meta-actions.mjs",
  mixins: "./m-obj-meta.mjs"
}), Ti.Preload("ti/mod/wn/session/m-session.json", {
  id: null,
  grp: null,
  du: -1,
  expi: 0,
  pwd: "~",
  ticket: null,
  uid: null,
  unm: null,
  me: null,
  envs: {}
}), function () {
  var t = {
    getters: {
      get: function get(t) {
        return t;
      }
    },
    mutations: {
      set: function set(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        t.id = e.id, t.grp = e.grp, t.du = e.du, t.expi = e.expi, t.pwd = e.pwd, t.ticket = e.ticket, t.uid = e.uid, t.unm = e.unm, t.me = e.me, t.envs = _.cloneDeep(e.envs);
      }
    },
    actions: {
      openResetPasswd: function openResetPasswd(_ref172) {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee181() {
          var t;
          return regeneratorRuntime.wrap(function _callee181$(_context182) {
            while (1) {
              switch (_context182.prev = _context182.next) {
                case 0:
                  t = _ref172.dispatch;
                  _context182.next = 3;
                  return Ti.App.Open({
                    icon: "fas-key",
                    title: "i18n:my-passwd",
                    position: "top",
                    width: 480,
                    height: 640,
                    textOk: null,
                    textCancel: null,
                    comType: "WebAuthPasswd",
                    comConf: {
                      allowModes: {
                        passwd: !0
                      }
                    },
                    events: {
                      "passwd:reset": function passwdReset(e) {
                        console.log("passwd:reset", e), t("resetPasswd", e);
                      }
                    },
                    components: "@com:web/auth/passwd"
                  });

                case 3:
                case "end":
                  return _context182.stop();
              }
            }
          }, _callee181);
        }))();
      },
      resetPasswd: function resetPasswd(_ref173, t) {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee182() {
          var e, i;
          return regeneratorRuntime.wrap(function _callee182$(_context183) {
            while (1) {
              switch (_context183.prev = _context183.next) {
                case 0:
                  _objectDestructuringEmpty(_ref173);

                  if (!t) {
                    _context183.next = 8;
                    break;
                  }

                  if (!(console.log(t), "passwd" != t.mode)) {
                    _context183.next = 4;
                    break;
                  }

                  throw "Unsupport passwd-reset mode: " + t.mode;

                case 4:
                  e = "passwd '".concat(t.newpwd, "' -old '").concat(t.oldpwd, "'"), i = {
                    ok: !0
                  };
                  _context183.next = 7;
                  return Wn.Sys.exec(e, {
                    errorBy: function errorBy(_ref174) {
                      var t = _ref174.code;
                      i.ok = !1, i.errCode = t;
                    }
                  });

                case 7:
                  t.done(i);

                case 8:
                case "end":
                  return _context183.stop();
              }
            }
          }, _callee182);
        }))();
      },
      reload: function reload() {
        _.delay(function () {
          console.log("hahah");
        }, 1e3);
      }
    }
  };
  Ti.Preload("ti/mod/wn/session/m-session.mjs", t);
}(), Ti.Preload("ti/mod/wn/session/_mod.json", {
  state: "./m-session.json",
  mixins: ["./m-session.mjs"]
}), function () {
  var t = {
    saveCurrent: function saveCurrent(_ref175) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee183() {
        var t, e;
        return regeneratorRuntime.wrap(function _callee183$(_context184) {
          while (1) {
            switch (_context184.prev = _context184.next) {
              case 0:
                t = _ref175.commit, e = _ref175.dispatch;
                t("setStatus", {
                  saving: !0
                });
                _context184.next = 4;
                return e("current/save");

              case 4:
                t("setStatus", {
                  saving: !1
                });
                t("syncStatusChanged");

              case 6:
              case "end":
                return _context184.stop();
            }
          }
        }, _callee183);
      }))();
    },
    updateCurrent: function updateCurrent(_ref176) {
      var _arguments30 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee184() {
        var t, e, i, n, _ref177, a, s;

        return regeneratorRuntime.wrap(function _callee184$(_context185) {
          while (1) {
            switch (_context185.prev = _context185.next) {
              case 0:
                t = _ref176.state, e = _ref176.commit, i = _ref176.dispatch, n = _ref176.getters;
                _ref177 = _arguments30.length > 1 && _arguments30[1] !== undefined ? _arguments30[1] : {}, a = _ref177.name, s = _ref177.value;
                _context185.t0 = n.hasCurrent;

                if (!_context185.t0) {
                  _context185.next = 7;
                  break;
                }

                _context185.next = 6;
                return i("current/updateMeta", {
                  name: a,
                  value: s
                });

              case 6:
                e("search/updateItem", t.current.meta);

              case 7:
              case "end":
                return _context185.stop();
            }
          }
        }, _callee184);
      }))();
    },
    updateCurrentMetas: function updateCurrentMetas(_ref178) {
      var _arguments31 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee185() {
        var t, e, i, n, a;
        return regeneratorRuntime.wrap(function _callee185$(_context186) {
          while (1) {
            switch (_context186.prev = _context186.next) {
              case 0:
                t = _ref178.state, e = _ref178.commit, i = _ref178.dispatch, n = _ref178.getters;
                a = _arguments31.length > 1 && _arguments31[1] !== undefined ? _arguments31[1] : {};
                _context186.t0 = n.hasCurrent;

                if (!_context186.t0) {
                  _context186.next = 7;
                  break;
                }

                _context186.next = 6;
                return i("current/updateMetas", a);

              case 6:
                e("search/updateItem", t.current.meta);

              case 7:
              case "end":
                return _context186.stop();
            }
          }
        }, _callee185);
      }))();
    },
    batchUpdateMetas: function batchUpdateMetas(_ref179) {
      var _arguments32 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee186() {
        var t, e, i, n, a, s, o, l, _iterator96, _step96, _t181, _i37, _n26;

        return regeneratorRuntime.wrap(function _callee186$(_context187) {
          while (1) {
            switch (_context187.prev = _context187.next) {
              case 0:
                t = _ref179.state, e = _ref179.commit, i = _ref179.getters;
                n = _arguments32.length > 1 && _arguments32[1] !== undefined ? _arguments32[1] : {};
                a = i["search/checkedItems"];

                if (!(_.isEmpty(a) || _.isEmpty(n))) {
                  _context187.next = 5;
                  break;
                }

                return _context187.abrupt("return");

              case 5:
                e("setStatus", {
                  reloading: !0
                });
                s = _.get(t.current, "meta.id"), o = JSON.stringify(n), l = t.meta.id;
                _iterator96 = _createForOfIteratorHelper(a);
                _context187.prev = 8;

                _iterator96.s();

              case 10:
                if ((_step96 = _iterator96.n()).done) {
                  _context187.next = 19;
                  break;
                }

                _t181 = _step96.value;
                _i37 = "thing ".concat(l, " update ").concat(_t181.id, " -fields -cqn");
                _context187.next = 15;
                return Wn.Sys.exec2(_i37, {
                  as: "json",
                  input: o
                });

              case 15:
                _n26 = _context187.sent;
                e("search/updateItem", _n26), _n26.id == s && e("current/setMeta", _n26);

              case 17:
                _context187.next = 10;
                break;

              case 19:
                _context187.next = 24;
                break;

              case 21:
                _context187.prev = 21;
                _context187.t0 = _context187["catch"](8);

                _iterator96.e(_context187.t0);

              case 24:
                _context187.prev = 24;

                _iterator96.f();

                return _context187.finish(24);

              case 27:
                e("setStatus", {
                  reloading: !1
                });

              case 28:
              case "end":
                return _context187.stop();
            }
          }
        }, _callee186, null, [[8, 21, 24, 27]]);
      }))();
    },
    setCurrentMeta: function setCurrentMeta(_ref180, i) {
      var t = _ref180.state,
          e = _ref180.commit;
      e("current/setMeta", i), e("syncStatusChanged"), e("search/updateItem", t.current.meta);
    },
    setCurrentContent: function setCurrentContent(_ref181, n) {
      var t = _ref181.state,
          e = _ref181.commit,
          i = _ref181.dispatch;
      i("current/onChanged", n), e("syncStatusChanged"), e("search/updateItem", t.current.meta);
    },
    autoSyncCurrentFilesCount: function autoSyncCurrentFilesCount(_ref182) {
      var _arguments33 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee187() {
        var t, e, i, _ref183, _ref183$quiet, n, a, s, _t182, o;

        return regeneratorRuntime.wrap(function _callee187$(_context188) {
          while (1) {
            switch (_context188.prev = _context188.next) {
              case 0:
                t = _ref182.state, e = _ref182.commit, i = _ref182.dispatch;
                _ref183 = _arguments33.length > 1 && _arguments33[1] !== undefined ? _arguments33[1] : {}, _ref183$quiet = _ref183.quiet, n = _ref183$quiet === void 0 ? !0 : _ref183$quiet;
                a = t.current.meta, s = t.currentDataDir;

                if (s) {
                  _context188.next = 5;
                  break;
                }

                return _context188.abrupt("return", (console.warn("thing file -ufc without 'dirName'"), Ti.Toast.Open("thing file -ufc without 'dirName'")));

              case 5:
                if (!(a && a.id && s)) {
                  _context188.next = 17;
                  break;
                }

                e("setStatus", {
                  reloading: !0
                });
                _t182 = "thing ".concat(a.th_set, " file ").concat(a.id, " -dir '").concat(s, "' -ufc -cqn");
                _context188.next = 10;
                return Wn.Sys.exec2(_t182, {
                  as: "json"
                });

              case 10:
                o = _context188.sent;
                i("setCurrentMeta", o);
                e("setStatus", {
                  reloading: !1
                });
                _context188.t0 = n;

                if (_context188.t0) {
                  _context188.next = 17;
                  break;
                }

                _context188.next = 17;
                return Ti.Toast.Open("i18n:wn-th-recount-media-done", {
                  vars: {
                    n: o.th_media_nb || 0
                  }
                });

              case 17:
              case "end":
                return _context188.stop();
            }
          }
        }, _callee187);
      }))();
    },
    toggleInRecycleBin: function toggleInRecycleBin(_ref184) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee188() {
        var t, e, i, n, a;
        return regeneratorRuntime.wrap(function _callee188$(_context189) {
          while (1) {
            switch (_context189.prev = _context189.next) {
              case 0:
                t = _ref184.state, e = _ref184.commit, i = _ref184.dispatch, n = _ref184.getters;
                a = !n.isInRecycleBin;
                e("search/setInRecycleBin", a);
                e("setStatus", {
                  inRecycleBin: a,
                  reloading: !0
                });
                _context189.next = 6;
                return i("search/reload");

              case 6:
                e("setStatus", {
                  reloading: !1
                });

              case 7:
              case "end":
                return _context189.stop();
            }
          }
        }, _callee188);
      }))();
    },
    create: function create(_ref185) {
      var _arguments34 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee189() {
        var t, e, i, n, a, s, o, l, r, d, c, h;
        return regeneratorRuntime.wrap(function _callee189$(_context190) {
          while (1) {
            switch (_context190.prev = _context190.next) {
              case 0:
                t = _ref185.state, e = _ref185.commit, i = _ref185.dispatch;
                n = _arguments34.length > 1 && _arguments34[1] !== undefined ? _arguments34[1] : {};
                a = _.get(t.config, "schema.behavior.create") || {}, s = a.unique, o = a.after, l = a.fixed, r = JSON.stringify(n), d = ["thing ".concat(t.meta.id, " create -cqn -fields")];
                !_.isEmpty(s) && _.isString(s) && d.push(" -unique '".concat(s, "'")), !_.isEmpty(l) && _.isString(s) && d.push(" -fixed '".concat(JSON.stringify(l), "'")), !_.isEmpty(o) && _.isString(o) && d.push(" -after '".concat(o, "'")), e("setStatus", {
                  reloading: !0
                });
                c = d.join(" ");
                _context190.next = 7;
                return Wn.Sys.exec2(c, {
                  input: r,
                  as: "json"
                });

              case 7:
                h = _context190.sent;
                _context190.t0 = !h || h instanceof Error;

                if (_context190.t0) {
                  _context190.next = 13;
                  break;
                }

                e("search/prependToList", h);
                _context190.next = 13;
                return i("setCurrentThing", {
                  meta: h
                });

              case 13:
                e("setStatus", {
                  reloading: !1
                });
                return _context190.abrupt("return", h);

              case 15:
              case "end":
                return _context190.stop();
            }
          }
        }, _callee189);
      }))();
    },
    removeChecked: function removeChecked(_ref186) {
      var _arguments35 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee190() {
        var t, e, i, n, a, s, o, l, r, d;
        return regeneratorRuntime.wrap(function _callee190$(_context191) {
          while (1) {
            switch (_context191.prev = _context191.next) {
              case 0:
                t = _ref186.state, e = _ref186.commit, i = _ref186.dispatch, n = _ref186.getters;
                a = _arguments35.length > 1 && _arguments35[1] !== undefined ? _arguments35[1] : !1;
                s = _.cloneDeep(t.search.checkedIds);

                if (!_.isEmpty(s)) {
                  _context191.next = 7;
                  break;
                }

                _context191.next = 6;
                return Ti.Alert("i18n:del-none");

              case 6:
                return _context191.abrupt("return", _context191.sent);

              case 7:
                _context191.t0 = (a |= (_.get(t, "config.schema.behavior") || {}).hardRemove) || t.status.inRecycleBin;

                if (!_context191.t0) {
                  _context191.next = 12;
                  break;
                }

                _context191.next = 11;
                return Ti.Confirm("i18n:del-hard");

              case 11:
                _context191.t0 = !_context191.sent;

              case 12:
                if (!_context191.t0) {
                  _context191.next = 14;
                  break;
                }

                return _context191.abrupt("return");

              case 14:
                e("setStatus", {
                  deleting: !0
                });
                o = {};
                l = "thing ".concat(t.meta.id, " delete ").concat(a ? "-hard" : "", " -cqn -l ").concat(s.join(" "));
                _context191.next = 19;
                return Wn.Sys.exec2(l, {
                  as: "json",
                  errorAs: function errorAs(_ref187) {
                    var t = _ref187.data;

                    var e = _.trim(t);

                    o[e] = !0;
                  }
                });

              case 19:
                r = _.filter(s, function (t) {
                  return !o[t];
                });
                console.log("removeIds:", r), _.isEmpty(r) || e("search/removeItems", r);
                d = n["search/currentItem"];
                _context191.next = 24;
                return i("setCurrentThing", {
                  meta: d
                });

              case 24:
                e("setStatus", {
                  deleting: !1
                });

              case 25:
              case "end":
                return _context191.stop();
            }
          }
        }, _callee190);
      }))();
    },
    restoreRecycleBin: function restoreRecycleBin(_ref188) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee191() {
        var t, e, i, n, a, s, o;
        return regeneratorRuntime.wrap(function _callee191$(_context192) {
          while (1) {
            switch (_context192.prev = _context192.next) {
              case 0:
                t = _ref188.state, e = _ref188.commit, i = _ref188.dispatch, n = _ref188.getters;
                a = t.search.checkedIds;

                if (!_.isEmpty(a)) {
                  _context192.next = 6;
                  break;
                }

                _context192.next = 5;
                return Ti.Alert("i18n:thing-restore-none");

              case 5:
                return _context192.abrupt("return", _context192.sent);

              case 6:
                e("setStatus", {
                  restoring: !0
                });
                s = "thing ".concat(t.meta.id, " restore -quiet -cqn -l ").concat(a.join(" "));
                _context192.next = 10;
                return Wn.Sys.exec2(s, {
                  as: "json"
                });

              case 10:
                _context192.next = 12;
                return i("search/reload");

              case 12:
                o = n["search/currentItem"];
                _context192.next = 15;
                return i("current/reload", o);

              case 15:
                e("setStatus", {
                  restoring: !1
                });

              case 16:
              case "end":
                return _context192.stop();
            }
          }
        }, _callee191);
      }))();
    },
    cleanRecycleBin: function cleanRecycleBin(_ref189) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee192() {
        var t, e, i, n;
        return regeneratorRuntime.wrap(function _callee192$(_context193) {
          while (1) {
            switch (_context193.prev = _context193.next) {
              case 0:
                t = _ref189.state, e = _ref189.commit, i = _ref189.dispatch;
                e("setStatus", {
                  cleaning: !0
                });
                n = "thing ".concat(t.meta.id, " clean -limit 3000");
                _context193.next = 5;
                return Wn.Sys.exec2(n);

              case 5:
                e("setStatus", {
                  cleaning: !1
                });
                _context193.next = 8;
                return i("reload");

              case 8:
              case "end":
                return _context193.stop();
            }
          }
        }, _callee192);
      }))();
    },
    openMetaEditor: function openMetaEditor(_ref190) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee193() {
        var t, e, i, _e60, n;

        return regeneratorRuntime.wrap(function _callee193$(_context194) {
          while (1) {
            switch (_context194.prev = _context194.next) {
              case 0:
                t = _ref190.state, e = _ref190.getters, i = _ref190.dispatch;

                if (t.meta) {
                  _context194.next = 5;
                  break;
                }

                _context194.next = 4;
                return Ti.Toast.Open("i18n:empty-data", "warn");

              case 4:
                return _context194.abrupt("return", _context194.sent);

              case 5:
                if (!e.hasCurrent) {
                  _context194.next = 18;
                  break;
                }

                _context194.next = 8;
                return Wn.EditObjMeta(t.current.meta, {
                  fields: "default",
                  autoSave: !1
                });

              case 8:
                _e60 = _context194.sent;

                if (!_.isUndefined(_e60)) {
                  _context194.next = 11;
                  break;
                }

                return _context194.abrupt("return");

              case 11:
                n = _e60.updates;
                _context194.t0 = _.isEmpty(n);

                if (_context194.t0) {
                  _context194.next = 16;
                  break;
                }

                _context194.next = 16;
                return i("updateCurrentMetas", n);

              case 16:
                _context194.next = 20;
                break;

              case 18:
                _context194.next = 20;
                return Wn.EditObjMeta(t.meta, {
                  fields: "auto",
                  autoSave: !0
                });

              case 20:
              case "end":
                return _context194.stop();
            }
          }
        }, _callee193);
      }))();
    },
    openContentEditor: function openContentEditor(_ref191) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee194() {
        var t, e, i, _e61;

        return regeneratorRuntime.wrap(function _callee194$(_context195) {
          while (1) {
            switch (_context195.prev = _context195.next) {
              case 0:
                t = _ref191.state, e = _ref191.getters, i = _ref191.dispatch;

                if (t.meta) {
                  _context195.next = 5;
                  break;
                }

                _context195.next = 4;
                return Ti.Toast.Open("i18n:empty-data", "warn");

              case 4:
                return _context195.abrupt("return", _context195.sent);

              case 5:
                if (e.hasCurrent) {
                  _context195.next = 9;
                  break;
                }

                _context195.next = 8;
                return Ti.Toast.Open("i18n:nil-obj", "warn");

              case 8:
                return _context195.abrupt("return", _context195.sent);

              case 9:
                _context195.next = 11;
                return Wn.EditObjContent(t.current.meta, {
                  content: t.current.content
                });

              case 11:
                _e61 = _context195.sent;

                if (!_.isUndefined(_e61)) {
                  _context195.next = 14;
                  break;
                }

                return _context195.abrupt("return");

              case 14:
                _context195.next = 16;
                return i("current/changeContent", _e61);

              case 16:
              case "end":
                return _context195.stop();
            }
          }
        }, _callee194);
      }))();
    },
    reloadFiles: function reloadFiles(_ref192) {
      var _arguments36 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee195() {
        var t, e, i, n, _ref193, _ref193$force, a, s, o, l, _e62, _n27, _t183, _i38;

        return regeneratorRuntime.wrap(function _callee195$(_context196) {
          while (1) {
            switch (_context196.prev = _context196.next) {
              case 0:
                t = _ref192.state, e = _ref192.commit, i = _ref192.dispatch, n = _ref192.getters;
                _ref193 = _arguments36.length > 1 && _arguments36[1] !== undefined ? _arguments36[1] : {}, _ref193$force = _ref193.force, a = _ref193$force === void 0 ? !1 : _ref193$force;
                s = _.get(t.current, "meta"), o = _.get(s, "id"), l = t.filesName;

                if (!(o && l)) {
                  _context196.next = 15;
                  break;
                }

                _e62 = t.meta.id, _n27 = t.files.meta;

                if (!(!_n27 || !_n27.ph || !_n27.ph.endsWith("/data/".concat(o, "/").concat(l)))) {
                  _context196.next = 11;
                  break;
                }

                _t183 = {
                  race: "DIR",
                  nm: "".concat(o, "/").concat(l)
                }, _i38 = "obj \"".concat("id:".concat(_e62, "/data"), "\" -IfNoExists -new '", JSON.stringify(_t183), "' -cqno");
                _context196.next = 9;
                return Wn.Sys.exec2(_i38, {
                  as: "json"
                });

              case 9:
                if (_n27 = _context196.sent) {
                  _context196.next = 11;
                  break;
                }

                return _context196.abrupt("return");

              case 11:
                _context196.next = 13;
                return i("files/reload", _n27);

              case 13:
                _context196.next = 16;
                break;

              case 15:
                e("files/reset");

              case 16:
              case "end":
                return _context196.stop();
            }
          }
        }, _callee195);
      }))();
    },
    reloadSearch: function reloadSearch(_ref194) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee196() {
        var t, e, i, n, _e63, _n28, _iterator97, _step97, _i39;

        return regeneratorRuntime.wrap(function _callee196$(_context197) {
          while (1) {
            switch (_context197.prev = _context197.next) {
              case 0:
                t = _ref194.state, e = _ref194.commit, i = _ref194.dispatch;
                n = t.meta;
                e("setStatus", {
                  reloading: !0
                });
                _context197.next = 5;
                return i("search/reload", n);

              case 5:
                if (!t.current.meta) {
                  _context197.next = 27;
                  break;
                }

                _e63 = t.current.meta.id, _n28 = null;
                _iterator97 = _createForOfIteratorHelper(t.search.list);
                _context197.prev = 8;

                _iterator97.s();

              case 10:
                if ((_step97 = _iterator97.n()).done) {
                  _context197.next = 17;
                  break;
                }

                _i39 = _step97.value;

                if (!(_i39.id == _e63)) {
                  _context197.next = 15;
                  break;
                }

                _n28 = _i39;
                return _context197.abrupt("break", 17);

              case 15:
                _context197.next = 10;
                break;

              case 17:
                _context197.next = 22;
                break;

              case 19:
                _context197.prev = 19;
                _context197.t0 = _context197["catch"](8);

                _iterator97.e(_context197.t0);

              case 22:
                _context197.prev = 22;

                _iterator97.f();

                return _context197.finish(22);

              case 25:
                _context197.next = 27;
                return i("setCurrentThing", {
                  meta: _n28
                });

              case 27:
                e("setStatus", {
                  reloading: !1
                });

              case 28:
              case "end":
                return _context197.stop();
            }
          }
        }, _callee196, null, [[8, 19, 22, 25]]);
      }))();
    },
    setCurrentThing: function setCurrentThing(_ref195) {
      var _arguments37 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee197() {
        var t, e, i, _ref196, _ref196$meta, n, _ref196$checkedIds, a, s, o, l, r, d;

        return regeneratorRuntime.wrap(function _callee197$(_context198) {
          while (1) {
            switch (_context198.prev = _context198.next) {
              case 0:
                t = _ref195.state, e = _ref195.commit, i = _ref195.dispatch;
                _ref196 = _arguments37.length > 1 && _arguments37[1] !== undefined ? _arguments37[1] : {}, _ref196$meta = _ref196.meta, n = _ref196$meta === void 0 ? null : _ref196$meta, _ref196$checkedIds = _ref196.checkedIds, a = _ref196$checkedIds === void 0 ? {} : _ref196$checkedIds;
                s = n ? n.id : null, o = Ti.Util.truthyKeys(a);
                Ti.Util.isNil(s) || o.push(s), e("search/setCurrentId", s), e("search/setCheckedIds", o);
                l = t.meta, r = s ? "id:".concat(l.id, "/data/").concat(s) : null;
                e("setCurrentDataHome", r);
                _context198.t0 = e;
                _context198.next = 9;
                return Wn.Io.loadMeta(r);

              case 9:
                _context198.t1 = _context198.sent;
                (0, _context198.t0)("setCurrentDataHomeObj", _context198.t1);
                d = "".concat(l.id, ":currentId");
                _.get(t.config.schema, "keepLastOff") ? Ti.Storage.session.remove(d) : Ti.Storage.session.set(d, s);
                _context198.next = 15;
                return i("current/reload", n);

              case 15:
              case "end":
                return _context198.stop();
            }
          }
        }, _callee197);
      }))();
    },
    doChangeShown: function doChangeShown(_ref197, n) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee198() {
        var t, e, i;
        return regeneratorRuntime.wrap(function _callee198$(_context199) {
          while (1) {
            switch (_context199.prev = _context199.next) {
              case 0:
                t = _ref197.state, e = _ref197.commit, i = _ref197.dispatch;
                i("config/updateShown", n);

              case 2:
              case "end":
                return _context199.stop();
            }
          }
        }, _callee198);
      }))();
    },
    reload: function reload(_ref198, n) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee199() {
        var t, e, i, a, s, o, l, r, d, _e64, _n29, _s3;

        return regeneratorRuntime.wrap(function _callee199$(_context200) {
          while (1) {
            switch (_context200.prev = _context200.next) {
              case 0:
                t = _ref198.state, e = _ref198.commit, i = _ref198.dispatch;
                n ? e("setMeta", n) : n = t.meta;
                a = n;
                e("setStatus", {
                  reloading: !0
                });
                _context200.next = 6;
                return i("config/reload", n);

              case 6:
                s = "".concat(n.id, "_dirname"), o = Ti.Storage.session.getString(s);
                o || (o = _.get(t.config, "schema.behavior.filesDirName") || "media"), e("setCurrentDataDir", o || "media");
                l = Ti.Storage.session.getObject(n.id) || {};

                _.defaults(l, {
                  filter: {},
                  sorter: {},
                  pager: {}
                });

                r = _.get(t.config.schema, "behavior.filter") || {};
                r = _.assign({}, r, l.filter), _.isEmpty(r) || e("search/setFilter", r);
                d = _.get(t.config.schema, "behavior.sorter") || {};
                _.isEmpty(l.sorter) ? _.isEmpty(d) || e("search/setSorter", d) : e("search/setSorter", l.sorter);
                _.isEmpty(l.pager) || e("search/setPager", l.pager);
                _context200.next = 17;
                return i("reloadSearch");

              case 17:
                if (!(_.get(t, "meta.th_auto_select") && !t.current.meta && !_.isEmpty(t.search.list))) {
                  _context200.next = 23;
                  break;
                }

                _n29 = "".concat(a.id, ":currentId"), _s3 = Ti.Storage.session.getString(_n29);
                _s3 && (_e64 = _.find(t.search.list, function (t) {
                  return t.id == _s3;
                }));
                _e64 || (_e64 = _.first(t.search.list));
                _context200.next = 23;
                return i("setCurrentThing", {
                  meta: _e64,
                  force: !1
                });

              case 23:
                e("setStatus", {
                  reloading: !1
                });

              case 24:
              case "end":
                return _context200.stop();
            }
          }
        }, _callee199);
      }))();
    }
  };
  Ti.Preload("ti/mod/wn/thing/m-thing-actions.mjs", t);
}(), Ti.Preload("ti/mod/wn/thing/m-thing.json", {
  meta: null,
  currentDataDir: null,
  currentDataHome: null,
  currentDataHomeObj: null,
  status: {
    reloading: !1,
    doing: !1,
    saving: !1,
    deleting: !1,
    changed: !1,
    restoring: !1,
    cleaning: !1,
    inRecycleBin: !1
  }
}), function () {
  var t = {
    getters: {
      hasCurrent: function hasCurrent(t) {
        return t.current && t.current.meta;
      },
      isInRecycleBin: function isInRecycleBin(t) {
        return t.search.inRecycleBin;
      }
    },
    mutations: {
      setMeta: function setMeta(t, e) {
        t.meta = e;
      },
      setCurrentDataDir: function setCurrentDataDir(t, e) {
        if (t.currentDataDir = e, t.meta) {
          var i = "".concat(t.meta.id, "_dirname");
          Ti.Storage.session.set(i, e);
        }
      },
      setCurrentDataHome: function setCurrentDataHome(t, e) {
        t.currentDataHome = e;
      },
      setCurrentDataHomeObj: function setCurrentDataHomeObj(t, e) {
        t.currentDataHomeObj = _.cloneDeep(e);
      },
      setStatus: function setStatus(t, e) {
        t.status = _.assign({}, t.status, e);
      },
      syncStatusChanged: function syncStatusChanged(t) {
        t.current && (t.status.changed = t.current.status.changed);
      }
    }
  };
  Ti.Preload("ti/mod/wn/thing/m-thing.mjs", t);
}(), function () {
  var t = {
    updateShown: function updateShown(_ref199, e) {
      var t = _ref199.commit;
      t("mergeShown", e), t("persistShown");
    },
    reloadSchema: function reloadSchema(_ref200) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee200() {
        var t, e, i, n, a, _t184;

        return regeneratorRuntime.wrap(function _callee200$(_context201) {
          while (1) {
            switch (_context201.prev = _context201.next) {
              case 0:
                t = _ref200.state, e = _ref200.commit;
                i = "id:".concat(t.meta.id, "/thing-schema.json");
                _context201.next = 4;
                return Wn.Io.loadMeta(i);

              case 4:
                n = _context201.sent;
                _context201.next = 7;
                return Wn.Io.loadContent(n, {
                  as: "json"
                });

              case 7:
                a = _context201.sent;

                if (!a.methods) {
                  _context201.next = 13;
                  break;
                }

                _context201.next = 11;
                return Ti.Load(a.methods);

              case 11:
                _t184 = _context201.sent;
                _.isArray(_t184) || (_t184 = [_t184]), a.methods = _t184;

              case 13:
                return _context201.abrupt("return", (e("setSchema", a), a));

              case 14:
              case "end":
                return _context201.stop();
            }
          }
        }, _callee200);
      }))();
    },
    reloadLayout: function reloadLayout(_ref201) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee201() {
        var t, e, i, n, a;
        return regeneratorRuntime.wrap(function _callee201$(_context202) {
          while (1) {
            switch (_context202.prev = _context202.next) {
              case 0:
                t = _ref201.state, e = _ref201.commit;
                i = "id:".concat(t.meta.id, "/thing-layout.json");
                _context202.next = 4;
                return Wn.Io.loadMeta(i);

              case 4:
                n = _context202.sent;
                _context202.next = 7;
                return Wn.Io.loadContent(n, {
                  as: "json"
                });

              case 7:
                a = _context202.sent;
                return _context202.abrupt("return", (e("setLayout", a), e("restoreShown"), a));

              case 9:
              case "end":
                return _context202.stop();
            }
          }
        }, _callee201);
      }))();
    },
    reloadActions: function reloadActions(_ref202) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee202() {
        var t, e, i, n, a;
        return regeneratorRuntime.wrap(function _callee202$(_context203) {
          while (1) {
            switch (_context203.prev = _context203.next) {
              case 0:
                t = _ref202.state, e = _ref202.commit;
                i = "id:".concat(t.meta.id, "/thing-actions.json");
                _context203.next = 4;
                return Wn.Io.loadMeta(i);

              case 4:
                n = _context203.sent;
                _context203.next = 7;
                return Wn.Io.loadContent(n, {
                  as: "json"
                });

              case 7:
                a = _context203.sent;
                return _context203.abrupt("return", (e("setActions", a), a));

              case 9:
              case "end":
                return _context203.stop();
            }
          }
        }, _callee202);
      }))();
    },
    reload: function reload(_ref203, n) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee203() {
        var t, e, i;
        return regeneratorRuntime.wrap(function _callee203$(_context204) {
          while (1) {
            switch (_context204.prev = _context204.next) {
              case 0:
                t = _ref203.state, e = _ref203.commit, i = _ref203.dispatch;
                n ? e("setMeta", n) : n = t.meta;
                e("setStatus", {
                  reloading: !0
                });
                _context204.next = 5;
                return i("reloadSchema");

              case 5:
                _context204.next = 7;
                return i("reloadLayout");

              case 7:
                _context204.next = 9;
                return i("reloadActions");

              case 9:
                e("setStatus", {
                  reloading: !1
                });

              case 10:
              case "end":
                return _context204.stop();
            }
          }
        }, _callee203);
      }))();
    }
  };
  Ti.Preload("ti/mod/wn/thing/mod/config/m-thing-config-actions.mjs", t);
}(), Ti.Preload("ti/mod/wn/thing/mod/config/m-thing-config.json", {
  meta: null,
  shown: {
    search: !0,
    meta: !0,
    content: !0,
    files: !1
  },
  listOpen: {
    content: !0
  },
  schema: {},
  layout: {
    deskstop: {},
    tablet: {},
    phone: {}
  },
  actions: [],
  status: {
    reloading: !1,
    saving: !1
  }
}), function () {
  var t = {
    mutations: {
      setMeta: function setMeta(t, e) {
        t.meta = e;
      },
      setStatus: function setStatus(t, e) {
        t.status = _.assign({}, t.status, e);
      },
      setSchema: function setSchema(t, e) {
        t.schema = e;
      },
      setLayout: function setLayout(t, e) {
        t.layout = _.pick(e, ["desktop", "tablet", "phone"]), t.shown = e.shown || {}, t.listOpen = e.listOpen || {};
      },
      setActions: function setActions(t, e) {
        t.actions = e;
      },
      mergeShown: function mergeShown(t, e) {
        e && !_.isEmpty(e) && (t.shown = _.assign({}, t.shown, e));
      },
      persistShown: function persistShown(t) {
        t.meta && t.meta.id && Ti.Storage.session.setObject("".concat(t.meta.id, "-shown"), t.shown);
      },
      restoreShown: function restoreShown(t) {
        if (t.meta && t.meta.id) {
          var e = Ti.Storage.session.getObject("".concat(t.meta.id, "-shown"));
          t.shown = _.assign({}, t.shown, e);
        }
      }
    }
  };
  Ti.Preload("ti/mod/wn/thing/mod/config/m-thing-config.mjs", t);
}(), Ti.Preload("ti/mod/wn/thing/mod/config/_mod.json", {
  namespaced: !0,
  state: "./m-thing-config.json",
  actions: "./m-thing-config-actions.mjs",
  mixins: "./m-thing-config.mjs"
}), function () {
  var t = {
    reloadPage: function reloadPage(_ref204, n) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee204() {
        var t, e, i;
        return regeneratorRuntime.wrap(function _callee204$(_context205) {
          while (1) {
            switch (_context205.prev = _context205.next) {
              case 0:
                t = _ref204.state, e = _ref204.commit, i = _ref204.dispatch;
                e("updatePager", n);
                _context205.next = 4;
                return i("reload");

              case 4:
              case "end":
                return _context205.stop();
            }
          }
        }, _callee204);
      }))();
    },
    reload: function reload(_ref205, n) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee205() {
        var t, e, i, a, _ref206, s, o, l, _t185, _e65, _n30, _iterator98, _step98, _i40, _n31, r, _e66, d, _t186, _e67, c, h, m;

        return regeneratorRuntime.wrap(function _callee205$(_context206) {
          while (1) {
            switch (_context206.prev = _context206.next) {
              case 0:
                t = _ref205.state, e = _ref205.commit, i = _ref205.rootState;
                n ? e("setMeta", n) : n = t.meta, e("setStatus", {
                  reloading: !0
                });
                a = ["thing id:".concat(n.id, " query -pager -cqn")], _ref206 = t.filter || {}, s = _ref206.keyword, o = _ref206.match, l = {};

                if (!s) {
                  _context206.next = 29;
                  break;
                }

                if (!/^[0-9a-z]{32}$/.test(s)) {
                  _context206.next = 8;
                  break;
                }

                l.id = s;
                _context206.next = 29;
                break;

              case 8:
                _t185 = "title", _e65 = _.get(i, "main.config.schema.behavior") || {}, _n30 = _.keys(_e65.keyword);
                _iterator98 = _createForOfIteratorHelper(_n30);
                _context206.prev = 10;

                _iterator98.s();

              case 12:
                if ((_step98 = _iterator98.n()).done) {
                  _context206.next = 20;
                  break;
                }

                _i40 = _step98.value;
                _n31 = _e65.keyword[_i40];

                if (!new RegExp(_n31).test(s)) {
                  _context206.next = 18;
                  break;
                }

                _t185 = _i40;
                return _context206.abrupt("break", 20);

              case 18:
                _context206.next = 12;
                break;

              case 20:
                _context206.next = 25;
                break;

              case 22:
                _context206.prev = 22;
                _context206.t0 = _context206["catch"](10);

                _iterator98.e(_context206.t0);

              case 25:
                _context206.prev = 25;

                _iterator98.f();

                return _context206.finish(25);

              case 28:
                _t185.startsWith("=") ? l[_t185.substring(1).trim()] = s : l[_t185] = "^.*" + s;

              case 29:
                _.isEmpty(o) || _.assign(l, o);
                r = _.get(i, "main.config.schema.behavior.match");

                if (_.isEmpty(r) || _.assign(l, r), l.th_live = t.inRecycleBin ? -1 : 1, !_.isEmpty(t.sorter)) {
                  _e66 = JSON.stringify(t.sorter);
                  a.push("-sort '".concat(_e66, "'"));
                }

                d = t.pager;

                if (!_.isEmpty(d) && d.pgsz > 0 && d.pn > 0) {
                  _t186 = d.pgsz, _e67 = d.pgsz * (d.pn - 1);
                  a.push("-limit ".concat(_t186)), a.push("-skip  ".concat(_e67));
                }

                c = _.isEmpty(l) ? void 0 : JSON.stringify(l);
                h = a.join(" ");
                _context206.next = 38;
                return Wn.Sys.exec2(h, {
                  input: c,
                  as: "json"
                });

              case 38:
                m = _context206.sent;
                e("setPager", m.pager), e("setList", m.list), e("setStatus", {
                  reloading: !1
                });

              case 40:
              case "end":
                return _context206.stop();
            }
          }
        }, _callee205, null, [[10, 22, 25, 28]]);
      }))();
    }
  };
  Ti.Preload("ti/mod/wn/thing/mod/search/m-thing-search-actions.mjs", t);
}(), Ti.Preload("ti/mod/wn/thing/mod/search/m-thing-search.json", {
  meta: null,
  filter: {},
  sorter: {
    ct: -1
  },
  inRecycleBin: !1,
  pager: {
    pn: 1,
    pgsz: 50,
    pgc: 0,
    sum: 0,
    skip: 0,
    count: 0
  },
  currentId: null,
  checkedIds: [],
  list: [],
  status: {
    reloading: !1,
    saving: !1,
    deleting: !1
  }
}), function () {
  function t(t, e, i) {
    if (!t) return;
    var n = Ti.Storage.session.getObject(t.id) || {};
    _.defaults(n, {
      filter: {},
      sorter: {},
      pager: {}
    }), n[e] = i, Ti.Storage.session.setObject(t.id, n);
  }

  var e = {
    getters: {
      currentItem: function currentItem(t) {
        if (t.currentId) {
          var _iterator99 = _createForOfIteratorHelper(t.list),
              _step99;

          try {
            for (_iterator99.s(); !(_step99 = _iterator99.n()).done;) {
              var _e68 = _step99.value;
              if (_e68.id == t.currentId) return _e68;
            }
          } catch (err) {
            _iterator99.e(err);
          } finally {
            _iterator99.f();
          }
        }

        return null;
      },
      checkedItems: function checkedItems(t) {
        var e = {};

        var _iterator100 = _createForOfIteratorHelper(t.checkedIds),
            _step100;

        try {
          for (_iterator100.s(); !(_step100 = _iterator100.n()).done;) {
            var _i41 = _step100.value;
            e[_i41] = !0;
          }
        } catch (err) {
          _iterator100.e(err);
        } finally {
          _iterator100.f();
        }

        var i = [];

        var _iterator101 = _createForOfIteratorHelper(t.list),
            _step101;

        try {
          for (_iterator101.s(); !(_step101 = _iterator101.n()).done;) {
            var n = _step101.value;
            e[n.id] && i.push(n);
          }
        } catch (err) {
          _iterator101.e(err);
        } finally {
          _iterator101.f();
        }

        return i;
      }
    },
    mutations: {
      setMeta: function setMeta(t, e) {
        t.meta = e;
      },
      setStatus: function setStatus(t, e) {
        t.status = _.assign({}, t.status, e);
      },
      setFilter: function setFilter(e) {
        var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        e.filter = i, t(e.meta, "filter", e.filter);
      },
      updateFilter: function updateFilter(e) {
        var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        e.filter = _.assign({}, e.filter, i), t(e.meta, "filter", e.filter);
      },
      setSorter: function setSorter(e, i) {
        e.sorter = i, t(e.meta, "sorter", e.sorter);
      },
      setPager: function setPager(e, i) {
        e.pager = i, t(e.meta, "pager", e.pager);
      },
      updatePager: function updatePager(t, e) {
        t.pager = _.defaults({}, e, t.pager);
      },
      setInRecycleBin: function setInRecycleBin(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !1;
        t.inRecycleBin = e;
      },
      setList: function setList(t, e) {
        t.list = e;
      },
      setCurrentId: function setCurrentId(t, e) {
        t.currentId = e || null;
      },
      setCheckedIds: function setCheckedIds(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        t.checkedIds = _.union(e);
      },
      selectItem: function selectItem(t, e) {
        t.currentId != e && (t.currentId = e, t.checkedIds = [], e && t.checkedIds.push(e));
      },
      removeItems: function removeItems(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        var i = -1;
        if (t.currentId) for (var _e69 = 0; _e69 < t.list.length; _e69++) {
          if (t.list[_e69].id == t.currentId) {
            i = _e69;
            break;
          }
        }
        var n = {};

        if (_.isArray(e)) {
          var _iterator102 = _createForOfIteratorHelper(e),
              _step102;

          try {
            for (_iterator102.s(); !(_step102 = _iterator102.n()).done;) {
              var _t187 = _step102.value;
              n[_t187] = !0;
            }
          } catch (err) {
            _iterator102.e(err);
          } finally {
            _iterator102.f();
          }
        } else _.isPlainObject(e) && (n = e);

        var a = [];

        var _iterator103 = _createForOfIteratorHelper(t.list),
            _step103;

        try {
          for (_iterator103.s(); !(_step103 = _iterator103.n()).done;) {
            var _e70 = _step103.value;
            n[_e70.id] || a.push(_e70);
          }
        } catch (err) {
          _iterator103.e(err);
        } finally {
          _iterator103.f();
        }

        var s = null;
        (i = Math.min(i, a.length - 1)) >= 0 ? (s = a[i], t.currentId = s.id, t.checkedIds = [s.id]) : (t.currentId = null, t.checkedIds = []), t.list = a, t.pager && (t.pager.count = a.length, t.pager.sum = t.pager.pgsz * (t.pager.pgc - 1) + a.length);
      },
      updateItem: function updateItem(t, e) {
        var i = [];

        var _iterator104 = _createForOfIteratorHelper(t.list),
            _step104;

        try {
          for (_iterator104.s(); !(_step104 = _iterator104.n()).done;) {
            var n = _step104.value;
            n.id == e.id ? i.push(_objectSpread({}, e, {
              __updated_time: Date.now()
            })) : i.push(n);
          }
        } catch (err) {
          _iterator104.e(err);
        } finally {
          _iterator104.f();
        }

        t.list = i;
      },
      appendToList: function appendToList(t, e) {
        e && (t.list = [].concat(t.list, e));
      },
      prependToList: function prependToList(t, e) {
        e && (t.list = [].concat(e, t.list));
      }
    }
  };
  Ti.Preload("ti/mod/wn/thing/mod/search/m-thing-search.mjs", e);
}(), Ti.Preload("ti/mod/wn/thing/mod/search/_mod.json", {
  namespaced: !0,
  state: "./m-thing-search.json",
  actions: "./m-thing-search-actions.mjs",
  mixins: "./m-thing-search.mjs"
}), Ti.Preload("ti/mod/wn/thing/_mod.json", {
  name: "wn-thing",
  namespaced: !0,
  state: "./m-thing.json",
  actions: "./m-thing-actions.mjs",
  mixins: "./m-thing.mjs",
  modules: {
    config: "./mod/config",
    search: "./mod/search",
    current: "@mod:wn/obj-current"
  }
}), Ti.Preload("ti/lib/www/com/site-main.html", '<div class="site-main" @click.right="OnMouseRightClick">\n  <ti-gui \n    class="site-page"\n    v-bind="PageGUI"\n    :loading-as="loading"\n    :shown="page.shown"/>\n  \x3c!--pre>{{page}}</pre--\x3e\n</div>'), function () {
  var t = {
    provide: function provide() {
      return Ti.Util.explainObj(this.$store.state, this.provide);
    },
    computed: _objectSpread({}, Vuex.mapState({
      siteId: function siteId(t) {
        return t.siteId;
      },
      logo: function logo(t) {
        return t.logo;
      },
      utils: function utils(t) {
        return t.utils;
      },
      page: function page(t) {
        return t.page;
      },
      shop: function shop(t) {
        return t.shop;
      },
      auth: function auth(t) {
        return t.auth;
      },
      domain: function domain(t) {
        return t.domain;
      },
      rs: function rs(t) {
        return t.rs;
      },
      nav: function nav(t) {
        return t.nav;
      },
      base: function base(t) {
        return t.base;
      },
      apiBase: function apiBase(t) {
        return t.apiBase;
      },
      cdnTmpl: function cdnTmpl(t) {
        return t.cdnTmpl;
      },
      captcha: function captcha(t) {
        return t.captcha;
      },
      schema: function schema(t) {
        return t.schema;
      },
      provide: function provide(t) {
        return t.provide;
      },
      blocks: function blocks(t) {
        return t.blocks;
      },
      loading: function loading(t) {
        return t.loading;
      },
      pageReady: function pageReady(t) {
        return t.pageReady;
      }
    }), {}, Vuex.mapGetters(["actions", "getUrl", "getApiUrl"]), {}, Vuex.mapGetters("page", ["pageLink"]), {
      PayReturnUrl: function PayReturnUrl() {
        var t = this.$store.state;
        if (t.payReturnUrl) return Ti.Util.explainObj(t, t.payReturnUrl);
      },
      SiteLogo: function SiteLogo() {
        return this.logo && /\.(png|jpe?g)$/.test(this.logo) ? this.getUrl(this.logo) : this.logo || "zmdi-globe";
      },
      SiteCaptcha: function SiteCaptcha() {
        var t = Ti.S.renderBy(this.captcha, {
          site: this.siteId
        });
        return t.startsWith("/") ? t : this.getApiUrl(t);
      },
      SiteLoginMode: function SiteLoginMode() {
        return this.auth.me ? "bind_phone" : "login_by_passwd";
      },
      PageFnSet: function PageFnSet() {
        return Ti.AddGlobalFuncs(this.utils), Ti.GlobalFuncs();
      },
      PageGUI: function PageGUI() {
        var _this282 = this;

        var t = this.page;
        if (!t || !t.layout) return {};
        var e = t.layout;

        if (e) {
          var _t188 = function _t188(e) {
            if (_.isString(e)) {
              var _t189 = /^@BLOCK\(([^ ]+)\)$/.exec(e);

              if (_t189) {
                var _e71 = _t189[1];
                return _.get(_this282.blocks, _e71);
              }
            } else {
              if (_.isArray(e)) return _.map(e, _t188);
              if (_.isPlainObject(e)) return _.mapValues(e, _t188);
            }

            return e;
          };

          e = _t188(e);
        }

        var i = {
          className: t.className,
          defaultFlex: "nil",
          defaultOverflow: "none",
          layout: e,
          schema: {},
          canLoading: !0
        };

        _.assign(i.schema, this.schema, t.schema);

        return Ti.Util.explainObj(this, i, {
          fnSet: this.PageFnSet
        });
      }
    }),
    methods: {
      OnMouseRightClick: function OnMouseRightClick(t) {
        !1 === this.page.contextMenu ? t.preventDefault() : _.isString(this.page.contextMenu) && (t.preventDefault(), Ti.Toast.Open(this.page.contextMenu, "warn"));
      },
      showBlock: function showBlock(t) {
        var _this283 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee206() {
          return regeneratorRuntime.wrap(function _callee206$(_context207) {
            while (1) {
              switch (_context207.prev = _context207.next) {
                case 0:
                  Ti.App(_this283).dispatch("page/showBlock", t);

                case 1:
                case "end":
                  return _context207.stop();
              }
            }
          }, _callee206);
        }))();
      },
      hideBlock: function hideBlock(t) {
        var _this284 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee207() {
          return regeneratorRuntime.wrap(function _callee207$(_context208) {
            while (1) {
              switch (_context208.prev = _context208.next) {
                case 0:
                  Ti.App(_this284).dispatch("page/hideBlock", t);

                case 1:
                case "end":
                  return _context208.stop();
              }
            }
          }, _callee207);
        }))();
      },
      __on_events: function __on_events(t) {
        var _this285 = this;

        return "block:show" == t ? function (t) {
          return _this285.showBlock(t);
        } : "block:hide" == t ? function (t) {
          return _this285.hideBlock(t);
        } : function () {
          for (var _len6 = arguments.length, e = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
            e[_key6] = arguments[_key6];
          }

          _this285.invokeAction(t, e);
        };
      },
      invokeAction: function invokeAction(t) {
        var _arguments38 = arguments,
            _this286 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee208() {
          var e;
          return regeneratorRuntime.wrap(function _callee208$(_context209) {
            while (1) {
              switch (_context209.prev = _context209.next) {
                case 0:
                  e = _arguments38.length > 1 && _arguments38[1] !== undefined ? _arguments38[1] : [];
                  _context209.next = 3;
                  return Ti.App(_this286).dispatch("invokeAction", {
                    name: t,
                    args: e
                  });

                case 3:
                case "end":
                  return _context209.stop();
              }
            }
          }, _callee208);
        }))();
      },
      pushBrowserHistory: function pushBrowserHistory(t) {
        var e = window.history;
        if (!e) return;
        var i = window.location,
            n = [i.pathname, i.search, i.hash].join(""),
            a = this.getUrl(this.pageLink);

        if (n != a || !e.state) {
          var _i42 = _.cloneDeep(_.pick(this.page, "path", "params", "anchor"));

          e.pushState(_i42, t, a);
        }
      }
    },
    watch: {
      "page.finger": function pageFinger() {
        var t = Ti.Util.explainObj(this, this.page.title);
        document.title = t, this.pushBrowserHistory(t);
      }
    },
    mounted: function mounted() {
      var _this287 = this;

      window.onpopstate = function (t) {
        var e = t.state;

        if (console.log("popstate", e), e && e.path) {
          console.log("window.onpopstate", e);
          Ti.App(_this287).dispatch("navTo", {
            type: "page",
            value: e.path,
            params: e.params,
            anchor: e.anchor
          });
        }
      };
    }
  };
  Ti.Preload("ti/lib/www/com/site-main.mjs", t);
}(), function () {
  var t = {
    reloadMyAddresses: function reloadMyAddresses(_ref207) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee209() {
        var t, e, i, n, a;
        return regeneratorRuntime.wrap(function _callee209$(_context210) {
          while (1) {
            switch (_context210.prev = _context210.next) {
              case 0:
                t = _ref207.state, e = _ref207.commit, i = _ref207.getters;
                n = i.urls.addr_mine;
                e("setLoading", !0, {
                  root: !0
                });
                _context210.next = 5;
                return Ti.Http.get(n, {
                  params: {
                    ticket: t.ticket
                  },
                  as: "json"
                });

              case 5:
                a = _context210.sent;
                e("setLoading", !1, {
                  root: !0
                }), e("setAddresses", a);

              case 7:
              case "end":
                return _context210.stop();
            }
          }
        }, _callee209);
      }))();
    },
    editOrCreateAddress: function editOrCreateAddress(_ref208) {
      var _arguments39 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee210() {
        var t, e, i, n, a, s, o, l, r, d;
        return regeneratorRuntime.wrap(function _callee210$(_context211) {
          while (1) {
            switch (_context211.prev = _context211.next) {
              case 0:
                t = _ref208.state, e = _ref208.getters, i = _ref208.commit, n = _ref208.dispatch;
                a = _arguments39.length > 1 && _arguments39[1] !== undefined ? _arguments39[1] : {};
                s = _.pick(a, "id", "country", "code", "province", "city", "area", "street", "door", "dftaddr", "consignee", "phone", "email");

                _.defaults(s, {
                  country: "CN",
                  tp: "U",
                  dftaddr: !1
                });

                _context211.next = 6;
                return Ti.App.Open({
                  title: "i18n:edit",
                  position: "top",
                  width: 640,
                  height: "90%",
                  result: s,
                  comType: "TiForm",
                  comConf: {
                    onlyFields: !1,
                    data: "=result",
                    fields: [{
                      title: "i18n:address-k-country",
                      name: "country",
                      comType: "ti-combo-input",
                      comConf: {
                        mustInList: !0,
                        autoCollapse: !0,
                        valueCase: "upper",
                        dropDisplay: "name",
                        options: t.countries,
                        valueBy: "key",
                        textBy: "name"
                      }
                    }, {
                      title: "i18n:address-k-code",
                      name: "code",
                      tip: "i18n:address-k-code-tip",
                      comType: "ti-input",
                      comConf: {
                        valueCase: "upper"
                      }
                    }, {
                      title: "i18n:address-k-province",
                      name: "province",
                      comType: "ti-input"
                    }, {
                      title: "i18n:address-k-city",
                      name: "city",
                      comType: "ti-input"
                    }, {
                      title: "i18n:address-k-area",
                      name: "area",
                      comType: "ti-input"
                    }, {
                      title: "i18n:address-k-street",
                      name: "street",
                      comType: "ti-input"
                    }, {
                      title: "i18n:address-k-door",
                      name: "door",
                      comType: "ti-input"
                    }, {
                      title: "i18n:address-k-dftaddr",
                      name: "dftaddr",
                      type: "Boolean",
                      comType: "ti-toggle"
                    }, {
                      title: "i18n:address-k-consignee",
                      name: "consignee",
                      comType: "ti-input"
                    }, {
                      title: "i18n:address-k-phone",
                      name: "phone",
                      comType: "ti-input"
                    }, {
                      title: "i18n:address-k-email",
                      name: "email",
                      comType: "ti-input"
                    }]
                  }
                });

              case 6:
                o = _context211.sent;

                if (!_.isUndefined(o)) {
                  _context211.next = 9;
                  break;
                }

                return _context211.abrupt("return");

              case 9:
                if (!_.isEqual(o, s)) {
                  _context211.next = 11;
                  break;
                }

                return _context211.abrupt("return");

              case 11:
                console.log("!!!", o);
                l = o.id ? e.urls.addr_update : e.urls.addr_create;
                r = {
                  ticket: t.ticket,
                  id: o.id
                }, d = JSON.stringify(o);
                i("setLoading", !0, {
                  root: !0
                });
                _context211.next = 17;
                return Ti.Http.post(l, {
                  params: r,
                  body: d,
                  as: "json"
                });

              case 17:
                _context211.next = 19;
                return n("reloadMyAddresses");

              case 19:
                i("setLoading", !1, {
                  root: !0
                });

              case 20:
              case "end":
                return _context211.stop();
            }
          }
        }, _callee210);
      }))();
    },
    removeAddress: function removeAddress(_ref209) {
      var _arguments40 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee211() {
        var t, e, i, n, _ref210, a, s;

        return regeneratorRuntime.wrap(function _callee211$(_context212) {
          while (1) {
            switch (_context212.prev = _context212.next) {
              case 0:
                t = _ref209.state, e = _ref209.commit, i = _ref209.getters, n = _ref209.dispatch;
                _ref210 = _arguments40.length > 1 && _arguments40[1] !== undefined ? _arguments40[1] : {}, a = _ref210.id;

                if (a) {
                  _context212.next = 4;
                  break;
                }

                return _context212.abrupt("return");

              case 4:
                _context212.next = 6;
                return Ti.Confirm("i18n:address-rm-confirm");

              case 6:
                if (_context212.sent) {
                  _context212.next = 8;
                  break;
                }

                return _context212.abrupt("return");

              case 8:
                e("setLoading", !0, {
                  root: !0
                });
                s = i.urls.addr_delete;
                _context212.next = 12;
                return Ti.Http.get(s, {
                  params: {
                    ticket: t.ticket,
                    id: a
                  },
                  as: "json"
                });

              case 12:
                _context212.next = 14;
                return n("reloadMyAddresses");

              case 14:
                e("setLoading", !1, {
                  root: !0
                });

              case 15:
              case "end":
                return _context212.stop();
            }
          }
        }, _callee211);
      }))();
    },
    setAddressDefault: function setAddressDefault(_ref211) {
      var _arguments41 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee212() {
        var t, e, i, n, _ref212, a, s, o, l;

        return regeneratorRuntime.wrap(function _callee212$(_context213) {
          while (1) {
            switch (_context213.prev = _context213.next) {
              case 0:
                t = _ref211.state, e = _ref211.commit, i = _ref211.getters, n = _ref211.dispatch;
                _ref212 = _arguments41.length > 1 && _arguments41[1] !== undefined ? _arguments41[1] : {}, a = _ref212.id;

                if (a) {
                  _context213.next = 4;
                  break;
                }

                return _context213.abrupt("return");

              case 4:
                s = i.urls.addr_update, o = {
                  ticket: t.ticket,
                  id: a
                }, l = JSON.stringify({
                  dftaddr: !0
                });
                e("setLoading", !0, {
                  root: !0
                });
                _context213.next = 8;
                return Ti.Http.post(s, {
                  params: o,
                  body: l,
                  as: "json"
                });

              case 8:
                _context213.next = 10;
                return n("reloadMyAddresses");

              case 10:
                e("setLoading", !1, {
                  root: !0
                });

              case 11:
              case "end":
                return _context213.stop();
            }
          }
        }, _callee212);
      }))();
    },
    initCountries: function initCountries(_ref213) {
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee213() {
        var t, e, i, _t190;

        return regeneratorRuntime.wrap(function _callee213$(_context214) {
          while (1) {
            switch (_context214.prev = _context214.next) {
              case 0:
                t = _ref213.state, e = _ref213.getters, i = _ref213.commit;

                if (t.countries) {
                  _context214.next = 8;
                  break;
                }

                _t190 = e.urls.countries;
                _context214.t0 = i;
                _context214.next = 6;
                return Ti.Http.get(_t190, {
                  as: "json"
                });

              case 6:
                _context214.t1 = _context214.sent;
                (0, _context214.t0)("setCountries", _context214.t1);

              case 8:
              case "end":
                return _context214.stop();
            }
          }
        }, _callee213);
      }))();
    }
  };
  Ti.Preload("ti/lib/www/mod/auth/mod-address-actions.mjs", t);
}(), function () {
  var t = {
    doCheckMe: function doCheckMe(_ref214) {
      var _arguments42 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee214() {
        var t, e, i, n, _ref215, _ref215$force, a, s, o, l, r, d, c, h;

        return regeneratorRuntime.wrap(function _callee214$(_context215) {
          while (1) {
            switch (_context215.prev = _context215.next) {
              case 0:
                t = _ref214.commit, e = _ref214.dispatch, i = _ref214.getters, n = _ref214.rootState;
                _ref215 = _arguments42.length > 1 && _arguments42[1] !== undefined ? _arguments42[1] : {}, _ref215$force = _ref215.force, a = _ref215$force === void 0 ? !1 : _ref215$force, s = _ref215.ok, o = _ref215.fail, l = _ref215.nophone, r = _ref215.noemail;
                d = n.siteId;

                if (d) {
                  _context215.next = 5;
                  break;
                }

                return _context215.abrupt("return", void Ti.Alert("Without siteId!!!"));

              case 5:
                c = Ti.Storage.local.getString("www-ticket-".concat(d), "");
                t("setLoading", !0, {
                  root: !0
                });
                h = i.sessionState;
                _context215.t0 = !c || !a && h.ok;

                if (_context215.t0) {
                  _context215.next = 13;
                  break;
                }

                _context215.next = 12;
                return Ti.Http.get(i.urls.checkme, {
                  params: {
                    site: d,
                    ticket: c
                  },
                  as: "json"
                });

              case 12:
                h = _context215.sent;

              case 13:
                t("setLoading", !1, {
                  root: !0
                });

                if (!h.ok) {
                  _context215.next = 31;
                  break;
                }

                if (!(t("setTicket", h.data.ticket), t("setExpi", h.data.expi), t("setMe", h.data.me), l)) {
                  _context215.next = 20;
                  break;
                }

                if (h.data.me.phone) {
                  _context215.next = 20;
                  break;
                }

                _context215.next = 19;
                return e("doAction", [l, h], {
                  root: !0
                });

              case 19:
                return _context215.abrupt("return", _context215.sent);

              case 20:
                if (!r) {
                  _context215.next = 25;
                  break;
                }

                if (h.data.me.email) {
                  _context215.next = 25;
                  break;
                }

                _context215.next = 24;
                return e("doAction", [r, h], {
                  root: !0
                });

              case 24:
                return _context215.abrupt("return", _context215.sent);

              case 25:
                if (!s) {
                  _context215.next = 29;
                  break;
                }

                _context215.next = 28;
                return e("doAction", [s, h], {
                  root: !0
                });

              case 28:
                return _context215.abrupt("return", _context215.sent);

              case 29:
                _context215.next = 35;
                break;

              case 31:
                if (!o) {
                  _context215.next = 35;
                  break;
                }

                _context215.next = 34;
                return e("doAction", [o, h], {
                  root: !0
                });

              case 34:
                return _context215.abrupt("return", _context215.sent);

              case 35:
              case "end":
                return _context215.stop();
            }
          }
        }, _callee214);
      }))();
    },
    autoCheckmeOrAuthByWxghCode: function autoCheckmeOrAuthByWxghCode(_ref216) {
      var _arguments43 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee216() {
        var t, _ref217, _ref217$codeKey, e, _ref217$codeTypeBy, i, _ref217$force, n, a, s, o;

        return regeneratorRuntime.wrap(function _callee216$(_context217) {
          while (1) {
            switch (_context217.prev = _context217.next) {
              case 0:
                t = _ref216.dispatch;
                _ref217 = _arguments43.length > 1 && _arguments43[1] !== undefined ? _arguments43[1] : {}, _ref217$codeKey = _ref217.codeKey, e = _ref217$codeKey === void 0 ? "code" : _ref217$codeKey, _ref217$codeTypeBy = _ref217.codeTypeBy, i = _ref217$codeTypeBy === void 0 ? "ct" : _ref217$codeTypeBy, _ref217$force = _ref217.force, n = _ref217$force === void 0 ? !1 : _ref217$force, a = _ref217.fail, s = _ref217.nophone, o = _ref217.noemail;
                t("doCheckMe", {
                  force: n,
                  fail: {
                    action: "auth/authByWxghCode",
                    payload: {
                      codeKey: e,
                      codeTypeBy: i,
                      fail: a,
                      ok: function () {
                        var _ok = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee215() {
                          var e,
                              i,
                              _args216 = arguments;
                          return regeneratorRuntime.wrap(function _callee215$(_context216) {
                            while (1) {
                              switch (_context216.prev = _context216.next) {
                                case 0:
                                  e = _args216.length > 0 && _args216[0] !== undefined ? _args216[0] : {};
                                  i = e.data;
                                  console.log("autoCheckmeOrAuthByWxghCode->ok:me", i);

                                  if (!(s && !i.phone)) {
                                    _context216.next = 9;
                                    break;
                                  }

                                  _context216.next = 6;
                                  return t("doAction", [s, e], {
                                    root: !0
                                  });

                                case 6:
                                  _context216.t0 = _context216.sent;
                                  _context216.next = 17;
                                  break;

                                case 9:
                                  if (!(o && !i.email)) {
                                    _context216.next = 15;
                                    break;
                                  }

                                  _context216.next = 12;
                                  return t("doAction", [o, e], {
                                    root: !0
                                  });

                                case 12:
                                  _context216.t1 = _context216.sent;
                                  _context216.next = 16;
                                  break;

                                case 15:
                                  _context216.t1 = void 0;

                                case 16:
                                  _context216.t0 = _context216.t1;

                                case 17:
                                  return _context216.abrupt("return", _context216.t0);

                                case 18:
                                case "end":
                                  return _context216.stop();
                              }
                            }
                          }, _callee215);
                        }));

                        function ok() {
                          return _ok.apply(this, arguments);
                        }

                        return ok;
                      }()
                    }
                  }
                });

              case 3:
              case "end":
                return _context217.stop();
            }
          }
        }, _callee216);
      }))();
    },
    authByWxghCode: function authByWxghCode(_ref218) {
      var _arguments44 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee217() {
        var t, e, i, n, _ref219, _ref219$codeKey, a, _ref219$codeTypeBy, s, o, l, r, d, c, h, m, p, u, y, f;

        return regeneratorRuntime.wrap(function _callee217$(_context218) {
          while (1) {
            switch (_context218.prev = _context218.next) {
              case 0:
                t = _ref218.commit, e = _ref218.dispatch, i = _ref218.getters, n = _ref218.rootState;
                _ref219 = _arguments44.length > 1 && _arguments44[1] !== undefined ? _arguments44[1] : {}, _ref219$codeKey = _ref219.codeKey, a = _ref219$codeKey === void 0 ? "code" : _ref219$codeKey, _ref219$codeTypeBy = _ref219.codeTypeBy, s = _ref219$codeTypeBy === void 0 ? "ct" : _ref219$codeTypeBy, o = _ref219.done, l = _ref219.ok, r = _ref219.fail, d = _ref219.invalid, c = _ref219.others;
                h = n.page.params[a];

                if (h) {
                  _context218.next = 5;
                  break;
                }

                return _context218.abrupt("return");

              case 5:
                m = n.page.params[s], p = n.siteId;

                if (p) {
                  _context218.next = 8;
                  break;
                }

                return _context218.abrupt("return", void Ti.Alert("Without siteId!!!"));

              case 8:
                u = i.urls.login_by_wxcode;
                y = {
                  site: p,
                  code: h,
                  ct: m
                };
                _context218.next = 12;
                return Ti.Http.get(u, {
                  params: y,
                  as: "json"
                });

              case 12:
                f = _context218.sent;
                console.log(f);
                _context218.next = 16;
                return e("doAction", [o, f], {
                  root: !0
                });

              case 16:
                if (!(f.ok && f.data)) {
                  _context218.next = 25;
                  break;
                }

                Ti.Storage.local.set("www-ticket-".concat(p), f.data.ticket);
                t("setTicket", f.data.ticket);
                t("setExpi", f.data.expi);
                t("setMe", f.data.me);
                _context218.next = 23;
                return e("doAction", [l, f], {
                  root: !0
                });

              case 23:
                _context218.next = 34;
                break;

              case 25:
                if (!/^e.www.login.invalid/.test(f.errCode)) {
                  _context218.next = 30;
                  break;
                }

                _context218.next = 28;
                return e("doAction", [d, f], {
                  root: !0
                });

              case 28:
                _context218.next = 32;
                break;

              case 30:
                _context218.next = 32;
                return e("doAction", [c, f], {
                  root: !0
                });

              case 32:
                _context218.next = 34;
                return e("doAction", [r, f], {
                  root: !0
                });

              case 34:
              case "end":
                return _context218.stop();
            }
          }
        }, _callee217);
      }))();
    },
    doAuth: function doAuth(_ref220) {
      var _arguments45 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee218() {
        var _g;

        var t, e, i, n, _ref221, _ref221$type, a, s, o, l, r, d, c, h, m, p, u, y, f, g, v;

        return regeneratorRuntime.wrap(function _callee218$(_context219) {
          while (1) {
            switch (_context219.prev = _context219.next) {
              case 0:
                t = _ref220.commit, e = _ref220.dispatch, i = _ref220.getters, n = _ref220.rootState;
                _ref221 = _arguments45.length > 1 && _arguments45[1] !== undefined ? _arguments45[1] : {}, _ref221$type = _ref221.type, a = _ref221$type === void 0 ? "login_by_passwd" : _ref221$type, s = _ref221.name, o = _ref221.passwd, l = _ref221.done, r = _ref221.ok, d = _ref221.fail, c = _ref221.noexist, h = _ref221.invalid, m = _ref221.others;
                p = n.siteId;

                if (p) {
                  _context219.next = 5;
                  break;
                }

                return _context219.abrupt("return", void Ti.Alert("Without siteId!!!"));

              case 5:
                u = i.urls[a], y = Ti.Storage.local.getString("www-ticket-".concat(p), ""), f = {
                  login_by_passwd: "passwd",
                  login_by_phone: "vcode",
                  login_by_email: "vcode",
                  bind_phone: "vcode",
                  bind_email: "vcode"
                }[a];

                if (f) {
                  _context219.next = 8;
                  break;
                }

                throw "Unknown auth type: " + a;

              case 8:
                g = (_g = {
                  site: p,
                  name: s
                }, _defineProperty(_g, f, o), _defineProperty(_g, "ticket", y), _defineProperty(_g, "ajax", !0), _g);
                _context219.next = 11;
                return Ti.Http.post(u, {
                  params: g,
                  as: "json"
                });

              case 11:
                v = _context219.sent;
                _context219.next = 14;
                return e("doAction", [l, v], {
                  root: !0
                });

              case 14:
                if (!(v.ok && v.data)) {
                  _context219.next = 23;
                  break;
                }

                Ti.Storage.local.set("www-ticket-".concat(p), v.data.ticket);
                t("setTicket", v.data.ticket);
                t("setExpi", v.data.expi);
                t("setMe", v.data.me);
                _context219.next = 21;
                return e("doAction", [r, v], {
                  root: !0
                });

              case 21:
                _context219.next = 37;
                break;

              case 23:
                if (!("e.www.login.noexists" == v.errCode)) {
                  _context219.next = 28;
                  break;
                }

                _context219.next = 26;
                return e("doAction", [c, v], {
                  root: !0
                });

              case 26:
                _context219.next = 35;
                break;

              case 28:
                if (!/^e.www.login.invalid/.test(v.errCode)) {
                  _context219.next = 33;
                  break;
                }

                _context219.next = 31;
                return e("doAction", [h, v], {
                  root: !0
                });

              case 31:
                _context219.next = 35;
                break;

              case 33:
                _context219.next = 35;
                return e("doAction", [m, v], {
                  root: !0
                });

              case 35:
                _context219.next = 37;
                return e("doAction", [d, v], {
                  root: !0
                });

              case 37:
              case "end":
                return _context219.stop();
            }
          }
        }, _callee218);
      }))();
    },
    doGetVcode: function doGetVcode(_ref222) {
      var _arguments46 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee219() {
        var t, e, i, _ref223, _ref223$type, n, _ref223$scene, a, s, o, l, r, d, c, h, m, p, u, y;

        return regeneratorRuntime.wrap(function _callee219$(_context220) {
          while (1) {
            switch (_context220.prev = _context220.next) {
              case 0:
                t = _ref222.getters, e = _ref222.dispatch, i = _ref222.rootState;
                _ref223 = _arguments46.length > 1 && _arguments46[1] !== undefined ? _arguments46[1] : {}, _ref223$type = _ref223.type, n = _ref223$type === void 0 ? "login_by_phone" : _ref223$type, _ref223$scene = _ref223.scene, a = _ref223$scene === void 0 ? "auth" : _ref223$scene, s = _ref223.account, o = _ref223.captcha, l = _ref223.done, r = _ref223.ok, d = _ref223.fail, c = _ref223.error;
                h = i.siteId;

                if (h) {
                  _context220.next = 5;
                  break;
                }

                return _context220.abrupt("return", void Ti.Alert("Without siteId!!!"));

              case 5:
                m = {
                  login_by_phone: "get_sms_vcode",
                  login_by_email: "get_email_vcode",
                  bind_phone: "get_sms_vcode",
                  bind_email: "get_email_vcode",
                  phone: "get_sms_vcode",
                  email: "get_email_vcode"
                }[n], p = t.urls[m];

                if (!(!m || !p)) {
                  _context220.next = 10;
                  break;
                }

                _context220.next = 9;
                return Ti.Toast.Open("Invalid type: ".concat(n), "error");

              case 9:
                return _context220.abrupt("return", _context220.sent);

              case 10:
                y = {
                  site: h,
                  scene: a,
                  account: s,
                  captcha: o
                };
                _context220.prev = 11;
                _context220.next = 14;
                return Ti.Http.get(p, {
                  params: y,
                  as: "json"
                });

              case 14:
                _context220.t0 = (u = _context220.sent).ok;

                if (!_context220.t0) {
                  _context220.next = 17;
                  break;
                }

                _context220.t0 = u.data;

              case 17:
                if (!_context220.t0) {
                  _context220.next = 22;
                  break;
                }

                _context220.next = 20;
                return e("doAction", [r, u], {
                  root: !0
                });

              case 20:
                _context220.next = 24;
                break;

              case 22:
                _context220.next = 24;
                return e("doAction", [d, u], {
                  root: !0
                });

              case 24:
                _context220.next = 36;
                break;

              case 26:
                _context220.prev = 26;
                _context220.t1 = _context220["catch"](11);
                u = _context220.t1;

                if (!c) {
                  _context220.next = 34;
                  break;
                }

                _context220.next = 32;
                return e("doAction", [c, _context220.t1], {
                  root: !0
                });

              case 32:
                _context220.next = 36;
                break;

              case 34:
                _context220.next = 36;
                return Ti.Alert(_context220.t1.responseText, "error");

              case 36:
                _context220.prev = 36;
                _context220.next = 39;
                return e("doAction", [l, u], {
                  root: !0
                });

              case 39:
                return _context220.finish(36);

              case 40:
              case "end":
                return _context220.stop();
            }
          }
        }, _callee219, null, [[11, 26, 36, 40]]);
      }))();
    },
    doResetPasswd: function doResetPasswd(_ref224) {
      var _arguments47 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee220() {
        var t, e, i, _ref225, _ref225$scene, n, a, s, o, l, r, d, c, h, m, p, u, y, f;

        return regeneratorRuntime.wrap(function _callee220$(_context221) {
          while (1) {
            switch (_context221.prev = _context221.next) {
              case 0:
                t = _ref224.getters, e = _ref224.dispatch, i = _ref224.rootState;
                _ref225 = _arguments47.length > 1 && _arguments47[1] !== undefined ? _arguments47[1] : {}, _ref225$scene = _ref225.scene, n = _ref225$scene === void 0 ? "resetpasswd" : _ref225$scene, a = _ref225.account, s = _ref225.vcode, o = _ref225.newpwd, l = _ref225.oldpwd, r = _ref225.done, d = _ref225.ok, c = _ref225.fail;
                h = i.siteId;

                if (h) {
                  _context221.next = 5;
                  break;
                }

                return _context221.abrupt("return", void Ti.Alert("Without siteId!!!"));

              case 5:
                m = i.auth.ticket;

                if (i.auth.me) {
                  _context221.next = 8;
                  break;
                }

                return _context221.abrupt("return", void Ti.Alert("Without Login!!!"));

              case 8:
                p = t.urls.resetpasswd;

                if (p) {
                  _context221.next = 11;
                  break;
                }

                return _context221.abrupt("return", void console.error("doResetPasswd url is nil"));

              case 11:
                u = {
                  site: h,
                  ticket: m
                };
                y = {
                  account: a,
                  vcode: s,
                  newpwd: o,
                  oldpwd: l
                };
                _context221.next = 15;
                return Ti.Http.post(p, {
                  params: u,
                  body: JSON.stringify(y),
                  as: "json"
                })["catch"](function (_ref226) {
                  var t = _ref226.responseText;
                  return {
                    ok: !1,
                    errCode: _.trim(t)
                  };
                });

              case 15:
                f = _context221.sent;
                _context221.next = 18;
                return e("doAction", [r, f], {
                  root: !0
                });

              case 18:
                if (!f.ok) {
                  _context221.next = 23;
                  break;
                }

                _context221.next = 21;
                return e("doAction", [d, f], {
                  root: !0
                });

              case 21:
                _context221.next = 25;
                break;

              case 23:
                _context221.next = 25;
                return e("doAction", [c, f], {
                  root: !0
                });

              case 25:
              case "end":
                return _context221.stop();
            }
          }
        }, _callee220);
      }))();
    },
    doLogout: function doLogout(_ref227) {
      var _arguments48 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee221() {
        var t, e, i, n, a, _ref228, s, o, l, r, d, c, h;

        return regeneratorRuntime.wrap(function _callee221$(_context222) {
          while (1) {
            switch (_context222.prev = _context222.next) {
              case 0:
                t = _ref227.state, e = _ref227.commit, i = _ref227.dispatch, n = _ref227.getters, a = _ref227.rootState;
                _ref228 = _arguments48.length > 1 && _arguments48[1] !== undefined ? _arguments48[1] : {}, s = _ref228.done, o = _ref228.ok, l = _ref228.fail;
                r = a.siteId;

                if (r) {
                  _context222.next = 5;
                  break;
                }

                return _context222.abrupt("return", void Ti.Alert("Without siteId!!!"));

              case 5:
                _context222.next = 7;
                return Ti.Confirm("i18n:auth-logout-confirm");

              case 7:
                if (_context222.sent) {
                  _context222.next = 9;
                  break;
                }

                return _context222.abrupt("return");

              case 9:
                if (!(Ti.Storage.local.remove("www-ticket-".concat(r)), !n.hasSession)) {
                  _context222.next = 11;
                  break;
                }

                return _context222.abrupt("return", void i("invokeAction", l, {
                  root: !0
                }));

              case 11:
                d = n.urls.logout, c = {
                  site: r,
                  ticket: t.ticket
                };
                e("setLoading", {
                  text: "i18n:logout-ing"
                }, {
                  root: !0
                });
                _context222.next = 15;
                return Ti.Http.get(d, {
                  params: c,
                  as: "json"
                });

              case 15:
                h = _context222.sent;
                e("setTicket", null);
                e("setExpi", 0);
                e("setMe", null);
                e("setLoading", !1, {
                  root: !0
                });
                _context222.next = 22;
                return i("doAction", [s, h], {
                  root: !0
                });

              case 22:
                h.ok ? i("doAction", [o, h], {
                  root: !0
                }) : i("doAction", [l, h], {
                  root: !0
                });

              case 23:
              case "end":
                return _context222.stop();
            }
          }
        }, _callee221);
      }))();
    }
  };
  Ti.Preload("ti/lib/www/mod/auth/mod-auth-actions.mjs", t);
}(), function () {
  var t = {
    saveProfile: function saveProfile(_ref229) {
      var _arguments49 = arguments;
      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee222() {
        var t, e, i, n, a, s, o, l, r;
        return regeneratorRuntime.wrap(function _callee222$(_context223) {
          while (1) {
            switch (_context223.prev = _context223.next) {
              case 0:
                t = _ref229.state, e = _ref229.getters, i = _ref229.commit, n = _ref229.dispatch, a = _ref229.rootState;
                s = _arguments49.length > 1 && _arguments49[1] !== undefined ? _arguments49[1] : {};

                if (!(s = _.omit(s, "email", "phone", "nm"), _.isEmpty(s))) {
                  _context223.next = 4;
                  break;
                }

                return _context223.abrupt("return");

              case 4:
                if (!_.isMatch(t.me, s)) {
                  _context223.next = 6;
                  break;
                }

                return _context223.abrupt("return");

              case 6:
                o = {
                  site: a.siteId,
                  ticket: t.ticket
                }, l = JSON.stringify(s);
                i("setLoading", !0, {
                  root: !0
                });
                r = e.urls.profile_save;
                _context223.next = 11;
                return Ti.Http.post(r, {
                  params: o,
                  body: l,
                  as: "json"
                });

              case 11:
                _context223.next = 13;
                return n("doCheckMe", {
                  force: !0
                });

              case 13:
                i("setLoading", !1, {
                  root: !0
                });

              case 14:
              case "end":
                return _context223.stop();
            }
          }
        }, _callee222);
      }))();
    }
  };
  Ti.Preload("ti/lib/www/mod/auth/mod-profile-actions.mjs", t);
}(), Ti.Preload("ti/lib/www/mod/auth/www-mod-auth.json", {
  ticket: null,
  expi: 0,
  me: null,
  profile: null,
  countries: null,
  countryMap: null,
  addresses: [],
  defaultAddr: null,
  paths: {
    checkme: "auth/checkme",
    login_by_wxcode: "auth/login_by_wxcode",
    login_by_phone: "auth/login_by_phone",
    login_by_email: "auth/login_by_email",
    login_by_passwd: "auth/login_by_passwd",
    bind_phone: "auth/bind_account",
    bind_email: "auth/bind_account",
    get_sms_vcode: "auth/get_sms_vcode",
    get_email_vcode: "auth/get_email_vcode",
    check_name: "auth/check_name",
    check_phone: "auth/check_phone",
    logout: "auth/logout",
    resetpasswd: "auth/resetpasswd",
    countries: "lbs/countries",
    addr_mine: "address/mine",
    addr_create: "address/create",
    addr_update: "address/update",
    addr_delete: "address/delete",
    profile_save: "auth/setme"
  }
}), function () {
  var t = {
    getters: {
      hasSession: function hasSession(t) {
        return !_.isEmpty(t.ticket) && t.expi > Date.now() && !_.isEmpty(t.me);
      },
      sessionState: function sessionState(t, e) {
        return {
          ok: e.hasSession,
          data: {
            me: t.me || null,
            ticket: t.ticket || null,
            expi: t.expi || 0
          }
        };
      },
      urls: function urls(t, e, i, n) {
        var a = {};
        return _.forEach(t.paths, function (t, e) {
          a[e] = n.getApiUrl(t);
        }), a;
      }
    },
    mutations: {
      setTicket: function setTicket(t, e) {
        t.ticket = e;
      },
      setExpi: function setExpi(t, e) {
        t.expi = e;
      },
      setMe: function setMe(t, e) {
        t.me = e;
      },
      setPaths: function setPaths(t, e) {
        _.assign(t.paths, e);
      },
      mergePaths: function mergePaths(t, e) {
        _.merge(t.paths, e);
      },
      setAddresses: function setAddresses(t, e) {
        if (t.addresses = e, _.isArray(e)) {
          var i = null;

          var _iterator105 = _createForOfIteratorHelper(e),
              _step105;

          try {
            for (_iterator105.s(); !(_step105 = _iterator105.n()).done;) {
              var _t191 = _step105.value;

              if (_t191.dftaddr) {
                i = _t191;
                break;
              }
            }
          } catch (err) {
            _iterator105.e(err);
          } finally {
            _iterator105.f();
          }

          t.defaultAddr = i;
        }
      },
      setCountries: function setCountries(t, e) {
        t.countries = e;
        var i = {};
        _.forEach(e, function (t) {
          i[t.key] = t.name;
        }), t.countryMap = i;
      }
    }
  };
  Ti.Preload("ti/lib/www/mod/auth/www-mod-auth.mjs", t);
}(), Ti.Preload("ti/lib/www/mod/auth/_mod.json", {
  name: "www-mod-auth",
  namespaced: !0,
  state: "./www-mod-auth.json",
  actions: ["./mod-auth-actions.mjs", "./mod-address-actions.mjs", "./mod-profile-actions.mjs"],
  mixins: "./www-mod-auth.mjs"
}), Ti.Preload("ti/lib/www/mod/page/www-mod-page.json", {
  className: null,
  title: null,
  name: null,
  path: null,
  pageUri: null,
  ready: 0,
  finger: null,
  params: {},
  anchor: null,
  apis: {},
  data: {},
  contextMenu: !0,
  explainDataKey: [],
  layout: {
    desktop: {},
    tablet: "desktop",
    phone: "desktop"
  },
  shown: {},
  schema: {},
  actions: {}
}), function () {
  var _mutations;

  var t = {
    getters: {
      pageLink: function pageLink(_ref230) {
        var t = _ref230.path,
            e = _ref230.params,
            i = _ref230.anchor;
        var n = [t];

        if (!_.isEmpty(e)) {
          var _t192 = [];
          _.forEach(e, function (e, i) {
            Ti.Util.isNil(e) || _t192.push("".concat(i, "=").concat(encodeURIComponent(e)));
          }), _.isEmpty(_t192) || n.push("?".concat(_t192.join("&")));
        }

        return i && n.push("#".concat(i)), n.join("");
      },
      pageApis: function pageApis(t, e, i, n) {
        var a = i.apiBase || "/",
            s = i.apis || {},
            o = {};

        var l = function l(t, e) {
          var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

          var n = _.cloneDeep(e);

          _.defaults(n, {
            name: t,
            method: "GET",
            headers: {},
            params: {},
            vars: {},
            as: "json"
          });

          if (n.path) return _.assign(n.vars, i.vars), _.assign(n.headers, i.headers), _.assign(n.params, i.params), "INVOKE" != n.method && (/^(https?:\/\/|\/)/.test(n.path) ? n.url = n.path : n.url = Ti.Util.appendPath(a, n.path)), _.assign(n, _.pick(i, "body", "preload", "ssr", "transformer", "dataKey", "dataMerge", "rawDataKey", "rawDataMerge")), _.defaults(n, {
            bodyType: "form",
            dataKey: t
          }), n;
          console.warn("!!!API[".concat(t, "] without defined in site!!!"), n);
        };

        return _.forEach(s, function (t, e) {
          t.pages && (t = l(e, t)) && (o[e] = t);
        }), _.forEach(t.apis, function (t, e) {
          var i = _.get(s, t.apiName || e),
              n = l(e, i, t);

          n && (o[e] = n);
        }), o;
      }
    },
    mutations: (_mutations = {
      set: function set(t, e) {
        _.assign(t, e);
      },
      setTitle: function setTitle(t, e) {
        t.title = e;
      },
      setPath: function setPath(t, e) {
        t.path = e;
      }
    }, _defineProperty(_mutations, "setPath", function setPath(t, e) {
      t.path = e;
    }), _defineProperty(_mutations, "setPageUri", function setPageUri(t, e) {
      t.pageUri = e;
    }), _defineProperty(_mutations, "setParams", function setParams(t, e) {
      t.params = e;
    }), _defineProperty(_mutations, "mergeParams", function mergeParams(t, e) {
      !_.isEmpty(e) && _.isPlainObject(e) && (t.params = _.merge({}, t.params, e));
    }), _defineProperty(_mutations, "setData", function setData(t, e) {
      t.data = e;
    }), _defineProperty(_mutations, "updateData", function updateData(t) {
      var _ref231 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          e = _ref231.key,
          i = _ref231.value;

      if (!e || _.isUndefined(i)) return;

      var n = _.set({}, e, i);

      t.data = _.assign({}, t.data, n);
    }), _defineProperty(_mutations, "mergeData", function mergeData(t, e) {
      !_.isEmpty(e) && _.isPlainObject(e) && (t.data = _.merge({}, t.data, e));
    }), _defineProperty(_mutations, "setLayout", function setLayout(t, e) {
      t.layout = e;
    }), _defineProperty(_mutations, "setShown", function setShown(t, e) {
      _.assign(t.shown, e);
    }), _defineProperty(_mutations, "setReady", function setReady(t, e) {
      t.ready = e;
    }), _defineProperty(_mutations, "updateFinger", function updateFinger(t) {
      var e = [t.path, t.params, t.anchor, t.data],
          i = Ti.Alg.sha1(e);
      t.finger = i;
    }), _mutations),
    actions: {
      showBlock: function showBlock(_ref232, e) {
        var t = _ref232.commit;
        t("setShown", _defineProperty({}, e, !0));
      },
      hideBlock: function hideBlock(_ref233, e) {
        var t = _ref233.commit;
        t("setShown", _defineProperty({}, e, !1));
      },
      resetData: function resetData(_ref234) {
        var t = _ref234.commit;
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        t("setData", e);
      },
      resetDataByKey: function resetDataByKey(_ref235) {
        var t = _ref235.state,
            e = _ref235.commit;
        var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        if (!_.isEmpty(i)) {
          var n = _.cloneDeep(t.data);

          _.forEach(i, function (t, e) {
            _.set(n, e, t);
          }), e("setData", n);
        }
      },
      changeData: function changeData(_ref236, e) {
        var t = _ref236.commit;
        t("mergeData", Ti.Util.merge({}, e));
      },
      changeParams: function changeParams(_ref237, e) {
        var t = _ref237.commit;
        t("mergeParams", Ti.Util.merge({}, e)), t("updateFinger");
      },
      shiftData: function shiftData(_ref238) {
        var t = _ref238.state,
            e = _ref238.commit;
        var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        if (!_.isEmpty(i) && _.isPlainObject(i)) {
          var n = {};
          Ti.Util.walk(i, {
            leaf: function leaf(e, i) {
              var a = _.get(t.data, i);

              _.isNumber(a) && _.isString(e) && /^[+-][0-9.]+$/.test(e) ? _.set(n, i, a + 1 * e) : _.set(n, i, e);
            }
          }), e("mergeData", n);
        }
      },
      assertPage: function assertPage(_ref239) {
        var t = _ref239.rootState,
            e = _ref239.dispatch;

        var _ref240 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
            _ref240$checkList = _ref240.checkList,
            i = _ref240$checkList === void 0 ? [] : _ref240$checkList,
            _ref240$fail = _ref240.fail,
            n = _ref240$fail === void 0 ? {} : _ref240$fail;

        var a = !1;

        var _iterator106 = _createForOfIteratorHelper(i),
            _step106;

        try {
          for (_iterator106.s(); !(_step106 = _iterator106.n()).done;) {
            var _e72 = _step106.value;

            var _i43 = _.get(t, _e72.target);

            if (!Ti.Validate.checkBy(_e72.assert, _i43)) {
              a = !0;
              break;
            }
          }
        } catch (err) {
          _iterator106.e(err);
        } finally {
          _iterator106.f();
        }

        a && n.action && e("doAction", n, {
          root: !0
        });
      },
      scrollToTop: function scrollToTop(_ref241) {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee223() {
          var t;
          return regeneratorRuntime.wrap(function _callee223$(_context224) {
            while (1) {
              switch (_context224.prev = _context224.next) {
                case 0:
                  t = _ref241.state;
                  Ti.Be.ScrollWindowTo({
                    y: 0
                  });

                case 2:
                case "end":
                  return _context224.stop();
              }
            }
          }, _callee223);
        }))();
      },
      doApi: function doApi(_ref242) {
        var _arguments50 = arguments;
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee224() {
          var t, e, i, _ref243, n, _ref243$params, a, _ref243$vars, s, _ref243$body, o, l, r, d;

          return regeneratorRuntime.wrap(function _callee224$(_context225) {
            while (1) {
              switch (_context225.prev = _context225.next) {
                case 0:
                  t = _ref242.getters, e = _ref242.commit, i = _ref242.dispatch;
                  _ref243 = _arguments50.length > 1 && _arguments50[1] !== undefined ? _arguments50[1] : {}, n = _ref243.key, _ref243$params = _ref243.params, a = _ref243$params === void 0 ? {} : _ref243$params, _ref243$vars = _ref243.vars, s = _ref243$vars === void 0 ? {} : _ref243$vars, _ref243$body = _ref243.body, o = _ref243$body === void 0 ? null : _ref243$body, l = _ref243.ok, r = _ref243.fail;
                  d = _.get(t.pageApis, n);

                  if (!(console.log("doApi", n, a, d), !d)) {
                    _context225.next = 7;
                    break;
                  }

                  _context225.next = 6;
                  return Ti.Toast.Open("e.www.page.ApiNotFound: " + n, "warn");

                case 6:
                  return _context225.abrupt("return", _context225.sent);

                case 7:
                  e("setLoading", !0, {
                    root: !0
                  });
                  _context225.next = 10;
                  return i("__run_api", {
                    api: d,
                    params: a,
                    vars: s,
                    body: o,
                    ok: l,
                    fail: r
                  });

                case 10:
                  e("setLoading", !1, {
                    root: !0
                  });

                case 11:
                case "end":
                  return _context225.stop();
              }
            }
          }, _callee224);
        }))();
      },
      __run_api: function __run_api(_ref244, _ref245) {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee225() {
          var t, e, i, n, a, s, o, l, r, d, c, _t195, h, _t196, m, _t197, _e73, p, _t198, _e74, _e75, _a16;

          return regeneratorRuntime.wrap(function _callee225$(_context226) {
            while (1) {
              switch (_context226.prev = _context226.next) {
                case 0:
                  t = _ref244.commit, e = _ref244.dispatch, i = _ref244.rootState;
                  n = _ref245.api, a = _ref245.vars, s = _ref245.params, o = _ref245.headers, l = _ref245.body, r = _ref245.ok, d = _ref245.fail;
                  n = _.cloneDeep(n), _.assign(n.vars, a), _.assign(n.params, s), _.assign(n.headers, o), Ti.Util.isNil(l) || (n.body = l), _.defaults(a, n.vars);
                  c = n.url;

                  if (!_.isEmpty(n.vars)) {
                    _t195 = Ti.Util.explainObj(i, n.vars);
                    c = Ti.S.renderBy(c, _t195);
                  }

                  h = _.pick(n, ["method", "as"]);

                  if (h.headers = Ti.Util.explainObj(i, n.headers), h.params = Ti.Util.explainObj(i, n.params), "POST" == n.method && n.body) {
                    _t196 = Ti.Util.explainObj(i, n.body);
                    "json" == n.bodyType ? h.body = JSON.stringify(_t196) : "text" == n.bodyType ? h.body = Ti.Types.toStr(_t196) : h.body = Ti.Http.encodeFormData(_t196);
                  }

                  m = void 0;
                  _context226.prev = 8;

                  if (!("INVOKE" == n.method)) {
                    _context226.next = 15;
                    break;
                  }

                  _context226.next = 12;
                  return e(n.path, h.params, {
                    root: !0
                  });

                case 12:
                  m = _context226.sent;
                  _context226.next = 21;
                  break;

                case 15:
                  if (n.ssr && "GET" == n.method) {
                    _t197 = JSON.stringify(h.params || {}), _e73 = _.pick(h, "as");
                    _e73.dft = void 0, _e73.ssrFinger = Ti.Alg.sha1(_t197), m = Ti.WWW.getSSRData("api-".concat(n.name), _e73);
                  }

                  _context226.t0 = _.isUndefined(m);

                  if (!_context226.t0) {
                    _context226.next = 21;
                    break;
                  }

                  _context226.next = 20;
                  return Ti.Http.sendAndProcess(c, h);

                case 20:
                  m = _context226.sent;

                case 21:
                  _context226.next = 26;
                  break;

                case 23:
                  _context226.prev = 23;
                  _context226.t1 = _context226["catch"](8);
                  return _context226.abrupt("return", (console.warn("Fail to invoke ".concat(c), {
                    api: n,
                    url: c,
                    options: h
                  }, _context226.t1), void e("doAction", d, {
                    root: !0
                  })));

                case 26:
                  p = m;

                  if (n.transformer) {
                    _t198 = _.cloneDeep(n.transformer), _e74 = Ti.Util.fallback(_t198.partial, "right");

                    if (_t198.explain) {
                      _e75 = _.pick(_t198, "name", "args");
                      _t198 = Ti.Util.explainObjs(i, _e75);
                    }

                    _a16 = Ti.Util.genInvoking(_t198, {
                      context: i,
                      partial: _e74
                    });
                    _.isFunction(_a16) && (p = _a16(m));
                  }

                  n.dataMerge ? t("mergeData", _defineProperty({}, n.dataKey, p)) : n.dataKey && t("updateData", {
                    key: n.dataKey,
                    value: p
                  }), n.rawDataKey && (n.rawDataMerge ? t("mergeData", _defineProperty({}, n.rawDataKey, m)) : t("updateData", {
                    key: n.rawDataKey,
                    value: m
                  })), e("doAction", r, {
                    root: !0
                  });

                case 29:
                case "end":
                  return _context226.stop();
              }
            }
          }, _callee225, null, [[8, 23]]);
        }))();
      },
      reloadData: function reloadData(_ref246) {
        var _arguments51 = arguments;
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee226() {
          var t, e, i, n, a, s, o, l, _iterator107, _step107, _t201;

          return regeneratorRuntime.wrap(function _callee226$(_context227) {
            while (1) {
              switch (_context227.prev = _context227.next) {
                case 0:
                  t = _ref246.commit, e = _ref246.getters, i = _ref246.dispatch, n = _ref246.rootState;
                  a = _arguments51.length > 1 && _arguments51[1] !== undefined ? _arguments51[1] : [];
                  s = _.isEmpty(a), o = _.filter(e.pageApis, function (t, e) {
                    return !!(s && t.preload > 0 || _.indexOf(a, e) >= 0) && (!t.preloadWhen || Ti.AutoMatch.test(t.preloadWhen, n));
                  });
                  t("setLoading", !0, {
                    root: !0
                  });
                  l = [];
                  _iterator107 = _createForOfIteratorHelper(o);

                  try {
                    for (_iterator107.s(); !(_step107 = _iterator107.n()).done;) {
                      _t201 = _step107.value;
                      l.push(i("__run_api", {
                        api: _t201
                      }));
                    }
                  } catch (err) {
                    _iterator107.e(err);
                  } finally {
                    _iterator107.f();
                  }

                  _context227.next = 9;
                  return Promise.all(l);

                case 9:
                  t("setLoading", !1, {
                    root: !0
                  });
                  t("updateFinger");

                case 11:
                case "end":
                  return _context227.stop();
              }
            }
          }, _callee226);
        }))();
      },
      explainData: function explainData(_ref247, n) {
        var t = _ref247.commit,
            e = _ref247.state,
            i = _ref247.rootState;
        if (n = n || e.explainDataKey, _.isEmpty(n) || !_.isArray(n)) return;
        var a = {};

        var _iterator108 = _createForOfIteratorHelper(n),
            _step108;

        try {
          for (_iterator108.s(); !(_step108 = _iterator108.n()).done;) {
            var _t202 = _step108.value;

            var _n32 = _.get(e.data, _t202),
                s = Ti.Util.explainObj(i, _n32);

            _.set(a, _t202, s);
          }
        } catch (err) {
          _iterator108.e(err);
        } finally {
          _iterator108.f();
        }

        t("mergeData", a);
      },
      reload: function reload(_ref248, _ref249) {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee227() {
          var t, e, i, n, a, s, _ref249$params, o, l, _iterator109, _step109, _t206, r, _t203, d, c, h, _i44, _c, _t205;

          return regeneratorRuntime.wrap(function _callee227$(_context228) {
            while (1) {
              switch (_context228.prev = _context228.next) {
                case 0:
                  t = _ref248.commit, e = _ref248.dispatch, i = _ref248.getters, n = _ref248.rootGetters;
                  a = _ref249.path, s = _ref249.anchor, _ref249$params = _ref249.params, o = _ref249$params === void 0 ? {} : _ref249$params;
                  _iterator109 = _createForOfIteratorHelper(n.routerList);
                  _context228.prev = 3;

                  _iterator109.s();

                case 5:
                  if ((_step109 = _iterator109.n()).done) {
                    _context228.next = 11;
                    break;
                  }

                  _t206 = _step109.value;

                  if (!((l = _t206(a)) && l.path)) {
                    _context228.next = 9;
                    break;
                  }

                  return _context228.abrupt("break", 11);

                case 9:
                  _context228.next = 5;
                  break;

                case 11:
                  _context228.next = 16;
                  break;

                case 13:
                  _context228.prev = 13;
                  _context228.t0 = _context228["catch"](3);

                  _iterator109.e(_context228.t0);

                case 16:
                  _context228.prev = 16;

                  _iterator109.f();

                  return _context228.finish(16);

                case 19:
                  if (!(!l || !l.path)) {
                    _context228.next = 23;
                    break;
                  }

                  _context228.next = 22;
                  return Ti.Toast.Open("Page ${path} not found!", {
                    type: "error",
                    position: "center",
                    vars: {
                      path: a
                    }
                  });

                case 22:
                  return _context228.abrupt("return", _context228.sent);

                case 23:
                  t("setReady", 0);
                  _context228.next = 26;
                  return e("invokeAction", {
                    name: "@page:init"
                  }, {
                    root: !0
                  });

                case 26:
                  r = Ti.WWW.getSSRData("page-json", {
                    as: "json"
                  });

                  if (r) {
                    _context228.next = 32;
                    break;
                  }

                  _t203 = /^([^.]+)(\.html?)?$/.exec(l.path)[1] + ".json";
                  _context228.next = 31;
                  return Ti.Load("@Site:".concat(_t203));

                case 31:
                  r = _context228.sent;

                case 32:
                  s && (l.anchor = s), l.params = _.merge({}, l.params, o), l.path = l.path || a, l.name = Ti.Util.getMajorName(l.path);
                  d = Ti.Util.Link({
                    url: a,
                    params: o,
                    anchor: s
                  });
                  l.pageUri = d.toString();
                  t("set", _.merge({
                    className: null,
                    title: null,
                    apis: {},
                    data: {},
                    contextMenu: !0,
                    explainDataKey: [],
                    layout: {},
                    params: {},
                    shown: {},
                    schema: {},
                    actions: {}
                  }, r, l));
                  t("setReady", 1);
                  _context228.next = 39;
                  return e("invokeAction", {
                    name: "@page:prepare"
                  }, {
                    root: !0
                  });

                case 39:
                  c = [], h = [];

                  _.forEach(i.pageApis, function (t, e) {
                    var i = t.preload;

                    if (_.isBoolean(i)) {
                      if (!i) return;
                      i = 1;
                    }

                    if (_.isNumber(i)) if (i >= 0) {
                      var _t204 = _.nth(c, i);

                      _.isArray(_t204) || (_t204 = [], c[i] = _t204), _t204.push(e);
                    } else h.push(e);
                  });

                  _i44 = 0, _c = c;

                case 42:
                  if (!(_i44 < _c.length)) {
                    _context228.next = 51;
                    break;
                  }

                  _t205 = _c[_i44];
                  _context228.t1 = _.isEmpty(_t205);

                  if (_context228.t1) {
                    _context228.next = 48;
                    break;
                  }

                  _context228.next = 48;
                  return e("reloadData", _t205);

                case 48:
                  _i44++;
                  _context228.next = 42;
                  break;

                case 51:
                  _context228.next = 53;
                  return e("explainData");

                case 53:
                  e("scrollToTop");
                  t("setReady", 2);
                  _context228.next = 57;
                  return e("invokeAction", {
                    name: "@page:ready"
                  }, {
                    root: !0
                  });

                case 57:
                  h.length > 0 && e("reloadData", h);

                case 58:
                case "end":
                  return _context228.stop();
              }
            }
          }, _callee227, null, [[3, 13, 16, 19]]);
        }))();
      }
    }
  };
  Ti.Preload("ti/lib/www/mod/page/www-mod-page.mjs", t);
}(), Ti.Preload("ti/lib/www/mod/page/_mod.json", {
  name: "www-mod-page",
  namespaced: !0,
  state: "./www-mod-page.json",
  mixins: "./www-mod-page.mjs"
}), Ti.Preload("ti/lib/www/mod/shop/www-mod-shop.json", {
  basket: [],
  payment: null,
  paths: {
    buyIt: "entity/buy/it",
    buyRemove: "entity/buy/rm",
    buyGetAll: "entity/buy/all",
    buyClean: "entity/buy/clean",
    objs: "objs",
    buy: "pay/buy",
    pay: "pay/pay",
    checkOrder: "pay/check",
    fetchOrder: "pay/order"
  }
}), function () {
  var t = {
    getters: {
      urls: function urls(t, e, i, n) {
        var a = {};
        return _.forEach(t.paths, function (t, e) {
          a[e] = n.getApiUrl(t);
        }), a;
      }
    },
    mutations: {
      appendBasket: function appendBasket(t, e) {
        t.basket = _.concat(t.basket, e);
      },
      setBasket: function setBasket(t) {
        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        t.basket = e;
      },
      setPayment: function setPayment(t, e) {
        t.payment = e;
      },
      setPaths: function setPaths(t, e) {
        t.paths = _.cloneDeep(e);
      },
      mergePaths: function mergePaths(t, e) {
        _.assign(t.paths, e);
      }
    },
    actions: {
      fetchOrder: function fetchOrder(_ref250) {
        var _arguments52 = arguments;
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee228() {
          var t, e, _ref251, i, n;

          return regeneratorRuntime.wrap(function _callee228$(_context229) {
            while (1) {
              switch (_context229.prev = _context229.next) {
                case 0:
                  t = _ref250.getters, e = _ref250.rootState;
                  _ref251 = _arguments52.length > 1 && _arguments52[1] !== undefined ? _arguments52[1] : {}, i = _ref251.orderId;

                  if (i) {
                    _context229.next = 4;
                    break;
                  }

                  return _context229.abrupt("return");

                case 4:
                  _context229.next = 6;
                  return Ti.Http.get(t.urls.fetchOrder, {
                    params: {
                      ticket: e.auth.ticket,
                      id: i
                    },
                    as: "json"
                  });

                case 6:
                  n = _context229.sent;

                  if (!n.ok) {
                    _context229.next = 9;
                    break;
                  }

                  return _context229.abrupt("return", n.data);

                case 9:
                  console.warn("Fail to loadOrder", {
                    items: items,
                    reo: n
                  });

                case 10:
                case "end":
                  return _context229.stop();
              }
            }
          }, _callee228);
        }))();
      },
      payOrder: function payOrder(_ref252) {
        var _arguments53 = arguments;
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee229() {
          var t, e, _ref253, i, n, a;

          return regeneratorRuntime.wrap(function _callee229$(_context230) {
            while (1) {
              switch (_context230.prev = _context230.next) {
                case 0:
                  t = _ref252.getters, e = _ref252.rootState;
                  _ref253 = _arguments53.length > 1 && _arguments53[1] !== undefined ? _arguments53[1] : {}, i = _ref253.orderId, n = _ref253.payType;

                  if (i) {
                    _context230.next = 4;
                    break;
                  }

                  return _context230.abrupt("return");

                case 4:
                  _context230.next = 6;
                  return Ti.Http.get(t.urls.pay, {
                    params: {
                      ticket: e.auth.ticket,
                      id: i,
                      pt: n
                    },
                    as: "json"
                  });

                case 6:
                  a = _context230.sent;

                  if (!a.ok) {
                    _context230.next = 9;
                    break;
                  }

                  return _context230.abrupt("return", a.data);

                case 9:
                  console.warn("Fail to payOrder", {
                    items: items,
                    reo: a
                  });

                case 10:
                case "end":
                  return _context230.stop();
              }
            }
          }, _callee229);
        }))();
      },
      createOrder: function createOrder(_ref254) {
        var _arguments54 = arguments;
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee230() {
          var t, e, _ref255, i, n, a, s, o, l, r, _i45, _e76, _i46;

          return regeneratorRuntime.wrap(function _callee230$(_context231) {
            while (1) {
              switch (_context231.prev = _context231.next) {
                case 0:
                  t = _ref254.getters, e = _ref254.rootState;
                  _ref255 = _arguments54.length > 1 && _arguments54[1] !== undefined ? _arguments54[1] : {}, i = _ref255.payType, n = _ref255.items, a = _ref255.orderType, s = _ref255.orderTitle, o = _ref255.address, l = _ref255.fail;

                  if (!(!i || _.isEmpty(n))) {
                    _context231.next = 4;
                    break;
                  }

                  return _context231.abrupt("return");

                case 4:
                  r = {
                    title: s,
                    tp: a,
                    pay_tp: i,
                    products: n
                  };
                  o && (r.addr_user_country = _.get(o, "country"), r.addr_user_code = _.get(o, "code"), r.addr_user_door = _.get(o, "door"), r.user_name = _.get(o, "consignee"), r.user_phone = _.get(o, "phone"), r.user_email = _.get(o, "email"), r.addr_user_province = _.get(o, "province"), r.addr_user_city = _.get(o, "city"), r.addr_user_area = _.get(o, "area"), r.addr_user_street = _.get(o, "street"));
                  _context231.prev = 6;
                  _context231.next = 9;
                  return Ti.Http.post(t.urls.buy, {
                    params: {
                      ticket: e.auth.ticket
                    },
                    headers: {
                      "Content-Type": "application/json;charset=utf-8"
                    },
                    body: JSON.stringify(r),
                    as: "json"
                  });

                case 9:
                  _i45 = _context231.sent;

                  if (!_i45.ok) {
                    _context231.next = 12;
                    break;
                  }

                  return _context231.abrupt("return", _i45.data);

                case 12:
                  console.warn("Fail to createOrder", {
                    items: n,
                    reo: _i45
                  });
                  _context231.next = 19;
                  break;

                case 15:
                  _context231.prev = 15;
                  _context231.t0 = _context231["catch"](6);
                  _e76 = _.trim(_context231.t0.responseText), _i46 = Ti.I18n.explain(_e76);
                  Ti.Toast.Open(_i46, "error"), _.isFunction(l) && l(_i46);

                case 19:
                case "end":
                  return _context231.stop();
              }
            }
          }, _callee230, null, [[6, 15]]);
        }))();
      },
      checkOrder: function checkOrder(_ref256, i) {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee231() {
          var t, e, n;
          return regeneratorRuntime.wrap(function _callee231$(_context232) {
            while (1) {
              switch (_context232.prev = _context232.next) {
                case 0:
                  t = _ref256.getters, e = _ref256.rootState;

                  if (!(console.log("checkOrder"), !i)) {
                    _context232.next = 3;
                    break;
                  }

                  return _context232.abrupt("return");

                case 3:
                  _context232.next = 5;
                  return Ti.Http.get(t.urls.checkOrder, {
                    params: {
                      ticket: e.auth.ticket,
                      id: i
                    },
                    as: "json"
                  });

                case 5:
                  n = _context232.sent;

                  if (!n.ok) {
                    _context232.next = 8;
                    break;
                  }

                  return _context232.abrupt("return", n.data);

                case 8:
                  console.warn("Fail to checkOrder", {
                    items: items,
                    reo: n
                  });

                case 9:
                case "end":
                  return _context232.stop();
              }
            }
          }, _callee231);
        }))();
      },
      loadBuyItems: function loadBuyItems(_ref257, _ref258) {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee232() {
          var t, e, _ref258$items, i, _ref258$commitDataKey, n, _ref258$commitTarget, a, s, o, l, _t208;

          return regeneratorRuntime.wrap(function _callee232$(_context233) {
            while (1) {
              switch (_context233.prev = _context233.next) {
                case 0:
                  t = _ref257.getters, e = _ref257.commit;
                  _ref258$items = _ref258.items, i = _ref258$items === void 0 ? [] : _ref258$items, _ref258$commitDataKey = _ref258.commitDataKey, n = _ref258$commitDataKey === void 0 ? "goods" : _ref258$commitDataKey, _ref258$commitTarget = _ref258.commitTarget, a = _ref258$commitTarget === void 0 ? "page/updateData" : _ref258$commitTarget;
                  console.log("loadBuyItems", i);
                  s = [], o = {};

                  if (!(_.forEach(i, function (t) {
                    var e = /^(\d+):(.+)$/.exec(t);

                    if (e) {
                      var _t207 = 1 * e[1],
                          _i47 = e[2];

                      _i47 && _t207 > 0 && (s.push("id:".concat(_i47)), o[_i47] = _t207);
                    }
                  }), _.isEmpty(s))) {
                    _context233.next = 6;
                    break;
                  }

                  return _context233.abrupt("return");

                case 6:
                  _context233.next = 8;
                  return Ti.Http.get(t.urls.objs, {
                    params: {
                      phs: s.join(" ")
                    },
                    as: "json"
                  });

                case 8:
                  l = _context233.sent;

                  if (l.ok) {
                    _t208 = [];
                    _.forEach(l.data, function (e) {
                      var i = e.id,
                          n = o[i];

                      _t208.push({
                        id: i,
                        amount: n,
                        obj: e
                      });
                    }), e(a, {
                      key: n,
                      value: _t208
                    }, {
                      root: !0
                    });
                  } else console.warn("Fail to loadBuyItems", {
                    items: i,
                    reo: l
                  });

                case 10:
                case "end":
                  return _context233.stop();
              }
            }
          }, _callee232);
        }))();
      },
      checkoutItems: function checkoutItems(_ref259) {
        var _arguments55 = arguments;
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee233() {
          var t, _ref260, _ref260$items, e, _ref260$checkoutPage, i, _ref260$newtab, n, _ref260$orderType, a, s, o;

          return regeneratorRuntime.wrap(function _callee233$(_context234) {
            while (1) {
              switch (_context234.prev = _context234.next) {
                case 0:
                  t = _ref259.dispatch;
                  _ref260 = _arguments55.length > 1 && _arguments55[1] !== undefined ? _arguments55[1] : {}, _ref260$items = _ref260.items, e = _ref260$items === void 0 ? [] : _ref260$items, _ref260$checkoutPage = _ref260.checkoutPage, i = _ref260$checkoutPage === void 0 ? "page/shop/checkout.html" : _ref260$checkoutPage, _ref260$newtab = _ref260.newtab, n = _ref260$newtab === void 0 ? !1 : _ref260$newtab, _ref260$orderType = _ref260.orderType, a = _ref260$orderType === void 0 ? "A" : _ref260$orderType, s = _ref260.orderTitle;
                  o = [];

                  _.forEach(e, function (t) {
                    t.id && t.amount > 0 && o.push(_.pick(t, "id", "amount"));
                  });

                  if (!_.isEmpty(e)) {
                    _context234.next = 8;
                    break;
                  }

                  console.warn("!checkoutItems: Empty Item List!");
                  _context234.next = 10;
                  break;

                case 8:
                  _context234.next = 10;
                  return t("checkout", {
                    items: e,
                    checkoutPage: i,
                    newtab: n,
                    orderType: a,
                    orderTitle: s
                  });

                case 10:
                case "end":
                  return _context234.stop();
              }
            }
          }, _callee233);
        }))();
      },
      checkoutBasket: function checkoutBasket(_ref261) {
        var _arguments56 = arguments;
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee234() {
          var t, e, _ref262, _ref262$checkedNames, i, _ref262$checkoutPage, n, _ref262$newtab, a, s;

          return regeneratorRuntime.wrap(function _callee234$(_context235) {
            while (1) {
              switch (_context235.prev = _context235.next) {
                case 0:
                  t = _ref261.state, e = _ref261.dispatch;
                  _ref262 = _arguments56.length > 1 && _arguments56[1] !== undefined ? _arguments56[1] : {}, _ref262$checkedNames = _ref262.checkedNames, i = _ref262$checkedNames === void 0 ? {} : _ref262$checkedNames, _ref262$checkoutPage = _ref262.checkoutPage, n = _ref262$checkoutPage === void 0 ? "page/shop/checkout.html" : _ref262$checkoutPage, _ref262$newtab = _ref262.newtab, a = _ref262$newtab === void 0 ? !1 : _ref262$newtab;
                  s = [];

                  _.forEach(t.basket, function (t) {
                    t.name && t.count > 0 && (!i || i[t.name]) && s.push({
                      id: t.name,
                      amount: t.count
                    });
                  });

                  if (!_.isEmpty(s)) {
                    _context235.next = 8;
                    break;
                  }

                  Ti.Toast.Open("i18n:buy-checkout-nil", "warn");
                  _context235.next = 14;
                  break;

                case 8:
                  if (!_.isEmpty(s)) {
                    _context235.next = 12;
                    break;
                  }

                  console.warn("!checkoutBasket: Empty Basket");
                  _context235.next = 14;
                  break;

                case 12:
                  _context235.next = 14;
                  return e("checkout", {
                    items: s,
                    checkoutPage: n,
                    newtab: a
                  });

                case 14:
                case "end":
                  return _context235.stop();
              }
            }
          }, _callee234);
        }))();
      },
      checkout: function checkout(_ref263) {
        var _arguments57 = arguments;
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee235() {
          var t, e, _ref264, _ref264$items, i, _ref264$checkoutPage, n, _ref264$newtab, a, _ref264$orderType, s, o, l, r, _i48;

          return regeneratorRuntime.wrap(function _callee235$(_context236) {
            while (1) {
              switch (_context236.prev = _context236.next) {
                case 0:
                  t = _ref263.dispatch, e = _ref263.rootGetters;
                  _ref264 = _arguments57.length > 1 && _arguments57[1] !== undefined ? _arguments57[1] : {}, _ref264$items = _ref264.items, i = _ref264$items === void 0 ? [] : _ref264$items, _ref264$checkoutPage = _ref264.checkoutPage, n = _ref264$checkoutPage === void 0 ? "page/shop/checkout.html" : _ref264$checkoutPage, _ref264$newtab = _ref264.newtab, a = _ref264$newtab === void 0 ? !1 : _ref264$newtab, _ref264$orderType = _ref264.orderType, s = _ref264$orderType === void 0 ? "A" : _ref264$orderType, o = _ref264.orderTitle;
                  l = [];

                  if (!(_.forEach(i, function (t) {
                    t.id && t.amount > 0 && l.push("".concat(t.amount, ":").concat(t.id));
                  }), _.isEmpty(l))) {
                    _context236.next = 5;
                    break;
                  }

                  return _context236.abrupt("return", void console.warn("!checkout: Empty Item"));

                case 5:
                  r = {
                    its: l.join(","),
                    tp: s,
                    ot: o
                  };

                  if (!a) {
                    _context236.next = 12;
                    break;
                  }

                  _i48 = e.getUrl(n);
                  _context236.next = 10;
                  return t("openUrl", {
                    url: _i48,
                    target: "_blank",
                    params: r
                  }, {
                    root: !0
                  });

                case 10:
                  _context236.next = 14;
                  break;

                case 12:
                  _context236.next = 14;
                  return t("navTo", {
                    value: n,
                    params: r
                  }, {
                    root: !0
                  });

                case 14:
                case "end":
                  return _context236.stop();
              }
            }
          }, _callee235);
        }))();
      },
      updateBasket: function updateBasket(_ref265) {
        var _arguments58 = arguments;
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee236() {
          var t, e, i, n, _ref266, a, _ref266$n, s, _ref266$reset, o, l, r, d, c, h, m;

          return regeneratorRuntime.wrap(function _callee236$(_context237) {
            while (1) {
              switch (_context237.prev = _context237.next) {
                case 0:
                  t = _ref265.commit, e = _ref265.dispatch, i = _ref265.getters, n = _ref265.rootState;
                  _ref266 = _arguments58.length > 1 && _arguments58[1] !== undefined ? _arguments58[1] : {}, a = _ref266.id, _ref266$n = _ref266.n, s = _ref266$n === void 0 ? 1 : _ref266$n, _ref266$reset = _ref266.reset, o = _ref266$reset === void 0 ? !1 : _ref266$reset, l = _ref266.success, r = _ref266.fail, d = _ref266.invalid, c = _ref266.noTicket;

                  if (!(console.log("shop:addToBasket", {
                    id: a,
                    success: l,
                    fail: r
                  }), 0 === s && !o)) {
                    _context237.next = 4;
                    break;
                  }

                  return _context237.abrupt("return");

                case 4:
                  h = n.auth.ticket;

                  if (h) {
                    _context237.next = 14;
                    break;
                  }

                  if (!c) {
                    _context237.next = 12;
                    break;
                  }

                  _context237.next = 9;
                  return e(c.action, c.payload, {
                    root: !0
                  });

                case 9:
                  _context237.t0 = _context237.sent;
                  _context237.next = 13;
                  break;

                case 12:
                  _context237.t0 = void Ti.Alert("Without Session Ticket!!!");

                case 13:
                  return _context237.abrupt("return", _context237.t0);

                case 14:
                  if (a) {
                    _context237.next = 23;
                    break;
                  }

                  if (!d) {
                    _context237.next = 21;
                    break;
                  }

                  _context237.next = 18;
                  return e(d.action, d.payload, {
                    root: !0
                  });

                case 18:
                  _context237.t1 = _context237.sent;
                  _context237.next = 22;
                  break;

                case 21:
                  _context237.t1 = void Ti.Alert("Without Product ID!!!");

                case 22:
                  return _context237.abrupt("return", _context237.t1);

                case 23:
                  _context237.t2 = o && s <= 0;

                  if (!_context237.t2) {
                    _context237.next = 28;
                    break;
                  }

                  _context237.next = 27;
                  return Ti.Confirm("i18n:shop-basket-remove-confirm");

                case 27:
                  _context237.t2 = !_context237.sent;

                case 28:
                  if (!_context237.t2) {
                    _context237.next = 30;
                    break;
                  }

                  return _context237.abrupt("return");

                case 30:
                  t("setLoading", !0, {
                    root: !0
                  });
                  _context237.next = 33;
                  return Ti.Http.get(i.urls.buyIt, {
                    params: {
                      ticket: h,
                      id: a,
                      n: s,
                      r: o
                    },
                    as: "json"
                  });

                case 33:
                  m = _context237.sent;

                  if (!m.ok) {
                    _context237.next = 42;
                    break;
                  }

                  t("setBasket", m.data);
                  _context237.t3 = l;

                  if (!_context237.t3) {
                    _context237.next = 40;
                    break;
                  }

                  _context237.next = 40;
                  return e(l.action, l.payload, {
                    root: !0
                  });

                case 40:
                  _context237.next = 48;
                  break;

                case 42:
                  if (!r) {
                    _context237.next = 47;
                    break;
                  }

                  _context237.next = 45;
                  return e(r.action, r.payload, {
                    root: !0
                  });

                case 45:
                  _context237.next = 48;
                  break;

                case 47:
                  console.warn("shop.updateBasket fail:", m);

                case 48:
                  t("setLoading", !1, {
                    root: !0
                  });

                case 49:
                case "end":
                  return _context237.stop();
              }
            }
          }, _callee236);
        }))();
      },
      cleanBasket: function cleanBasket(_ref267) {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee237() {
          var t, e, i, n, a;
          return regeneratorRuntime.wrap(function _callee237$(_context238) {
            while (1) {
              switch (_context238.prev = _context238.next) {
                case 0:
                  t = _ref267.commit, e = _ref267.getters, i = _ref267.rootState;
                  console.log("shop:cleanBasket");
                  n = i.auth.ticket;

                  if (n) {
                    _context238.next = 5;
                    break;
                  }

                  return _context238.abrupt("return");

                case 5:
                  _context238.next = 7;
                  return Ti.Confirm("i18n:shop-basket-clean-confirm");

                case 7:
                  if (_context238.sent) {
                    _context238.next = 9;
                    break;
                  }

                  return _context238.abrupt("return");

                case 9:
                  t("setLoading", !0, {
                    root: !0
                  });
                  _context238.next = 12;
                  return Ti.Http.get(e.urls.buyClean, {
                    params: {
                      ticket: n
                    },
                    as: "json"
                  });

                case 12:
                  a = _context238.sent;
                  t("setLoading", !1, {
                    root: !0
                  }), a.ok ? t("setBasket", []) : console.error("www/shop module: Fail to reloadBasket", a);

                case 14:
                case "end":
                  return _context238.stop();
              }
            }
          }, _callee237);
        }))();
      },
      reloadBasket: function reloadBasket(_ref268) {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee238() {
          var t, e, i, n, a;
          return regeneratorRuntime.wrap(function _callee238$(_context239) {
            while (1) {
              switch (_context239.prev = _context239.next) {
                case 0:
                  t = _ref268.commit, e = _ref268.getters, i = _ref268.rootState;
                  n = i.auth.ticket;

                  if (n) {
                    _context239.next = 4;
                    break;
                  }

                  return _context239.abrupt("return");

                case 4:
                  t("setLoading", !0, {
                    root: !0
                  });
                  _context239.next = 7;
                  return Ti.Http.get(e.urls.buyGetAll, {
                    params: {
                      ticket: n
                    },
                    as: "json"
                  });

                case 7:
                  a = _context239.sent;
                  t("setLoading", !1, {
                    root: !0
                  }), a.ok ? t("setBasket", a.data) : console.error("www/shop module: Fail to reloadBasket", a);

                case 9:
                case "end":
                  return _context239.stop();
              }
            }
          }, _callee238);
        }))();
      }
    }
  };
  Ti.Preload("ti/lib/www/mod/shop/www-mod-shop.mjs", t);
}(), Ti.Preload("ti/lib/www/mod/shop/_mod.json", {
  name: "www-mod-shop",
  namespaced: !0,
  state: "./www-mod-shop.json",
  mixins: "./www-mod-shop.mjs"
}), function () {
  var t = {
    getters: {
      routerList: function routerList(t) {
        var e = [];
        return _.forEach(t.router, function () {
          var _ref269 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
              t = _ref269.match,
              _ref269$names = _ref269.names,
              i = _ref269$names === void 0 ? [] : _ref269$names,
              _ref269$page = _ref269.page,
              n = _ref269$page === void 0 ? {} : _ref269$page;

          var a = new RegExp(t);
          e.push(function (t) {
            var e = a.exec(t);

            if (e) {
              var _t209 = {};

              for (var _n33 = 0; _n33 < e.length; _n33++) {
                var _a17 = e[_n33];
                _t209[_n33] = _a17;

                var s = _.nth(i, _n33);

                s && _.set(_t209, s, _a17);
              }

              return Ti.Util.explainObj(_t209, n);
            }
          });
        }), e;
      },
      actions: function actions(t) {
        var e = _.cloneDeep(t.actions);

        e = _.mapValues(e, function (t) {
          return _.isString(t) ? {
            action: t
          } : t;
        });
        var i = t.page;
        return i && _.forEach(i.actions, function (t, i) {
          var n = t;
          _.isString(t) && (n = {
            action: t
          });
          var a = e[i];
          if (_.isArray(a)) {
            if (_.isArray(n)) {
              if (n.length > 0) if ("+" == n[0]) for (var _t210 = 1; _t210 < n.length; _t210++) {
                a.push(n[_t210]);
              } else e[i] = n;
            } else a.push(n);
          } else e[i] = n;
        }), e;
      },
      getUrl: function getUrl(t) {
        return function (e) {
          return Ti.Util.appendPath(t.base, e);
        };
      },
      getApiUrl: function getApiUrl(t) {
        return function (e) {
          return e.startsWith("/") ? e : Ti.Util.appendPath(t.apiBase, e);
        };
      }
    },
    mutations: {
      setSiteId: function setSiteId(t, e) {
        t.siteId = e;
      },
      setDomain: function setDomain(t, e) {
        t.domain = e, t.base = Ti.S.renderBy(t.base || "/www/${domain}/", {
          domain: e
        }), t.apiBase = Ti.S.renderBy(t.apiBase || "/api/${domain}/", {
          domain: e
        });
      },
      setLoading: function setLoading(t, e) {
        t.loading = e;
      }
    },
    actions: {
      navBackward: function navBackward() {
        window.history && window.history.back();
      },
      openUrl: function openUrl(_ref270, _ref271) {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee239() {
          var t, e, _ref271$target, i, _ref271$method, n, _ref271$params, a, _ref271$delay, s;

          return regeneratorRuntime.wrap(function _callee239$(_context240) {
            while (1) {
              switch (_context240.prev = _context240.next) {
                case 0:
                  t = _ref270.state;
                  e = _ref271.url, _ref271$target = _ref271.target, i = _ref271$target === void 0 ? "_self" : _ref271$target, _ref271$method = _ref271.method, n = _ref271$method === void 0 ? "GET" : _ref271$method, _ref271$params = _ref271.params, a = _ref271$params === void 0 ? {} : _ref271$params, _ref271$delay = _ref271.delay, s = _ref271$delay === void 0 ? 0 : _ref271$delay;
                  _context240.next = 4;
                  return Ti.Be.Open(e, {
                    target: i,
                    method: n,
                    params: a,
                    delay: s
                  });

                case 4:
                case "end":
                  return _context240.stop();
              }
            }
          }, _callee239);
        }))();
      },
      navTo: function navTo(_ref272) {
        var _arguments59 = arguments;
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee240() {
          var t, e, _ref273, _ref273$type, i, n, a, s, o, _i49;

          return regeneratorRuntime.wrap(function _callee240$(_context241) {
            while (1) {
              switch (_context241.prev = _context241.next) {
                case 0:
                  t = _ref272.commit, e = _ref272.dispatch;
                  _ref273 = _arguments59.length > 1 && _arguments59[1] !== undefined ? _arguments59[1] : {}, _ref273$type = _ref273.type, i = _ref273$type === void 0 ? "page" : _ref273$type, n = _ref273.value, a = _ref273.anchor, s = _ref273.data, o = _ref273.params;

                  if (!n) {
                    _context241.next = 18;
                    break;
                  }

                  if (!("page" == i)) {
                    _context241.next = 14;
                    break;
                  }

                  t("setLoading", !0);
                  _i49 = Ti.Util.parseHref(n);
                  _i49.anchor = a || _i49.anchor;
                  _i49.params = o || _i49.params;
                  _i49.data = s;
                  _context241.next = 11;
                  return e("page/reload", _i49);

                case 11:
                  t("setLoading", !1);
                  _context241.next = 18;
                  break;

                case 14:
                  _context241.t0 = "dispatch" == i;

                  if (!_context241.t0) {
                    _context241.next = 18;
                    break;
                  }

                  _context241.next = 18;
                  return e(n, o);

                case 18:
                case "end":
                  return _context241.stop();
              }
            }
          }, _callee240);
        }))();
      },
      doAction: function doAction(_ref274, i) {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee241() {
          var t, e, _t211, _e77, _iterator110, _step110, n, _iterator111, _step111, _t212;

          return regeneratorRuntime.wrap(function _callee241$(_context242) {
            while (1) {
              switch (_context242.prev = _context242.next) {
                case 0:
                  t = _ref274.state, e = _ref274.dispatch;

                  if (!i) {
                    _context242.next = 29;
                    break;
                  }

                  if (!_.isFunction(i)) {
                    _context242.next = 6;
                    break;
                  }

                  _context242.next = 5;
                  return i();

                case 5:
                  return _context242.abrupt("return", _context242.sent);

                case 6:
                  if (_.isArray(i) && 2 == i.length) {
                    _t211 = i[0], _e77 = i[1];
                    if (_.isUndefined(_e77) || _.isArray(_e77) || (_e77 = [_e77]), _.isFunction(_t211)) i = {
                      action: _t211,
                      args: _e77
                    };else if (_.isArray(_t211)) {
                      i = [];
                      _iterator110 = _createForOfIteratorHelper(_t211);

                      try {
                        for (_iterator110.s(); !(_step110 = _iterator110.n()).done;) {
                          n = _step110.value;
                          i.push(_.assign({}, n, {
                            args: _e77
                          }));
                        }
                      } catch (err) {
                        _iterator110.e(err);
                      } finally {
                        _iterator110.f();
                      }
                    } else i = _.assign({}, _t211, {
                      args: _e77
                    });
                  }

                  if (!(_.isString(i) && (i = {
                    action: i
                  }), _.isArray(i))) {
                    _context242.next = 27;
                    break;
                  }

                  _iterator111 = _createForOfIteratorHelper(i);
                  _context242.prev = 9;

                  _iterator111.s();

                case 11:
                  if ((_step111 = _iterator111.n()).done) {
                    _context242.next = 17;
                    break;
                  }

                  _t212 = _step111.value;
                  _context242.next = 15;
                  return e("runAction", _t212);

                case 15:
                  _context242.next = 11;
                  break;

                case 17:
                  _context242.next = 22;
                  break;

                case 19:
                  _context242.prev = 19;
                  _context242.t0 = _context242["catch"](9);

                  _iterator111.e(_context242.t0);

                case 22:
                  _context242.prev = 22;

                  _iterator111.f();

                  return _context242.finish(22);

                case 25:
                  _context242.next = 29;
                  break;

                case 27:
                  _context242.next = 29;
                  return e("runAction", i);

                case 29:
                case "end":
                  return _context242.stop();
              }
            }
          }, _callee241, null, [[9, 19, 22, 25]]);
        }))();
      },
      runAction: function runAction(_ref275) {
        var _arguments60 = arguments;
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee242() {
          var t, e, _ref276, i, n, a, s, _e78;

          return regeneratorRuntime.wrap(function _callee242$(_context243) {
            while (1) {
              switch (_context243.prev = _context243.next) {
                case 0:
                  t = _ref275.state, e = _ref275.dispatch;
                  _ref276 = _arguments60.length > 1 && _arguments60[1] !== undefined ? _arguments60[1] : {}, i = _ref276.action, n = _ref276.payload, a = _ref276.args;

                  if (i) {
                    _context243.next = 4;
                    break;
                  }

                  return _context243.abrupt("return");

                case 4:
                  a = a || [];
                  if (_.isUndefined(n) || _.isNull(n)) s = _.cloneDeep(_.nth(a, 0));else {
                    _e78 = _.assign({}, t, {
                      $args: a
                    });
                    s = Ti.Util.explainObj(_e78, n, {
                      evalFunc: !1
                    });
                  }

                  if (!_.isFunction(i)) {
                    _context243.next = 11;
                    break;
                  }

                  _context243.next = 9;
                  return i(s);

                case 9:
                  _context243.next = 13;
                  break;

                case 11:
                  _context243.next = 13;
                  return e(i, s);

                case 13:
                case "end":
                  return _context243.stop();
              }
            }
          }, _callee242);
        }))();
      },
      invokeAction: function invokeAction(_ref277) {
        var _arguments61 = arguments;
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee243() {
          var t, e, _ref278, _ref278$name, i, _ref278$args, n, a, s, _t213, _t214, _t215, _e79, _i50, _iterator112, _step112, _t216;

          return regeneratorRuntime.wrap(function _callee243$(_context244) {
            while (1) {
              switch (_context244.prev = _context244.next) {
                case 0:
                  t = _ref277.getters, e = _ref277.dispatch;
                  _ref278 = _arguments61.length > 1 && _arguments61[1] !== undefined ? _arguments61[1] : {}, _ref278$name = _ref278.name, i = _ref278$name === void 0 ? "" : _ref278$name, _ref278$args = _ref278.args, n = _ref278$args === void 0 ? [] : _ref278$args;
                  a = t.actions, s = _.get(a, i);

                  if (s) {
                    _context244.next = 12;
                    break;
                  }

                  _t213 = _.split(i, "::");

                case 5:
                  if (!(_t213.length > 1)) {
                    _context244.next = 12;
                    break;
                  }

                  _t214 = _t213, _t215 = _toArray(_t214), _e79 = _t215.slice(1), _i50 = _e79.join("::");

                  if (!(s = _.get(a, _i50))) {
                    _context244.next = 9;
                    break;
                  }

                  return _context244.abrupt("break", 12);

                case 9:
                  _t213 = _e79;

                case 10:
                  _context244.next = 5;
                  break;

                case 12:
                  if (!s) {
                    _context244.next = 46;
                    break;
                  }

                  _context244.prev = 13;

                  if (!_.isArray(s)) {
                    _context244.next = 34;
                    break;
                  }

                  _iterator112 = _createForOfIteratorHelper(s);
                  _context244.prev = 16;

                  _iterator112.s();

                case 18:
                  if ((_step112 = _iterator112.n()).done) {
                    _context244.next = 24;
                    break;
                  }

                  _t216 = _step112.value;
                  _context244.next = 22;
                  return e("doAction", {
                    action: _t216.action,
                    payload: _t216.payload,
                    args: n
                  });

                case 22:
                  _context244.next = 18;
                  break;

                case 24:
                  _context244.next = 29;
                  break;

                case 26:
                  _context244.prev = 26;
                  _context244.t0 = _context244["catch"](16);

                  _iterator112.e(_context244.t0);

                case 29:
                  _context244.prev = 29;

                  _iterator112.f();

                  return _context244.finish(29);

                case 32:
                  _context244.next = 41;
                  break;

                case 34:
                  if (!_.isString(s)) {
                    _context244.next = 39;
                    break;
                  }

                  _context244.next = 37;
                  return e("doAction", {
                    action: s,
                    args: n
                  });

                case 37:
                  _context244.next = 41;
                  break;

                case 39:
                  _context244.next = 41;
                  return e("doAction", {
                    action: s.action,
                    payload: s.payload,
                    args: n
                  });

                case 41:
                  _context244.next = 46;
                  break;

                case 43:
                  _context244.prev = 43;
                  _context244.t1 = _context244["catch"](13);
                  console.error(_context244.t1);

                case 46:
                case "end":
                  return _context244.stop();
              }
            }
          }, _callee243, null, [[13, 43], [16, 26, 29, 32]]);
        }))();
      },
      reload: function reload(_ref279) {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee244() {
          var t, e, i, n, a;
          return regeneratorRuntime.wrap(function _callee244$(_context245) {
            while (1) {
              switch (_context245.prev = _context245.next) {
                case 0:
                  t = _ref279.state, e = _ref279.commit, i = _ref279.dispatch;
                  n = Ti.Util.parseHref(window.location.href);
                  e("auth/mergePaths", t.authPaths);
                  a = t.entry;
                  n.path.startsWith(t.base) && (a = n.path.substring(t.base.length) || a);
                  _context245.next = 7;
                  return i("navTo", {
                    type: "page",
                    value: a,
                    params: n.params,
                    anchor: n.hash,
                    pushHistory: !1
                  });

                case 7:
                case "end":
                  return _context245.stop();
              }
            }
          }, _callee244);
        }))();
      }
    }
  };
  Ti.Preload("ti/lib/www/mod/www-mod-site.mjs", t);
}(), Ti.Preload("/a/load/wn.manager/gui/layout.json", {
  desktop: {
    type: "rows",
    border: !0,
    blocks: [{
      name: "sky",
      size: 48,
      type: "rows",
      border: !0,
      blocks: [{
        type: "cols",
        blocks: [{
          name: "logo",
          size: "auto",
          body: "pcSkyLogo"
        }, {
          name: "title",
          size: "stretch",
          body: "pcSkyTitle"
        }, {
          name: "session",
          size: "auto",
          body: "pcSkySession"
        }, {
          name: "menu",
          size: "auto",
          body: "pcSkyMenu"
        }]
      }]
    }, {
      name: "main",
      size: "100px",
      flex: "both",
      type: "cols",
      border: !0,
      blocks: [{
        name: "sidebar",
        size: "1.8rem",
        body: "pcMainSideBar"
      }, {
        name: "arena",
        size: "stretch",
        body: "pcMainArena"
      }]
    }, {
      name: "footer",
      size: ".32rem",
      body: "pcFooter"
    }]
  },
  tablet: "desktop",
  phone: "desktop"
}), Ti.Preload("/a/load/wn.manager/gui/schema.json", {
  pcSkyLogo: {
    comType: "ti-icon",
    comConf: {
      width: "3em",
      fontSize: "1.5em",
      value: "=Logo"
    }
  },
  pcSkyTitle: {
    comType: "ti-crumb",
    comConf: "=Crumb"
  },
  pcSkySession: {
    comType: "wn-session-badge",
    comConf: "=SessionBadge"
  },
  pcSkyMenu: {
    comType: "ti-actionbar",
    comConf: "=ActionMenu"
  },
  pcMainSideBar: {
    comType: "wn-gui-side-nav",
    comConf: {
      items: "=sidebar",
      highlightItemId: "=MetaId",
      highlightItemPath: "=MetaPath"
    }
  },
  pcMainArena: {
    comType: "=comType",
    comConf: "=Arena"
  },
  pcFooter: {
    comType: "wn-gui-footer",
    comConf: "=Footer"
  }
}), Ti.Preload("/a/load/wn.manager/gui/setup.json", {
  shown: {
    desktop: {
      logo: "==theLogo",
      menu: "==theMenu",
      sessionBadge: "==theSessionBadge"
    },
    tablet: {},
    phone: {}
  },
  canLoading: !0,
  loadingAs: !1,
  firstCrumbIndex: 1,
  logo: "<:home>"
}), function () {
  var t = {
    Logo: function Logo() {
      if ("<:home>" == this.setup.logo) {
        var _t217 = _.nth(this.CrumbData, 0);

        return _t217 ? _t217.icon : null;
      }

      return this.setup.logo;
    },
    CrumbData: function CrumbData() {
      var _this288 = this;

      return Wn.Obj.evalCrumbData({
        meta: this.meta,
        ancestors: this.ancestors,
        fromIndex: this.setup.firstCrumbIndex,
        homePath: this.setup.skyHomePath,
        self: function self(t) {
          t.asterisk = _this288.isChanged;
        }
      });
    },
    Crumb: function Crumb() {
      var t = _.cloneDeep(this.CrumbData);

      return this.Logo && !_.isEmpty(t) && (t[0].icon = null), {
        data: t
      };
    },
    SessionBadge: function SessionBadge() {
      var t = _.get(this.session, "me");

      if (t) return {
        me: t,
        avatarKey: "thumb",
        avatarSrc: null,
        loginIcon: 1 == t.sex ? "im-user-male" : "im-user-female",
        nameKeys: "nickname|nm"
      };
    },
    ActionMenu: function ActionMenu() {
      if (_.isArray(this.actions) && !_.isEmpty(this.actions)) return {
        className: "wn-".concat(this.viewportMode, "-menu"),
        items: this.actions,
        status: this.TheStatus,
        delay: 500
      };
    },
    Arena: function Arena() {
      if (this.hasView) {
        var _t218 = Ti.App(this),
            e = Ti.Util.explainObj(this, this.comConf) || {
          meta: this.meta,
          content: this.content,
          data: this.data,
          status: this.status
        };

        return e.onInit = function () {
          _t218.$vmMain(this);
        }, e;
      }
    },
    Footer: function Footer() {
      return {
        infoIcon: this.comIcon,
        infoText: this.comType,
        message: this.myMessage || this.StatusText,
        indicator: this.myIndicator
      };
    }
  };
  Ti.Preload("/a/load/wn.manager/wn-manager-computed.mjs", t);
}(), function () {
  var t = {
    reloadMain: function reloadMain() {
      var _this289 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee245() {
        var t, e, i, n, _a18, s, o;

        return regeneratorRuntime.wrap(function _callee245$(_context246) {
          while (1) {
            switch (_context246.prev = _context246.next) {
              case 0:
                t = _this289.meta;

                if (t) {
                  _context246.next = 5;
                  break;
                }

                _context246.next = 4;
                return Ti.Toast.Open("i18n:wn-manager-no-meta", "warn");

              case 4:
                return _context246.abrupt("return", _context246.sent);

              case 5:
                if (!_this289.isLoading) {
                  _context246.next = 10;
                  break;
                }

                console.log("!!!");
                _context246.next = 9;
                return Ti.Toast.Open("i18n:wn-manager-is-loading", "warn");

              case 9:
                return _context246.abrupt("return", _context246.sent);

              case 10:
                _this289.loading = !0, _this289.comType = "ti-loading", _this289.comConf = {};
                _context246.prev = 11;
                if (_this289.view && _this289.view.modType) try {
                  _this289.$store.unregisterModule("main");
                } catch (t) {
                  console.error("Error when unregisterModule", t);
                }
                i = /^#!(.+)$/.exec(window.location.hash), n = i ? i[1] : null;
                e = n ? "ti views -cqn -name '".concat(n, "'") : "ti views -cqn id:".concat(t.id);
                _context246.next = 17;
                return Wn.Sys.exec2(e, {
                  as: "json"
                });

              case 17:
                _a18 = _context246.sent;
                s = Ti.App(_this289);
                _context246.next = 21;
                return s.loadView(_a18);

              case 21:
                o = _context246.sent;
                Ti.IsInfo("app/wn.manager") && console.log("TiView Loaded:", o);
                _context246.t0 = o && o.modType;

                if (!_context246.t0) {
                  _context246.next = 28;
                  break;
                }

                _this289.$store.registerModule("main", o.mod);

                _context246.next = 28;
                return s.dispatch("main/reload", t);

              case 28:
                _this289.comType = o.comName;
                _this289.comIcon = o.comIcon;
                _this289.comConf = o.comConf;
                _this289.view = o;
                _this289.myMessage = null;
                _this289.myIndicator = null;

                _this289.OnUpdateActions(o.actions);

              case 35:
                _context246.prev = 35;
                _this289.loading = !1;
                return _context246.finish(35);

              case 38:
              case "end":
                return _context246.stop();
            }
          }
        }, _callee245, null, [[11,, 35, 38]]);
      }))();
    },
    reloadAncestors: function reloadAncestors() {
      var _this290 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee246() {
        return regeneratorRuntime.wrap(function _callee246$(_context247) {
          while (1) {
            switch (_context247.prev = _context247.next) {
              case 0:
                _context247.t0 = _this290.hasMeta;

                if (!_context247.t0) {
                  _context247.next = 6;
                  break;
                }

                _context247.next = 4;
                return Wn.Io.loadAncestors("id:" + _this290.MetaId);

              case 4:
                _this290.ancestors = _context247.sent;
                _this290.parent = _.last(_this290.ancestors);

              case 6:
              case "end":
                return _context247.stop();
            }
          }
        }, _callee246);
      }))();
    },
    reloadSidebar: function reloadSidebar() {
      var _this291 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee247() {
        var t;
        return regeneratorRuntime.wrap(function _callee247$(_context248) {
          while (1) {
            switch (_context248.prev = _context248.next) {
              case 0:
                _context248.next = 2;
                return Wn.Sys.exec("ti sidebar -cqn", {
                  as: "json"
                });

              case 2:
                t = _context248.sent;
                _this291.sidebar = t.sidebar;

              case 4:
              case "end":
                return _context248.stop();
            }
          }
        }, _callee247);
      }))();
    },
    pushHistory: function pushHistory(t) {
      var e = window.history;

      if (e && t) {
        if (e.state && e.state.id == t.id) return;
        var i = Wn.Util.getAppLink(t.id),
            n = Wn.Util.getObjDisplayName(t);
        Ti.IsInfo("app/wn-manager") && console.log(n, "->", i), e.pushState(t, n, i), document.title = Ti.I18n.text(n);
      }
    }
  };
  Ti.Preload("/a/load/wn.manager/wn-manager-methods.mjs", t);
}(), Ti.Preload("/a/load/wn.manager/wn-manager.html", '<ti-gui\n  class="wn-manager"\n  :class="TopClass"\n  :layout="GuiLayout"\n  :schema="GuiSchema"\n  :shown="GuiShown"\n  :can-loading="GuiCanLoading"\n  :loading-as="GuiLoadingAs"\n  @arena::expose-hidden="OnExposeHidden"\n  @do:logout="OnLogout"\n  @item:active="OnCurrentMetaChange"\n  @arena::open="OnCurrentMetaChange"\n  @arena::change="OnCurrentDataChange"\n  @arena::actions:update="OnUpdateActions"\n  @arena::indicate="OnArenaIndicate"\n  @arena::message="OnArenaMessage"/>'), function () {
  var t = {
    provide: function provide() {
      return {
        $session: {
          ticket: this.session.ticket,
          userId: this.session.uid,
          userName: this.session.unm,
          group: this.session.grp
        },
        $vars: this.vars
      };
    },
    data: function data() {
      return {
        myExposeHidden: !1,
        loading: !1,
        comIcon: "zmdi-hourglass-alt",
        comType: "ti-loading",
        comConf: {},
        actions: [],
        sidebar: [],
        ancestors: [],
        parent: null,
        view: null,
        myMessage: null,
        myIndicator: null
      };
    },
    computed: {
      TopClass: function TopClass() {
        return this.getTopClass({
          "is-current-as-home": this.CurrentIsHome,
          "is-current-no-home": !this.CurrentIsHome
        }, this.appClassName);
      },
      isLoading: function isLoading() {
        return this.loading || this.isReloading;
      },
      isChanged: function isChanged() {
        var t = this.$store.state.main;
        return !!_.get(t, "status.changed") || _.get(this.status, "changed");
      },
      isSaving: function isSaving() {
        return _.get(this.status, "saving");
      },
      isReloading: function isReloading() {
        return _.get(this.status, "reloading");
      },
      hasActions: function hasActions() {
        return !_.isEmpty(this.actions);
      },
      hasView: function hasView() {
        return !!this.view;
      },
      hasMeta: function hasMeta() {
        return !!this.meta;
      },
      hasParent: function hasParent() {
        return !!this.parent;
      },
      MetaId: function MetaId() {
        return _.get(this.meta, "id");
      },
      MetaPath: function MetaPath() {
        return _.get(this.meta, "ph");
      },
      MyHome: function MyHome() {
        var t = this.meta,
            e = this.ancestors;

        if (_.isEmpty(e)) {
          if (t && "root" == t.nm) return t;
        } else {
          if (1 == e.length && "home" == e[0].nm) return t;
          if ("home" == e[0].nm) return e[1];
        }

        return null;
      },
      MyHomeId: function MyHomeId() {
        return _.get(this.MyHome, "id");
      },
      ParentIsHome: function ParentIsHome() {
        return this.hasParent && this.parent.id == this.MyHomeId;
      },
      CurrentIsHome: function CurrentIsHome() {
        return this.hasMeta && this.MetaId == this.MyHomeId;
      },
      TheStatus: function TheStatus() {
        var t = _.get(this.$store.state, "main.status"),
            e = _.get(t, "reloading") || this.status.reloading;

        return _.assign({}, t, this.status, {
          exposeHidden: this.myExposeHidden,
          changed: this.isChanged,
          reloading: e
        });
      },
      StatusText: function StatusText() {
        var t = _.assign({}, this.status);

        return t.saving ? Ti.I18n.text("i18n:saving") : t.reloading ? Ti.I18n.text("i18n:loading") : void 0;
      },
      Main: function Main() {
        return this.$store.state.main;
      },
      GuiShown: function GuiShown() {
        var t = _.get(this.setup, "shown");

        if (_.isPlainObject(t)) {
          var e = t[this.viewportMode];
          return _.isString(e) && (e = t[e]), _.isString(e) && (e = t[e]), Ti.Util.explainObj(this, e);
        }

        return {};
      },
      GuiCanLoading: function GuiCanLoading() {
        return _.get(this.setup, "canLoading");
      },
      GuiLoadingAs: function GuiLoadingAs() {
        return _.get(this.setup, "loadingAs");
      },
      GuiLayout: function GuiLayout() {
        return Ti.Util.explainObj(this, this.layout);
      },
      GuiSchema: function GuiSchema() {
        return Ti.Util.explainObj(this, this.schema);
      }
    },
    methods: {
      OnExposeHidden: function OnExposeHidden(t) {
        this.myExposeHidden = t;
      },
      OnLogout: function OnLogout() {
        this.doLogout();
      },
      OnCurrentMetaChange: function OnCurrentMetaChange() {
        var _ref280 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref280.id,
            e = _ref280.path,
            i = _ref280.value;

        this.openView(t || e || i);
      },
      OnCurrentDataChange: function OnCurrentDataChange(t) {
        Ti.App(this).dispatch("current/changeContent", t);
      },
      OnUpdateActions: function OnUpdateActions(t) {
        this.actions = _.cloneDeep(t), Ti.App(this).reWatchShortcut(t);
      },
      OnArenaIndicate: function OnArenaIndicate(t) {
        this.myIndicator = t;
      },
      OnArenaMessage: function OnArenaMessage() {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
        this.myMessage = t;
      },
      doCheckDomainObjThumb: function doCheckDomainObjThumb() {
        var t = "hookx @query 'd0:\"home\",d1:\"".concat(Wn.Session.getMyGroup(), "\",thumb_src:null,mime:\"^image\"' @invoke write -v");
        Wn.OpenCmdPanel(t);
      },
      openView: function openView(t) {
        var _this292 = this;

        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee248() {
          var e;
          return regeneratorRuntime.wrap(function _callee248$(_context249) {
            while (1) {
              switch (_context249.prev = _context249.next) {
                case 0:
                  if (_.isString(t)) {
                    _context249.next = 2;
                    break;
                  }

                  return _context249.abrupt("return");

                case 2:
                  _context249.next = 4;
                  return Ti.Fuse.fire();

                case 4:
                  if (_context249.sent) {
                    _context249.next = 6;
                    break;
                  }

                  return _context249.abrupt("return");

                case 6:
                  e = Wn.Io.isFullObjId(t) ? "id:".concat(t) : t;
                  _context249.next = 9;
                  return Ti.App(_this292).dispatch("current/reload", e);

                case 9:
                case "end":
                  return _context249.stop();
              }
            }
          }, _callee248);
        }))();
      },
      doLogout: function doLogout() {
        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee249() {
          var t, e;
          return regeneratorRuntime.wrap(function _callee249$(_context250) {
            while (1) {
              switch (_context250.prev = _context250.next) {
                case 0:
                  t = Wn.Session.env("QUIT") || "/a/login/";
                  _context250.next = 3;
                  return Ti.Http.get("/a/sys_logout", {
                    params: {
                      ajax: !0
                    }
                  });

                case 3:
                  e = _context250.sent;
                  console.log(e), Ti.Be.Open(t, {
                    target: "_self",
                    delay: 0
                  });

                case 5:
                case "end":
                  return _context250.stop();
              }
            }
          }, _callee249);
        }))();
      }
    },
    watch: {
      meta: function () {
        var _meta = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee250(t, e) {
          var i, n, a;
          return regeneratorRuntime.wrap(function _callee250$(_context251) {
            while (1) {
              switch (_context251.prev = _context251.next) {
                case 0:
                  i = _.get(t, "id"), n = _.get(e, "id"), a = _.isEqual(i, n);
                  _context251.t0 = t;

                  if (!_context251.t0) {
                    _context251.next = 12;
                    break;
                  }

                  _context251.t1 = a;

                  if (_context251.t1) {
                    _context251.next = 7;
                    break;
                  }

                  _context251.next = 7;
                  return this.reloadAncestors();

                case 7:
                  _context251.t2 = a && !this.isChanged;

                  if (_context251.t2) {
                    _context251.next = 12;
                    break;
                  }

                  _context251.next = 11;
                  return this.reloadMain();

                case 11:
                  this.pushHistory(t);

                case 12:
                case "end":
                  return _context251.stop();
              }
            }
          }, _callee250, this);
        }));

        function meta(_x20, _x21) {
          return _meta.apply(this, arguments);
        }

        return meta;
      }()
    },
    mounted: function () {
      var _mounted17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee251() {
        return regeneratorRuntime.wrap(function _callee251$(_context252) {
          while (1) {
            switch (_context252.prev = _context252.next) {
              case 0:
                _context252.next = 2;
                return this.reloadSidebar();

              case 2:
              case "end":
                return _context252.stop();
            }
          }
        }, _callee251, this);
      }));

      function mounted() {
        return _mounted17.apply(this, arguments);
      }

      return mounted;
    }(),
    beforeDestroy: function beforeDestroy() {}
  };
  Ti.Preload("/a/load/wn.manager/wn-manager.mjs", t);
}(), Ti.Preload("ti/i18n/en-us/hmaker.i18n.json", {
  "com-form": "表单",
  "com-label": "标签",
  "com-list": "列表",
  "hm-type-Array": "数组",
  "hm-type-Boolean": "布尔",
  "hm-type-Group": "字段分组",
  "hm-type-Integer": "整数",
  "hm-type-Number": "数字",
  "hm-type-Object": "对象",
  "hm-type-String": "文本",
  "hm-type-icons": {
    Array: "Zmdi-format-list-bulleted",
    Boolean: "Zmdi-toll",
    Group: "Zmdi-collection-bookmark",
    Integer: "Zmdi-n-6-square",
    Number: "Zmdi-input-svideo",
    Object: "Zmdi-toys",
    String: "Zmdi-translate"
  },
  "hmaker-com-conf-blank": "请选择一个控件设置其详情",
  "hmaker-com-type-blank": "选择一个控件",
  "hmaker-edit-form-del-group-all": "组以及全部字段",
  "hmaker-edit-form-del-group-confirm": "您是要删除组以及其内的全部字段，还是仅是组？",
  "hmaker-edit-form-del-group-only": "仅是组",
  "hmaker-edit-form-field-nil": "请选择一个字段编辑详情",
  "hmaker-edit-form-new-field": "新字段",
  "hmaker-edit-form-new-field-e0": "字段名不能以数字开头，内容只能为小写英文字母数字和下划线",
  "hmaker-edit-form-new-field-e1": "字段【${val}】已存在，请另选一个名称",
  "hmaker-edit-form-new-field-tip": "请输入新字段名（只能为小写英文字母数字和下划线）",
  "hmaker-edit-form-new-group": "新分组",
  "hmaker-edit-form-new-group-tip": "请输入新分组名",
  "hmaker-edit-form-nil-field": "请先选择一个字段",
  "hmaker-edit-form-not-current": "请选择一个字段或者字段组",
  "hmaker-layout-cols": "列布局",
  "hmaker-layout-rows": "行布局",
  "hmaker-layout-tabs": "标签布局",
  "hmaker-nav-blank-item": "请选择一个导航项目编辑",
  "hmaker-nav-k-display": "链接显示内容",
  "hmaker-nav-k-icon": "链接图标",
  "hmaker-nav-k-title": "链接文字",
  "hmaker-nav-k-type": "链接类型",
  "hmaker-nav-k-value": "链接目标",
  "hmaker-nav-tp-dispatch": "方法调用",
  "hmaker-nav-tp-href": "外部链接",
  "hmaker-nav-tp-page": "站点页面",
  "hmaker-site-k-apiBase": "接口路径",
  "hmaker-site-k-base": "资源路径",
  "hmaker-site-k-captcha": "验证码路径",
  "hmaker-site-k-domain": "所属域",
  "hmaker-site-k-entry": "着陆页",
  "hmaker-site-prop": "站点属性",
  "hmaker-site-state": "站点全局配置",
  "hmaker-site-state-actions": "全局动作表",
  "hmaker-site-state-apis": "接口集",
  "hmaker-site-state-blocks": "预定义布局",
  "hmaker-site-state-general": "通用配置",
  "hmaker-site-state-nav": "全局导航条",
  "hmaker-site-state-router": "页面路由",
  "hmaker-site-state-schema": "预定义控件",
  "hmaker-site-state-utils": "扩展函数",
  "hmaker-site-tree": "站点结构",
  "hmaker-site-tree-loading": "正在加载站点结构...",
  "hmk-adjustDelay": "调整延迟",
  "hmk-aspect": "外观",
  "hmk-autoI18n": "国际化",
  "hmk-behavior": "行为",
  "hmk-blankAs": "空白样式",
  "hmk-breakLine": "维持换行",
  "hmk-currentTab": "当前标签",
  "hmk-data": "数据",
  "hmk-dict": "数据字典",
  "hmk-editable": "可编辑",
  "hmk-field-checkEquals": "检查相等",
  "hmk-field-com": "编辑控件",
  "hmk-field-defaultAs": "默认值",
  "hmk-field-disabled": "失效条件",
  "hmk-field-height": "高度",
  "hmk-field-hidden": "隐藏条件",
  "hmk-field-icon": "图标",
  "hmk-field-name": "键名",
  "hmk-field-serializer": "自定义保存",
  "hmk-field-tip": "提示说明",
  "hmk-field-title": "显示名",
  "hmk-field-transformer": "自定义转换",
  "hmk-field-type": "类型",
  "hmk-field-width": "宽度",
  "hmk-fieldStatus": "字段状态",
  "hmk-fields": "字段",
  "hmk-fields-advance": "高级",
  "hmk-fields-general": "基本",
  "hmk-form-data": "数据源",
  "hmk-form-height": "表单高度",
  "hmk-form-onlyFields": "仅声明字段",
  "hmk-form-width": "表单宽度",
  "hmk-format": "格式化",
  "hmk-height": "控件高度",
  "hmk-href": "超链接",
  "hmk-icon": "表单图标",
  "hmk-measure": "尺寸",
  "hmk-mode": "显示方式",
  "hmk-mode-all": "全部",
  "hmk-mode-tab": "标签",
  "hmk-newTab": "新窗口",
  "hmk-placeholder": "占位文本",
  "hmk-prefixIcon": "前缀图标",
  "hmk-prefixText": "前缀文字",
  "hmk-spacing": "间距",
  "hmk-spacing-comfy": "舒适",
  "hmk-spacing-tiny": "紧凑",
  "hmk-suffixIcon": "后缀图标",
  "hmk-suffixText": "后缀文字",
  "hmk-tabAt": "标签位置",
  "hmk-tabAt-bottom-center": "下部居中",
  "hmk-tabAt-bottom-left": "下部居左",
  "hmk-tabAt-bottom-right": "下部居右",
  "hmk-tabAt-top-center": "上部居中",
  "hmk-tabAt-top-left": "上部居左",
  "hmk-tabAt-top-right": "上部居右",
  "hmk-title": "表单标题",
  "hmk-trimed": "修剪空白",
  "hmk-value": "输入值",
  "hmk-valueMaxWidth": "值最大宽度",
  "hmk-width": "控件宽度"
}), Ti.Preload("ti/i18n/en-us/ti-datetime.i18n.json", {
  Apr: "April",
  Aug: "August",
  Dec: "December",
  Feb: "February",
  Fri: "Fri",
  Friday: "Friday",
  Jan: "January",
  Jul: "July",
  Jun: "June",
  Mar: "March",
  May: "May",
  Mon: "Mon",
  Monday: "Monday",
  Nov: "November",
  Oct: "October",
  Sat: "Sat",
  Saturday: "Saturday",
  Sep: "September",
  Sun: "Sun",
  Sunday: "Sunday",
  Thu: "Thu",
  Thursday: "Thursday",
  Tue: "Tue",
  Tuesday: "Tuesday",
  Wed: "Wed",
  Wednesday: "Wednesday",
  "blank-date": "Select a date",
  "blank-date-range": "Select a date range",
  "blank-datetime": "Select datetime",
  "blank-month": "Select month",
  "blank-time": "Select time",
  "blank-time-range": "Select a time range",
  cal: {
    abbr: {
      Apr: "Apr",
      Aug: "Aug",
      Dec: "Dec",
      Feb: "Feb",
      Jan: "Jan",
      Jul: "Jul",
      Jun: "Jun",
      Mar: "Mar",
      May: "May",
      Nov: "Nov",
      Oct: "Oct",
      Sep: "Sep"
    },
    "d-range-beyond-days": "${yy0}-${MM0}-${dd0} to ${dd1}",
    "d-range-beyond-months": "${yy0}-${MM0}-${dd0} to ${MM1}-${dd1}",
    "d-range-beyond-years": "${yy0}-${MM0}-${dd0} to ${yy1}-${MM1}-${dd1}",
    "d-range-in-same-day": "${yy0}-${MM0}-${dd0} whole day",
    "m-range-beyond-months": "${yy0}-${MT0} to ${MT1}",
    "m-range-beyond-years": "${yy0}-${MT0} to ${yy1}-${MT1}",
    week: ["S", "M", "T", "W", "T", "F", "S"]
  },
  "du-in-min": "${n}Min",
  time: {
    "any-time": "yyyy-M-d",
    "in-year": "M-dd",
    "past-in-min": "Just now",
    "past-in-hour": "In ${min}mins",
    "past-in-day": "In ${hour}hours",
    "past-in-week": "In ${day}days",
    "future-in-min": "Soon",
    "future-in-hour": "After ${min}mins",
    "future-in-day": "After ${hour}hours",
    "future-in-week": "After ${day}days"
  },
  "time-begin": "Begin Time",
  "time-end": "End Time",
  today: "Today"
}), Ti.Preload("ti/i18n/en-us/ti-text-editor.i18n.json", {
  "wordp-h0": "Main",
  "wordp-h1": "Heading 1",
  "wordp-h2": "Heading 2",
  "wordp-h3": "Heading 3",
  "wordp-h4": "Heading 4",
  "wordp-h5": "Heading 5",
  "wordp-h6": "Heading 6",
  "wordp-heading": "Heading levels",
  "wordp-link": "Hyperlink",
  "wordp-nil-sel": "Please select a paragraph first"
}), Ti.Preload("ti/i18n/en-us/ti-text-json.i18n.json", {
  "json-Array": "Array",
  "json-Boolean": "Boolean",
  "json-Float": "Decimal",
  "json-Integer": "Integer",
  "json-Nil": "Nil",
  "json-Number": "Number",
  "json-Object": "Object",
  "json-String": "String",
  "json-new-key": "Enter a new key"
}), Ti.Preload("ti/i18n/en-us/web.i18n.json", {
  account: "Account",
  "account-flt-tip": "Filter by account name",
  "account-manage": "Accounts",
  "account-meta": "Account properties",
  "account-meta-tip": "Choose an account for detail",
  "address-consignee": "Consignee",
  "address-empty-list": "No shipping address",
  "address-flt-tip": "Filter by address name",
  "address-is-dft": "Default shipping address",
  "address-k-area": "Area",
  "address-k-city": "City",
  "address-k-code": "Addr code",
  "address-k-code-tip": "Your postcode",
  "address-k-consignee": "Consignee",
  "address-k-country": "Country",
  "address-k-dftaddr": "Default address",
  "address-k-door": "Door",
  "address-k-email": "Email",
  "address-k-phone": "Phone",
  "address-k-postcode": "Postcode",
  "address-k-province": "Province",
  "address-k-street": "Street",
  "address-k-title": "Address",
  "address-k-tp": "Addr Type",
  "address-k-tp-s": "SELLER",
  "address-k-tp-u": "USER",
  "address-k-uid": "User",
  "address-k-uid-tip": "Filter by username",
  "address-meta": "Address properties",
  "address-nil": "Address blank",
  "address-nil-detail": "Select an address for details",
  "address-rm-confirm": "Are you sure you want to delete this address?",
  "address-set-dft": "Set as default address",
  "address-shipping-add": "Add shipping address",
  "admin-flt-tip": "Filter by admin name",
  "admin-meta": "Admin properties",
  "admin-new": "New admin",
  "admin-nickname": "Admin nickname",
  "admin-no-detail": "Select an admin for detail",
  "ar-cate": "Catetory",
  "ar-content": "Content",
  "ar-flt-tip": "Filter by article title",
  "ar-meta": "Article property",
  "ar-new": "New article",
  "ar-title": "Title",
  "auth-bind": "Bind",
  "auth-bind-email-title": "Bind email",
  "auth-bind-phone-title": "Bind phone",
  "auth-blank-email": "Blank email address not allowed",
  "auth-blank-name": "Blank name not allowed",
  "auth-blank-name-passwd": "Blank name or password",
  "auth-blank-phone": "Blank phone number not allowd",
  "auth-doing": "Verifying",
  "auth-email-tip": "Email address",
  "auth-email-title": "Sign by email",
  "auth-email-vcode": "Email password",
  "auth-email-vcode-get": "Get email password",
  "auth-go-email": "Sign by email",
  "auth-go-passwd": "Sign in by password",
  "auth-go-phone": "Sign by sms",
  "auth-login": "Sign in",
  "auth-login-NoSaltedPasswd": "Please switch to sign by [${ta?password}]，after sign in, go to [profile > reset password] to setup your password, thanks.",
  "auth-login-or-signup": "Sign up or sign in",
  "auth-logout-confirm": "Are you sure you want to log out?",
  "auth-ok": "Verify successful",
  "auth-passwd-getback": "Retrieve password",
  "auth-passwd-name-email-tip": "Email/Name",
  "auth-passwd-name-phone-tip": "Phone/Name",
  "auth-passwd-tip": "Password",
  "auth-passwd-title": "Sign in by password",
  "auth-phone-tip": "Phone number",
  "auth-phone-title": "Sign by sms",
  "auth-phone-vcode": "SMS password",
  "auth-phone-vcode-get": "Get sms password",
  "auth-reset-passwd": "Reset password ...",
  "auth-reset-passwd-again": "Reset password again",
  "auth-reset-passwd-btn-lack": "Lack information",
  "auth-reset-passwd-btn-ready": "Reset password",
  "auth-reset-passwd-btn-short": "Password too short (at least 6 chars)",
  "auth-reset-passwd-btn-unmatch": "The password is not consistent",
  "auth-reset-passwd-by-email": "Reset password by email",
  "auth-reset-passwd-by-email-sent": "The email password has been sent to your registered email address ${email}",
  "auth-reset-passwd-by-email-tip": "Registered email address",
  "auth-reset-passwd-by-passwd": "Reset by old password",
  "auth-reset-passwd-by-phone": "Reset by sms",
  "auth-reset-passwd-by-phone-sent": "The sms password has been sent to your mobile phone ${phone}",
  "auth-reset-passwd-by-phone-tip": "Registered phone number",
  "auth-reset-passwd-ing": "Reseting password ...",
  "auth-reset-passwd-lack-email": "Please enter your registered email address",
  "auth-reset-passwd-lack-phone": "Please enter your registered mobile phone number",
  "auth-reset-passwd-new": "New password (at least 6 chars)",
  "auth-reset-passwd-ok": "The password has been reset and will take effect the next time you log in",
  "auth-reset-passwd-old": "Old password",
  "auth-reset-passwd-ren": "Reconfirm",
  "auth-sending-vcode": "Sending verification code",
  "auth-sent-ok": "${ta?Password} has been sent, please check in ${by} in ${min} minutes",
  "auth-ta-by-email": "Your email",
  "auth-ta-by-phone": "Your sms",
  "auth-ta-email": "Email password",
  "auth-ta-phone": "SMS password",
  "auth-vcode-delay": "Resend after ${sec}s",
  "auth-vcode-lost": "Can't get password?",
  "base-info": "Base info",
  "buy-checkout-nil": "You have nothing to checkout",
  cate: "Category",
  "cate-flt-tip": "Filter by category name",
  "cate-maj": "Major category",
  "cate-meta": "Category properties",
  "cate-new": "New category",
  "cate-nil-tip": "Select a category",
  "cate-no-detail": "Select a category for details",
  "cate-pa": "Parent category",
  "cate-pa-nil": "Select a parent category",
  "cate-sub": "Child category",
  "cate-sub-nil": "Select a child category",
  "cate-val": "Category value",
  "cmt-brief": "Comment brief",
  "cmt-content": "Comment content",
  "cmt-flt-tip": "Filter by a user id or comment",
  "cmt-meta": "Comment properties",
  "cmt-no-detail": "Select a role for detail",
  "cmt-target": "Comment target",
  "cmt-type": "Comment type",
  "cmt-user": "Comment account",
  comments: "COMMENTS",
  cover: "Cover",
  "cover-pic": "Cover pic",
  "detail-info": "Detail info",
  "dir-media": "Media dir",
  "e-cmd-passwd-old_invalid": "Old Password Invalid",
  "e-cmd-www_passwd-Blank": "Blank new password not allowed",
  "e-cmd-www_passwd-CheckBlankAccount": "Blank account",
  "e-cmd-www_passwd-CheckBlankCode": "Blank code",
  "e-cmd-www_passwd-CheckCodeFail": "Invalid code",
  "e-cmd-www_passwd-CheckFailed": "Verify failed",
  "e-cmd-www_passwd-CheckWeirdAccount": "Weird account",
  "e-cmd-www_passwd-InvalidNewPasswd": "Invalid new password",
  "e-cmd-www_passwd-LackTarget": "Missing target",
  "e-cmd-www_passwd-TooShort": "The new password is too short",
  "e-cmd-www_passwd-nopvg": "No permission to reset passwords",
  "e-www-invalid-captcha": "Invalid ${ta?captcha}",
  "e-www-login-invalid-passwd": "Invalid password",
  "e-www-login-noexists": "Account not exists",
  "e-www-order-OutOfStore": "Goods ${val?} insufficient stock",
  "invoice-k-bankaccount": "Bank account",
  "invoice-k-bankname": "Bank",
  "invoice-k-busiaddr": "Biz address",
  "invoice-k-busiphone": "Biz phone",
  "invoice-k-invdft": "Default title",
  "invoice-k-invtfn": "TFN",
  "invoice-k-invtitle": "Invoice title",
  "invoice-k-type": "Invoice Type",
  "invoice-k-uemail": "Taker email",
  "invoice-k-uid": "Owner account",
  "invoice-k-uid-tip": "Filter by username",
  "invoice-k-uname": "Taker name",
  "invoice-k-uphone": "Taker phone",
  "invoice-kg-bank": "Bank info",
  "invoice-kg-busi": "Biz info",
  "invoice-kg-inv": "Invoice info",
  "invoice-kg-u": "Taker info",
  "k-ct-date": "Create date",
  "k-lm": "Last modifed",
  "me-k-account": "Account",
  "me-k-avatar": "Avatar",
  "me-k-city": "City",
  "me-k-country": "Country",
  "me-k-email": "Email",
  "me-k-login": "Login",
  "me-k-nickname": "Nickname",
  "me-k-nm": "Login name",
  "me-k-phone": "Phone",
  "me-k-role": "Role",
  "me-k-sex": "Gender",
  mine: "Mine",
  "my-favors": "My favorite",
  "my-favors-blog": "Favorite blog",
  "my-favors-goods": "Favorite goods",
  "my-favors-posts": "Favorite posts",
  "my-favors-spots": "Favorite spots",
  "my-favors-video": "Favorite video",
  "my-orders": "My orders",
  "my-orders-shop": "Shopping orders",
  "my-orders-video": "VOD order",
  "my-passwd": "Reset password",
  "my-profile": "My profile",
  "my-shipping-address": "Shipping address",
  "my-shopping-car": "Shopping car",
  "or-st-dn": "Done",
  "or-st-fa": "Fail to create order",
  "or-st-nw": "New order",
  "or-st-ok": "Pay ok",
  "or-st-sp": "Shipped",
  "or-st-wt": "Wait for pay",
  "ord-detail": "Order detail",
  "order-flt-tip": "Query by order id",
  "order-k-accounts": "Accounts",
  "order-k-addr_ship": "Ship address",
  "order-k-addr_ship_code": "Ship code",
  "order-k-addr_ship_country": "Ship country",
  "order-k-addr_ship_door": "Ship door",
  "order-k-addr_user": "User address",
  "order-k-addr_user_area": "Area",
  "order-k-addr_user_city": "City",
  "order-k-addr_user_code": "User code",
  "order-k-addr_user_country": "User country",
  "order-k-addr_user_door": "User door",
  "order-k-addr_user_province": "Province",
  "order-k-addr_user_street": "Street",
  "order-k-buyer_id": "Buyer",
  "order-k-currency": "Currency",
  "order-k-discount": "Discount",
  "order-k-dn_at": "Done at",
  "order-k-fa_at": "Fail at",
  "order-k-fee": "Payment amount",
  "order-k-freight": "Freight",
  "order-k-freight-m": "Alt Freight",
  "order-k-freight-m-tip": "Enter 0 to waive shipping costs",
  "order-k-id": "Order id",
  "order-k-invoice": "Invoice",
  "order-k-note": "Note",
  "order-k-ok_at": "OK at",
  "order-k-pay_id": "Payment id",
  "order-k-pay_tp": "Pay type",
  "order-k-payment": "Total",
  "order-k-price": "Order price",
  "order-k-pro-amount": "Amount",
  "order-k-pro-price": "Price",
  "order-k-pro-subtotal": "Subtotal",
  "order-k-pro-title": "Title",
  "order-k-products": "Goods",
  "order-k-seller": "Seller",
  "order-k-sp_at": "Shipping at",
  "order-k-st": "Order status",
  "order-k-title": "Order title",
  "order-k-total": "Total",
  "order-k-total-m": "Alt Total",
  "order-k-total-m-tip": "Enter the new total price",
  "order-k-user_email": "User email",
  "order-k-user_name": "User name",
  "order-k-user_phone": "User phone",
  "order-k-waybil": "Waybil",
  "order-k-waybil_com": "Waybil COM",
  "order-k-waybil_nb": "Waybil NB",
  "order-k-wt_at": "Pay at",
  "order-nil-detail": "Please select an order for details",
  "order-pay-id": "Pay ID",
  "order-pay-status": "Payment status",
  "order-shipaddr-nil": "Please specify a shipping address",
  "passwd-invalid-char": "Passwords can only include english numbers/upper and lower case letters/and special characters",
  "passwd-sl-1": "Weak",
  "passwd-sl-2": "Weaker",
  "passwd-sl-3": "Normal",
  "passwd-sl-4": "Stronger",
  "passwd-sl-5": "Strong",
  "passwd-tip": "Please enter a combination of english numerals/upper and lower case letters/special characters with a minimum of 6 characters",
  "pay-by-free": "Free",
  "pay-by-paypal": "PayPal",
  "pay-by-wx-jsapi": "WeChat jsapi",
  "pay-by-wx-qrcode": "WeChat scan code",
  "pay-by-wx-scan": "WeChat payment code",
  "pay-by-zfb-qrcode": "Alipay scan code",
  "pay-by-zfb-scan": "Alipay payment code",
  "pay-checkout-it-amount": "Amount",
  "pay-checkout-it-name": "Name",
  "pay-checkout-it-price": "Price",
  "pay-checkout-it-subtotal": "Subtotal",
  "pay-checkout-tip": "Please confirm the quantity and amount of your purchase",
  "pay-paypal": "PayPal",
  "pay-proceed-check": "Check payment",
  "pay-proceed-ing": "Checking for...",
  "pay-re-fail": "Payment failure",
  "pay-re-nil": "The payoff is a schrodinger's cat",
  "pay-re-ok": "Payment success",
  "pay-re-wait": "Pending payment",
  "pay-step-checkout-title": "Confirm order",
  "pay-step-choose-nil": "☝ please select one of the above payment methods 👆",
  "pay-step-choose-tip": "You may choose any of the following payment methods to pay for this order",
  "pay-step-choose-tip2": "You will pay for this order using ${val}",
  "pay-step-choose-title": "Mode of payment",
  "pay-step-choose-title2": "Choose payment",
  "pay-step-done-title": "Done",
  "pay-step-proceed-create-order": "Creating order ...",
  "pay-step-proceed-fetch-order": "Getting order ...",
  "pay-step-proceed-nil": "Please choose a method of payment",
  "pay-step-proceed-tip": "Pay for this order with ${val}",
  "pay-step-proceed-title": "Pay",
  "pay-tip-wx-qrcode": "Please pay in wechat scan within 15 minutes",
  "pay-tip-zfb-qrcode": "Please pay by alipay scan code within 15 minutes",
  "pay-title": "Payment",
  "pay-wx": "WeChat",
  "pay-zfb": "Alipay",
  "paypal-amount_value": "Payment Amount",
  "paypal-approve-tip": "Already in the new tab for you to open the paypal payment page, if there is no open, please click on ☝ the icon above. after payment, the page will automatically perceive, if there is no response, try to click 👇 [check payment] button below.",
  "paypal-cap-id": "Capture ID",
  "paypal-cap-status": "Capture status",
  "paypal-currency": "Currency",
  "paypal-id": "PayPal TID",
  "paypal-payer_email": "Payer email",
  "paypal-payer_id": "Payer ID",
  photo: "Photo",
  "post-content-blank": "The content you post cannot be empty or less than 10 words",
  "profile-title": "My profile",
  pubat: "Release date",
  "read-du": "Reading spend",
  role: "Role",
  "role-as-guest": "Guest",
  "role-as-normal": "Normal",
  "role-as-vip": "VIP",
  "role-dft": "Default role",
  "role-flt-tip": "Filter by role name",
  "role-manage": "Roles",
  "role-meta": "Role propery",
  "role-meta-tip": "Choose an role for detail",
  "role-name": "Role name",
  "role-select-tip": "Select role",
  "role-val": "Role value",
  "shop-basket-clean-confirm": "Are you sure you want to empty the shopping cart? this is an operation that cannot be undone.",
  "shop-basket-remove-confirm": "Are you sure you want to remove this item from your shopping cart?",
  sort: "Sort",
  "sort-tip-asc": "The smaller at first",
  "sort-tip-desc": "The bigger at first",
  "sort-val": "Sort value",
  topic: "Topic",
  type: "Type",
  "type-new": "New type",
  "video-title": "Video title",
  watch_c: "View count",
  "waybil-com-ane": "AN NENG Logistics",
  "waybil-com-best": "BAISHI Express",
  "waybil-com-db": "DE BANG Express",
  "waybil-com-ems": "EMS Logistics",
  "waybil-com-jdl": "JING DONG Logistics",
  "waybil-com-pj": "PIN JUN Express",
  "waybil-com-sf": "SHUN FENG Express",
  "waybil-com-sto": "SHEN TONG Express",
  "waybil-com-uce": "YOU SU Express",
  "waybil-com-yto": "YUAN TONG Express",
  "waybil-com-yunda": "YUN DA Express",
  "waybil-com-zto": "ZHONG TONG Express"
}), Ti.Preload("ti/i18n/en-us/wn-manager.i18n.json", {
  "ti-loading": "Load...",
  "wn-adaptlist": "Object explorer",
  "wn-create-fail": "Fail to create",
  "wn-create-invalid": "Illegal characters in object name",
  "wn-create-ok": "Create ok",
  "wn-create-too-long": "Object name too long",
  "wn-del-item": 'Deleting: "${name}"',
  "wn-del-no-empty-folder": 'The directory "${nm}" is not empty, do you want to delete all? click "no" to skip',
  "wn-del-none": "Please select at least one file to delete!",
  "wn-del-ok": "${N} objects have been removed",
  "wn-download-dir": 'Object "${nm}" is a directory, click "continue" to skip it and download the next file, and click "terminate" to end this operation!',
  "wn-download-none": "Please select at least one file to download!",
  "wn-download-too-many": "We are going to download ${n} files one by one. continue?",
  "wn-expose-hidden-off": "Not show hidden objects",
  "wn-expose-hidden-on": "Show hidden objects",
  "wn-gui": "General gui",
  "wn-obj-preview": "Object preview",
  "wn-obj-puretext": "Plain text editor",
  "wn-obj-single-com": "Single control test suite",
  "wn-publish-done": "Publish success",
  "wn-publish-to-nil": "No publish target is set",
  "wn-publish-to-noexist": "The publish target does not exist",
  "wn-rename": 'Rename object "${name}"',
  "wn-rename-fail": "Rename failed",
  "wn-rename-invalid": "The name cannot contain illegal characters",
  "wn-rename-none": "Please select a file to rename!",
  "wn-rename-ok": "Rename successful",
  "wn-rename-suffix-changed": "Your file suffix name has changed. do you need to complete the original suffix for you automatically?",
  "wn-rename-too-long": "The name is too long",
  "wn-thing-manager": "Data manager",
  "wn-view-opening": "Loading gui..."
}), Ti.Preload("ti/i18n/en-us/wn-obj-preview.i18n.json", {
  "wop-fullscreen-enter": "Enter fullscreen",
  "wop-fullscreen-quit": "Exit fullscreen"
}), Ti.Preload("ti/i18n/en-us/wn-thing.i18n.json", {
  "thing-clean": "Empty the recycle bin",
  "thing-cleaning": "Cleaning...",
  "thing-content": "Object content",
  "thing-content-hide": "Hide content",
  "thing-content-show": "Show content",
  "thing-create": "New object",
  "thing-create-in-recyclebin": "Exit recycle bin before create object",
  "thing-enter-recyclebin": "Enter recyclebin",
  "thing-files": "Object files",
  "thing-files-hide": "Hide files",
  "thing-files-show": "Show files",
  "thing-filter-kwdplhd": "Enter the query criteria",
  "thing-leave-recyclebin": "Leave recyclebin",
  "thing-meta": "Object properties",
  "thing-meta-hide": "Hide properties",
  "thing-meta-show": "Show properties",
  "thing-recycle-bin": "Recycle bin",
  "thing-restore": "Restore",
  "thing-restore-none": "Select the data you want to recover first",
  "thing-restoring": "Restoring..."
}), Ti.Preload("ti/i18n/en-us/_net.i18n.json", {
  "net-ct": "Created",
  "net-flt-nil": "Query by name",
  "net-vod-add-video": "Add video",
  "net-vod-cate": "Category",
  "net-vod-du-long": "Long video",
  "net-vod-du-short": "Short video",
  "net-vod-du-tv": "TV",
  "net-vod-duration": "Duration",
  "net-vod-size": "Video size",
  "net-vod-video-nil": "Please choose one video for detail"
}), Ti.Preload("ti/i18n/en-us/_ti.i18n.json", {
  add: "Add",
  "add-item": "New item",
  amount: "Amount",
  attachment: "Attachment",
  avatar: "Avatar",
  banner: "Banner",
  "batch-none": "Please choose at least one item for batch updating",
  "batch-update": "Batch update...",
  blank: "BLANK",
  "blank-to-edit": "Please choose item for editing",
  brief: "Brief",
  "brief-d": "Brief",
  "brief-i": "Brief",
  buy: "Buy",
  "buy-now": "Buy now",
  cancel: "Cancel",
  "cancel-all": "Cancel all",
  candidate: "Candidations",
  captcha: "Captcha",
  "captcha-chagne": "Next",
  "captcha-tip": "Please enter the captcha",
  chart: "Chart",
  "chart-bar": "Bar Chart",
  "chart-line": "Line Chart",
  "chart-pie": "Pie Chart",
  "chart-rank": "Rank Chart",
  checked: "Checked",
  choose: "Select",
  "choose-file": "Select file",
  "choose-obj": "Select object",
  clean: "Clean",
  clear: "Clear",
  close: "Close",
  confirm: "Confirm",
  console: "Console",
  content: "Content",
  "continue": "Continue",
  create: "New",
  "create-now": "Create now",
  creating: "Creating",
  date: "Date",
  debug: "Debug",
  "default": "Default",
  del: "Delete",
  "del-checked": "Delete selected",
  "del-hard": "The selected item will be deleted directly. this operation is irrevocable. are you sure you want to continue?",
  "del-ing": "Deleting...",
  "del-none": "Please choose at least one item for deleting",
  desktop: "Desktop",
  detail: "Detail",
  "dis-name": "Display name",
  disable: "Disable",
  disabled: "Disabled",
  doing: "Processing...",
  download: "Download",
  "download-to-local": "Download to local",
  "drop-file-here-to-upload": "Drop file here to upload",
  "drop-here": "Drop here",
  "dt-in": "in ${val}",
  "dt-u-day": "Day",
  "dt-u-hour": "Hour",
  "dt-u-min": "Min",
  "dt-u-month": "Month",
  "dt-u-ms": "Milliseconds",
  "dt-u-sec": "Seconds",
  "dt-u-week": "Week",
  "dt-u-year": "Year",
  "e-auth-account-noexists": "Account not exists",
  "e-auth-home-forbidden": "Auth home forbidden",
  "e-auth-login-NoPhoneOrEmail": "Invalid phone number or email address",
  "e-auth-login-NoSaltedPasswd": "Password without salting",
  "e-auth-login-invalid-passwd": "Invalid password",
  "e-io-obj-exists": "Object already exists",
  "e-io-obj-noexists": "Object does't exists",
  "e-io-obj-noexistsf": "Object[${nm}] does't exists",
  edit: "Edit",
  "edit-com": "Edit control",
  email: "Email",
  emoji: "Emoji",
  empty: "Empty",
  "empty-data": "Empty data",
  enable: "Enable",
  enabled: "Enabled",
  error: "Error",
  "export-data": "Export data...",
  fail: "Failed",
  "false": "False",
  favorites: "Favorite",
  female: "Female",
  filter: "Filter",
  find: "Find",
  "find-data": "Find data",
  gender: "Gender",
  "global-settings": "Global settings",
  "history-record": "History record",
  home: "HOME",
  "i-known": "I known",
  icon: "Icon",
  "icon-code-tip": "Please key-in code for icon, such as 'zmdi-case'",
  "import-data": "Import data ...",
  index: "Index",
  info: "Information",
  input: "Input",
  "input-tags": "Input tags",
  label: "Label",
  lat: "Latitude",
  "lbs-place-add": "Add place",
  "lbs-ro-rnb-k-first": "Starting number",
  "lbs-ro-rnb-k-type": "Display type",
  "lbs-ro-rnb-k-type-alpha": "Alphabet",
  "lbs-ro-rnb-k-type-capital": "Capital",
  "lbs-ro-rnb-k-type-number": "Number",
  "lbs-ro-rnb-title": "Autosets line label",
  link: "Link",
  "link-href": "Link target",
  "link-text": "Link text",
  lng: "Longitude",
  loading: "Loading...",
  login: "Sign in",
  "login-name": "Login name",
  logout: "Sign out",
  "logout-ing": "Log out ...",
  male: "Male",
  "map-hybrid": "HYBIRD",
  "map-roadmap": "ROADMAP",
  "map-satellite": "SATELLITE",
  "map-terrain": "TERRAIN",
  "map-type": "Map type",
  me: "Me",
  media: "Media",
  meta: "Meta data",
  mine: "Mine",
  modal: "Modal",
  modify: "Modify",
  more: "More",
  msg: "Message",
  name: "Name",
  "new-item": "New item",
  newsfeed: "Newfeed",
  next: "Next",
  nil: "Nil",
  "nil-obj": "Please choose one object",
  no: "No",
  "no-saved": "You get data need to be saved",
  "no-selected": "None selected",
  "no-title": "No title",
  obj: "Object",
  off: "Off",
  ok: "Ok",
  on: "On",
  open: "Open",
  "open-newtab": "Open in new tab",
  others: "Others",
  "paging-change-pgsz": "Current page contains ${pgsz} records maximumly, you want to change it to：",
  "paging-change-pgsz-invalid": "Page size must be integer, and great than 0, but ... -_-!",
  "paging-change-pn": "Current page number is ${pn}, please enter number between 1 to ${pgc}:",
  "paging-change-pn-invalid": "Page number must be integer, and must between 1 to ${pgc}",
  "paging-first": "Head",
  "paging-last": "Tail",
  "paging-next": "Next",
  "paging-prev": "Prev",
  "paging-sum": "Total ${pgc} pages, ${sum} records，current ${count}/${pgsz}",
  passwd: "Password",
  "passwd-reset": "Reset password",
  path: "Path",
  phone: "Phone",
  "phone-nb": "Phone number",
  post: "Post",
  prev: "Prev",
  price: "Price",
  profile: "Profile",
  "profile-edit": "Edit profile",
  prompt: "Prompt",
  properties: "Properties",
  publish: "Publish",
  publishing: "Publishing ...",
  refresh: "Refresh",
  "refresh-hard": "Hard refresh",
  "refresh-hard-clear": "Clean cache & hard refresh",
  reloading: "Reloading ...",
  remove: "Remove",
  removing: "Removing ...",
  rename: "Rename ...",
  renaming: "Renameing ...",
  reset: "Reset",
  "reset-change": "Reset change",
  "reset-data": "Reset data",
  restore: "Restore",
  revoke: "Revoke",
  "revoke-change": "Revoke change",
  run: "Run",
  "run-finished": "Done for running script",
  "run-welcome": "Run script, please wait for a while ...",
  save: "Save",
  "save-change": "Save change",
  "save-done": "Save success",
  "save-now": "Save now",
  saving: "Saving ...",
  score: "Score",
  "score-count": "Score count",
  select: "Select",
  "select-all": "Select all",
  send: "Send",
  settings: "Settings",
  slogan: "Slogan",
  "source-code": "Source code",
  "stat-date-at": "Stat at",
  "stat-date-at-oor": "Statistics on this date are not ready yet",
  "stat-date-span": "Date span",
  stop: "Stop",
  structure: "Structure",
  success: "Success",
  "sys-settings": "System settings",
  tablet: "Tablet",
  terminal: "Terminal",
  terminate: "Terminate",
  text: "Text",
  timestamp: "Timestamp",
  title: "Title",
  "total-count": "Total ${nb?0} ${unit?items}",
  trace: "Trace",
  track: "Track message",
  "true": "True",
  type: "Type",
  "under-construction": "Under construction",
  unknown: "Unknown",
  upload: "Upload",
  "upload-done": "Done for upload",
  "upload-file": "Uploading files ...",
  "upload-nofinished": "Upload not finished",
  uploading: "Uplading",
  "user-avator": "User avatar",
  value: "Value",
  view: "View",
  "view-resource": "View source code",
  warn: "Warn",
  website: "Website",
  yes: "Yes"
}), Ti.Preload("ti/i18n/en-us/_wn.i18n.json", {
  "wn-admin-check-obj-thumb": "Check obj thumbnails ...",
  "wn-admin-tools": "Admin tools",
  "wn-ctt-css-text": "CSS File",
  "wn-ctt-folder-text": "Folder",
  "wn-ctt-html-text": "HTML FILE",
  "wn-ctt-js-text": "Javascript",
  "wn-ctt-json-text": "JSON File",
  "wn-ctt-less-text": "LESS File",
  "wn-ctt-md-text": "Markdown",
  "wn-ctt-mjs-text": "Module Javascript",
  "wn-ctt-sass-text": "SASS File",
  "wn-ctt-thing_set-text": "Thing Set",
  "wn-ctt-txt-text": "Pure text",
  "wn-ctt-wnml-text": "WNML File",
  "wn-ctt-xml-text": "XML File",
  "wn-edit-com-nil": "Default as label control",
  "wn-en-his-ct": "Created",
  "wn-en-his-flt-tip": "Please input user id or name to filtering",
  "wn-en-his-mor": "OP more",
  "wn-en-his-opt": "Operation",
  "wn-en-his-tar": "Target",
  "wn-en-his-tid": "Target id",
  "wn-en-his-tnm": "Target name",
  "wn-en-his-ttp": "Target type",
  "wn-en-his-uid": "User id",
  "wn-en-his-unm": "User name",
  "wn-en-his-usr": "User",
  "wn-en-his-utp": "User type",
  "wn-invalid-mimes": 'Unsupported mime "${current}", only "${supports}" allowed',
  "wn-invalid-types": 'Unsupported type "${current}", only "${supports}" allowed',
  "wn-key-c": "Creater",
  "wn-key-ct": "Created",
  "wn-key-d0": "D0",
  "wn-key-d1": "D1",
  "wn-key-data": "Data",
  "wn-key-duration": "Duration",
  "wn-key-expi": "Expired",
  "wn-key-g": "Group",
  "wn-key-grp-advance": "Advance",
  "wn-key-grp-basic": "Basic",
  "wn-key-grp-customized": "Customized",
  "wn-key-grp-more": "More",
  "wn-key-grp-others": "Others",
  "wn-key-grp-privilege": "Privilege",
  "wn-key-grp-thumb": "Thumb",
  "wn-key-grp-timestamp": "Timestamp",
  "wn-key-height": "Height",
  "wn-key-icon": "Icon",
  "wn-key-id": "ID",
  "wn-key-len": "Length",
  "wn-key-lm": "Last modified",
  "wn-key-m": "Mender",
  "wn-key-md": "Mode",
  "wn-key-mime": "MIME",
  "wn-key-nm": "Name",
  "wn-key-ph": "Path",
  "wn-key-pid": "Parent",
  "wn-key-pvg": "Biz pvg",
  "wn-key-race": "Race",
  "wn-key-sha1": "SHA1",
  "wn-key-thumb": "Thumb",
  "wn-key-title": "Title",
  "wn-key-tp": "Type",
  "wn-key-width": "Width",
  "wn-obj-nosaved": "You have unsaved objects",
  "wn-oc-auto-type": "All types",
  "wn-oc-free": "Please enter the full name, including the extension, such as `myfile.xml`",
  "wn-oc-tip": "New object name",
  "wn-race-DIR": "DIRECTORY",
  "wn-race-FILE": "FILE",
  "wn-th-acc-pwd-choose-none": "Select the account to reset password (multiple allowed)",
  "wn-th-acc-pwd-done": "Password has been reset for ${n} users",
  "wn-th-acc-pwd-invalid": "Illegal characters found in password",
  "wn-th-acc-pwd-reset-tip": "Reset password to",
  "wn-th-acc-pwd-too-short": "Password too short, no less than 6 digits, better contains alphanumeric & special chars",
  "wn-th-recount-media": "Recalculate file number",
  "wn-th-recount-media-done": "Current number of files: ${n}"
}), Ti.Preload("ti/i18n/zh-cn/hmaker.i18n.json", {
  "com-form": "表单",
  "com-label": "标签",
  "com-list": "列表",
  "hm-type-Array": "数组",
  "hm-type-Boolean": "布尔",
  "hm-type-Group": "字段分组",
  "hm-type-Integer": "整数",
  "hm-type-Number": "数字",
  "hm-type-Object": "对象",
  "hm-type-String": "文本",
  "hm-type-icons": {
    Array: "zmdi-format-list-bulleted",
    Boolean: "zmdi-toll",
    Group: "zmdi-collection-bookmark",
    Integer: "zmdi-n-6-square",
    Number: "zmdi-input-svideo",
    Object: "zmdi-toys",
    String: "zmdi-translate"
  },
  "hmaker-com-conf-blank": "请选择一个控件设置其详情",
  "hmaker-com-type-blank": "选择一个控件",
  "hmaker-edit-form-del-group-all": "组以及全部字段",
  "hmaker-edit-form-del-group-confirm": "您是要删除组以及其内的全部字段，还是仅是组？",
  "hmaker-edit-form-del-group-only": "仅是组",
  "hmaker-edit-form-field-nil": "请选择一个字段编辑详情",
  "hmaker-edit-form-new-field": "新字段",
  "hmaker-edit-form-new-field-e0": "字段名不能以数字开头，内容只能为小写英文字母数字和下划线",
  "hmaker-edit-form-new-field-e1": "字段【${val}】已存在，请另选一个名称",
  "hmaker-edit-form-new-field-tip": "请输入新字段名（只能为小写英文字母数字和下划线）",
  "hmaker-edit-form-new-group": "新分组",
  "hmaker-edit-form-new-group-tip": "请输入新分组名",
  "hmaker-edit-form-nil-field": "请先选择一个字段",
  "hmaker-edit-form-not-current": "请选择一个字段或者字段组",
  "hmaker-layout-cols": "列布局",
  "hmaker-layout-rows": "行布局",
  "hmaker-layout-tabs": "标签布局",
  "hmaker-nav-blank-item": "请选择一个导航项目编辑",
  "hmaker-nav-k-display": "链接显示内容",
  "hmaker-nav-k-icon": "链接图标",
  "hmaker-nav-k-title": "链接文字",
  "hmaker-nav-k-type": "链接类型",
  "hmaker-nav-k-value": "链接目标",
  "hmaker-nav-tp-dispatch": "方法调用",
  "hmaker-nav-tp-href": "外部链接",
  "hmaker-nav-tp-page": "站点页面",
  "hmaker-site-k-apiBase": "接口路径",
  "hmaker-site-k-base": "资源路径",
  "hmaker-site-k-captcha": "验证码路径",
  "hmaker-site-k-domain": "所属域",
  "hmaker-site-k-entry": "着陆页",
  "hmaker-site-prop": "站点属性",
  "hmaker-site-state": "站点全局配置",
  "hmaker-site-state-actions": "全局动作表",
  "hmaker-site-state-apis": "接口集",
  "hmaker-site-state-blocks": "预定义布局",
  "hmaker-site-state-general": "通用配置",
  "hmaker-site-state-nav": "全局导航条",
  "hmaker-site-state-router": "页面路由",
  "hmaker-site-state-schema": "预定义控件",
  "hmaker-site-state-utils": "扩展函数",
  "hmaker-site-tree": "站点结构",
  "hmaker-site-tree-loading": "正在加载站点结构...",
  "hmk-adjustDelay": "调整延迟",
  "hmk-aspect": "外观",
  "hmk-autoI18n": "国际化",
  "hmk-behavior": "行为",
  "hmk-blankAs": "空白样式",
  "hmk-breakLine": "维持换行",
  "hmk-currentTab": "当前标签",
  "hmk-data": "数据",
  "hmk-dict": "数据字典",
  "hmk-editable": "可编辑",
  "hmk-field-checkEquals": "检查相等",
  "hmk-field-com": "编辑控件",
  "hmk-field-defaultAs": "默认值",
  "hmk-field-disabled": "失效条件",
  "hmk-field-height": "高度",
  "hmk-field-hidden": "隐藏条件",
  "hmk-field-icon": "图标",
  "hmk-field-name": "键名",
  "hmk-field-serializer": "自定义保存",
  "hmk-field-tip": "提示说明",
  "hmk-field-title": "显示名",
  "hmk-field-transformer": "自定义转换",
  "hmk-field-type": "类型",
  "hmk-field-width": "宽度",
  "hmk-fieldStatus": "字段状态",
  "hmk-fields": "字段",
  "hmk-fields-advance": "高级",
  "hmk-fields-general": "基本",
  "hmk-form-data": "数据源",
  "hmk-form-height": "表单高度",
  "hmk-form-onlyFields": "仅声明字段",
  "hmk-form-width": "表单宽度",
  "hmk-format": "格式化",
  "hmk-height": "控件高度",
  "hmk-href": "超链接",
  "hmk-icon": "表单图标",
  "hmk-measure": "尺寸",
  "hmk-mode": "显示方式",
  "hmk-mode-all": "全部",
  "hmk-mode-tab": "标签",
  "hmk-newTab": "新窗口",
  "hmk-placeholder": "占位文本",
  "hmk-prefixIcon": "前缀图标",
  "hmk-prefixText": "前缀文字",
  "hmk-spacing": "间距",
  "hmk-spacing-comfy": "舒适",
  "hmk-spacing-tiny": "紧凑",
  "hmk-suffixIcon": "后缀图标",
  "hmk-suffixText": "后缀文字",
  "hmk-tabAt": "标签位置",
  "hmk-tabAt-bottom-center": "下部居中",
  "hmk-tabAt-bottom-left": "下部居左",
  "hmk-tabAt-bottom-right": "下部居右",
  "hmk-tabAt-top-center": "上部居中",
  "hmk-tabAt-top-left": "上部居左",
  "hmk-tabAt-top-right": "上部居右",
  "hmk-title": "表单标题",
  "hmk-trimed": "修剪空白",
  "hmk-value": "输入值",
  "hmk-valueMaxWidth": "值最大宽度",
  "hmk-width": "控件宽度"
}), Ti.Preload("ti/i18n/zh-cn/ti-datetime.i18n.json", {
  Apr: "四月",
  Aug: "八月",
  Dec: "十二月",
  Feb: "二月",
  Fri: "周五",
  Friday: "星期五",
  Jan: "一月",
  Jul: "七月",
  Jun: "六月",
  Mar: "三月",
  May: "五月",
  Mon: "周一",
  Monday: "星期一",
  Nov: "十一月",
  Oct: "十月",
  Sat: "周六",
  Saturday: "星期六",
  Sep: "九月",
  Sun: "周日",
  Sunday: "星期日",
  Thu: "周四",
  Thursday: "星期四",
  Tue: "周二",
  Tuesday: "星期二",
  Wed: "周三",
  Wednesday: "星期三",
  "blank-date": "请选择日期",
  "blank-date-range": "请选择日期范围",
  "blank-datetime": "请选择日期时间",
  "blank-month": "请选择月份",
  "blank-time": "请选择时间",
  "blank-time-range": "请选择时间范围",
  cal: {
    abbr: {
      Apr: "四月",
      Aug: "八月",
      Dec: "十二",
      Feb: "二月",
      Jan: "一月",
      Jul: "七月",
      Jun: "六月",
      Mar: "三月",
      May: "五月",
      Nov: "十一",
      Oct: "十月",
      Sep: "九月"
    },
    "d-range-beyond-days": "${yy0}年${MM0}月${dd0}至${dd1}日",
    "d-range-beyond-months": "${yy0}年${MM0}月${dd0}日至${MM1}月${dd1}日",
    "d-range-beyond-years": "${yy0}年${MM0}月${dd0}日至${yy1}年${MM1}月${dd1}日",
    "d-range-in-same-day": "${yy0}年${MM0}月${dd0}日全天",
    "m-range-beyond-months": "${yy0}年${MT0}至${MT1}",
    "m-range-beyond-years": "${yy0}年${MT0}至${yy1}年${MT1}",
    week: ["日", "一", "二", "三", "四", "五", "六"]
  },
  "du-in-min": "${n}分钟",
  time: {
    "any-time": "yyyy年M月d日",
    "in-year": "M月d日",
    "past-in-min": "刚刚",
    "past-in-hour": "${min}分钟前",
    "past-in-day": "${hour}小时前",
    "past-in-week": "${day}天前",
    "future-in-min": "即将",
    "future-in-hour": "${min}分钟后",
    "future-in-day": "${hour}小时后",
    "future-in-week": "${day}天后"
  },
  "time-begin": "开始时间",
  "time-end": "结束时间",
  today: "今天"
}), Ti.Preload("ti/i18n/zh-cn/ti-text-editor.i18n.json", {
  "wordp-h0": "正文",
  "wordp-h1": "标题 1",
  "wordp-h2": "标题 2",
  "wordp-h3": "标题 3",
  "wordp-h4": "标题 4",
  "wordp-h5": "标题 5",
  "wordp-h6": "标题 6",
  "wordp-heading": "标题级别",
  "wordp-link": "超链接",
  "wordp-nil-sel": "请先选择一段文字"
}), Ti.Preload("ti/i18n/zh-cn/ti-text-json.i18n.json", {
  "json-Array": "数组",
  "json-Boolean": "布尔",
  "json-Float": "小数",
  "json-Integer": "整数",
  "json-Nil": "空值",
  "json-Number": "数字",
  "json-Object": "对象",
  "json-String": "字符串",
  "json-new-key": "请输入一个新键名"
}), Ti.Preload("ti/i18n/zh-cn/web.i18n.json", {
  account: "账户",
  "account-flt-tip": "请输入账号名过滤",
  "account-manage": "账户管理",
  "account-meta": "账户属性",
  "account-meta-tip": "请选择一个账号查看详情",
  "address-consignee": "收货人",
  "address-empty-list": "未设置任何收货地址",
  "address-flt-tip": "请输入地址名过滤",
  "address-is-dft": "默认收货地址",
  "address-k-area": "区县",
  "address-k-city": "城市",
  "address-k-code": "地址编码",
  "address-k-code-tip": "12位国家地址编码",
  "address-k-consignee": "收货人姓名",
  "address-k-country": "国家",
  "address-k-dftaddr": "默认地址",
  "address-k-door": "门牌",
  "address-k-email": "邮箱",
  "address-k-phone": "电话",
  "address-k-postcode": "邮编",
  "address-k-province": "省/直辖市",
  "address-k-street": "乡镇/街道",
  "address-k-title": "地址",
  "address-k-tp": "地址类型",
  "address-k-tp-s": "卖家地址",
  "address-k-tp-u": "用户地址",
  "address-k-uid": "用户",
  "address-k-uid-tip": "输入关联用户名过滤",
  "address-meta": "地址属性",
  "address-nil": "空地址",
  "address-nil-detail": "请选择一个地址查看详情",
  "address-rm-confirm": "您确定要删除这个地址吗？",
  "address-set-dft": "设为默认地址",
  "address-shipping-add": "添加收货地址",
  "admin-flt-tip": "请输入管理员名过滤",
  "admin-meta": "管理员属性",
  "admin-new": "新管理员",
  "admin-nickname": "管理员昵称",
  "admin-no-detail": "请选择一个管理员查看详情",
  "ar-cate": "文章分类",
  "ar-content": "文章内容",
  "ar-flt-tip": "请输入文章标题过滤",
  "ar-meta": "文章属性",
  "ar-new": "新文章",
  "ar-title": "文章标题",
  "auth-bind": "绑定",
  "auth-bind-email-title": "绑定邮箱",
  "auth-bind-phone-title": "绑定手机",
  "auth-blank-email": "邮箱不能为空",
  "auth-blank-name": "名称不能为空",
  "auth-blank-name-passwd": "名称或者密码不能为空",
  "auth-blank-phone": "手机号不能为空",
  "auth-doing": "正在验证",
  "auth-email-tip": "邮箱地址",
  "auth-email-title": "邮件密码登录/注册",
  "auth-email-vcode": "邮件密码",
  "auth-email-vcode-get": "获取邮件密码",
  "auth-go-email": "邮件密码登录/注册",
  "auth-go-passwd": "账号密码登录",
  "auth-go-phone": "短信密码登录/注册",
  "auth-login": "登录",
  "auth-login-NoSaltedPasswd": "你还未初始化您的登录密码，请切换至【${ta?验证码}】登录，之后前往【用户中心 > 重置密码】初始化您的登录密码，谢谢",
  "auth-login-or-signup": "登录/注册",
  "auth-logout-confirm": "您确定要退出登录吗？",
  "auth-ok": "账号验证通过",
  "auth-passwd-getback": "找回密码",
  "auth-passwd-name-email-tip": "邮箱地址/登录名",
  "auth-passwd-name-phone-tip": "手机号/登录名",
  "auth-passwd-tip": "密码",
  "auth-passwd-title": "账号密码登录",
  "auth-phone-tip": "手机号",
  "auth-phone-title": "短信密码登录/注册",
  "auth-phone-vcode": "短信密码",
  "auth-phone-vcode-get": "获取短信密码",
  "auth-reset-passwd": "重置密码 ...",
  "auth-reset-passwd-again": "再次重置密码",
  "auth-reset-passwd-btn-lack": "请填写必要信息",
  "auth-reset-passwd-btn-ready": "立即重置密码",
  "auth-reset-passwd-btn-short": "密码至少6位",
  "auth-reset-passwd-btn-unmatch": "密码两次输入不一致",
  "auth-reset-passwd-by-email": "用邮箱重置密码",
  "auth-reset-passwd-by-email-sent": "已经向您的注册邮箱 ${email} 发送了邮件密码",
  "auth-reset-passwd-by-email-tip": "请输入注册邮箱地址",
  "auth-reset-passwd-by-passwd": "用旧密码重置密码",
  "auth-reset-passwd-by-phone": "用手机重置密码",
  "auth-reset-passwd-by-phone-sent": "已经向您的手机 ${phone} 发送了短信密码",
  "auth-reset-passwd-by-phone-tip": "请输入注册手机号码",
  "auth-reset-passwd-ing": "正在重置密码...",
  "auth-reset-passwd-lack-email": "请输入注册邮箱地址",
  "auth-reset-passwd-lack-phone": "请输入注册手机号",
  "auth-reset-passwd-new": "新密码（最少6位）",
  "auth-reset-passwd-ok": "密码已经重置，下次登录时生效",
  "auth-reset-passwd-old": "旧密码",
  "auth-reset-passwd-ren": "再次确认",
  "auth-sending-vcode": "正在发送验证码",
  "auth-sent-ok": "${ta?验证码}已发出，请在${by}查收，${min}分钟内有效",
  "auth-ta-by-email": "邮箱里",
  "auth-ta-by-phone": "手机上",
  "auth-ta-email": "邮件密码",
  "auth-ta-phone": "手机密码",
  "auth-vcode-delay": "${sec} 秒后重新发送",
  "auth-vcode-lost": "收不到验证码？",
  "base-info": "基本信息",
  "buy-checkout-nil": "请选择要付款的商品",
  cate: "分类",
  "cate-flt-tip": "请输入分类名过滤",
  "cate-maj": "主分类",
  "cate-meta": "分类属性",
  "cate-new": "新分类",
  "cate-nil-tip": "请选择一个分类",
  "cate-no-detail": "请选择一个分类查看详情",
  "cate-pa": "父分类",
  "cate-pa-nil": "请选择自己的父分类",
  "cate-sub": "子分类",
  "cate-sub-nil": "请选择自己的子分类",
  "cate-val": "分类值",
  "cmt-brief": "评论摘要",
  "cmt-content": "评论内容",
  "cmt-flt-tip": "请输入用户ID或者评论内容过滤",
  "cmt-meta": "评论属性",
  "cmt-no-detail": "请选择一个角色查看详情",
  "cmt-target": "评论目标",
  "cmt-type": "评论类型",
  "cmt-user": "评论账户",
  comments: "评论",
  cover: "封面",
  "cover-pic": "封面图片",
  "detail-info": "详细信息",
  "dir-media": "媒体目录",
  "e-cmd-passwd-old_invalid": "旧密码错误",
  "e-cmd-www_passwd-Blank": "新密码为空",
  "e-cmd-www_passwd-CheckBlankAccount": "空账户",
  "e-cmd-www_passwd-CheckBlankCode": "空验证码",
  "e-cmd-www_passwd-CheckCodeFail": "验证码错误",
  "e-cmd-www_passwd-CheckFailed": "校验错误",
  "e-cmd-www_passwd-CheckWeirdAccount": "诡异的账户",
  "e-cmd-www_passwd-InvalidNewPasswd": "新密码无效",
  "e-cmd-www_passwd-LackTarget": "缺少重置目标",
  "e-cmd-www_passwd-TooShort": "新密码太短",
  "e-cmd-www_passwd-nopvg": "没有重置密码的权限",
  "e-www-invalid-captcha": "${ta?验证码}错误",
  "e-www-login-invalid-passwd": "账号密码错误",
  "e-www-login-noexists": "账号不存在",
  "e-www-order-OutOfStore": "商品${val?}库存不足",
  "invoice-k-bankaccount": "银行账号",
  "invoice-k-bankname": "开户行",
  "invoice-k-busiaddr": "企业地址",
  "invoice-k-busiphone": "企业电话",
  "invoice-k-invdft": "默认抬头",
  "invoice-k-invtfn": "发票税号",
  "invoice-k-invtitle": "发票抬头",
  "invoice-k-type": "发票类型",
  "invoice-k-uemail": "收票人邮箱",
  "invoice-k-uid": "关联账户",
  "invoice-k-uid-tip": "输入关联用户名过滤",
  "invoice-k-uname": "收票人名称",
  "invoice-k-uphone": "收票人电话",
  "invoice-kg-bank": "银行信息",
  "invoice-kg-busi": "企业信息",
  "invoice-kg-inv": "发票信息",
  "invoice-kg-u": "收票人信息",
  "k-ct-date": "创建日期",
  "k-lm": "最后更新",
  "me-k-account": "账户",
  "me-k-avatar": "头像",
  "me-k-city": "城市",
  "me-k-country": "国家",
  "me-k-email": "邮箱",
  "me-k-login": "最后登录",
  "me-k-nickname": "用户昵称",
  "me-k-nm": "登录名",
  "me-k-phone": "手机号",
  "me-k-role": "角色",
  "me-k-sex": "性别",
  mine: "我的",
  "my-favors": "我的收藏",
  "my-favors-blog": "收藏的博客",
  "my-favors-goods": "收藏的商品",
  "my-favors-posts": "收藏的文章",
  "my-favors-spots": "收藏的景点",
  "my-favors-video": "收藏的视频",
  "my-orders": "我的订单",
  "my-orders-shop": "购物订单",
  "my-orders-video": "视频订单",
  "my-passwd": "重置密码",
  "my-profile": "我的资料",
  "my-shipping-address": "收货地址",
  "my-shopping-car": "购物车",
  "or-st-dn": "完成",
  "or-st-fa": "创建订单失败",
  "or-st-nw": "提交订单",
  "or-st-ok": "支付成功",
  "or-st-sp": "已发货",
  "or-st-wt": "待支付",
  "ord-detail": "订单详情",
  "order-flt-tip": "请输入订单ID查询",
  "order-k-accounts": "用户库",
  "order-k-addr_ship": "发货地址",
  "order-k-addr_ship_code": "发货地址编码",
  "order-k-addr_ship_country": "发货国家",
  "order-k-addr_ship_door": "发货门牌",
  "order-k-addr_user": "收货地址",
  "order-k-addr_user_area": "地区",
  "order-k-addr_user_city": "城市",
  "order-k-addr_user_code": "收货地址编码",
  "order-k-addr_user_country": "收货国家",
  "order-k-addr_user_door": "收货门牌",
  "order-k-addr_user_province": "省",
  "order-k-addr_user_street": "街道",
  "order-k-buyer_id": "买家",
  "order-k-currency": "货币单位",
  "order-k-discount": "优惠",
  "order-k-dn_at": "完成时间",
  "order-k-fa_at": "支付失败",
  "order-k-fee": "支付金额",
  "order-k-freight": "运费",
  "order-k-freight-m": "修改运费",
  "order-k-freight-m-tip": "可以在这里输入0为客户免去运费",
  "order-k-id": "订单号",
  "order-k-invoice": "发票信息",
  "order-k-note": "备注",
  "order-k-ok_at": "支付成功",
  "order-k-pay_id": "支付单",
  "order-k-pay_tp": "支付类型",
  "order-k-payment": "支付信息",
  "order-k-price": "订单金额",
  "order-k-pro-amount": "购买数量",
  "order-k-pro-price": "单价",
  "order-k-pro-subtotal": "小计",
  "order-k-pro-title": "商品",
  "order-k-products": "商品信息",
  "order-k-seller": "卖家",
  "order-k-sp_at": "发货时间",
  "order-k-st": "订单状态",
  "order-k-title": "订单标题",
  "order-k-total": "商品总价",
  "order-k-total-m": "修改总价",
  "order-k-total-m-tip": "为用户输入新的协商后的商品总价",
  "order-k-user_email": "收货人邮箱",
  "order-k-user_name": "收货人姓名",
  "order-k-user_phone": "收货人手机",
  "order-k-waybil": "物流信息",
  "order-k-waybil_com": "物流公司",
  "order-k-waybil_nb": "运单号",
  "order-k-wt_at": "支付时间",
  "order-nil-detail": "请选择一个订单查看详情",
  "order-pay-id": "支付单号",
  "order-pay-status": "交易状态",
  "order-shipaddr-nil": "请指定一个收货地址",
  "passwd-invalid-char": "密码只能包括英文数字/大小写字母/以及特殊字符",
  "passwd-sl-1": "弱",
  "passwd-sl-2": "较弱",
  "passwd-sl-3": "中",
  "passwd-sl-4": "较强",
  "passwd-sl-5": "强",
  "passwd-tip": "请输入最少6位的英文数字/大小写字母/特殊字符的组合",
  "pay-by-free": "免费",
  "pay-by-paypal": "PayPal",
  "pay-by-wx-jsapi": "微信JSAPI",
  "pay-by-wx-qrcode": "微信扫码",
  "pay-by-wx-scan": "微信付款码",
  "pay-by-zfb-qrcode": "支付宝扫码",
  "pay-by-zfb-scan": "支付宝付款码",
  "pay-checkout-it-amount": "数量",
  "pay-checkout-it-name": "商品名称",
  "pay-checkout-it-price": "单价",
  "pay-checkout-it-subtotal": "小计",
  "pay-checkout-tip": "请确认你购买的商品数量和金额",
  "pay-paypal": "PayPal",
  "pay-proceed-check": "检查支付结果",
  "pay-proceed-ing": "正在检查...",
  "pay-re-fail": "支付失败",
  "pay-re-nil": "支付结果是一只薛定谔的猫",
  "pay-re-ok": "支付成功",
  "pay-re-wait": "等待支付中",
  "pay-step-checkout-title": "确认订单",
  "pay-step-choose-nil": "☝ 请选择上面的一个支付方式 👆",
  "pay-step-choose-tip": "您可以选择下面任意一种支付方式支付本订单",
  "pay-step-choose-tip2": "您将使用${val}支付本订单",
  "pay-step-choose-title": "支付方式",
  "pay-step-choose-title2": "选择支付方式",
  "pay-step-done-title": "完成",
  "pay-step-proceed-create-order": "正在创建订单...",
  "pay-step-proceed-fetch-order": "正在获取订单...",
  "pay-step-proceed-nil": "您未选择任何支付方式",
  "pay-step-proceed-tip": "使用${val}支付本订单",
  "pay-step-proceed-title": "支付",
  "pay-tip-wx-qrcode": "请于15分钟内用微信扫一扫付款码",
  "pay-tip-zfb-qrcode": "请于15分钟内用支付宝扫一扫付款码",
  "pay-title": "支付流程",
  "pay-wx": "微信支付",
  "pay-zfb": "支付宝",
  "paypal-amount_value": "交易金额",
  "paypal-approve-tip": "已经在新标签里为您打开了PayPal支付页面，如果没有打开，请点击☝上面的图标。支付完毕，页面会自动感知到，如果没有反应，试着点击👇下面的【检查支付结果】按钮。",
  "paypal-cap-id": "记录ID",
  "paypal-cap-status": "记录状态",
  "paypal-currency": "货币单位",
  "paypal-id": "PayPal交易号",
  "paypal-payer_email": "交易账户邮箱",
  "paypal-payer_id": "交易账户ID",
  photo: "照片",
  "post-content-blank": "您提交的内容不能为空，也不能少于10个字",
  "profile-title": "我的基本信息",
  pubat: "发布日期",
  "read-du": "阅读时长",
  role: "角色",
  "role-as-guest": "访客",
  "role-as-normal": "普通用户",
  "role-as-vip": "VIP用户",
  "role-dft": "默认角色",
  "role-flt-tip": "请输入角色名过滤",
  "role-manage": "角色管理",
  "role-meta": "角色属性",
  "role-meta-tip": "请选择一个角色查看详情",
  "role-name": "角色名",
  "role-select-tip": "请选择角色",
  "role-val": "角色值",
  "shop-basket-clean-confirm": "您确定要清空购物车内全部商品吗？这是一个不能撤回的操作。",
  "shop-basket-remove-confirm": "您确定要从购物车中删除这个商品吗？",
  sort: "排序",
  "sort-tip-asc": "越小越靠前",
  "sort-tip-desc": "越大越靠前",
  "sort-val": "排序值",
  topic: "主题",
  type: "类型",
  "type-new": "新类型",
  "video-title": "视频标题",
  watch_c: "浏览次数",
  "waybil-com-ane": "安能物流",
  "waybil-com-best": "百世快递",
  "waybil-com-db": "德邦快递",
  "waybil-com-ems": "中国邮政速递物流",
  "waybil-com-jdl": "京东物流",
  "waybil-com-pj": "品骏快递",
  "waybil-com-sf": "顺丰快递",
  "waybil-com-sto": "申通快递",
  "waybil-com-uce": "优速快递",
  "waybil-com-yto": "圆通速递",
  "waybil-com-yunda": "韵达快递",
  "waybil-com-zto": "中通快递"
}), Ti.Preload("ti/i18n/zh-cn/wn-manager.i18n.json", {
  "ti-loading": "加载中...",
  "wn-adaptlist": "对象浏览器",
  "wn-create-fail": "创建失败",
  "wn-create-invalid": "新对象名称不能包括非法字符",
  "wn-create-ok": "创建成功",
  "wn-create-too-long": "新对象名称过长",
  "wn-del-item": '正在删除: "${name}"',
  "wn-del-no-empty-folder": '目录"${nm}"不是空的，您是否要全部删除？点击"否"跳过',
  "wn-del-none": "请选择至少一个文件进行删除!",
  "wn-del-ok": "已有 ${N} 个对象被移除",
  "wn-download-dir": '对象 "${nm}" 是一个目录，点击"继续"将跳过它并下载下一个文件，点击"终止"将结束本次操作!',
  "wn-download-none": "请选择至少一个文件进行下载!",
  "wn-download-too-many": "即将逐个下载 ${N} 个文件，继续吗？",
  "wn-expose-hidden-off": "不显示隐藏的对象",
  "wn-expose-hidden-on": "显示隐藏的对象",
  "wn-gui": "通用布局界面",
  "wn-obj-preview": "对象预览",
  "wn-obj-puretext": "纯文本编辑器",
  "wn-obj-single-com": "单控件测试套",
  "wn-publish-done": "发布成功",
  "wn-publish-to-nil": "未设置发布目标",
  "wn-publish-to-noexist": "发布目标不存在",
  "wn-rename": '重命名对象 "${name}"',
  "wn-rename-fail": "重命名失败",
  "wn-rename-invalid": "名称不能包括非法字符",
  "wn-rename-none": "请选择一个文件重命名!",
  "wn-rename-ok": "重命名成功",
  "wn-rename-suffix-changed": "您的文件后缀名发生变化，您需要自动为您补全原来的后缀吗？",
  "wn-rename-too-long": "名称过长",
  "wn-thing-manager": "数据管理器",
  "wn-view-opening": "正在加载界面..."
}), Ti.Preload("ti/i18n/zh-cn/wn-obj-preview.i18n.json", {
  "wop-fullscreen-enter": "进入全屏",
  "wop-fullscreen-quit": "退出全屏"
}), Ti.Preload("ti/i18n/zh-cn/wn-thing.i18n.json", {
  "thing-clean": "清空回收站",
  "thing-cleaning": "正在清空...",
  "thing-content": "对象内容",
  "thing-content-hide": "隐藏内容",
  "thing-content-show": "显示内容",
  "thing-create": "创建新对象",
  "thing-create-in-recyclebin": "请先退出回收站，再创建新对象",
  "thing-enter-recyclebin": "打开回收站",
  "thing-files": "对象文件表",
  "thing-files-hide": "隐藏文件表",
  "thing-files-show": "显示文件表",
  "thing-filter-kwdplhd": "请输入查询条件",
  "thing-leave-recyclebin": "退出回收站",
  "thing-meta": "对象属性",
  "thing-meta-hide": "隐藏属性",
  "thing-meta-show": "显示属性",
  "thing-recycle-bin": "回收站",
  "thing-restore": "恢复选中",
  "thing-restore-none": "请先选择要恢复的数据",
  "thing-restoring": "正在恢复..."
}), Ti.Preload("ti/i18n/zh-cn/_net.i18n.json", {
  "net-ct": "创建时间",
  "net-flt-nil": "查找视频名称",
  "net-vod-add-video": "添加视频",
  "net-vod-cate": "视频分类",
  "net-vod-du-long": "长视频",
  "net-vod-du-short": "短视频",
  "net-vod-du-tv": "剧集视频",
  "net-vod-duration": "视频时长",
  "net-vod-size": "视频大小",
  "net-vod-video-nil": "请选择一个视频查看详情"
}), Ti.Preload("ti/i18n/zh-cn/_ti.i18n.json", {
  add: "添加",
  "add-item": "添加新项",
  amount: "数量",
  attachment: "附件",
  avatar: "头像",
  banner: "头图",
  "batch-none": "请从下面列表中选择至少一个对象进行批量更新",
  "batch-update": "批量更新...",
  blank: "空白",
  "blank-to-edit": "请选择要编辑的项目",
  brief: "摘要",
  "brief-d": "摘要描述",
  "brief-i": "摘要说明",
  buy: "购买",
  "buy-now": "立即购买",
  cancel: "取消",
  "cancel-all": "取消选中",
  candidate: "备选项",
  captcha: "验证码",
  "captcha-chagne": "换一张",
  "captcha-tip": "请输入图中的验证码",
  chart: "图表",
  "chart-bar": "柱状图",
  "chart-line": "折线图",
  "chart-pie": "饼状图",
  "chart-rank": "条状图",
  checked: "已选中",
  choose: "选择",
  "choose-file": "选择文件",
  "choose-obj": "选择对象",
  clean: "清理",
  clear: "清除",
  close: "关闭",
  confirm: "确认",
  console: "控制台",
  content: "内容",
  "continue": "继续",
  create: "新建",
  "create-now": "立即创建",
  creating: "正在创建...",
  date: "日期",
  debug: "调试",
  "default": "默认",
  del: "删除",
  "del-checked": "删除选中",
  "del-hard": "选中项目即将被直接删除，此操作不可撤销，您确定要继续吗？",
  "del-ing": "正在删除...",
  "del-none": "请从下面列表中选择至少一个对象进行删除",
  desktop: "桌面",
  detail: "详情",
  "dis-name": "显示名",
  disable: "禁用",
  disabled: "禁用的",
  doing: "正在执行...",
  download: "下载",
  "download-to-local": "下载到本地",
  "drop-file-here-to-upload": "拖拽文件至此以便上传",
  "drop-here": "拖拽文件至此",
  "dt-in": "在${val}内",
  "dt-u-day": "天",
  "dt-u-hour": "小时",
  "dt-u-min": "分钟",
  "dt-u-month": "月",
  "dt-u-ms": "好眠",
  "dt-u-sec": "秒",
  "dt-u-week": "周",
  "dt-u-year": "年",
  "e-auth-account-noexists": "账户不存在",
  "e-auth-home-forbidden": "账户不具备进入主目录的权限",
  "e-auth-login-NoPhoneOrEmail": "错误的手机号或邮箱地址",
  "e-auth-login-NoSaltedPasswd": "未设置合法的密码",
  "e-auth-login-invalid-passwd": "账户密码未通过校验",
  "e-io-obj-exists": "但是对象已然存在",
  "e-io-obj-noexists": "对象其实并不存在",
  "e-io-obj-noexistsf": "对象[${nm}]其实并不存在",
  edit: "编辑",
  "edit-com": "编辑控件",
  email: "邮箱",
  emoji: "表情符合",
  empty: "空",
  "empty-data": "无数据",
  enable: "启用",
  enabled: "启用的",
  error: "错误",
  "export-data": "导出数据...",
  fail: "失败",
  "false": "否",
  favorites: "收藏",
  female: "女",
  filter: "过滤",
  find: "查找",
  "find-data": "查找数据",
  gender: "性别",
  "global-settings": "全局设置",
  "history-record": "历史记录",
  home: "主目录",
  "i-known": "我知道了",
  icon: "图标",
  "icon-code-tip": "请输入图标代码，如 zmdi-case",
  "import-data": "导入数据...",
  index: "索引",
  info: "信息",
  input: "输入",
  "input-tags": "输入标签",
  label: "标签",
  lat: "纬度",
  "lbs-place-add": "添加地点",
  "lbs-ro-rnb-k-first": "起始数字",
  "lbs-ro-rnb-k-type": "显示类型",
  "lbs-ro-rnb-k-type-alpha": "小写字母",
  "lbs-ro-rnb-k-type-capital": "大写字母",
  "lbs-ro-rnb-k-type-number": "数字",
  "lbs-ro-rnb-title": "自动设置线路标签",
  link: "链接",
  "link-href": "链接目标",
  "link-text": "链接文字",
  lng: "经度",
  loading: "加载中...",
  login: "登录",
  "login-name": "登录名",
  logout: "退出",
  "logout-ing": "正在注销...",
  male: "男",
  "map-hybrid": "俯瞰地图",
  "map-roadmap": "道路地图",
  "map-satellite": "卫星照片",
  "map-terrain": "地形地图",
  "map-type": "地图类型",
  me: "我",
  media: "媒体",
  meta: "元数据",
  mine: "我的",
  modal: "模式",
  modify: "修改",
  more: "更多",
  msg: "消息",
  name: "名称",
  "new-item": "新项目",
  newsfeed: "消息流",
  next: "下一步",
  nil: "无",
  "nil-obj": "请选择一个对象",
  no: "否",
  "no-saved": "您有未保存的数据",
  "no-selected": "未选择",
  "no-title": "无标题",
  obj: "对象",
  off: "关",
  ok: "确定",
  on: "开",
  open: "打开",
  "open-newtab": "在新标签打开",
  others: "其他",
  "paging-change-pgsz": "当前每页有${pgsz}条记录，您想修改为：",
  "paging-change-pgsz-invalid": "页大小必须是整数数字，而且必须大于0，可您... -_-!",
  "paging-change-pn": "当前第${pn}页，您想跳转到：（请输入 1 至 ${pgc} 之间的数字）",
  "paging-change-pn-invalid": "页码必须是整数数字，而且必须为 1 至 ${pgc} 之间的数字",
  "paging-first": "首页",
  "paging-last": "尾页",
  "paging-next": "后一页",
  "paging-prev": "前一页",
  "paging-sum": "共${pgc}页${sum}条记录，当前${count}/${pgsz}",
  passwd: "密码",
  "passwd-reset": "重置密码",
  path: "路径",
  phone: "手机",
  "phone-nb": "手机号",
  post: "提交",
  prev: "上一步",
  price: "价格",
  profile: "资料",
  "profile-edit": "编辑资料",
  prompt: "询问",
  properties: "属性",
  publish: "发布",
  publishing: "正在发布...",
  refresh: "刷新",
  "refresh-hard": "硬性刷新",
  "refresh-hard-clear": "清空缓存并硬性刷新",
  reloading: "重新加载数据...",
  remove: "移除",
  removing: "正在移除...",
  rename: "重命名...",
  renaming: "正在重命名...",
  reset: "重置",
  "reset-change": "撤销修改",
  "reset-data": "重置数据",
  restore: "恢复",
  revoke: "撤销",
  "revoke-change": "撤销修改",
  run: "运行",
  "run-finished": "脚本执行结束",
  "run-welcome": "正在运行脚本，请稍后 ...",
  save: "保存",
  "save-change": "保存修改",
  "save-done": "保存成功",
  "save-now": "立即保存",
  saving: "正在保存...",
  score: "评分",
  "score-count": "打分人数",
  select: "选择",
  "select-all": "全部选中",
  send: "发送",
  settings: "设置",
  slogan: "标语",
  "source-code": "源代码",
  "stat-date-at": "统计日期",
  "stat-date-at-oor": "这个日期的统计数据还未就绪",
  "stat-date-span": "时间跨度",
  stop: "停止",
  structure: "结构",
  success: "成功",
  "sys-settings": "系统设置",
  tablet: "平板",
  terminal: "终端",
  terminate: "终止",
  text: "文字",
  timestamp: "时间戳",
  title: "标题",
  "total-count": "共 ${nb?0} ${unit?项}",
  trace: "跟踪",
  track: "消息",
  "true": "是",
  type: "类型",
  "under-construction": "正在施工中",
  unknown: "未知",
  upload: "上传",
  "upload-done": "文件上传已完成",
  "upload-file": "上传文件...",
  "upload-nofinished": "文件上传还没有完成",
  uploading: "正在上传",
  "user-avator": "用户头像",
  value: "值",
  view: "查看",
  "view-resource": "查看源代码",
  warn: "警告",
  website: "网站",
  yes: "是"
}), Ti.Preload("ti/i18n/zh-cn/_wn.i18n.json", {
  "wn-admin-check-obj-thumb": "检查图像缩略图...",
  "wn-admin-tools": "管理工具",
  "wn-ctt-css-text": "CSS样式文件",
  "wn-ctt-folder-text": "文件夹",
  "wn-ctt-html-text": "HTML文本",
  "wn-ctt-js-text": "JS脚本",
  "wn-ctt-json-text": "JSON文本",
  "wn-ctt-less-text": "LESS文本",
  "wn-ctt-md-text": "Markdown文本",
  "wn-ctt-mjs-text": "模块化JS脚本",
  "wn-ctt-sass-text": "SASS文本",
  "wn-ctt-thing_set-text": "数据集合",
  "wn-ctt-txt-text": "纯文本",
  "wn-ctt-wnml-text": "WNML源文件",
  "wn-ctt-xml-text": "XML文本",
  "wn-edit-com-nil": "默认为标签控件",
  "wn-en-his-ct": "创建时间",
  "wn-en-his-flt-tip": "请输入用户ID或者名称过滤",
  "wn-en-his-mor": "操作细节",
  "wn-en-his-opt": "操作",
  "wn-en-his-tar": "目标",
  "wn-en-his-tid": "目标ID",
  "wn-en-his-tnm": "目标名",
  "wn-en-his-ttp": "目标类型",
  "wn-en-his-uid": "用户ID",
  "wn-en-his-unm": "用户名",
  "wn-en-his-usr": "用户",
  "wn-en-his-utp": "用户类型",
  "wn-invalid-mimes": '不支持的文件内容类型 "${current}"，仅能支持 "${supports}"',
  "wn-invalid-types": '不支持的文件扩展名 "${current}"，仅能支持 "${supports}"',
  "wn-key-c": "创建者",
  "wn-key-ct": "创建时间",
  "wn-key-d0": "D0",
  "wn-key-d1": "D1",
  "wn-key-data": "数据",
  "wn-key-duration": "时长",
  "wn-key-expi": "过期时间",
  "wn-key-g": "主组",
  "wn-key-grp-advance": "高级",
  "wn-key-grp-basic": "基本",
  "wn-key-grp-customized": "自定义",
  "wn-key-grp-more": "更多",
  "wn-key-grp-others": "其他",
  "wn-key-grp-privilege": "权限",
  "wn-key-grp-thumb": "缩略图",
  "wn-key-grp-timestamp": "时间戳",
  "wn-key-height": "高",
  "wn-key-icon": "图标",
  "wn-key-id": "ID",
  "wn-key-len": "大小",
  "wn-key-lm": "修改",
  "wn-key-m": "修改者",
  "wn-key-md": "基本权限",
  "wn-key-mime": "内容类型",
  "wn-key-nm": "对象名",
  "wn-key-ph": "路径",
  "wn-key-pid": "父对象",
  "wn-key-pvg": "定制权限",
  "wn-key-race": "族类",
  "wn-key-sha1": "内容签名",
  "wn-key-thumb": "缩略图",
  "wn-key-title": "标题",
  "wn-key-tp": "类型",
  "wn-key-width": "宽",
  "wn-obj-nosaved": "您有未保存的对象",
  "wn-oc-auto-type": "全部类型",
  "wn-oc-free": "请输入对象完整名称，包括扩展名，譬如 `myfile.xml`",
  "wn-oc-tip": "新对象名称",
  "wn-race-DIR": "目录",
  "wn-race-FILE": "文件",
  "wn-th-acc-pwd-choose-none": "请选择要重置密码的账号（可多选）",
  "wn-th-acc-pwd-done": "已经为${n}名用户重置了密码",
  "wn-th-acc-pwd-invalid": "密码中不得包含单双引号星号等非法字符",
  "wn-th-acc-pwd-reset-tip": "将密码重置为",
  "wn-th-acc-pwd-too-short": "您输入的密码过短，不能少于6位，最好为数字字母以及特殊字符的组合",
  "wn-th-recount-media": "重新计算当前文件数量",
  "wn-th-recount-media-done": "当前文件数量: ${n}"
});